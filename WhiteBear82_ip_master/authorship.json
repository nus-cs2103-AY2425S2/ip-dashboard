[{"path":"AI.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"Improved JavaDocs of WinterBearBot.java with the help of ChatGPT:","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"     * Continuously processes user commands to manage the task list ","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"     * until an exit command is received.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"     * Starts the WinterBearBot application, displaying a welcome message, ","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"     * managing tasks, and handling user interactions until termination.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"     * Entry point of the WinterBearBot application.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"     * Initializes and runs the bot to handle task management.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"     * ","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"     * @param args Command-line arguments (not used).","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":19}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"checkstyle {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-swing\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-swing\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-swing\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WhiteBear82"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WhiteBear82"},"content":"    mainClass.set(\"Launcher\")","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"WhiteBear82"},"content":"    archiveBaseName \u003d \"WinterBearBot\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":31,"-":39}},{"path":"data/wbb.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"todo | false | test","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"todo | false | testing","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"event | false | proj meeting | Mon 2pm | 4pm","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"deadline | false | eat laksa | 9th of February 2025, 5:00PM","lastModifiedDate":"2025-02-09","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"# WinterBearBot User Guide 🐻❄️","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"\u003e “Winter is the time for comfort, for good food and warmth, for the touch of a friendly hand and for a talk beside the fire.” – Edith Sitwell [(source)](https://www.goodreads.com/quotes/124075-winter-is-the-time-for-comfort-for-good-food-and)","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"![UI Preview](Ui.png)","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"WinterBearBot is your cozy assistant for managing tasks, deadlines, and events. It\u0027s designed to be:","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"* User-friendly","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"* 🧊 Cool to use","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"* ⏱️ Efficient","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"Getting started is simple:","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"1. Clone the repository from [here](https://github.com/WhiteBear82/ip/releases).","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"2. Run the program and start adding your tasks.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"3. Manage your tasks like a pro! 😎","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"And it’s **completely free!** 🎉","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"Features:","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"- [X] Add tasks, deadlines, or events effortlessly.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"- [X] Manage your to-do list with actions like marking as done, unmarking, deleting","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"- [X] List all tasks in a clean, organized manner.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"```java","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"public class WinterBearBot {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"        new WinterBearBot().runProgram();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"```","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"## Displaying help","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"Shows a list of available commands and their usage.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"**Example Usage:** ","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"```","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"help","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"```","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WhiteBear82"},"content":"**Expected Output:** ","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WhiteBear82"},"content":"```","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WhiteBear82"},"content":"Available Commands:","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WhiteBear82"},"content":"- list: Lists all tasks.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WhiteBear82"},"content":"- mark [task number]: Marks a task as completed.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WhiteBear82"},"content":"- unmark [task number]: Unmarks a completed task.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WhiteBear82"},"content":"...","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WhiteBear82"},"content":"```","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WhiteBear82"},"content":"## Adding todos","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WhiteBear82"},"content":"Adds a simple task without a deadline or time constraint.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WhiteBear82"},"content":"**Example Usage:** ","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"WhiteBear82"},"content":"```","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WhiteBear82"},"content":"todo [task description]","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WhiteBear82"},"content":"```","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"WhiteBear82"},"content":"**Expected Output:** ","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"WhiteBear82"},"content":"```","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"WhiteBear82"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"WhiteBear82"},"content":"[T][ ] Borrow book","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"WhiteBear82"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"WhiteBear82"},"content":"```","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"WhiteBear82"},"content":"Adds a task with a specific deadline.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"WhiteBear82"},"content":"**Example Usage:** ","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"WhiteBear82"},"content":"```","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"WhiteBear82"},"content":"deadline [description] /by [date]","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"WhiteBear82"},"content":"```","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"WhiteBear82"},"content":"**Expected Output:** ","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"WhiteBear82"},"content":"```","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"WhiteBear82"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"WhiteBear82"},"content":"[D][ ] Return book (by: Sunday)","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"WhiteBear82"},"content":"Now you have 4 tasks in the list.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"WhiteBear82"},"content":"```","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"WhiteBear82"},"content":"## Adding events","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"WhiteBear82"},"content":"Adds a task that has a start and end time.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"WhiteBear82"},"content":"**Example Usage:** ","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"WhiteBear82"},"content":"```","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"WhiteBear82"},"content":"event [description] /from [start time] /to [end time]","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"WhiteBear82"},"content":"```","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"WhiteBear82"},"content":"**Expected Output:** ","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"WhiteBear82"},"content":"```","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"WhiteBear82"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"WhiteBear82"},"content":"[E][ ] Project meeting (from: Mon 2pm to: 4pm)","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"WhiteBear82"},"content":"Now you have 5 tasks in the list.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"WhiteBear82"},"content":"```","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"WhiteBear82"},"content":"## Marking a task as completed","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"WhiteBear82"},"content":"Mark a specific task as completed in the task list.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"WhiteBear82"},"content":"**Example Usage:** ","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"WhiteBear82"},"content":"```","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"WhiteBear82"},"content":"mark [task number]","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"WhiteBear82"},"content":"```","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"WhiteBear82"},"content":"**Expected Output:** ","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"WhiteBear82"},"content":"```","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"WhiteBear82"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"WhiteBear82"},"content":"[T][X] Borrow book","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"WhiteBear82"},"content":"```","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"WhiteBear82"},"content":"## Unmarking a task as completed","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"WhiteBear82"},"content":"Unmark a previously completed task, changing it back to incomplete.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"WhiteBear82"},"content":"**Example Usage:** ","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"WhiteBear82"},"content":"```","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"WhiteBear82"},"content":"unmark [task number]","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"WhiteBear82"},"content":"```","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"WhiteBear82"},"content":"**Expected Output:** ","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"WhiteBear82"},"content":"```","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"WhiteBear82"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"WhiteBear82"},"content":"[T][X] Borrow book","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"WhiteBear82"},"content":"```","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"WhiteBear82"},"content":"## Listing all tasks","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"WhiteBear82"},"content":"Displays all tasks currently stored in the task list.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"WhiteBear82"},"content":"**Example Usage:** ","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"WhiteBear82"},"content":"```","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"WhiteBear82"},"content":"list","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"WhiteBear82"},"content":"```","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"WhiteBear82"},"content":"**Expected Output:** ","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"WhiteBear82"},"content":"```","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"WhiteBear82"},"content":"Here are the tasks in your list:","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"WhiteBear82"},"content":"1. [T][ ] Read book","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"WhiteBear82"},"content":"2. [D][X] Return book (by: Sunday)","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"WhiteBear82"},"content":"3. [E][ ] Project meeting (from: Mon 2pm to: 4pm)","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"WhiteBear82"},"content":"```","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"WhiteBear82"},"content":"## Filtering tasks that are due today","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"WhiteBear82"},"content":"Displays tasks that are due today.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"WhiteBear82"},"content":"**Example Usage:** ","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"WhiteBear82"},"content":"```","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"WhiteBear82"},"content":"tasks","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"WhiteBear82"},"content":"```","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"WhiteBear82"},"content":"**Expected Output:** ","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"WhiteBear82"},"content":"Tasks due today:","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"WhiteBear82"},"content":"[D][ ] Return book (by: 9th of February 2025, 5:00PM)","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"WhiteBear82"},"content":"## Deleting a task","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"WhiteBear82"},"content":"Removes a task from the list.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"WhiteBear82"},"content":"**Example Usage:** ","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"WhiteBear82"},"content":"```","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"WhiteBear82"},"content":"delete [task number]","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"WhiteBear82"},"content":"```","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"WhiteBear82"},"content":"**Expected Output:** ","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"WhiteBear82"},"content":"```","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"WhiteBear82"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"WhiteBear82"},"content":"[E][ ] Project meeting (from: Mon 2pm to: 4pm)","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"WhiteBear82"},"content":"Now you have 4 tasks in the list.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"WhiteBear82"},"content":"```","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"WhiteBear82"},"content":"## Exiting the application","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"WhiteBear82"},"content":"Closes the program.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"WhiteBear82"},"content":"**Example Usage:** ","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"WhiteBear82"},"content":"```","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"WhiteBear82"},"content":"bye","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"WhiteBear82"},"content":"```","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"WhiteBear82"},"content":"**Expected Output:** ","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"WhiteBear82"},"content":"```","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"WhiteBear82"},"content":"Exits the program.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"WhiteBear82"},"content":"```","lastModifiedDate":"2025-02-09","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":191,"-":17}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"import java.util.Collections;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"import javafx.scene.media.AudioClip;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"    @FXML","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"    private Label dialog;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"    @FXML","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"        // Make the image circular","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"        double radius \u003d Math.min(displayPicture.getFitWidth(), displayPicture.getFitHeight()) / 2;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WhiteBear82"},"content":"        Circle clip \u003d new Circle(radius, radius, radius);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WhiteBear82"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WhiteBear82"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WhiteBear82"},"content":"    private void flip() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WhiteBear82"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WhiteBear82"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WhiteBear82"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WhiteBear82"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WhiteBear82"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"WhiteBear82"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"WhiteBear82"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"WhiteBear82"},"content":"    private void changeDialogStyle(String commandType) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"WhiteBear82"},"content":"        switch(commandType) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"WhiteBear82"},"content":"        case \"AddCommand\":","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"WhiteBear82"},"content":"            dialog.getStyleClass().add(\"add-label\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"WhiteBear82"},"content":"            break;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"WhiteBear82"},"content":"        case \"ChangeMarkCommand\":","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"WhiteBear82"},"content":"            dialog.getStyleClass().add(\"marked-label\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"WhiteBear82"},"content":"            break;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"WhiteBear82"},"content":"        case \"DeleteCommand\":","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"WhiteBear82"},"content":"            dialog.getStyleClass().add(\"delete-label\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"WhiteBear82"},"content":"            break;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"WhiteBear82"},"content":"        default:","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"WhiteBear82"},"content":"            // Do nothing","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"WhiteBear82"},"content":"    public static DialogBox getDukeDialog(String text, Image img, String commandType) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"WhiteBear82"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"WhiteBear82"},"content":"        db.flip();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"WhiteBear82"},"content":"        new AudioClip(DialogBox.class.getResource(\"/audio/send.mp3\").toExternalForm()).play(); //NewMessage31","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"WhiteBear82"},"content":"        db.changeDialogStyle(commandType);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"WhiteBear82"},"content":"        return db;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":85}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"public class Launcher {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"import wbb.WinterBearBot;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"public class Main extends Application {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"    private final WinterBearBot wbb \u003d new WinterBearBot();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"    @Override","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"            stage.setMinHeight(500);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"            stage.setMinWidth(700);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"            stage.setTitle(\"Winter Bear Bot\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"            stage.getIcons().add(new Image(Main.class.getResourceAsStream(\"/images/bearicon.png\")));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(wbb); // inject the Duke instance","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"            stage.show();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":35}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"import wbb.WinterBearBot;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"import wbb.command.HelpCommand;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"    @FXML","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"    @FXML","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"    @FXML","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"    private TextField userInput;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"    @FXML","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"    private Button sendButton;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"    private WinterBearBot wbb;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/bearuser.gif\"));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/polarbear.gif\"));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"     * Initializes the MainWindow by setting up the scroll view and displaying the welcome message.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"    @FXML","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"    public void initialize() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"                DialogBox.getDukeDialog(new WinterBearBot().getUi().getWelcomeMessage(), dukeImage, \"WelcomeMessage\")","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"        );","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"    /** Injects the Duke instance */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"    public void setDuke(WinterBearBot w) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WhiteBear82"},"content":"        wbb \u003d w;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WhiteBear82"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WhiteBear82"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WhiteBear82"},"content":"    @FXML","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WhiteBear82"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WhiteBear82"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WhiteBear82"},"content":"        String response \u003d wbb.getResponse(input);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WhiteBear82"},"content":"        String commandType \u003d wbb.getCommandType();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WhiteBear82"},"content":"        if (\"HelpCommand\".equals(commandType)) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WhiteBear82"},"content":"            new HelpCommand().execute(null, null, null, null); // Open the Help window","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"WhiteBear82"},"content":"        } else {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"WhiteBear82"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WhiteBear82"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WhiteBear82"},"content":"                    DialogBox.getDukeDialog(response, dukeImage, commandType)","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"WhiteBear82"},"content":"            );","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"WhiteBear82"},"content":"        userInput.clear();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":65}},{"path":"src/main/java/wbb/WinterBearBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"import wbb.command.Command;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"import wbb.exception.WBBException;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"import wbb.parser.Parser;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"import wbb.storage.Storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.Task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"import wbb.ui.Ui;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":" * Winter Bear Bot - The task manager application.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"public class WinterBearBot {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"    private Ui ui;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"    private Parser parser;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"    private String commandType;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"     * Constructor to initialise new Ui, Storage, TaskList, Parser, and load Tasks from Storage.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"    public WinterBearBot() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"        this.taskList \u003d storage.loadTasks();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"     * Continuously processes user commands to manage the task list","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"     * until an exit command is supplied.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"    public void manageTaskList() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"        while (!isExit) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"            try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"                String command \u003d ui.readCommand();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"                assert command !\u003d null : \"Command input should not be null\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WhiteBear82"},"content":"                Command c \u003d parser.parseCommand(command);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WhiteBear82"},"content":"                if (c \u003d\u003d null) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WhiteBear82"},"content":"                    continue;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WhiteBear82"},"content":"                }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WhiteBear82"},"content":"                c.execute(taskList, command, ui, storage);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WhiteBear82"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WhiteBear82"},"content":"            } catch (WBBException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WhiteBear82"},"content":"                ui.printErrorMsg(e.getMessage());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WhiteBear82"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WhiteBear82"},"content":"     * Starts the WinterBearBot application, displaying a welcome message,","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"WhiteBear82"},"content":"     * managing tasks, and handling user interactions until termination.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WhiteBear82"},"content":"    public void runProgram() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WhiteBear82"},"content":"        ui.displayWelcomeMessage();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"WhiteBear82"},"content":"        manageTaskList();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"WhiteBear82"},"content":"        ui.displayFarewellMessage();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"WhiteBear82"},"content":"     * Generates a response for the user\u0027s chat message.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"WhiteBear82"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"WhiteBear82"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"WhiteBear82"},"content":"            Command parsedCommand \u003d parser.parseCommand(input);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"WhiteBear82"},"content":"            if (parsedCommand \u003d\u003d null) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"WhiteBear82"},"content":"                throw new WBBException(\"ERROR: Invalid command \"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"WhiteBear82"},"content":"                        + \"(valid commands are: list, todo, deadline, event, mark, unmark, delete, tasks, find, bye)\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"WhiteBear82"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"WhiteBear82"},"content":"            parsedCommand.execute(taskList, input, ui, storage);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"WhiteBear82"},"content":"            commandType \u003d parsedCommand.getClass().getSimpleName();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"WhiteBear82"},"content":"            if (commandType.equals(\"ExitCommand\")) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"WhiteBear82"},"content":"                System.exit(0);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"WhiteBear82"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"WhiteBear82"},"content":"            System.out.println(commandType);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"WhiteBear82"},"content":"            return ui.getLastOutput();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"WhiteBear82"},"content":"        } catch (WBBException | NullPointerException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"WhiteBear82"},"content":"            commandType \u003d \"InvalidCommand\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"WhiteBear82"},"content":"            return e.getMessage();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"WhiteBear82"},"content":"    public String getCommandType() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"WhiteBear82"},"content":"        return commandType;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"WhiteBear82"},"content":"    public Ui getUi() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"WhiteBear82"},"content":"        return ui;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"WhiteBear82"},"content":"    public Storage getStorage() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"WhiteBear82"},"content":"        return storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"WhiteBear82"},"content":"    public Parser getParser() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"WhiteBear82"},"content":"        return parser;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"WhiteBear82"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"WhiteBear82"},"content":"        return taskList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"WhiteBear82"},"content":"    public void setUi(Ui ui) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"WhiteBear82"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"WhiteBear82"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"WhiteBear82"},"content":"    public void setStorage(Storage storage) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"WhiteBear82"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"WhiteBear82"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"WhiteBear82"},"content":"    public void setParser(Parser parser) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"WhiteBear82"},"content":"        assert parser !\u003d null : \"Parser cannot be null\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"WhiteBear82"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"WhiteBear82"},"content":"    public void setTaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"WhiteBear82"},"content":"        assert taskList !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"WhiteBear82"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"WhiteBear82"},"content":"     * Entry point of the WinterBearBot application.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"WhiteBear82"},"content":"     * Initializes and runs the bot to handle task management.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"WhiteBear82"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"WhiteBear82"},"content":"     * @param args Command-line arguments (not used).","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"WhiteBear82"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"WhiteBear82"},"content":"        new WinterBearBot().runProgram();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":130}},{"path":"src/main/java/wbb/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.command;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"import wbb.exception.WBBException;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"import wbb.parser.Parser;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"import wbb.storage.Storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.Task;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.TaskType;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"import wbb.ui.Ui;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":" * AddCommand to add tasks.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"     * Executes a given command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskList The taskList.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"     * @param command The user command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"     * @param ui The ui.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"     * @param storage The storage.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"     * @throws WBBException if the command cannot be executed correctly.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"    public void execute(ArrayList\u003cTask\u003e taskList, String command, Ui ui, Storage storage) throws WBBException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"        addTask(taskList, command, ui, storage);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"     * To add task into the list.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"     * Add item to list - Either \"todo\", \"deadline\" or \"event\".","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"     * Format \"todo\": todo [taskName]","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"     * Format \"deadline\": deadline [taskName] /by [when]","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"     * Format \"event\": event [taskName] /from [start] /to [end]","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"     * @param list The taskList.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"     * @param command The input command by the user.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"    public void addTask(ArrayList\u003cTask\u003e list, String command, Ui ui, Storage storage) throws WBBException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"        String typeOfTask \u003d command.split(\" \")[0]; // \"todo\", \"deadline\", \"event\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"        TaskType taskType \u003d TaskType.fromString(typeOfTask); // enum of typeOfTask","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"        String taskName \u003d validator.validateAndGetTaskName(command, typeOfTask, taskType); // name of task","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WhiteBear82"},"content":"        AddCommand addCommand \u003d new Parser().parseAddCommand(typeOfTask);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WhiteBear82"},"content":"        addCommand.exec(taskName, taskType, list, ui, storage);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WhiteBear82"},"content":"     * To add task into list and save into storage.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WhiteBear82"},"content":"     * @param task The task.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskList The taskList.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WhiteBear82"},"content":"     * @param ui The ui instance.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WhiteBear82"},"content":"     * @param storage The storage instance.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WhiteBear82"},"content":"    protected void addAndSaveTask(Task task, ArrayList\u003cTask\u003e taskList, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WhiteBear82"},"content":"        taskList.add(task);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WhiteBear82"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"WhiteBear82"},"content":"        ui.printAdditionSuccessfulMsg(taskList.size(), task);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"WhiteBear82"},"content":"     * Method for its subclasses to execute.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskName The taskName.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskType The taskType.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskList The taskList.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"WhiteBear82"},"content":"     * @param ui The ui instance.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"WhiteBear82"},"content":"     * @param storage The storage.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"WhiteBear82"},"content":"     * @throws WBBException If it does not perform as expected.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"WhiteBear82"},"content":"    protected void exec(String taskName, TaskType taskType,","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"WhiteBear82"},"content":"                        ArrayList\u003cTask\u003e taskList, Ui ui, Storage storage) throws WBBException {}","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":71}},{"path":"src/main/java/wbb/command/AddNewDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.command;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"import wbb.exception.WBBException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"import wbb.storage.Storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.Deadline;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.Task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.TaskType;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"import wbb.ui.Ui;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"import wbb.util.DateTimeUtility;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":" * Class for user to Add a new deadline","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"public class AddNewDeadlineCommand extends AddCommand {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"     * To validate input and add/save new deadline task.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskName The taskName.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskType The type of task (e.g. todo, deadline, or event).","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"     * @throws WBBException if missing \"/by\", deadline or taskName.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"    public void exec(String taskName, TaskType taskType,","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"                     ArrayList\u003cTask\u003e taskList, Ui ui, Storage storage) throws WBBException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"        validator.validateTaskNameBy(taskName, taskType);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"        String[] taskNameBy \u003d validator.validateAndGetTaskNameBy(taskName, taskType);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"        String deadline \u003d new DateTimeUtility().tryParseDateAndOrTime(taskNameBy[1].trim());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"        Task task \u003d new Deadline(taskNameBy[0].trim(), deadline);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"        super.addAndSaveTask(task, taskList, ui, storage);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":32}},{"path":"src/main/java/wbb/command/AddNewEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.command;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"import wbb.exception.WBBException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"import wbb.storage.Storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.Event;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.Task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.TaskType;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"import wbb.ui.Ui;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":" * Add new event to taskList.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"public class AddNewEventCommand extends AddCommand {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"     * To validate input and add/save new event task.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskName The taskName.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskType The type of task (e.g. todo, deadline, or event).","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"     * @throws WBBException if missing \"/from\" or \"/to\", \"/from\" comes after \"/to\", start date, end date, or taskName","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"    public void exec(String taskName, TaskType taskType,","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"                     ArrayList\u003cTask\u003e taskList, Ui ui, Storage storage) throws WBBException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"        validator.validateFromTo(taskName, taskType);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"        String[] taskNameFromTo \u003d validator.validateAndGetTaskNameFromTo(taskName, taskType);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"        String[] fromTo \u003d validator.validateAndGetFromTo(taskNameFromTo, taskType);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"        Task task \u003d new Event(taskNameFromTo[0].trim(), fromTo[0].trim(), fromTo[1].trim());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"        super.addAndSaveTask(task, taskList, ui, storage);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":31}},{"path":"src/main/java/wbb/command/AddNewTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.command;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"import wbb.storage.Storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.Task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.TaskType;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.Todo;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"import wbb.ui.Ui;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":" * Add new Todo task to taskList.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"public class AddNewTodoCommand extends AddCommand {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"     * To validate input and add/save new todo task.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskName The taskName.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskType The type of task (e.g. todo, deadline, or event).","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"    public void exec(String taskName, TaskType taskType, ArrayList\u003cTask\u003e taskList, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"        Task task \u003d new Todo(taskName);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"        super.addAndSaveTask(task, taskList, ui, storage);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":25}},{"path":"src/main/java/wbb/command/ChangeStatusCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.command;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"import wbb.exception.WBBException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"import wbb.storage.Storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.Task;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"import wbb.ui.Ui;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":" * Mark or unmark a task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"public class ChangeStatusCommand extends Command {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"     * Executes a given command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskList The taskList.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"     * @param command The user command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"     * @param ui The ui.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"     * @param storage The storage.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"     * @throws WBBException if the command cannot be executed correctly.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"    public void execute(ArrayList\u003cTask\u003e taskList, String command, Ui ui, Storage storage) throws WBBException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"        changeItemStatus(taskList, command, ui, storage);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"     * To change item status to either \"Done\" or \"Undone\".","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskList The taskList.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"     * @param command The input command by the user.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"    public void changeItemStatus(ArrayList\u003cTask\u003e taskList, String command, Ui ui, Storage storage) throws WBBException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"        // Validate itemIdx and taskList before continuing","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"        int itemIdx \u003d validator.validateAndGetItemIdx(command);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"        validator.validateItemIdxForTaskList(taskList, itemIdx, ui);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"        // Validation passed, continue running main program logic (i.e. to change the item status)","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"        Task taskName \u003d taskList.get(itemIdx);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"        if (command.startsWith(\"mark\")) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"            taskName.setDone();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"            ui.prettyPrint(\"Nice! I\u0027ve marked this task as done:\\n\\t\" + taskName);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"        } else {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WhiteBear82"},"content":"            taskName.setUndone();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WhiteBear82"},"content":"            ui.prettyPrint(\"OK, I\u0027ve marked this task as not done yet:\\n\\t\" + taskName);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WhiteBear82"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":47}},{"path":"src/main/java/wbb/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.command;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"import wbb.exception.WBBException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"import wbb.storage.Storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.Task;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"import wbb.ui.Ui;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"import wbb.util.Validator;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":" * Represent a user\u0027s command.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"public abstract class Command {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"    protected Validator validator;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"    public Command() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"        this.validator \u003d new Validator();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"     * Executes a given command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskList The taskList.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"     * @param command The user command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"     * @param ui The ui.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"     * @param storage The storage.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"     * @throws WBBException if the command cannot be executed correctly.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"    public abstract void execute(ArrayList\u003cTask\u003e taskList, String command, Ui ui, Storage storage) throws WBBException;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"     * Indicates whether the command is an Exit command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"     * @return True if the command is an Exit command, otherwise false.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"        return false;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":37}},{"path":"src/main/java/wbb/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.command;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"import wbb.exception.WBBException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"import wbb.storage.Storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.Task;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"import wbb.ui.Ui;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":" * Delete an item in the taskList.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"     * Executes a given command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskList The taskList.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"     * @param command The user command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"     * @param ui The ui.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"     * @param storage The storage.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"     * @throws WBBException if the command cannot be executed correctly.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"    public void execute(ArrayList\u003cTask\u003e taskList, String command, Ui ui, Storage storage) throws WBBException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"        deleteTask(taskList, command, ui, storage);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"     * To delete tasks.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskList The taskList","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"     * @param command The user command (e.g. delete 3)","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"     * @throws WBBException if itemIdx is invalid (non-positive, non-integer, out of bounds) or taskList is empty.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"    public void deleteTask(ArrayList\u003cTask\u003e taskList, String command, Ui ui, Storage storage) throws WBBException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"        // Validate itemIdx and taskList before continuing","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"        int itemIdx \u003d validator.validateAndGetItemIdx(command);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"        validator.validateItemIdxForTaskList(taskList, itemIdx, ui);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"        // Validation passed, continue running main program logic (i.e. to delete the item)","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"        Task taskName \u003d taskList.get(itemIdx);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"        taskList.remove(itemIdx);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"        ui.printDeleteSuccessfulMsg(taskList.size(), taskName);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":43}},{"path":"src/main/java/wbb/command/DisplayTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.command;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"import wbb.storage.Storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.Task;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"import wbb.ui.Ui;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":" * List all items in the taskList that are due today.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"public class DisplayTasksCommand extends Command {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"     * Executes a given command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskList The taskList.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"     * @param command The user command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"     * @param ui The ui.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"     * @param storage The storage.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"    public void execute(ArrayList\u003cTask\u003e taskList, String command, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"        displayTodayTasks(taskList, ui);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"     * Displays all tasks that are due today.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskList The taskList.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"    public void displayTodayTasks(ArrayList\u003cTask\u003e taskList, Ui ui) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"        ArrayList\u003cTask\u003e tasksDueToday \u003d getTasksDueToday(taskList);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"        ui.printTasksDueToday(tasksDueToday);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"     * Retrieves tasks that are due today.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"     * @param tasks The taskList.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"     * @return The task that is due today.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"    public ArrayList\u003cTask\u003e getTasksDueToday(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"        ArrayList\u003cTask\u003e tasksDueToday \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"            if (task.isDueToday()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WhiteBear82"},"content":"                tasksDueToday.add(task);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WhiteBear82"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WhiteBear82"},"content":"        return tasksDueToday;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":47}},{"path":"src/main/java/wbb/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.command;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"import wbb.storage.Storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.Task;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"import wbb.ui.Ui;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":" * Quit the program.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"     * Executes a given command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskList The taskList.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"     * @param command The user command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"     * @param ui The ui.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"     * @param storage The storage.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"    public void execute(ArrayList\u003cTask\u003e taskList, String command, Ui ui, Storage storage) {}","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"     * Indicates whether the command is an Exit command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"     * @return True if the command is an Exit command, otherwise false.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"        return true;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":30}},{"path":"src/main/java/wbb/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.command;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"import wbb.storage.Storage;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.Task;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"import wbb.ui.Ui;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":" * Find an item in the taskList.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"     * Executes a given command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskList The taskList.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"     * @param command The user command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"     * @param ui The ui.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"     * @param storage The storage.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"    public void execute(ArrayList\u003cTask\u003e taskList, String command, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"        displayMatchingTasks(taskList, command, ui);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"     * Displays all tasks that are matched by the \"find\" command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskList The taskList.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"    public void displayMatchingTasks(ArrayList\u003cTask\u003e taskList, String command, Ui ui) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"        String[] parts \u003d command.split(\" \", 2);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"            ui.printErrorMsg(\"Please enter a keyword to search for tasks.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"            return;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d getMatchingTasks(parts[1].trim(), taskList);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"        ui.printMatchingTasks(matchingTasks);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"     * Retrieves tasks that are matched by the \"find\" command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskList The taskList.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WhiteBear82"},"content":"     * @return The tasks that are matched by the \"find\" command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WhiteBear82"},"content":"    public ArrayList\u003cTask\u003e getMatchingTasks(String taskName, ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WhiteBear82"},"content":"        return taskList.stream()","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WhiteBear82"},"content":"                .filter(task -\u003e task.getDescription().toLowerCase().contains(taskName.toLowerCase()))","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WhiteBear82"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":50}},{"path":"src/main/java/wbb/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.command;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"import java.util.Map;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"import javafx.scene.web.WebView;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"import javafx.stage.Modality;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"import wbb.storage.Storage;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.Task;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.TaskType;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"import wbb.ui.Ui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":" * Handles the \"help\" command to display task formats and other command usages.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"    private static final Map\u003cString, String\u003e COMMAND_DESCRIPTIONS \u003d Map.ofEntries(","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"            Map.entry(\"list\", \"Lists all tasks.\"),","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"            Map.entry(\"bye\", \"Exits the application.\"),","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"            Map.entry(\"mark\", \"Marks a task as completed. Usage: mark [task number]\"),","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"            Map.entry(\"unmark\", \"Unmarks a completed task. Usage: unmark [task number]\"),","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"            Map.entry(\"todo\", \"Adds a new todo task. Usage: todo [task description]\"),","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"            Map.entry(\"deadline\", \"Adds a new deadline. Usage: deadline [description] /by [date]\"),","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"            Map.entry(\"event\", \"Adds a new event. Usage: event [description] /from [start time] /to [end time]\"),","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"            Map.entry(\"delete\", \"Deletes a task. Usage: delete [task number]\"),","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"            Map.entry(\"tasks\", \"Displays all tasks with filters.\"),","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"            Map.entry(\"find\", \"Finds tasks that match a keyword. Usage: find [keyword]\"),","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"            Map.entry(\"help\", \"Displays this help message.\")","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"    );","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"    @Override","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"    public void execute(ArrayList\u003cTask\u003e taskList, String command, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"        StringBuilder helpMessage \u003d new StringBuilder();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"        // Add blue bold title for Available Commands","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"        helpMessage.append(\"\u003ch2 style\u003d\u0027color:blue;\u0027\u003eAvailable Commands:\u003c/h2\u003e\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"        helpMessage.append(\"\u003cul\u003e\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WhiteBear82"},"content":"        for (Map.Entry\u003cString, String\u003e entry : COMMAND_DESCRIPTIONS.entrySet()) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WhiteBear82"},"content":"            helpMessage.append(\"\u003cli\u003e\u003cb\u003e\").append(entry.getKey()).append(\"\u003c/b\u003e - \")","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WhiteBear82"},"content":"                    .append(entry.getValue()).append(\"\u003c/li\u003e\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WhiteBear82"},"content":"        helpMessage.append(\"\u003c/ul\u003e\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WhiteBear82"},"content":"        // Add blue bold title for Task Formats","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WhiteBear82"},"content":"        helpMessage.append(\"\u003ch2 style\u003d\u0027color:blue;\u0027\u003eTask Formats:\u003c/h2\u003e\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WhiteBear82"},"content":"        helpMessage.append(\"\u003cul\u003e\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WhiteBear82"},"content":"        for (TaskType type : TaskType.values()) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WhiteBear82"},"content":"            helpMessage.append(\"\u003cli\u003e\").append(type.getFormatExample()).append(\"\u003c/li\u003e\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WhiteBear82"},"content":"        helpMessage.append(\"\u003c/ul\u003e\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WhiteBear82"},"content":"        // Create a new stage for the help window","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"WhiteBear82"},"content":"        Stage helpStage \u003d new Stage();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"WhiteBear82"},"content":"        helpStage.initModality(Modality.APPLICATION_MODAL);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WhiteBear82"},"content":"        helpStage.setTitle(\"Help - Winter Bear Bot\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"WhiteBear82"},"content":"        WebView webView \u003d new WebView();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"WhiteBear82"},"content":"        webView.getEngine()","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"WhiteBear82"},"content":"                .loadContent(\"\u003chtml\u003e\u003cbody style\u003d\u0027font-size:14px;\u0027\u003e\" + helpMessage + \"\u003c/body\u003e\u003c/html\u003e\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"WhiteBear82"},"content":"        Button closeButton \u003d new Button(\"Close\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"WhiteBear82"},"content":"        closeButton.setOnAction(e -\u003e helpStage.close());","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"WhiteBear82"},"content":"        VBox layout \u003d new VBox(webView, closeButton);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"WhiteBear82"},"content":"        layout.setSpacing(10);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"WhiteBear82"},"content":"        layout.setPadding(new javafx.geometry.Insets(10));","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"WhiteBear82"},"content":"        Scene scene \u003d new Scene(layout, 500, 400);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"WhiteBear82"},"content":"        helpStage.setScene(scene);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"WhiteBear82"},"content":"        helpStage.showAndWait();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":76}},{"path":"src/main/java/wbb/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.command;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"import wbb.storage.Storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.Task;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"import wbb.ui.Ui;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":" * List all items in the taskList.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"     * Executes a given command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskList The taskList.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"     * @param command The user command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"     * @param ui The ui.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"     * @param storage The storage.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"    public void execute(ArrayList\u003cTask\u003e taskList, String command, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"        ui.printList(taskList);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":23}},{"path":"src/main/java/wbb/exception/WBBException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.exception;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"/**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":" * WinterBearBot Exception Class.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":" */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"//CHECKSTYLE.OFF: AbbreviationAsWordInName","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"public class WBBException extends Exception {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"    //CHECKSTYLE.ON: AbbreviationAsWordInName","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"     * To construct the desired error message","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"     * @param message The error message","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"    public WBBException(String message) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"        super(message);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":16}},{"path":"src/main/java/wbb/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.parser;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import java.util.Map;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"import wbb.command.AddCommand;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"import wbb.command.AddNewDeadlineCommand;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"import wbb.command.AddNewEventCommand;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"import wbb.command.AddNewTodoCommand;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"import wbb.command.ChangeStatusCommand;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"import wbb.command.Command;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"import wbb.command.DeleteCommand;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"import wbb.command.DisplayTasksCommand;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"import wbb.command.ExitCommand;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"import wbb.command.FindCommand;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"import wbb.command.HelpCommand;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"import wbb.command.ListCommand;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"import wbb.exception.WBBException;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":" * Parse a command.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"public class Parser {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"    private static final Map\u003cString, AddCommand\u003e ADD_COMMANDS \u003d Map.of(","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"            \"todo\", new AddNewTodoCommand(),","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"            \"deadline\", new AddNewDeadlineCommand(),","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"            \"event\", new AddNewEventCommand()","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"    );","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"    private static final Map\u003cString, Command\u003e COMMANDS \u003d Map.ofEntries(","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"            Map.entry(\"list\", new ListCommand()),","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"            Map.entry(\"bye\", new ExitCommand()),","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"            Map.entry(\"mark\", new ChangeStatusCommand()),","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"            Map.entry(\"unmark\", new ChangeStatusCommand()),","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"            Map.entry(\"todo\", new AddCommand()),","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"            Map.entry(\"deadline\", new AddCommand()),","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"            Map.entry(\"event\", new AddCommand()),","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"            Map.entry(\"delete\", new DeleteCommand()),","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"            Map.entry(\"tasks\", new DisplayTasksCommand()),","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"            Map.entry(\"find\", new FindCommand()),","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"            Map.entry(\"help\", new HelpCommand())","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"    );","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WhiteBear82"},"content":"     * Parses the original command into subclasses of Command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WhiteBear82"},"content":"     * @param inputs The original user command","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WhiteBear82"},"content":"     * @return The subclass of Command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WhiteBear82"},"content":"    public Command parseCommand(String... inputs) throws WBBException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WhiteBear82"},"content":"        if (inputs.length \u003d\u003d 0) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException(\"ERROR: No command specified\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WhiteBear82"},"content":"        String commandPrefix \u003d inputs[0].trim().split(\"\\\\s+\", 2)[0];","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WhiteBear82"},"content":"        return COMMANDS.entrySet().stream()","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WhiteBear82"},"content":"                .filter(entry -\u003e entry.getKey().equals(commandPrefix))","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WhiteBear82"},"content":"                .map(Map.Entry::getValue)","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WhiteBear82"},"content":"                .findFirst()","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"WhiteBear82"},"content":"                .orElseThrow(() -\u003e new WBBException(\"ERROR: Invalid command \"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"WhiteBear82"},"content":"                        + \"(valid commands are: \" + String.join(\", \", COMMANDS.keySet()) + \")\"));","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"WhiteBear82"},"content":"     * Parses the add command into subclasses of AddCommand.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"WhiteBear82"},"content":"     * @param typeOfTask The type of task (e.g. Todo, Deadline, Event).","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"WhiteBear82"},"content":"     * @return The subclass of AddCommand.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"WhiteBear82"},"content":"    public AddCommand parseAddCommand(String typeOfTask) throws WBBException {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"WhiteBear82"},"content":"        return ADD_COMMANDS.entrySet().stream()","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"WhiteBear82"},"content":"                .filter(entry -\u003e entry.getKey().equalsIgnoreCase(typeOfTask))","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"WhiteBear82"},"content":"                .map(Map.Entry::getValue)","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"WhiteBear82"},"content":"                .findFirst()","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"WhiteBear82"},"content":"                .orElseThrow(() -\u003e new WBBException(\"Invalid task type: \" + typeOfTask));","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":74}},{"path":"src/main/java/wbb/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.storage;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"import java.io.File;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.Task;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.TaskType;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":" * Handle loading and saving tasks from and to a file.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"public class Storage {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"    private static final String FILE_PATH \u003d \"./data/wbb.txt\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"     * Create the directory \"./data\" and/or the file \"./data/wbb.txt\" if it doesn\u0027t exist.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"    @SuppressWarnings(\"ResultOfMethodCallIgnored\")","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"    public void setupFile() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"        try {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"            assert file.getParentFile() !\u003d null : \"Parent directory should not be null\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"            file.createNewFile();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"     * To save taskList into FILE_PATH.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskList The taskList.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"        assert taskList !\u003d null : \"Task list should not be null\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(FILE_PATH))) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WhiteBear82"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WhiteBear82"},"content":"                assert task !\u003d null : \"Task should not be null\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WhiteBear82"},"content":"                writer.write(task.toFileFormat());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WhiteBear82"},"content":"                writer.newLine();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WhiteBear82"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WhiteBear82"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WhiteBear82"},"content":"            System.out.println(\"\\tERROR: Could not save tasks.\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WhiteBear82"},"content":"     * To load contents of FILE_PATH into taskList.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WhiteBear82"},"content":"     * @return The taskList.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WhiteBear82"},"content":"    public ArrayList\u003cTask\u003e loadTasks() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"WhiteBear82"},"content":"        setupFile();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"WhiteBear82"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WhiteBear82"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(FILE_PATH))) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WhiteBear82"},"content":"            String line;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"WhiteBear82"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"WhiteBear82"},"content":"                String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"WhiteBear82"},"content":"                try {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"WhiteBear82"},"content":"                    TaskType type \u003d TaskType.fromString(parts[0].trim());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"WhiteBear82"},"content":"                    Task task \u003d type.createTask(parts);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"WhiteBear82"},"content":"                    if (Boolean.parseBoolean(parts[1].trim())) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"WhiteBear82"},"content":"                        task.setDone();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"WhiteBear82"},"content":"                    } else {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"WhiteBear82"},"content":"                        task.setUndone();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"WhiteBear82"},"content":"                    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"WhiteBear82"},"content":"                    taskList.add(task);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"WhiteBear82"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"WhiteBear82"},"content":"                    System.out.println(\"\\tERROR: Skipping invalid task \" + line);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"WhiteBear82"},"content":"                } catch (NullPointerException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"WhiteBear82"},"content":"                    System.out.println(\"\\tERROR: Skipping invalid task type (only todo/deadline/event): \" + line);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"WhiteBear82"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"WhiteBear82"},"content":"                    System.out.println(\"\\tERROR: Skipping invalid task format (missing details): \" + line);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"WhiteBear82"},"content":"                }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"WhiteBear82"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"WhiteBear82"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"WhiteBear82"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"WhiteBear82"},"content":"        return taskList;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":85}},{"path":"src/main/java/wbb/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.task;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"import wbb.util.DateTimeUtility;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":" * Deadline task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"    protected String by;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"     * Deadline which has a description and a deadline.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"     * @param description The name of the task.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"     * @param by The deadline.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"        super(description);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"     * Getter for deadline.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"     * @return The deadline.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"    public String getBy() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"        return by;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"     * Converts friendly print format to LocalDateTime/LocalDate, and returns the tasks that are due today.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"     * @return The tasks that are due today.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"    public boolean isDueToday() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"        return new DateTimeUtility().isDueToday(by);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"     * toString method for this class.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"     * @return The string.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"    @Override","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WhiteBear82"},"content":"    public String toString() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WhiteBear82"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WhiteBear82"},"content":"     * Provides a format for saving into hard disk.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WhiteBear82"},"content":"     * @return The desired format for saving into hard disk.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WhiteBear82"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WhiteBear82"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WhiteBear82"},"content":"        return String.format(\"deadline | %b | %s | %s\", isDone(), description, by);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":54}},{"path":"src/main/java/wbb/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.task;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":" * Event task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"    protected String from;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"    protected String to;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"     * Event which is has a description, start date/time and end date/time.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"     * @param description The name of the task.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"     * @param from The start date/time.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"     * @param to The end date/time.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"        super(description);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"     * toString method for this class.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"     * @return The string.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"    @Override","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"    public String toString() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to \" + to + \")\";","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"     * Provides a format for saving into hard disk.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"     * @return The desired format for saving into hard disk.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"        return String.format(\"event | %b | %s | %s | %s\", isDone(), description, from, to);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":41}},{"path":"src/main/java/wbb/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.task;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":" * Task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"    protected String description;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"    private boolean isDone;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"     * Constructor.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"     * @param description The taskName.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"     * Provides the taskName.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"     * @return The taskName.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"        return description;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"     * Sets task to \"isDone\".","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"    public void setDone() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"     * Unsets task from \"isDone\".","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"    public void setUndone() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WhiteBear82"},"content":"     * Getter for isDone.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WhiteBear82"},"content":"     * @return isDone.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WhiteBear82"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WhiteBear82"},"content":"        return isDone;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WhiteBear82"},"content":"     * Provides [ ] if task is not done, otherwise [X].","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WhiteBear82"},"content":"     * @return [ ] if task is not done, otherwise [X].","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WhiteBear82"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WhiteBear82"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"WhiteBear82"},"content":"     * toString method for this class.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WhiteBear82"},"content":"     * @return The string.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"WhiteBear82"},"content":"    @Override","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"WhiteBear82"},"content":"    public String toString() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"WhiteBear82"},"content":"        return this.getStatusIcon() + \" \" + this.getDescription();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"WhiteBear82"},"content":"     * Provides a format for saving into hard disk.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"WhiteBear82"},"content":"     * @return The desired format for saving into hard disk.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"WhiteBear82"},"content":"    public abstract String toFileFormat();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"WhiteBear82"},"content":"     * For deadline class, which has a method for override, other tasks default to not having due date.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"WhiteBear82"},"content":"     * @return False.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"WhiteBear82"},"content":"    public boolean isDueToday() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"WhiteBear82"},"content":"        return false;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":79}},{"path":"src/main/java/wbb/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.task;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":" * Represents the types of tasks (e.g., TODO, DEADLINE, EVENT) that can be created.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":" * Each task type defines how to parse and create a specific task from user input.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"public enum TaskType {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"    TODO(\"todo\", \"Please enter a task name (e.g., todo borrow book).\") {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"        @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"        public Task createTask(String[] parts) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"            return new Todo(parts[2].trim());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"    },","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"    DEADLINE(\"deadline\", \"Please enter a valid deadline (e.g., deadline return book /by Sunday) \"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"            + \"or (e.g. deadline return book /by d/M/yyyy HHmm)\") {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"        @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"        public Task createTask(String[] parts) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"            return new Deadline(parts[2].trim(), parts[3].trim());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"    },","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"    EVENT(\"event\", \"Please enter event details (e.g., event project meeting /from Mon 2pm /to 4pm).\") {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"        @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"        public Task createTask(String[] parts) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"            return new Event(parts[2].trim(), parts[3].trim(), parts[4].trim());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"    };","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"    private final String type;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"    private final String errorMessage;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"     * Constructor.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"     * @param type The type of task (e.g. todo, deadline, or event).","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"     * @param errorMessage The error message.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"    TaskType(String type, String errorMessage) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"        this.type \u003d type;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WhiteBear82"},"content":"     * Provides the correct format to prevent future errors.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WhiteBear82"},"content":"     * @return The correct format.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WhiteBear82"},"content":"    public String getFormatExample() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WhiteBear82"},"content":"        return errorMessage;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WhiteBear82"},"content":"     * Get the taskType from a given String.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WhiteBear82"},"content":"     * @param type The type of task (e.g. todo, deadline, or event).","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WhiteBear82"},"content":"     * @return The taskType (e.g. todo, deadline, or event).","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WhiteBear82"},"content":"    public static TaskType fromString(String type) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WhiteBear82"},"content":"        TaskType taskType \u003d null;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WhiteBear82"},"content":"        for (TaskType t : TaskType.values()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"WhiteBear82"},"content":"            if (t.type.equalsIgnoreCase(type)) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"WhiteBear82"},"content":"                taskType \u003d t;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WhiteBear82"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"WhiteBear82"},"content":"        return taskType;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"WhiteBear82"},"content":"     * Create a task (e.g. Todo, Deadline, or Event)","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"WhiteBear82"},"content":"     * @param parts The parts of the user input command (e.g. [\"deadline\", \"return book\", \"/by\", \"Sunday\"]","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"WhiteBear82"},"content":"     * @return The Task.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"WhiteBear82"},"content":"    public abstract Task createTask(String[] parts);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":70}},{"path":"src/main/java/wbb/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.task;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":" * Represents a Todo task with a description, providing methods to represent the task as a string","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":" * and for saving it in a specific format.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"     * Todo which has a description only.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"     * @param description The name of the task.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"        super(description);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"     * toString method for this class.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"     * @return The string.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"    @Override","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"    public String toString() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"     * Provides a format for saving into hard disk.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"     * @return The desired format for saving into hard disk.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"        return String.format(\"todo | %b | %s\", isDone(), description);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":34}},{"path":"src/main/java/wbb/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.ui;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.Task;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":" * Handles user interface operations such as displaying messages, reading user input,","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":" * and printing task lists. This class is responsible for interacting with the user","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":" * and presenting the relevant information.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"public class Ui {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"    protected static final String HORIZONTAL_LINE \u003d \"\\t____________________________________________________________\\n\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"    private final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"    private final StringBuilder outputBuffer \u003d new StringBuilder();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"     * Print horizontal line with tabs, along with the given msg.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"     * @param msg The message to be prettyPrinted.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"    public void prettyPrint(String msg) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"        System.out.print(HORIZONTAL_LINE);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"        System.out.println(msg);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"        outputBuffer.append(msg.trim());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"     * To display welcome message to user.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"    public void displayWelcomeMessage() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"        prettyPrint(\"\\tHello! I\u0027m WinterBearBot\\n\\tWhat can I do for you?\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"                + \"Enter \u0027help\u0027 for a list of commands.\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"     * Provides welcome message to GUI.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"     * @return The welcome message.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"    public String getWelcomeMessage() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"        return \"Hello! I\u0027m WinterBearBot.\\nWhat can I do for you?\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WhiteBear82"},"content":"     * Display message before the end of the program.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WhiteBear82"},"content":"    public void displayFarewellMessage() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WhiteBear82"},"content":"        prettyPrint(\"\\tBye. Hope to see you again soon!\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WhiteBear82"},"content":"     * Reads user input command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WhiteBear82"},"content":"     * @return The user input command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WhiteBear82"},"content":"    public String readCommand() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WhiteBear82"},"content":"        return sc.nextLine();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WhiteBear82"},"content":"     * Pretty-prints error message.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"WhiteBear82"},"content":"     * @param errorMsg The error message.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"WhiteBear82"},"content":"    public void printErrorMsg(String errorMsg) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"WhiteBear82"},"content":"        prettyPrint(errorMsg);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"WhiteBear82"},"content":"     * To print all items in the taskList.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"WhiteBear82"},"content":"     * @param list The taskList.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"WhiteBear82"},"content":"    public void printList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"WhiteBear82"},"content":"        System.out.print(HORIZONTAL_LINE);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"WhiteBear82"},"content":"        System.out.println(\"\\tHere are the tasks in your list:\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"WhiteBear82"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"WhiteBear82"},"content":"            Task item \u003d list.get(i);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"WhiteBear82"},"content":"            System.out.printf(\"\\t%d. %s%n\", (i + 1), item.toString());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"WhiteBear82"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"WhiteBear82"},"content":"        outputBuffer.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"WhiteBear82"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"WhiteBear82"},"content":"            Task item \u003d list.get(i);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"WhiteBear82"},"content":"            outputBuffer.append(i + 1).append(\". \").append(item.toString()).append(\"\\n\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"WhiteBear82"},"content":"     * Pretty-prints message indicating that task addition was successful.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskListSize The size of the taskList.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskName The taskName.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"WhiteBear82"},"content":"    public void printAdditionSuccessfulMsg(int taskListSize, Task taskName) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"WhiteBear82"},"content":"        String addTaskSuccessfulMsg \u003d \"Got it. I\u0027ve added this task:\\n\\t\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"WhiteBear82"},"content":"        String totalTaskMsg \u003d \"\\nNow you have \" + taskListSize + \" tasks in the list.\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"WhiteBear82"},"content":"        prettyPrint(addTaskSuccessfulMsg + taskName + totalTaskMsg);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"WhiteBear82"},"content":"     * Pretty-prints message indicating that task deletion was successful.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskListSize The size of the taskList.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskName The taskName.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"WhiteBear82"},"content":"    public void printDeleteSuccessfulMsg(int taskListSize, Task taskName) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"WhiteBear82"},"content":"        String deleteTaskSuccessfulMsg \u003d \"Noted. I\u0027ve removed this task:\\n\\t\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"WhiteBear82"},"content":"        String totalTaskMsg \u003d \"\\nNow you have \" + taskListSize + \" tasks in the list.\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"WhiteBear82"},"content":"        prettyPrint(deleteTaskSuccessfulMsg + taskName + totalTaskMsg);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"WhiteBear82"},"content":"     * Prints all tasks that are due today, if any.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"WhiteBear82"},"content":"     * @param tasksDueToday The tasks that are due today.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"WhiteBear82"},"content":"    public void printTasksDueToday(ArrayList\u003cTask\u003e tasksDueToday) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"WhiteBear82"},"content":"        if (tasksDueToday.isEmpty()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"WhiteBear82"},"content":"            System.out.println(HORIZONTAL_LINE + \"\\tNo tasks are due today.\\n\" + HORIZONTAL_LINE);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"WhiteBear82"},"content":"        } else {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"WhiteBear82"},"content":"            System.out.print(HORIZONTAL_LINE);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"WhiteBear82"},"content":"            System.out.println(\"\\tTasks due today:\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"WhiteBear82"},"content":"            for (Task task : tasksDueToday) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"WhiteBear82"},"content":"                System.out.println(\"\\t\" + task);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"WhiteBear82"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"WhiteBear82"},"content":"            System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"WhiteBear82"},"content":"        if (tasksDueToday.isEmpty()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"WhiteBear82"},"content":"            prettyPrint(\"\\tNo tasks are due today.\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"WhiteBear82"},"content":"        } else {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"WhiteBear82"},"content":"            outputBuffer.append(\"Tasks due today:\\n\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"WhiteBear82"},"content":"            for (Task task : tasksDueToday) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"WhiteBear82"},"content":"                outputBuffer.append(task).append(\"\\n\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"WhiteBear82"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"WhiteBear82"},"content":"     * Prints all tasks that are matched by the \"find\" command, if any.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"WhiteBear82"},"content":"     * @param matchingTasks The tasks that are due today.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"WhiteBear82"},"content":"    public void printMatchingTasks(ArrayList\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"WhiteBear82"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"WhiteBear82"},"content":"            System.out.println(HORIZONTAL_LINE + \"\\tNo matching tasks.\\n\" + HORIZONTAL_LINE);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"WhiteBear82"},"content":"        } else {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"WhiteBear82"},"content":"            System.out.println(\"\\tHere are the matching tasks in your list:\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"WhiteBear82"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"WhiteBear82"},"content":"                System.out.println((i + 1) + \". \" + matchingTasks.get(i));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"WhiteBear82"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"WhiteBear82"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"WhiteBear82"},"content":"            prettyPrint(\"\\tNo matching tasks.\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"WhiteBear82"},"content":"        } else {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"WhiteBear82"},"content":"            outputBuffer.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"WhiteBear82"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"WhiteBear82"},"content":"                outputBuffer.append(i + 1).append(\". \").append(matchingTasks.get(i)).append(\"\\n\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"WhiteBear82"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"WhiteBear82"},"content":"     * Store and provides output for GUI.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"WhiteBear82"},"content":"     * @return The output.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"WhiteBear82"},"content":"    public String getLastOutput() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"WhiteBear82"},"content":"        String output \u003d outputBuffer.toString();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"WhiteBear82"},"content":"        outputBuffer.setLength(0);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"WhiteBear82"},"content":"        return output;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":168}},{"path":"src/main/java/wbb/util/DateTimeUtility.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.util;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":" * Provides utility methods for handling date and time parsing, formatting, and validation.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":" * This class allows parsing of deadline strings into LocalDate, LocalTime, or LocalDateTime","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":" * and provides methods for formatting these values into human-readable strings.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":" * It also includes methods to determine if a task\u0027s deadline is due today.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"public class DateTimeUtility {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"     * Tries to parse deadline to either LocalDate or LocalDateTime.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"     * @param deadline The deadline.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"     * @return The deadline, in LocalDate or LocalDateTime, if applicable.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"    public String tryParseDateAndOrTime(String deadline) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"        // Try date-time parsing and get formatted string","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"        String result \u003d tryParseDateTime(deadline, dateTimeFormatter);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"        if (result !\u003d null) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"            return result;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"        // Try date-only parsing and get formatted string","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"        result \u003d tryParseDate(deadline, dateFormatter);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"        if (result !\u003d null) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"            return result;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"        // Try time-only parsing and get formatted string","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"        result \u003d tryParseTime(deadline, timeFormatter);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"        if (result !\u003d null) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WhiteBear82"},"content":"            return result;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WhiteBear82"},"content":"        return deadline;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WhiteBear82"},"content":"     * Tries to parse String to LocalDateTime.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WhiteBear82"},"content":"     * @param dateTimeString The String to be parsed.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WhiteBear82"},"content":"     * @param formatter The DateTimeFormatter.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WhiteBear82"},"content":"     * @return The parsed LocalDateTime, if possible, otherwise null.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WhiteBear82"},"content":"    public String tryParseDateTime(String dateTimeString, DateTimeFormatter formatter) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WhiteBear82"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WhiteBear82"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(dateTimeString, formatter);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WhiteBear82"},"content":"            if (dateTime.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"WhiteBear82"},"content":"                return null;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"WhiteBear82"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WhiteBear82"},"content":"            return formatDateTime(dateTime);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WhiteBear82"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"WhiteBear82"},"content":"            return null;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"WhiteBear82"},"content":"     * Tries to parse String to LocalDate.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"WhiteBear82"},"content":"     * @param dateString The String to be parsed.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"WhiteBear82"},"content":"     * @param formatter The DateTimeFormatter.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"WhiteBear82"},"content":"     * @return The parsed LocalDate, if possible, otherwise null.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"WhiteBear82"},"content":"    public String tryParseDate(String dateString, DateTimeFormatter formatter) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"WhiteBear82"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"WhiteBear82"},"content":"            LocalDate date \u003d LocalDate.parse(dateString, formatter);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"WhiteBear82"},"content":"            if (date.isBefore(LocalDate.now())) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"WhiteBear82"},"content":"                return null;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"WhiteBear82"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"WhiteBear82"},"content":"            return formatDate(date);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"WhiteBear82"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"WhiteBear82"},"content":"            return null;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"WhiteBear82"},"content":"     * Tries to parse String to LocalTime.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"WhiteBear82"},"content":"     * @param timeString The String to be parsed.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"WhiteBear82"},"content":"     * @param formatter The DateTimeFormatter.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"WhiteBear82"},"content":"     * @return The parsed LocalTime, if possible, otherwise null.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"WhiteBear82"},"content":"    public String tryParseTime(String timeString, DateTimeFormatter formatter) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"WhiteBear82"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"WhiteBear82"},"content":"            LocalTime time \u003d LocalTime.parse(timeString, formatter);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"WhiteBear82"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.of(LocalDate.now(), time); // Default to today\u0027s date","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"WhiteBear82"},"content":"            if (dateTime.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"WhiteBear82"},"content":"                return null;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"WhiteBear82"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"WhiteBear82"},"content":"            return formatDateTime(dateTime);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"WhiteBear82"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"WhiteBear82"},"content":"            return null;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"WhiteBear82"},"content":"     * Converts a LocalDateTime to friendly print format, e.g., 15th of January 2025, 7:30pm.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"WhiteBear82"},"content":"     * @param dateTime The LocalDateTime.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"WhiteBear82"},"content":"     * @return A friendly print format.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"WhiteBear82"},"content":"    public String formatDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"WhiteBear82"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMMM yyyy, h:mma\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"WhiteBear82"},"content":"        return ordinalDay(dateTime.getDayOfMonth()) + \" of \" + dateTime.format(dateTimeFormatter);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"WhiteBear82"},"content":"     * Converts a LocalDateTime to friendly print format, e.g., 15th of January 2025.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"WhiteBear82"},"content":"     * @param date The LocalDate.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"WhiteBear82"},"content":"     * @return A friendly print format.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"WhiteBear82"},"content":"    public String formatDate(LocalDate date) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"WhiteBear82"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"MMMM yyyy\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"WhiteBear82"},"content":"        return ordinalDay(date.getDayOfMonth()) + \" of \" + date.format(dateFormatter);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"WhiteBear82"},"content":"     * Add \"st\", \"nd\", \"rd\", or \"th\" depending on the day, e.g. 1 -\u003e 1st.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"WhiteBear82"},"content":"     * @param day The day in number.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"WhiteBear82"},"content":"     * @return The appended format.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"WhiteBear82"},"content":"    public String ordinalDay(int day) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"WhiteBear82"},"content":"        if (day \u003e\u003d 11 \u0026\u0026 day \u003c\u003d 13) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"WhiteBear82"},"content":"            return day + \"th\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"WhiteBear82"},"content":"        return switch (day % 10) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"WhiteBear82"},"content":"        case 1 -\u003e day + \"st\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"WhiteBear82"},"content":"        case 2 -\u003e day + \"nd\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"WhiteBear82"},"content":"        case 3 -\u003e day + \"rd\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"WhiteBear82"},"content":"        default -\u003e day + \"th\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"WhiteBear82"},"content":"        };","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"WhiteBear82"},"content":"     * Remove \"st\", \"nd\", \"rd\", or \"th\" depending on the day, e.g. 1 -\u003e 1st.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"WhiteBear82"},"content":"     * @param day The day in number.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"WhiteBear82"},"content":"     * @return The un-appended format.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"WhiteBear82"},"content":"    public String removeOrdinalDay(String day) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"WhiteBear82"},"content":"        return day.replaceAll(\"(\\\\d+)(st|nd|rd|th)\", \"$1\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"WhiteBear82"},"content":"     * Checks if a given deadline task is due today.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"WhiteBear82"},"content":"     * @param by The deadline.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"WhiteBear82"},"content":"     * @return True if the deadline is equals today, otherwise false.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"WhiteBear82"},"content":"    public boolean isDueToday(String by) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"WhiteBear82"},"content":"        String normalizedDate \u003d removeOrdinalDay(by); // e.g. \"23rd\" -\u003e \"23\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"WhiteBear82"},"content":"        // List of possible date-time formats","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"WhiteBear82"},"content":"        String[] possibleFormats \u003d {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"WhiteBear82"},"content":"            \"d \u0027of\u0027 MMMM yyyy, h:mma\", // e.g., 23 of January 2025, 6:00pm","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"WhiteBear82"},"content":"            \"d \u0027of\u0027 MMMM yyyy\", // e.g., 23 of January 2025","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"WhiteBear82"},"content":"        };","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"WhiteBear82"},"content":"        // Iterate through the formats to parse the date","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"WhiteBear82"},"content":"        for (String format : possibleFormats) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"WhiteBear82"},"content":"            try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"WhiteBear82"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(format, java.util.Locale.ENGLISH);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"WhiteBear82"},"content":"                // If time is included in the format, use LocalDateTime","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"WhiteBear82"},"content":"                if (format.contains(\"h:mma\") || format.contains(\"HHmm\")) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"WhiteBear82"},"content":"                    LocalDateTime taskDateTime \u003d LocalDateTime.parse(normalizedDate, formatter);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"WhiteBear82"},"content":"                    return taskDateTime.toLocalDate().equals(LocalDate.now());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"WhiteBear82"},"content":"                } else { // Otherwise, use LocalDate","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"WhiteBear82"},"content":"                    LocalDate taskDate \u003d LocalDate.parse(normalizedDate, formatter);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"WhiteBear82"},"content":"                    return taskDate.equals(LocalDate.now());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"WhiteBear82"},"content":"                }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"WhiteBear82"},"content":"            } catch (DateTimeParseException ignored) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"WhiteBear82"},"content":"                // Try the next format","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"WhiteBear82"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"WhiteBear82"},"content":"        // No format works","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"WhiteBear82"},"content":"        return false;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":183}},{"path":"src/main/java/wbb/util/Validator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.util;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"import wbb.exception.WBBException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.Task;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.TaskType;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"import wbb.ui.Ui;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":" * Provides methods to validate user input for task management, such as checking item indices,","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":" * task names, deadlines, and time ranges.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"public class Validator {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"     * To retrieve, validate and return the item (task) index.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"     * @param command The user command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"     * @return The item index.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"     * @throws WBBException if missing index, non-positive index, or non-integer index.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"    public int validateAndGetItemIdx(String command) throws WBBException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"        String[] commandItemIdx \u003d command.split(\" \");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"        if (commandItemIdx.length \u003c\u003d 1) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException(","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"                    \"\\tERROR: Missing item index.\\n\\tPlease provide a valid index (e.g. mark 2 / unmark 2)\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"        int itemIdx;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"            itemIdx \u003d Integer.parseInt(commandItemIdx[1]) - 1; // -1 for array indexing","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException(\"\\tERROR: Index must be integers only (e.g. 1, 2, ...)\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"        if (itemIdx \u003c\u003d -1) { // Potential error input: \"mark 0\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException(\"\\tERROR: Index must be greater than or equal to 1\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"        return itemIdx;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"     * To validate if item index supplied is out of the task list range, or verify if the task list is empty.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskList The taskList.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WhiteBear82"},"content":"     * @param itemIdx The itemIdx.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WhiteBear82"},"content":"     * @throws WBBException if index is out of bounds, or task list is empty.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WhiteBear82"},"content":"    public void validateItemIdxForTaskList(ArrayList\u003cTask\u003e taskList, int itemIdx, Ui ui) throws WBBException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WhiteBear82"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException(\"\\tERROR: Task list is empty. Nothing to do.\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WhiteBear82"},"content":"        if (itemIdx \u003e\u003d taskList.size()) { // Potential error input: \"mark 100\" when list only has 1 element","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WhiteBear82"},"content":"            ui.printList(taskList);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException(","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WhiteBear82"},"content":"                    \"\\tERROR: Invalid item index.\\n\\tItem index out of bounds. \"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WhiteBear82"},"content":"                            + \"Please select a valid index in the list above\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WhiteBear82"},"content":"     * To validate input and return task name from the user command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WhiteBear82"},"content":"     * @param command The user command.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"WhiteBear82"},"content":"     * @param typeOfTask The type of task (e.g. todo, deadline, or event).","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskType The type of task (Enum).","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"WhiteBear82"},"content":"     * @return The taskName, if valid.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"WhiteBear82"},"content":"     * @throws WBBException if taskName is empty.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"WhiteBear82"},"content":"    public String validateAndGetTaskName(String command, String typeOfTask, TaskType taskType) throws WBBException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"WhiteBear82"},"content":"        String taskName \u003d command.substring(typeOfTask.length()).trim();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"WhiteBear82"},"content":"        if (taskName.isEmpty()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException(\"\\tERROR: Missing task name\\n\\t\" + taskType.getFormatExample());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"WhiteBear82"},"content":"        return taskName;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"WhiteBear82"},"content":"     * To validate taskName if it contains \"/by\".","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskName The taskName.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskType The type of task (e.g. todo, deadline, or event).","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"WhiteBear82"},"content":"     * @throws WBBException if taskName does not contain \"/by\".","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"WhiteBear82"},"content":"    public void validateTaskNameBy(String taskName, TaskType taskType) throws WBBException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"WhiteBear82"},"content":"        if (!taskName.contains(\"/by\")) { // Potential error input: \"deadline borrow book\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException(\"\\tERROR: Missing \u0027/by\u0027\\n\\t\" + taskType.getFormatExample());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"WhiteBear82"},"content":"     * To validate taskName and deadline and return both if valid.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskName The taskName.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskType The type of task (e.g. todo, deadline, or event).","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"WhiteBear82"},"content":"     * @return taskNameBy, which contains taskName and deadline, if valid.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"WhiteBear82"},"content":"     * @throws WBBException if missing deadline or task name.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"WhiteBear82"},"content":"    public String[] validateAndGetTaskNameBy(String taskName, TaskType taskType) throws WBBException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"WhiteBear82"},"content":"        String[] taskNameBy \u003d taskName.split(\"/by\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"WhiteBear82"},"content":"        if (taskNameBy.length !\u003d 2) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException(\"\\tERROR: Missing deadline \\n\\t\" + taskType.getFormatExample());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"WhiteBear82"},"content":"        if (taskNameBy[0].trim().isEmpty()) { // Potential error input: \"deadline /by 2\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException((\"\\tERROR: Missing task name\\n\\t\" + taskType.getFormatExample()));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"WhiteBear82"},"content":"        return taskNameBy;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"WhiteBear82"},"content":"     * To validate \"/from\" and \"/to\" are present and in correct positions.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskName The taskName.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskType The type of task (e.g. todo, deadline, or event).","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"WhiteBear82"},"content":"     * @throws WBBException if either \"/from\" or \"/to\" is missing, or \"/from\" comes after \"/to\".","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"WhiteBear82"},"content":"    public void validateFromTo(String taskName, TaskType taskType) throws WBBException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"WhiteBear82"},"content":"        if (!taskName.contains(\"/from\") || !taskName.contains(\"/to\")) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException(\"\\tERROR: Missing \u0027/from\u0027 or \u0027/to\u0027\\n\\t\" + taskType.getFormatExample());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"WhiteBear82"},"content":"        if (taskName.indexOf(\"/from\") \u003e taskName.indexOf(\"/to\")) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException(\"\\tERROR: /from must come before /to\\n\\t\" + taskType.getFormatExample());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"WhiteBear82"},"content":"     * To further validate input and return taskName, start datetime, and end datetime.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskName The taskName.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskType The type of task (e.g. todo, deadline, or event).","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"WhiteBear82"},"content":"     * @return taskName, start datetime, and end datetime, together in a String \"taskNameFromTo\".","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"WhiteBear82"},"content":"     * @throws WBBException if missing start date or taskName.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"WhiteBear82"},"content":"    public String[] validateAndGetTaskNameFromTo(String taskName, TaskType taskType) throws WBBException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"WhiteBear82"},"content":"        String[] taskNameFromTo \u003d taskName.split(\"/from\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"WhiteBear82"},"content":"        if (taskNameFromTo.length !\u003d 2) { // Potential error input: \"event borrow /from\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException(\"\\tERROR: Missing start date \\n\\t\" + taskType.getFormatExample());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"WhiteBear82"},"content":"        } else if (taskNameFromTo[0].trim().isEmpty()) { // Potential error input: \"event /from /to 2pm\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException(\"\\tERROR: Missing task name \\n\\t\" + taskType.getFormatExample());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"WhiteBear82"},"content":"        } else if ((taskNameFromTo[1].trim().split(\"/to\")).length \u003d\u003d 0) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"WhiteBear82"},"content":"            // Potential error input: \"event borrow /from /to\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException(\"\\tERROR: Missing start date \\n\\t\" + taskType.getFormatExample());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"WhiteBear82"},"content":"        } else if (taskNameFromTo[1].trim().split(\"/to\")[0].isEmpty()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"WhiteBear82"},"content":"            // Potential error input: \"event borrow /from /to 2pm\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException(\"\\tERROR: Missing start date \\n\\t\" + taskType.getFormatExample());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"WhiteBear82"},"content":"        return taskNameFromTo;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"WhiteBear82"},"content":"     * To further validate input and return start datetime and end datetime.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskNameFromTo The taskName, start datetime and end datetime in one String \"taskNameFromTo\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"WhiteBear82"},"content":"     * @param taskType The type of task (e.g. todo, deadline, or event).","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"WhiteBear82"},"content":"     * @return start datetime and end datetime in one String \"fromTo\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"WhiteBear82"},"content":"     * @throws WBBException if missing end date.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"WhiteBear82"},"content":"    public String[] validateAndGetFromTo(String[] taskNameFromTo, TaskType taskType) throws WBBException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"WhiteBear82"},"content":"        String[] fromTo \u003d taskNameFromTo[1].split(\"/to\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"WhiteBear82"},"content":"        if (fromTo.length !\u003d 2) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"WhiteBear82"},"content":"            // Potential error input: \"event borrow /from 2pm /to\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"WhiteBear82"},"content":"            throw new WBBException(\"\\tERROR: Missing end date \\n\\t\" + taskType.getFormatExample());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"WhiteBear82"},"content":"        return fromTo;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":157}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"            \u003cInsets left\u003d\"7.0\" right\u003d\"7.0\" /\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Type here...\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"            \u003cgraphic\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"                \u003cImageView fitHeight\u003d\"24.0\" fitWidth\u003d\"24.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"                    \u003cimage\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"                        \u003cImage url\u003d\"@../images/DaDuke.png\" /\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"                    \u003c/image\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"                \u003c/ImageView\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"            \u003c/graphic\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"        \u003c/Button\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":29}},{"path":"src/test/java/wbb/WinterBearBotTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"import wbb.command.AddNewTodoCommand;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"import wbb.command.Command;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"import wbb.command.ExitCommand;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"import wbb.command.ListCommand;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"import wbb.exception.WBBException;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"import wbb.parser.Parser;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"import wbb.storage.Storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.Task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.Todo;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"import wbb.ui.Ui;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"class WinterBearBotTest {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"    private WinterBearBot bot;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"    void setUp() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"        // Initialize the WinterBearBot instance","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"        bot \u003d new WinterBearBot();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"        taskList \u003d new ArrayList\u003c\u003e(); // Mock an empty task list","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"    void testWinterBearBotInitialization() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"        // Test that the WinterBearBot is initialized correctly","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"        assertNotNull(bot);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"        assertNotNull(bot.getUi());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"        assertNotNull(bot.getStorage());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WhiteBear82"},"content":"        assertNotNull(bot.getParser());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WhiteBear82"},"content":"        assertNotNull(bot.getTaskList()); // Check that the taskList is empty initially","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WhiteBear82"},"content":"    void testManageTaskList_withValidCommand() throws WBBException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WhiteBear82"},"content":"        // Manually simulate a valid command (e.g., \"list\")","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WhiteBear82"},"content":"        bot.setUi(new Ui()); // Use real UI for testing","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WhiteBear82"},"content":"        bot.setStorage(new Storage()); // Use real storage","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WhiteBear82"},"content":"        bot.setParser(new Parser());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WhiteBear82"},"content":"        // Add a task to the list for this test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WhiteBear82"},"content":"        taskList.add(new Todo(\"Test task\"));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WhiteBear82"},"content":"        // Manually trigger the execution of a valid command","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"WhiteBear82"},"content":"        String command \u003d \"list\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"WhiteBear82"},"content":"        Command listCommand \u003d new ListCommand(); // Assuming ListCommand handles the \"list\" command","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WhiteBear82"},"content":"        listCommand.execute(taskList, command, bot.getUi(), bot.getStorage());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"WhiteBear82"},"content":"        // Verify if the task list size is 1 after the \"list\" command is called","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"WhiteBear82"},"content":"    void testManageTaskList_withInvalidCommand() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"WhiteBear82"},"content":"        // Simulate an invalid command that should cause an error message","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"WhiteBear82"},"content":"        bot.setUi(new Ui()); // Use real UI for testing","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"WhiteBear82"},"content":"        bot.setStorage(new Storage()); // Use real storage","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"WhiteBear82"},"content":"        bot.setParser(new Parser());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"WhiteBear82"},"content":"        // Create a task list with an invalid command","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"WhiteBear82"},"content":"        String invalidCommand \u003d \"invalid\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"WhiteBear82"},"content":"        assertThrows(WBBException.class, () -\u003e {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"WhiteBear82"},"content":"            Command invalidCommandObj \u003d bot.getParser().parseCommand(invalidCommand);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"WhiteBear82"},"content":"            invalidCommandObj.execute(taskList, invalidCommand, bot.getUi(), bot.getStorage());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"WhiteBear82"},"content":"        });","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"WhiteBear82"},"content":"    void testRunProgram() throws WBBException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"WhiteBear82"},"content":"        // Test if the program runs correctly and exits with \"bye\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"WhiteBear82"},"content":"        bot.setUi(new Ui()); // Use real UI for testing","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"WhiteBear82"},"content":"        bot.setStorage(new Storage()); // Use real storage","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"WhiteBear82"},"content":"        bot.setParser(new Parser());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"WhiteBear82"},"content":"        // Simulate the \"bye\" command and check if the program exits","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"WhiteBear82"},"content":"        String command \u003d \"bye\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"WhiteBear82"},"content":"        Command exitCommand \u003d new ExitCommand(); // Assuming ExitCommand handles the \"bye\" command","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"WhiteBear82"},"content":"        exitCommand.execute(taskList, command, bot.getUi(), bot.getStorage());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"WhiteBear82"},"content":"        // Assert that the program exits after the \"bye\" command is executed","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"WhiteBear82"},"content":"        assertTrue(exitCommand.isExit());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"WhiteBear82"},"content":"    void testAddTask() throws WBBException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"WhiteBear82"},"content":"        // Test adding a task to the list","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"WhiteBear82"},"content":"        String command \u003d \"todo Read a book\"; // Simulate a \"todo\" task addition","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"WhiteBear82"},"content":"        Command addCommand \u003d new AddNewTodoCommand(); // Assuming AddNewTodoCommand handles \"todo\" task","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"WhiteBear82"},"content":"        addCommand.execute(taskList, command, bot.getUi(), bot.getStorage());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"WhiteBear82"},"content":"        // Verify if the task has been added to the task list","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(\"Read a book\", taskList.get(0).getDescription());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":107}},{"path":"src/test/java/wbb/command/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.command;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"import wbb.exception.WBBException;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"import wbb.storage.Storage;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.Deadline;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.Event;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.Task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.Todo;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"import wbb.ui.Ui;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"class CommandTest {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"    private Ui ui;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"    void setUp() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"        ui \u003d new Ui(); // Assume Ui has basic functionalities for printing","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"        storage \u003d new Storage(); // Mock or test file path","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"    void testAddTodoCommand() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"        AddCommand command \u003d new AddNewTodoCommand();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"        String input \u003d \"todo Read a book\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"        assertDoesNotThrow(() -\u003e command.execute(taskList, input, ui, storage));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(\"Read a book\", taskList.get(0).getDescription());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WhiteBear82"},"content":"    void testAddDeadlineCommand() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WhiteBear82"},"content":"        AddCommand command \u003d new AddNewDeadlineCommand();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WhiteBear82"},"content":"        String input \u003d \"deadline Submit assignment /by 2025-01-30\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WhiteBear82"},"content":"        assertDoesNotThrow(() -\u003e command.execute(taskList, input, ui, storage));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(\"Submit assignment\", taskList.get(0).getDescription());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(\"2025-01-30\", ((Deadline) taskList.get(0)).getBy());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WhiteBear82"},"content":"    void testAddEventCommand() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"WhiteBear82"},"content":"        AddCommand command \u003d new AddNewEventCommand();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"WhiteBear82"},"content":"        String input \u003d \"event Project meeting /from 2025-01-30 /to 2025-01-31\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WhiteBear82"},"content":"        assertDoesNotThrow(() -\u003e command.execute(taskList, input, ui, storage));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(\"Project meeting\", taskList.get(0).getDescription());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"WhiteBear82"},"content":"    void testChangeStatusCommand() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"WhiteBear82"},"content":"        ChangeStatusCommand command \u003d new ChangeStatusCommand();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"WhiteBear82"},"content":"        taskList.add(new Todo(\"Complete homework\"));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"WhiteBear82"},"content":"        taskList.get(0).setDone();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"WhiteBear82"},"content":"        String input \u003d \"unmark 1\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"WhiteBear82"},"content":"        assertDoesNotThrow(() -\u003e command.execute(taskList, input, ui, storage));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"WhiteBear82"},"content":"        assertFalse(taskList.get(0).isDone());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"WhiteBear82"},"content":"    void testDeleteCommand() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"WhiteBear82"},"content":"        DeleteCommand command \u003d new DeleteCommand();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"WhiteBear82"},"content":"        taskList.add(new Todo(\"Clean the house\"));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"WhiteBear82"},"content":"        String input \u003d \"delete 1\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"WhiteBear82"},"content":"        assertDoesNotThrow(() -\u003e command.execute(taskList, input, ui, storage));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"WhiteBear82"},"content":"        assertTrue(taskList.isEmpty());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"WhiteBear82"},"content":"    void testListCommand() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"WhiteBear82"},"content":"        ListCommand command \u003d new ListCommand();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"WhiteBear82"},"content":"        taskList.add(new Todo(\"Buy groceries\"));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"WhiteBear82"},"content":"        assertDoesNotThrow(() -\u003e command.execute(taskList, \"\", ui, storage));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"WhiteBear82"},"content":"    void testDisplayTasksCommand() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"WhiteBear82"},"content":"        DisplayTasksCommand command \u003d new DisplayTasksCommand();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"WhiteBear82"},"content":"        taskList.add(new Deadline(\"Exercise\", \"2025-01-25\")); // Assuming isDueToday uses the date","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"WhiteBear82"},"content":"        assertDoesNotThrow(() -\u003e command.execute(taskList, \"\", ui, storage));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"WhiteBear82"},"content":"    void testExitCommand() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"WhiteBear82"},"content":"        ExitCommand command \u003d new ExitCommand();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"WhiteBear82"},"content":"        assertDoesNotThrow(() -\u003e command.execute(taskList, \"\", ui, storage));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"WhiteBear82"},"content":"        assertTrue(command.isExit());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"WhiteBear82"},"content":"    void testInvalidAddCommand() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"WhiteBear82"},"content":"        AddCommand command \u003d new AddNewTodoCommand();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"WhiteBear82"},"content":"        String input \u003d \"todo\"; // Missing task description","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"WhiteBear82"},"content":"        assertThrows(WBBException.class, () -\u003e command.execute(taskList, input, ui, storage));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"WhiteBear82"},"content":"    void testInvalidDeleteCommand() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"WhiteBear82"},"content":"        DeleteCommand command \u003d new DeleteCommand();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"WhiteBear82"},"content":"        String input \u003d \"delete 5\"; // Index out of bounds","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"WhiteBear82"},"content":"        assertThrows(WBBException.class, () -\u003e command.execute(taskList, input, ui, storage));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"WhiteBear82"},"content":"    void testFindCommand_withMatchingTasks() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"WhiteBear82"},"content":"        // Add tasks to the task list","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"WhiteBear82"},"content":"        taskList.add(new Todo(\"Read book\"));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"WhiteBear82"},"content":"        taskList.add(new Deadline(\"Submit book review\", \"2025-01-30\"));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"WhiteBear82"},"content":"        taskList.add(new Event(\"Book club meeting\", \"2025-02-01\", \"2025-02-01\"));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"WhiteBear82"},"content":"        taskList.add(new Todo(\"Go for a walk\"));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"WhiteBear82"},"content":"        FindCommand command \u003d new FindCommand();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"WhiteBear82"},"content":"        String input \u003d \"find book\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"WhiteBear82"},"content":"        // Execute the command","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"WhiteBear82"},"content":"        assertDoesNotThrow(() -\u003e command.execute(taskList, input, ui, storage));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"WhiteBear82"},"content":"        // Check matching tasks","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"WhiteBear82"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d command.getMatchingTasks(\"book\", taskList);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(3, matchingTasks.size());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"WhiteBear82"},"content":"        assertTrue(matchingTasks.stream().anyMatch(task -\u003e task.getDescription().equals(\"Read book\")));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"WhiteBear82"},"content":"        assertTrue(matchingTasks.stream().anyMatch(task -\u003e task.getDescription().equals(\"Submit book review\")));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"WhiteBear82"},"content":"        assertTrue(matchingTasks.stream().anyMatch(task -\u003e task.getDescription().equals(\"Book club meeting\")));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"WhiteBear82"},"content":"    void testFindCommand_withNoMatchingTasks() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"WhiteBear82"},"content":"        // Add tasks to the task list","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"WhiteBear82"},"content":"        taskList.add(new Todo(\"Clean the house\"));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"WhiteBear82"},"content":"        taskList.add(new Deadline(\"Submit assignment\", \"2025-01-30\"));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"WhiteBear82"},"content":"        taskList.add(new Event(\"Team meeting\", \"2025-02-01\", \"2025-02-01\"));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"WhiteBear82"},"content":"        FindCommand command \u003d new FindCommand();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"WhiteBear82"},"content":"        String input \u003d \"find book\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"WhiteBear82"},"content":"        // Execute the command","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"WhiteBear82"},"content":"        assertDoesNotThrow(() -\u003e command.execute(taskList, input, ui, storage));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"WhiteBear82"},"content":"        // Check matching tasks","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"WhiteBear82"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d command.getMatchingTasks(\"book\", taskList);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"WhiteBear82"},"content":"        assertTrue(matchingTasks.isEmpty());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"WhiteBear82"},"content":"    void testFindCommand_withEmptyTaskList() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"WhiteBear82"},"content":"        FindCommand command \u003d new FindCommand();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"WhiteBear82"},"content":"        String input \u003d \"find book\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"WhiteBear82"},"content":"        // Execute the command","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"WhiteBear82"},"content":"        assertDoesNotThrow(() -\u003e command.execute(taskList, input, ui, storage));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"WhiteBear82"},"content":"        // Check matching tasks","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"WhiteBear82"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d command.getMatchingTasks(\"book\", taskList);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"WhiteBear82"},"content":"        assertTrue(matchingTasks.isEmpty());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":183}},{"path":"src/test/java/wbb/exception/WBBExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.exception;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"//CHECKSTYLE.OFF: AbbreviationAsWordInName","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"public class WBBExceptionTest {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"    //CHECKSTYLE.ON: AbbreviationAsWordInName","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"    //CHECKSTYLE.OFF: AbbreviationAsWordInName","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"    public void testWBBExceptionMessage() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"        //CHECKSTYLE.ON: AbbreviationAsWordInName","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"        String errorMessage \u003d \"This is a test error message.\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"        WBBException exception \u003d new WBBException(errorMessage);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"        assertNotNull(exception, \"The exception object should not be null.\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(errorMessage, exception.getMessage(), \"The error message should match the input message.\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"    //CHECKSTYLE.OFF: AbbreviationAsWordInName","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"    public void testWBBExceptionIsInstanceOfException() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"        //CHECKSTYLE.ON: AbbreviationAsWordInName","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"        String errorMessage \u003d \"Instance of Exception test.\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"        WBBException exception \u003d new WBBException(errorMessage);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"        assertInstanceOf(Exception.class, exception, \"WBBException should be an instance of Exception.\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"    //CHECKSTYLE.OFF: AbbreviationAsWordInName","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"    public void testWBBExceptionWithNullMessage() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"        //CHECKSTYLE.ON: AbbreviationAsWordInName","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"        WBBException exception \u003d new WBBException(null);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"        assertNull(exception.getMessage(), \"The error message should be null when constructed with a null message.\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":39}},{"path":"src/test/java/wbb/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.parser;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"import wbb.WinterBearBot;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"import wbb.command.AddCommand;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"import wbb.command.AddNewDeadlineCommand;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"import wbb.command.AddNewEventCommand;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"import wbb.command.AddNewTodoCommand;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"import wbb.command.ChangeStatusCommand;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"import wbb.command.Command;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"import wbb.command.DeleteCommand;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"import wbb.command.DisplayTasksCommand;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"import wbb.command.ExitCommand;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"import wbb.command.ListCommand;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"import wbb.exception.WBBException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"import wbb.storage.Storage;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.Task;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"import wbb.ui.Ui;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"public class ParserTest {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"    private Parser parser;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"    public void setUp() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"    public void testParseCommand_validCommands() throws WBBException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"        assertInstanceOf(ListCommand.class, parser.parseCommand(\"list\"));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"        assertInstanceOf(ExitCommand.class, parser.parseCommand(\"bye\"));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"        assertInstanceOf(ChangeStatusCommand.class, parser.parseCommand(\"mark\"));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"        assertInstanceOf(ChangeStatusCommand.class, parser.parseCommand(\"unmark\"));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WhiteBear82"},"content":"        assertInstanceOf(AddCommand.class, parser.parseCommand(\"todo\"));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WhiteBear82"},"content":"        assertInstanceOf(AddCommand.class, parser.parseCommand(\"deadline\"));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WhiteBear82"},"content":"        assertInstanceOf(AddCommand.class, parser.parseCommand(\"event\"));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WhiteBear82"},"content":"        assertInstanceOf(DeleteCommand.class, parser.parseCommand(\"delete\"));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WhiteBear82"},"content":"        assertInstanceOf(DisplayTasksCommand.class, parser.parseCommand(\"tasks\"));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WhiteBear82"},"content":"    public void testParseCommand_invalidCommand() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WhiteBear82"},"content":"        // Simulate an invalid command that should cause an error message","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WhiteBear82"},"content":"        WinterBearBot bot \u003d new WinterBearBot();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WhiteBear82"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WhiteBear82"},"content":"        bot.setUi(new Ui()); // Use real UI for testing","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WhiteBear82"},"content":"        bot.setStorage(new Storage()); // Use real storage","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WhiteBear82"},"content":"        bot.setParser(new Parser());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"WhiteBear82"},"content":"        String invalidCommand \u003d \"invalid\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WhiteBear82"},"content":"        assertThrows(WBBException.class, () -\u003e {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WhiteBear82"},"content":"            Command invalidCommandObj \u003d bot.getParser().parseCommand(invalidCommand);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"WhiteBear82"},"content":"            invalidCommandObj.execute(taskList, invalidCommand, bot.getUi(), bot.getStorage());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"WhiteBear82"},"content":"        });","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"WhiteBear82"},"content":"    public void testParseAddCommand_validTaskTypes() throws WBBException {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"WhiteBear82"},"content":"        assertInstanceOf(AddNewTodoCommand.class, parser.parseAddCommand(\"todo\"));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"WhiteBear82"},"content":"        assertInstanceOf(AddNewDeadlineCommand.class, parser.parseAddCommand(\"deadline\"));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"WhiteBear82"},"content":"        assertInstanceOf(AddNewEventCommand.class, parser.parseAddCommand(\"event\"));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"WhiteBear82"},"content":"    public void testParseAddCommand_invalidTaskType() throws WBBException {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"WhiteBear82"},"content":"        assertInstanceOf(AddNewEventCommand.class, parser.parseAddCommand(\"unknown\"));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":76}},{"path":"src/test/java/wbb/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.storage;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"public class StorageTest {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"    public void testSaveTasksDoesNotThrowException() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"        ArrayList\u003cwbb.task.Task\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"        assertDoesNotThrow(() -\u003e storage.saveTasks(tasks));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"    public void testLoadTasksReturnsEmptyListWhenNoFile() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"        ArrayList\u003cwbb.task.Task\u003e tasks \u003d storage.loadTasks();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"        assertNotNull(tasks);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"        assertTrue(tasks.isEmpty());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":27}},{"path":"src/test/java/wbb/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.task;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"import wbb.util.DateTimeUtility;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"class TaskTest {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"    void testTodoConstructor() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"        Task todo \u003d new Todo(\"Read a book\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(\"Read a book\", todo.getDescription());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"        assertFalse(todo.isDone(), \"Todo task should not be marked as done initially.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"    void testTodoToString() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"        Task todo \u003d new Todo(\"Read a book\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(\"[T][ ] Read a book\", todo.toString(), \"Todo string representation is incorrect.\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"        todo.setDone();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(\"[T][X] Read a book\", todo.toString(),","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"                \"Todo string representation after marking as done is incorrect.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"    void testTodoToFileFormat() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"        Task todo \u003d new Todo(\"Read a book\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(\"todo | false | Read a book\", todo.toFileFormat(), \"Todo file format is incorrect.\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"        todo.setDone();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(\"todo | true | Read a book\", todo.toFileFormat(),","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"                \"Todo file format after marking as done is incorrect.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"    void testDeadlineConstructor() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WhiteBear82"},"content":"        Task deadline \u003d new Deadline(\"Submit assignment\", \"2025-01-30\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(\"Submit assignment\", deadline.getDescription());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WhiteBear82"},"content":"        assertFalse(deadline.isDone(), \"Deadline task should not be marked as done initially.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WhiteBear82"},"content":"    void testDeadlineToString() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WhiteBear82"},"content":"        Task deadline \u003d new Deadline(\"Submit assignment\", \"2025-01-30\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(\"[D][ ] Submit assignment (by: 2025-01-30)\", deadline.toString(),","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WhiteBear82"},"content":"                \"Deadline string representation is incorrect.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WhiteBear82"},"content":"        deadline.setDone();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(\"[D][X] Submit assignment (by: 2025-01-30)\", deadline.toString(),","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WhiteBear82"},"content":"                \"Deadline string representation after marking as done is incorrect.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"WhiteBear82"},"content":"    void testDeadlineToFileFormat() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WhiteBear82"},"content":"        Task deadline \u003d new Deadline(\"Submit assignment\", \"2025-01-30\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(\"deadline | false | Submit assignment | 2025-01-30\", deadline.toFileFormat(),","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"WhiteBear82"},"content":"                \"Deadline file format is incorrect.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"WhiteBear82"},"content":"        deadline.setDone();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(\"deadline | true | Submit assignment | 2025-01-30\", deadline.toFileFormat(),","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"WhiteBear82"},"content":"                \"Deadline file format after marking as done is incorrect.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"WhiteBear82"},"content":"    void testEventConstructor() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"WhiteBear82"},"content":"        Task event \u003d new Event(\"Team meeting\", \"2025-02-01 10:00\", \"2025-02-01 12:00\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(\"Team meeting\", event.getDescription());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"WhiteBear82"},"content":"        assertFalse(event.isDone(), \"Event task should not be marked as done initially.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"WhiteBear82"},"content":"    void testEventToString() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"WhiteBear82"},"content":"        Task event \u003d new Event(\"Team meeting\", \"2025-02-01 10:00\", \"2025-02-01 12:00\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(\"[E][ ] Team meeting (from: 2025-02-01 10:00 to 2025-02-01 12:00)\", event.toString(),","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"WhiteBear82"},"content":"                \"Event string representation is incorrect.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"WhiteBear82"},"content":"        event.setDone();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(\"[E][X] Team meeting (from: 2025-02-01 10:00 to 2025-02-01 12:00)\", event.toString(),","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"WhiteBear82"},"content":"                \"Event string representation after marking as done is incorrect.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"WhiteBear82"},"content":"    void testEventToFileFormat() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"WhiteBear82"},"content":"        Task event \u003d new Event(\"Team meeting\", \"2025-02-01 10:00\", \"2025-02-01 12:00\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(\"event | false | Team meeting | 2025-02-01 10:00 | 2025-02-01 12:00\",","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"WhiteBear82"},"content":"                event.toFileFormat(), \"Event file format is incorrect.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"WhiteBear82"},"content":"        event.setDone();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(\"event | true | Team meeting | 2025-02-01 10:00 | 2025-02-01 12:00\",","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"WhiteBear82"},"content":"                event.toFileFormat(), \"Event file format after marking as done is incorrect.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"WhiteBear82"},"content":"    void testDeadlineIsDueToday() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"WhiteBear82"},"content":"        DateTimeUtility dateTimeUtility \u003d new DateTimeUtility();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"WhiteBear82"},"content":"        String today \u003d dateTimeUtility.formatDate(LocalDate.now()); // Ensures correct formatting for today","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"WhiteBear82"},"content":"        Task deadline \u003d new Deadline(\"Submit report\", today);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"WhiteBear82"},"content":"        assertTrue(deadline.isDueToday(), \"Deadline task should be due today if the deadline is today.\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"WhiteBear82"},"content":"    void testDeadlineIsNotDueToday() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"WhiteBear82"},"content":"        Task deadline \u003d new Deadline(\"Submit report\", \"2025-12-31\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"WhiteBear82"},"content":"        assertFalse(deadline.isDueToday(), \"Deadline task should not be due today if the deadline is not today.\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":107}},{"path":"src/test/java/wbb/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.ui;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"public class UiTest {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"    public void testPrettyPrint() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"        ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"        String message \u003d \"Test Message\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"        ui.prettyPrint(message);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"        String expectedOutput \u003d Ui.HORIZONTAL_LINE + message + \"\\n\" + Ui.HORIZONTAL_LINE;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"        assertTrue(outputStream.toString().contains(expectedOutput));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"    public void testDisplayWelcomeMessage() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"        ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"        ui.displayWelcomeMessage();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"        String expectedOutput \u003d \"\\tHello! I\u0027m WinterBearBot\\n\\tWhat can I do for you?\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"        assertTrue(outputStream.toString().contains(expectedOutput));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":36}},{"path":"src/test/java/wbb/util/DateTimeUtilityTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.util;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"public class DateTimeUtilityTest {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"    private final DateTimeUtility dtu \u003d new DateTimeUtility();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"    public void testTryParseDateAndOrTime_dateTime() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"        String input \u003d \"25/12/2025 1230\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"        String expected \u003d \"25th of December 2025, 12:30PM\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(expected, dtu.tryParseDateAndOrTime(input));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"    public void testTryParseDateAndOrTime_dateOnly() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"        String input \u003d \"25/12/2025\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"        String expected \u003d \"25th of December 2025\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(expected, dtu.tryParseDateAndOrTime(input));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"    public void testTryParseDateAndOrTime_timeOnly() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"        String input \u003d \"2359\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"        String expected \u003d dtu.formatDateTime(LocalDateTime.of(today, LocalTime.parse(\"23:59\")));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(expected, dtu.tryParseDateAndOrTime(input));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WhiteBear82"},"content":"    public void testTryParseDateAndOrTime_invalid() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WhiteBear82"},"content":"        String input \u003d \"invalid input\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(input, dtu.tryParseDateAndOrTime(input));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WhiteBear82"},"content":"    public void testTryParseDateTime_valid() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WhiteBear82"},"content":"        String input \u003d \"25/12/2025 1230\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WhiteBear82"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WhiteBear82"},"content":"        String expected \u003d dtu.formatDateTime(LocalDateTime.parse(input, formatter));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(expected, dtu.tryParseDateTime(input, formatter));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WhiteBear82"},"content":"    public void testTryParseDateTime_pastDateTime() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"WhiteBear82"},"content":"        String input \u003d \"25/12/2020 1230\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"WhiteBear82"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WhiteBear82"},"content":"        assertNull(dtu.tryParseDateTime(input, formatter));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"WhiteBear82"},"content":"    public void testTryParseDate_valid() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"WhiteBear82"},"content":"        String input \u003d \"25/12/2025\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"WhiteBear82"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"WhiteBear82"},"content":"        String expected \u003d dtu.formatDate(LocalDate.parse(input, formatter));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(expected, dtu.tryParseDate(input, formatter));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"WhiteBear82"},"content":"    public void testTryParseDate_pastDate() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"WhiteBear82"},"content":"        String input \u003d \"25/12/2020\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"WhiteBear82"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"WhiteBear82"},"content":"        assertNull(dtu.tryParseDate(input, formatter));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"WhiteBear82"},"content":"    public void testTryParseTime_valid() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"WhiteBear82"},"content":"        String input \u003d \"1500\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"WhiteBear82"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"WhiteBear82"},"content":"        LocalDateTime expectedTime \u003d LocalDateTime.of(LocalDate.now(), LocalTime.of(15, 0));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"WhiteBear82"},"content":"        if (expectedTime.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"WhiteBear82"},"content":"            assertNull(dtu.tryParseTime(input, formatter));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"WhiteBear82"},"content":"        } else {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"WhiteBear82"},"content":"            String expected \u003d dtu.formatDateTime(expectedTime);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"WhiteBear82"},"content":"            assertEquals(expected, dtu.tryParseTime(input, formatter));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"WhiteBear82"},"content":"    public void testOrdinalDay() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(\"1st\", dtu.ordinalDay(1));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(\"2nd\", dtu.ordinalDay(2));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(\"3rd\", dtu.ordinalDay(3));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(\"4th\", dtu.ordinalDay(4));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(\"11th\", dtu.ordinalDay(11));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(\"21st\", dtu.ordinalDay(21));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(\"22nd\", dtu.ordinalDay(22));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(\"23rd\", dtu.ordinalDay(23));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(\"31st\", dtu.ordinalDay(31));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"WhiteBear82"},"content":"    public void testRemoveOrdinalDay() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(\"1\", dtu.removeOrdinalDay(\"1st\"));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(\"2\", dtu.removeOrdinalDay(\"2nd\"));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(\"3\", dtu.removeOrdinalDay(\"3rd\"));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(\"4\", dtu.removeOrdinalDay(\"4th\"));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(\"11\", dtu.removeOrdinalDay(\"11th\"));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(\"21\", dtu.removeOrdinalDay(\"21st\"));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"WhiteBear82"},"content":"    public void testIsDueToday_true() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"WhiteBear82"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"WhiteBear82"},"content":"        String input \u003d dtu.ordinalDay(today.getDayOfMonth()) + \" of \"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"WhiteBear82"},"content":"                + today.format(DateTimeFormatter.ofPattern(\"MMMM yyyy\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"WhiteBear82"},"content":"        assertTrue(dtu.isDueToday(input));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"WhiteBear82"},"content":"    public void testIsDueToday_false() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"WhiteBear82"},"content":"        String input \u003d \"1st of January 2025\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"WhiteBear82"},"content":"        assertFalse(dtu.isDueToday(input));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":126}},{"path":"src/test/java/wbb/util/ValidatorTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package wbb.util;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"import wbb.exception.WBBException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.Task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.TaskType;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"import wbb.task.Todo;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"import wbb.ui.Ui;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"class ValidatorTest {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"    private final Validator validator \u003d new Validator();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"    private final Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"    void testValidateAndGetItemIdxValidIndex() throws WBBException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"        String command \u003d \"mark 3\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"        int result \u003d validator.validateAndGetItemIdx(command);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(2, result); // Should return 2 as 3 - 1 \u003d 2","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"    void testValidateAndGetItemIdxMissingIndex() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"        String command \u003d \"mark\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"        WBBException exception \u003d assertThrows(WBBException.class, () -\u003e validator.validateAndGetItemIdx(command));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"        assertTrue(exception.getMessage().contains(\"Missing item index\"));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"    void testValidateAndGetItemIdxNonIntegerIndex() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"        String command \u003d \"mark two\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"        WBBException exception \u003d assertThrows(WBBException.class, () -\u003e validator.validateAndGetItemIdx(command));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"        assertTrue(exception.getMessage().contains(\"Index must be integers only\"));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WhiteBear82"},"content":"    void testValidateAndGetItemIdxNonPositiveIndex() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WhiteBear82"},"content":"        String command \u003d \"mark 0\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WhiteBear82"},"content":"        WBBException exception \u003d assertThrows(WBBException.class, () -\u003e validator.validateAndGetItemIdx(command));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WhiteBear82"},"content":"        assertTrue(exception.getMessage().contains(\"Index must be greater than or equal to 1\"));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WhiteBear82"},"content":"    void testValidateItemIdxForTaskListValidIndex() throws WBBException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WhiteBear82"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WhiteBear82"},"content":"        taskList.add(new Todo(\"Task 1\"));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WhiteBear82"},"content":"        validator.validateItemIdxForTaskList(taskList, 0, ui); // No exception should be thrown","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WhiteBear82"},"content":"    void testValidateItemIdxForTaskListEmptyTaskList() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WhiteBear82"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"WhiteBear82"},"content":"        WBBException exception \u003d assertThrows(WBBException.class, ()","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"WhiteBear82"},"content":"                -\u003e validator.validateItemIdxForTaskList(taskList, 0, ui));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"WhiteBear82"},"content":"        assertTrue(exception.getMessage().contains(\"Task list is empty\"));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"WhiteBear82"},"content":"    void testValidateItemIdxForTaskListIndexOutOfBounds() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"WhiteBear82"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"WhiteBear82"},"content":"        taskList.add(new Todo(\"Task 1\"));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"WhiteBear82"},"content":"        WBBException exception \u003d assertThrows(WBBException.class, ()","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"WhiteBear82"},"content":"                -\u003e validator.validateItemIdxForTaskList(taskList, taskList.size(), ui));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"WhiteBear82"},"content":"        assertTrue(exception.getMessage().contains(\"Invalid item index\"));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"WhiteBear82"},"content":"    void testValidateAndGetTaskNameValidName() throws WBBException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"WhiteBear82"},"content":"        String command \u003d \"todo Read book\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"WhiteBear82"},"content":"        String result \u003d validator.validateAndGetTaskName(command, \"todo\", TaskType.TODO);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(\"Read book\", result);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"WhiteBear82"},"content":"    void testValidateAndGetTaskNameEmptyTaskName() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"WhiteBear82"},"content":"        String command \u003d \"todo \";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"WhiteBear82"},"content":"        WBBException exception \u003d assertThrows(WBBException.class, ()","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"WhiteBear82"},"content":"                -\u003e validator.validateAndGetTaskName(command, \"todo\", TaskType.TODO));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"WhiteBear82"},"content":"        assertTrue(exception.getMessage().contains(\"Missing task name\"));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"WhiteBear82"},"content":"    void testValidateTaskNameByValidTaskName() throws WBBException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"WhiteBear82"},"content":"        String taskName \u003d \"Submit report /by Monday\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"WhiteBear82"},"content":"        validator.validateTaskNameBy(taskName, TaskType.DEADLINE); // No exception should be thrown","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"WhiteBear82"},"content":"    void testValidateTaskNameByMissingBy() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"WhiteBear82"},"content":"        String taskName \u003d \"Submit report\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"WhiteBear82"},"content":"        WBBException exception \u003d assertThrows(WBBException.class, ()","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"WhiteBear82"},"content":"                -\u003e validator.validateTaskNameBy(taskName, TaskType.DEADLINE));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"WhiteBear82"},"content":"        assertTrue(exception.getMessage().contains(\"Missing \u0027/by\u0027\"));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"WhiteBear82"},"content":"    void testValidateAndGetTaskNameByValidInput() throws WBBException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"WhiteBear82"},"content":"        String taskName \u003d \"Submit report /by Monday\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"WhiteBear82"},"content":"        String[] result \u003d validator.validateAndGetTaskNameBy(taskName, TaskType.DEADLINE);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"WhiteBear82"},"content":"        assertArrayEquals(new String[]{\"Submit report \", \" Monday\"}, result);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"WhiteBear82"},"content":"    void testValidateAndGetTaskNameByMissingDeadline() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"WhiteBear82"},"content":"        String taskName \u003d \"Submit report /by\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"WhiteBear82"},"content":"        WBBException exception \u003d assertThrows(WBBException.class, ()","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"WhiteBear82"},"content":"                -\u003e validator.validateAndGetTaskNameBy(taskName, TaskType.DEADLINE));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"WhiteBear82"},"content":"        assertTrue(exception.getMessage().contains(\"Missing deadline\"));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"WhiteBear82"},"content":"    void testValidateFromToValidInput() throws WBBException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"WhiteBear82"},"content":"        String taskName \u003d \"Project work /from Monday /to Friday\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"WhiteBear82"},"content":"        validator.validateFromTo(taskName, TaskType.EVENT); // No exception should be thrown","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"WhiteBear82"},"content":"    void testValidateFromToMissingFromOrTo() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"WhiteBear82"},"content":"        String taskName \u003d \"Project work /from Monday\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"WhiteBear82"},"content":"        WBBException exception \u003d assertThrows(WBBException.class, ()","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"WhiteBear82"},"content":"                -\u003e validator.validateFromTo(taskName, TaskType.EVENT));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"WhiteBear82"},"content":"        assertTrue(exception.getMessage().contains(\"Missing \u0027/from\u0027 or \u0027/to\u0027\"));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"WhiteBear82"},"content":"    void testValidateFromToFromAfterTo() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"WhiteBear82"},"content":"        String taskName \u003d \"Project work /to Friday /from Monday\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"WhiteBear82"},"content":"        WBBException exception \u003d assertThrows(WBBException.class, ()","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"WhiteBear82"},"content":"                -\u003e validator.validateFromTo(taskName, TaskType.EVENT));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"WhiteBear82"},"content":"        assertTrue(exception.getMessage().contains(\"/from must come before /to\"));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":140}},{"path":"text-ui-test/data/wbb.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"todo | true | read book","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"todo | false | buy pajamas","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"deadline | false | buy goggles | Sunday","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"event | false | project meeting | Monday 2pm | 4pm","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"deadline | false | find cats | 30th of January 2025, 6:00PM","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"deadline | false | find dogs | 31st of January 2025","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":6}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"mark 0","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"unmark 0","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"mark -1","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"unmark -1","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"delete 0","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"delete -1","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"todo read book","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"deadline submit report /by tomorrow","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"event team meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"list","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"mark 1","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"mark 2","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"list","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"unmark 2 ","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"list","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"todo","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"todo buy pajamas","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"deadline","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"deadline /by","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"deadline /by Sunday","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"deadline buy goggles","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"deadline buy goggles /by Sunday","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"event","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"event /from /to","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"event /from Monday 2pm /to","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"event /from /to 4pm","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"event /from Monday 2pm /to 4pm","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"event project meeting","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"event project meeting /from","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"event project meeting /to","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"event project meeting /from Monday 2pm","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"event project meeting /to 4pm","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"event project meeting /from Monday 2pm /to","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"event project meeting /from /to 4pm","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"event project meeting /from Monday 2pm /to 4pm","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"mark 100","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"unmark 100","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"mark 2","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"mark 3","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"unmark 2","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WhiteBear82"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WhiteBear82"},"content":"delete 3","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WhiteBear82"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WhiteBear82"},"content":"delete 2","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WhiteBear82"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WhiteBear82"},"content":"tasks","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WhiteBear82"},"content":"deadline find cats /by 30/1/2025 1800","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WhiteBear82"},"content":"deadline find dogs /by 31/1/2025","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WhiteBear82"},"content":"tasks","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WhiteBear82"},"content":"bye","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":51}},{"path":"text-ui-test/input_bak.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"todo read book","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"deadline submit report /by tomorrow","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"event team meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"mark 1","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"mark 2","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"unmark 2 ","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"bye","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":10}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/wbb/*.java","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"java -classpath ../bin WinterBearBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":2,"-":36}}]
