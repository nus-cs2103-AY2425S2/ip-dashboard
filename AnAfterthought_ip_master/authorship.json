[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"# BPlusChatter project template","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _BPlusChatter_. Given below are instructions on how to use it.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"AnAfterthought"},"content":"1. After that, locate the `src/main/java/BPlusChatter.java` file, right-click it, and choose `Run BPlusChatter.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":3,"-":23}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"AnAfterthought"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"AnAfterthought"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"AnAfterthought"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"AnAfterthought"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"AnAfterthought"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"AnAfterthought"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"AnAfterthought"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"AnAfterthought"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"AnAfterthought"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"AnAfterthought"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"AnAfterthought"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"AnAfterthought"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"AnAfterthought"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"AnAfterthought"},"content":"    mainClass.set(\"bpluschatter.ui.Launcher\")","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"AnAfterthought"},"content":"    archiveBaseName \u003d \"bpluschatter\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"AnAfterthought"},"content":"    enableAssertions \u003d true;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"AnAfterthought"},"content":"checkstyle {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"AnAfterthought"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":23,"-":39}},{"path":"data/BPlusChatter.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"T | 1 | read | HIGH","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"D | 0 | homework | 2025-02-02 2359 | HIGH","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"# BPlusChatter User Guide","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"![screenshot](./Ui.png)","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":"A helpful chatbot designed to keep track of your tasks. \u003cbr\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":"With CLI commands, you can easily add, delete, view and track your tasks!","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"AnAfterthought"},"content":"## TIPS","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"AnAfterthought"},"content":"- Words in ```UPPER_CASE``` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"AnAfterthought"},"content":"e.g. in ```todo TASK```, ```TASK``` is a parameter which can be used as","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"AnAfterthought"},"content":"```todo homework```.\u003cbr\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"AnAfterthought"},"content":"- Items in square brackets are optional.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"AnAfterthought"},"content":"- e.g. ```find KEYWORD[,MORE_KEYWORDS]``` can be used as","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"AnAfterthought"},"content":"```find homework``` or ```find homework,shopping```.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"AnAfterthought"},"content":"- Parameters need to be in order.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"AnAfterthought"},"content":"- ```DATE``` format is YYYY-MM-DD.\u003cbr\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"AnAfterthought"},"content":"e.g. if you want to enter 3rd February 2025, use ```2025-02-03```","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"AnAfterthought"},"content":"- ```TIME``` format is 24-hour notation HHmm.\u003cbr\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"AnAfterthought"},"content":"e.g. if you want to enter 5.30pm, use ```1730```","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"AnAfterthought"},"content":"- ```PRIORITY``` levels accepted are ```HIGH```,```MEDIUM``` and ```LOW```.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"AnAfterthought"},"content":"## Adding todos: ```todo```","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"AnAfterthought"},"content":"Adds a task that you have to do but the task does not have a time constraint.\u003cbr\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"AnAfterthought"},"content":"Format: ```todo TASK PRIORITY```\u003cbr\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"AnAfterthought"},"content":"Example:\u003cbr\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"AnAfterthought"},"content":"```todo homework HIGH```","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"AnAfterthought"},"content":"## Adding deadlines: ```deadline```","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"AnAfterthought"},"content":"Adds a task that needs to be done by a certain date and time.\u003cbr\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"AnAfterthought"},"content":"Format: ```deadline TASK /by DATE TIME PRIORITY```\u003cbr\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"AnAfterthought"},"content":"Example:\u003cbr\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"AnAfterthought"},"content":"```deadline homework /by 2025-02-25 2359 HIGH```","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"AnAfterthought"},"content":"## Adding events: ```event```","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"AnAfterthought"},"content":"Adds a task that has a starting date and time and an ending date and time.\u003cbr\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"AnAfterthought"},"content":"Format: ```event TASK /from DATE TIME /to DATE TIME PRIORITY```\u003cbr\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"AnAfterthought"},"content":"Example:\u003cbr\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"AnAfterthought"},"content":"```event meeting /from 2025-02-25 1400 /to 2025-02-25 1600 HIGH```","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"AnAfterthought"},"content":"## List: ```list```","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"AnAfterthought"},"content":"Shows a list of tasks ordered in descending priority.\u003cbr\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"AnAfterthought"},"content":"Format: ```list```","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"AnAfterthought"},"content":"## Mark task: ```mark```","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"AnAfterthought"},"content":"Marks a task as complete.\u003cbr\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"AnAfterthought"},"content":"TASK_NUMBER is the number next to the task when the list is displayed.\u003cbr\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"AnAfterthought"},"content":"Format: ```mark TASK_NUMBER```\u003cbr\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"AnAfterthought"},"content":"Example:\u003cbr\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"AnAfterthought"},"content":"```mark 1```","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"AnAfterthought"},"content":"## Unmark task: ```unmark```","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"AnAfterthought"},"content":"Marks a task as incomplete.\u003cbr\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"AnAfterthought"},"content":"TASK_NUMBER is the number next to the task when the list is displayed.\u003cbr\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"AnAfterthought"},"content":"Format: ```unmark TASK_NUMBER```\u003cbr\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"AnAfterthought"},"content":"Example:\u003cbr\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"AnAfterthought"},"content":"```unmark 1```","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"AnAfterthought"},"content":"## Delete task: ```delete```","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"AnAfterthought"},"content":"Deletes a task.\u003cbr\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"AnAfterthought"},"content":"TASK_NUMBER is the number next to the task when the list is displayed.\u003cbr\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"AnAfterthought"},"content":"Format: ```delete TASK_NUMBER```\u003cbr\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"AnAfterthought"},"content":"Example:\u003cbr\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"AnAfterthought"},"content":"```delete 1```","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"AnAfterthought"},"content":"## Find tasks on date: ```on```","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"AnAfterthought"},"content":"Finds tasks that need to be completed by a certain date.\u003cbr\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"AnAfterthought"},"content":"This includes deadlines and event starting dates.\u003cbr\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"AnAfterthought"},"content":"Format: ```on DATE```\u003cbr\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"AnAfterthought"},"content":"Example:\u003cbr\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"AnAfterthought"},"content":"```on 2025-02-25```","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"AnAfterthought"},"content":"## Find tasks by keyword: ```find```","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"AnAfterthought"},"content":"Finds tasks with descriptions containing any of the given keywords.\u003cbr\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"AnAfterthought"},"content":"Format: ```find KEYWORD[,MORE_KEYWORDS]```","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"AnAfterthought"},"content":"- The search is case-insensitive. e.g. ```READ``` will match ```read```.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"AnAfterthought"},"content":"- To search multiple keywords, separate each keyword with a single comma.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"AnAfterthought"},"content":"e.g. ```find read,homework,meeting```","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"AnAfterthought"},"content":"- The order of the keywords does not matter. ","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"AnAfterthought"},"content":"e.g. ```read,homework``` will match ```homework,read```.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"AnAfterthought"},"content":"- Partial matches will be performed.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"AnAfterthought"},"content":"e.g. ```home``` will match ```homework```.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"AnAfterthought"},"content":"- Tasks matching one keyword will be returned.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"AnAfterthought"},"content":"e.g. ```read,homework``` will return ```read book```,```do homework```.\u003cbr\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"AnAfterthought"},"content":"Examples:\u003cbr\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"AnAfterthought"},"content":"- ```find home``` returns ```homework```","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"AnAfterthought"},"content":"- ```find read,homework``` returns ```homework,read```\u003cbr\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"AnAfterthought"},"content":"![screenshot](./find.png)","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"AnAfterthought"},"content":"## Exiting the program: ```bye```","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"AnAfterthought"},"content":"Exits the program.\u003cbr\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"AnAfterthought"},"content":"Format: ```bye```","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"AnAfterthought"},"content":"## Saving the data","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"AnAfterthought"},"content":"BPlusChatter automatically saves tasks after any successful command that changes the data.\u003cbr\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"AnAfterthought"},"content":"There is no need to save manually.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"AnAfterthought"},"content":"The save file can be found at ```[JAR file location]/data/BPlusChatter.txt```.","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":83,"-":14}},{"path":"src/main/java/bpluschatter/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"package bpluschatter.command;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.enumerations.Priority;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.exception.InvalidDeadlineException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.exception.InvalidDeleteException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.exception.InvalidEventException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.exception.InvalidFileFormatException;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.exception.InvalidMarkException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.exception.InvalidOnException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.exception.InvalidToDoException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.exception.UnknownCommandException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.exception.UnknownPriorityException;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.task.Deadline;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.task.Event;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.task.Task;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.task.TaskList;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.task.ToDo;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.ui.Ui;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"AnAfterthought"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"AnAfterthought"},"content":" * Represents a parser to make sense of user commands.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"AnAfterthought"},"content":" * The parser can also make sense of tasks from save files.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"AnAfterthought"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"AnAfterthought"},"content":"public class Parser {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"AnAfterthought"},"content":"    private final DateTimeFormatter dateTimeFormatter;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"AnAfterthought"},"content":"     * Constructor for Parser.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"AnAfterthought"},"content":"     * Sets the DateTimeFormatter object for parsing date and time strings.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"AnAfterthought"},"content":"    public Parser() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"AnAfterthought"},"content":"        this.dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"AnAfterthought"},"content":"    private String[] getDescriptionAndPriorityAsStrings(String details) throws UnknownPriorityException {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"AnAfterthought"},"content":"        int indexOfLastSpace \u003d details.lastIndexOf(\" \");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"AnAfterthought"},"content":"        if (indexOfLastSpace \u003d\u003d -1) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"AnAfterthought"},"content":"            throw new UnknownPriorityException();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"AnAfterthought"},"content":"        return new String[]{details.substring(0, indexOfLastSpace), details.substring(indexOfLastSpace + 1)};","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"AnAfterthought"},"content":"    private Priority getPriority(String details) throws UnknownPriorityException {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"AnAfterthought"},"content":"        switch (details.toLowerCase()) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"AnAfterthought"},"content":"        case \"high\" -\u003e {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"AnAfterthought"},"content":"            return Priority.HIGH;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"AnAfterthought"},"content":"        case \"medium\" -\u003e {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"AnAfterthought"},"content":"            return Priority.MEDIUM;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"AnAfterthought"},"content":"        case \"low\" -\u003e {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"AnAfterthought"},"content":"            return Priority.LOW;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"AnAfterthought"},"content":"        default -\u003e throw new UnknownPriorityException();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"AnAfterthought"},"content":"     * Returns updated list of tasks after adding ToDo task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"AnAfterthought"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"AnAfterthought"},"content":"     * @param ui UI object.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"AnAfterthought"},"content":"     * @param details Details of todo command.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"AnAfterthought"},"content":"     * @return Updated list of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"AnAfterthought"},"content":"     * @throws InvalidToDoException If details is empty.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"AnAfterthought"},"content":"     * @throws UnknownPriorityException If priority does not exist.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"AnAfterthought"},"content":"    private TaskList parseToDo(TaskList tasks, Ui ui, String details) throws InvalidToDoException,","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"AnAfterthought"},"content":"            UnknownPriorityException {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"AnAfterthought"},"content":"        assert ui !\u003d null : \"There should be a UI object.\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"AnAfterthought"},"content":"        if (details.isEmpty()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"AnAfterthought"},"content":"            throw new InvalidToDoException();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"AnAfterthought"},"content":"        String[] detailParts \u003d getDescriptionAndPriorityAsStrings(details);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"AnAfterthought"},"content":"        Priority priority \u003d getPriority(detailParts[1]);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"AnAfterthought"},"content":"        ToDo toDo \u003d new ToDo(detailParts[0], priority);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"AnAfterthought"},"content":"        TaskList newTasks \u003d tasks.add(toDo);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"AnAfterthought"},"content":"        ui.setAddMessage(toDo, tasks.getSize());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"AnAfterthought"},"content":"        assert newTasks !\u003d null : \"Tasklist object should not be empty\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"AnAfterthought"},"content":"        return newTasks;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"AnAfterthought"},"content":"     * Returns updated list of tasks after adding Deadline task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"AnAfterthought"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"AnAfterthought"},"content":"     * @param ui UI object.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"AnAfterthought"},"content":"     * @param details Details of deadline command.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"AnAfterthought"},"content":"     * @return Updated list of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"AnAfterthought"},"content":"     * @throws DateTimeParseException If date and time format is wrong.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"AnAfterthought"},"content":"     * @throws InvalidDeadlineException If deadline command is incomplete.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"AnAfterthought"},"content":"     * @throws UnknownPriorityException If priority does not exist.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"AnAfterthought"},"content":"    private TaskList parseDeadline(TaskList tasks, Ui ui, String details) throws DateTimeParseException,","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"AnAfterthought"},"content":"            InvalidDeadlineException, UnknownPriorityException {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"AnAfterthought"},"content":"        assert ui !\u003d null : \"There should be a UI object.\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"AnAfterthought"},"content":"        String[] detailParts \u003d details.split(\" /by \", 2);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"AnAfterthought"},"content":"        if (detailParts.length !\u003d 2) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"AnAfterthought"},"content":"            throw new InvalidDeadlineException();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"AnAfterthought"},"content":"        String[] byAndPriorityStrings \u003d getDescriptionAndPriorityAsStrings(detailParts[1]);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"AnAfterthought"},"content":"        Priority priority \u003d getPriority(byAndPriorityStrings[1]);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"AnAfterthought"},"content":"        LocalDateTime by \u003d LocalDateTime.parse(byAndPriorityStrings[0], dateTimeFormatter);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"AnAfterthought"},"content":"        Deadline deadline \u003d new Deadline(detailParts[0], priority, by);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"AnAfterthought"},"content":"        TaskList newTasks \u003d tasks.add(deadline);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"AnAfterthought"},"content":"        ui.setAddMessage(deadline, tasks.getSize());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"AnAfterthought"},"content":"        assert newTasks !\u003d null : \"Tasklist object should not be empty\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"AnAfterthought"},"content":"        return newTasks;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"AnAfterthought"},"content":"     * Returns updated list of tasks after adding Event task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"AnAfterthought"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"AnAfterthought"},"content":"     * @param ui UI object.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"AnAfterthought"},"content":"     * @param details Details of event command.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"AnAfterthought"},"content":"     * @return Updated list of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"AnAfterthought"},"content":"     * @throws DateTimeParseException If date and time format is wrong.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"AnAfterthought"},"content":"     * @throws InvalidEventException If event command is incomplete.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"AnAfterthought"},"content":"     * @throws UnknownPriorityException If priority does not exist.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"AnAfterthought"},"content":"    private TaskList parseEvent(TaskList tasks, Ui ui, String details) throws DateTimeParseException,","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"AnAfterthought"},"content":"            InvalidEventException, UnknownPriorityException {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"AnAfterthought"},"content":"        assert ui !\u003d null : \"There should be a UI object.\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"AnAfterthought"},"content":"        if (details.isEmpty()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"AnAfterthought"},"content":"            throw new InvalidEventException();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"AnAfterthought"},"content":"        String[] detailParts \u003d details.split(\" /from \", 2);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"AnAfterthought"},"content":"        if (detailParts.length !\u003d 2) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"AnAfterthought"},"content":"            throw new InvalidEventException();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"AnAfterthought"},"content":"        String[] fromToAndPriorityStrings \u003d detailParts[1].split(\" /to \", 2);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"AnAfterthought"},"content":"        if (fromToAndPriorityStrings.length !\u003d 2) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"AnAfterthought"},"content":"            throw new InvalidEventException();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"AnAfterthought"},"content":"        String[] toAndPriorityStrings \u003d getDescriptionAndPriorityAsStrings(fromToAndPriorityStrings[1]);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"AnAfterthought"},"content":"        Priority priority \u003d getPriority(toAndPriorityStrings[1]);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"AnAfterthought"},"content":"        LocalDateTime from \u003d LocalDateTime.parse(fromToAndPriorityStrings[0], dateTimeFormatter);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"AnAfterthought"},"content":"        LocalDateTime to \u003d LocalDateTime.parse(toAndPriorityStrings[0], dateTimeFormatter);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"AnAfterthought"},"content":"        Event event \u003d new Event(detailParts[0], priority, from, to);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"AnAfterthought"},"content":"        TaskList newTasks \u003d tasks.add(event);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"AnAfterthought"},"content":"        ui.setAddMessage(event, tasks.getSize());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"AnAfterthought"},"content":"        assert newTasks !\u003d null : \"Tasklist object should not be empty\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"AnAfterthought"},"content":"        return newTasks;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"AnAfterthought"},"content":"     * Returns updated list of tasks after adding marking/unmarking a task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"AnAfterthought"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"AnAfterthought"},"content":"     * @param ui UI object.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"AnAfterthought"},"content":"     * @param details Index of task to be marked/unmarked.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"AnAfterthought"},"content":"     * @param isDone Is true if task is marked as completed, false if unmarked.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"AnAfterthought"},"content":"     * @return Updated list of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"AnAfterthought"},"content":"     * @throws InvalidMarkException If index is not a number or index larger than number of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"AnAfterthought"},"content":"    private TaskList parseMark(TaskList tasks, Ui ui, boolean isDone, String details) throws InvalidMarkException {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"AnAfterthought"},"content":"        assert ui !\u003d null : \"There should be a UI object.\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"AnAfterthought"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"AnAfterthought"},"content":"            int taskIndex \u003d Integer.parseInt(details) - 1;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"AnAfterthought"},"content":"            tasks.get(taskIndex).setIsDone(isDone);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"AnAfterthought"},"content":"            ui.setMarkMessage(tasks.get(taskIndex));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"AnAfterthought"},"content":"            return tasks;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"AnAfterthought"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"AnAfterthought"},"content":"            throw new InvalidMarkException();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"AnAfterthought"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"AnAfterthought"},"content":"            throw new InvalidMarkException();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"AnAfterthought"},"content":"     * Returns updated list of tasks after adding deleting a task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"AnAfterthought"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"AnAfterthought"},"content":"     * @param ui UI object.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"AnAfterthought"},"content":"     * @param details Index of task to be deleted.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"AnAfterthought"},"content":"     * @return Updated list of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"AnAfterthought"},"content":"     * @throws InvalidDeleteException If index is not a number or index larger than number of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"AnAfterthought"},"content":"    private TaskList parseDelete(TaskList tasks, Ui ui, String details) throws InvalidDeleteException {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"AnAfterthought"},"content":"        assert ui !\u003d null : \"There should be a UI object.\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"AnAfterthought"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"AnAfterthought"},"content":"            int taskIndex \u003d Integer.parseInt(details) - 1;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"AnAfterthought"},"content":"            Task task \u003d tasks.get(taskIndex);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"AnAfterthought"},"content":"            TaskList newTasks \u003d tasks.remove(taskIndex);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"AnAfterthought"},"content":"            ui.setDeleteMessage(task, newTasks.getSize());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"AnAfterthought"},"content":"            return newTasks;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"AnAfterthought"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"AnAfterthought"},"content":"            throw new InvalidDeleteException();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"AnAfterthought"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"AnAfterthought"},"content":"            throw new InvalidDeleteException();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"AnAfterthought"},"content":"     * Prints tasks that occur on specific date.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"AnAfterthought"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"AnAfterthought"},"content":"     * @param details Date in format yyyy-MM-dd.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"AnAfterthought"},"content":"     * @throws InvalidOnException If details is empty.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"AnAfterthought"},"content":"     * @throws DateTimeParseException If date format is wrong or on command is incomplete or incorrect.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"AnAfterthought"},"content":"    private void parseOn(TaskList tasks, Ui ui, String details) throws InvalidOnException, DateTimeParseException {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"AnAfterthought"},"content":"        if (details.isEmpty()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"AnAfterthought"},"content":"            throw new InvalidOnException();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"AnAfterthought"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(details + \" 0000\", dateTimeFormatter);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"AnAfterthought"},"content":"        TaskList validTasks \u003d new TaskList(new ArrayList\u003c\u003e(tasks.toStream()","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"AnAfterthought"},"content":"                .filter(x -\u003e x.isSameDate(dateTime))","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"AnAfterthought"},"content":"                .toList()));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"AnAfterthought"},"content":"        ui.setOnMessage(validTasks);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"AnAfterthought"},"content":"     * Returns whether a string contains any string from a given array.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"AnAfterthought"},"content":"     * @param task Task object to be inspected.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"AnAfterthought"},"content":"     * @param keywords Keywords to be found.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"AnAfterthought"},"content":"     * @return True if string contains any keyword, false otherwise.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"AnAfterthought"},"content":"    private boolean doesStringContainItemFromArray(Task task, String ... keywords) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"AnAfterthought"},"content":"        return Arrays.stream(keywords).map(x -\u003e x.toLowerCase())","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"AnAfterthought"},"content":"                .anyMatch(task.toString().toLowerCase()::contains);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"AnAfterthought"},"content":"     * Prints tasks containing specified keyword.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"AnAfterthought"},"content":"     * @param tasks List of tasks currently available.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"AnAfterthought"},"content":"     * @param ui UI object.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"AnAfterthought"},"content":"     * @param keywords Keywords to be found.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"AnAfterthought"},"content":"    private void parseFind(TaskList tasks, Ui ui, String ... keywords) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"AnAfterthought"},"content":"        assert ui !\u003d null : \"There should be a UI object.\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"AnAfterthought"},"content":"        TaskList validTasks \u003d new TaskList(new ArrayList\u003c\u003e(tasks.toStream()","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"AnAfterthought"},"content":"                .filter(x -\u003e doesStringContainItemFromArray(x, keywords))","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"AnAfterthought"},"content":"                .toList()));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"AnAfterthought"},"content":"        ui.setFindMessage(validTasks);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"AnAfterthought"},"content":"     * Returns updated TaskList after modification commands.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"AnAfterthought"},"content":"     * Returns same TaskList after commands that do not modify TaskList.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"AnAfterthought"},"content":"     * @param userInput Command.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"AnAfterthought"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"AnAfterthought"},"content":"     * @param ui UI object.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"AnAfterthought"},"content":"     * @return Updated list of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"AnAfterthought"},"content":"    public TaskList parseCommand(String userInput, TaskList tasks, Ui ui) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"AnAfterthought"},"content":"        String[] taskParts \u003d userInput.split(\" \", 2);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"AnAfterthought"},"content":"        String command \u003d taskParts[0];","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"AnAfterthought"},"content":"        String details \u003d \"\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"AnAfterthought"},"content":"        if (taskParts.length \u003d\u003d 2) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"AnAfterthought"},"content":"            details \u003d taskParts[1];","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"AnAfterthought"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"AnAfterthought"},"content":"            switch (command.toLowerCase()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"AnAfterthought"},"content":"            case \"list\" -\u003e {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"AnAfterthought"},"content":"                ui.setList(tasks);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"AnAfterthought"},"content":"                return tasks;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"AnAfterthought"},"content":"            }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"AnAfterthought"},"content":"            case \"todo\" -\u003e {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"AnAfterthought"},"content":"                return parseToDo(tasks, ui, details);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"AnAfterthought"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"AnAfterthought"},"content":"            case \"deadline\" -\u003e {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"AnAfterthought"},"content":"                return parseDeadline(tasks, ui, details);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"AnAfterthought"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"AnAfterthought"},"content":"            case \"event\" -\u003e {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"AnAfterthought"},"content":"                return parseEvent(tasks, ui, details);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"AnAfterthought"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"AnAfterthought"},"content":"            case \"mark\" -\u003e {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"AnAfterthought"},"content":"                return parseMark(tasks, ui, true, details);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"AnAfterthought"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"AnAfterthought"},"content":"            case \"unmark\" -\u003e {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"AnAfterthought"},"content":"                return parseMark(tasks, ui, false, details);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"AnAfterthought"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"AnAfterthought"},"content":"            case \"delete\" -\u003e {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"AnAfterthought"},"content":"                return parseDelete(tasks, ui, details);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"AnAfterthought"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"AnAfterthought"},"content":"            case \"on\" -\u003e {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"AnAfterthought"},"content":"                parseOn(tasks, ui, details);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"AnAfterthought"},"content":"                return tasks;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"AnAfterthought"},"content":"            }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"AnAfterthought"},"content":"            case \"find\" -\u003e {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"AnAfterthought"},"content":"                parseFind(tasks, ui, details.split(\",\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"AnAfterthought"},"content":"                return tasks;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"AnAfterthought"},"content":"            }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"AnAfterthought"},"content":"            default -\u003e throw new UnknownCommandException();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"AnAfterthought"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"AnAfterthought"},"content":"        } catch (UnknownCommandException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"AnAfterthought"},"content":"            ui.setUnknownCommandError();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"AnAfterthought"},"content":"        } catch (InvalidToDoException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"AnAfterthought"},"content":"            ui.setToDoError();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"AnAfterthought"},"content":"        } catch (InvalidDeadlineException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"AnAfterthought"},"content":"            ui.setDeadlineError();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"AnAfterthought"},"content":"        } catch (InvalidEventException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"AnAfterthought"},"content":"            ui.setEventError();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"AnAfterthought"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"AnAfterthought"},"content":"            ui.setDateTimeFormatError();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"AnAfterthought"},"content":"        } catch (InvalidMarkException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"AnAfterthought"},"content":"            ui.setMarkError(tasks.getSize());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"AnAfterthought"},"content":"        } catch (InvalidDeleteException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"AnAfterthought"},"content":"            ui.setDeleteError(tasks.getSize());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"AnAfterthought"},"content":"        } catch (InvalidOnException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"AnAfterthought"},"content":"            ui.setOnError();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"AnAfterthought"},"content":"        } catch (UnknownPriorityException e) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"AnAfterthought"},"content":"            ui.setPriorityError();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"AnAfterthought"},"content":"        return tasks;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"AnAfterthought"},"content":"     * Returns task parsed from a line in the save file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"AnAfterthought"},"content":"     * @param taskString String from save file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"AnAfterthought"},"content":"     * @return Task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"AnAfterthought"},"content":"     * @throws InvalidFileFormatException If format of string is incorrect.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"AnAfterthought"},"content":"     * @throws UnknownPriorityException If priority is invalid.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"AnAfterthought"},"content":"    public Task parseFromFile(String taskString) throws InvalidFileFormatException,","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"AnAfterthought"},"content":"            UnknownPriorityException {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"AnAfterthought"},"content":"        String[] taskParts \u003d taskString.split(\" \\\\| \");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"AnAfterthought"},"content":"        Priority priority \u003d getPriority(taskParts[taskParts.length - 1]);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"AnAfterthought"},"content":"        Task newTask;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"AnAfterthought"},"content":"        switch (taskParts[0]) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"AnAfterthought"},"content":"        case \"T\" -\u003e newTask \u003d new ToDo(taskParts[2], priority);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"AnAfterthought"},"content":"        case \"D\" -\u003e {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"AnAfterthought"},"content":"            LocalDateTime by \u003d LocalDateTime.parse(taskParts[3], dateTimeFormatter);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"AnAfterthought"},"content":"            newTask \u003d new Deadline(taskParts[2], priority, by);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"AnAfterthought"},"content":"        case \"E\" -\u003e {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"AnAfterthought"},"content":"            LocalDateTime from \u003d LocalDateTime.parse(taskParts[3], dateTimeFormatter);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"AnAfterthought"},"content":"            LocalDateTime to \u003d LocalDateTime.parse(taskParts[4], dateTimeFormatter);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"AnAfterthought"},"content":"            newTask \u003d new Event(taskParts[2], priority, from, to);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"AnAfterthought"},"content":"        default -\u003e {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"AnAfterthought"},"content":"            throw new InvalidFileFormatException();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"AnAfterthought"},"content":"        if (taskParts[1].equals(\"1\")) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"AnAfterthought"},"content":"            newTask.setIsDone(true);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"AnAfterthought"},"content":"        } else if (taskParts[1].equals(\"0\")) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"AnAfterthought"},"content":"            return newTask;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"AnAfterthought"},"content":"        } else {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"AnAfterthought"},"content":"            throw new InvalidFileFormatException();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"AnAfterthought"},"content":"        return newTask;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":374}},{"path":"src/main/java/bpluschatter/enumerations/Priority.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"package bpluschatter.enumerations;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"/**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":" * Priorities to organize tasks.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":" */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":"public enum Priority {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":"    HIGH,","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"AnAfterthought"},"content":"    MEDIUM,","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"AnAfterthought"},"content":"    LOW","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-02-13","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":10}},{"path":"src/main/java/bpluschatter/exception/InvalidDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"package bpluschatter.exception;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":" * Represents an exception when deadline command is incorrect or incomplete.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":"public class InvalidDeadlineException extends Exception {","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-01-18","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":7}},{"path":"src/main/java/bpluschatter/exception/InvalidDeleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"package bpluschatter.exception;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":" * Represents an exception when delete command is incorrect or incomplete.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":"public class InvalidDeleteException extends Exception {","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-01-18","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":7}},{"path":"src/main/java/bpluschatter/exception/InvalidEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"package bpluschatter.exception;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":" * Represents an exception when event command is incorrect or incomplete.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":"public class InvalidEventException extends Exception {","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-01-18","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":7}},{"path":"src/main/java/bpluschatter/exception/InvalidFileFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"package bpluschatter.exception;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"/**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":" * Represents an exception when task saved in file is of the incorrect format.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":" */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":"public class InvalidFileFormatException extends Exception {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":7}},{"path":"src/main/java/bpluschatter/exception/InvalidMarkException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"package bpluschatter.exception;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":" * Represents an exception when mark/unmark command is incorrect or incomplete.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":"public class InvalidMarkException extends Exception {","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-01-18","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":7}},{"path":"src/main/java/bpluschatter/exception/InvalidOnException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"package bpluschatter.exception;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":" * Represents an exception when on command is incorrect or incomplete.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":"public class InvalidOnException extends RuntimeException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":7}},{"path":"src/main/java/bpluschatter/exception/InvalidToDoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"package bpluschatter.exception;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":" * Represents an exception when todo command is incorrect or incomplete.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":"public class InvalidToDoException extends Exception {","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-01-18","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":7}},{"path":"src/main/java/bpluschatter/exception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"package bpluschatter.exception;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":" * Represents an exception when an unknown command is given.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":"public class UnknownCommandException extends Exception {","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-01-18","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":7}},{"path":"src/main/java/bpluschatter/exception/UnknownPriorityException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"package bpluschatter.exception;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"/**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":" * Represents an exception when an unknown priority is given.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":" */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":"public class UnknownPriorityException extends RuntimeException {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-02-13","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":7}},{"path":"src/main/java/bpluschatter/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"package bpluschatter.storage;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"import java.io.File;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"AnAfterthought"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.command.Parser;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.exception.InvalidFileFormatException;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.exception.UnknownPriorityException;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.task.Task;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.task.TaskList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"AnAfterthought"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"AnAfterthought"},"content":" * Saves tasks into a file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"AnAfterthought"},"content":" * Loads tasks from a save file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"AnAfterthought"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"AnAfterthought"},"content":"public class Storage {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"AnAfterthought"},"content":"    private final String filePath;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"AnAfterthought"},"content":"    private final Parser parser;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"AnAfterthought"},"content":"     * Constructor for Storage.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"AnAfterthought"},"content":"     * @param filePath Path of save file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"AnAfterthought"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"AnAfterthought"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"AnAfterthought"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"AnAfterthought"},"content":"        createFile();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"AnAfterthought"},"content":"     * Creates file if it does not exist","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"AnAfterthought"},"content":"    private void createFile() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"AnAfterthought"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"AnAfterthought"},"content":"        try {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"AnAfterthought"},"content":"            if (!file.exists()) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"AnAfterthought"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"AnAfterthought"},"content":"                file.createNewFile();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"AnAfterthought"},"content":"            }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"AnAfterthought"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"AnAfterthought"},"content":"            System.out.println(\"Error creating file\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"AnAfterthought"},"content":"     * Returns tasks from save file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"AnAfterthought"},"content":"     * @return List of tasks after retrieving them from save file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"AnAfterthought"},"content":"     * @throws IOException If error occurs during file creation.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"AnAfterthought"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"AnAfterthought"},"content":"        try {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"AnAfterthought"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"AnAfterthought"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"AnAfterthought"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"AnAfterthought"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"AnAfterthought"},"content":"                tasks.add(parser.parseFromFile(scanner.nextLine()));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"AnAfterthought"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"AnAfterthought"},"content":"            return tasks;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"AnAfterthought"},"content":"        } catch (InvalidFileFormatException e) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"AnAfterthought"},"content":"            System.out.println(\"File format corrupted.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"AnAfterthought"},"content":"            return new ArrayList\u003cTask\u003e();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"AnAfterthought"},"content":"        } catch (UnknownPriorityException e) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"AnAfterthought"},"content":"            System.out.println(\"Invalid priority detected.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"AnAfterthought"},"content":"            return new ArrayList\u003cTask\u003e();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"AnAfterthought"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"AnAfterthought"},"content":"            System.out.println(\"Number of fields is incorrect.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"AnAfterthought"},"content":"            return new ArrayList\u003cTask\u003e();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"AnAfterthought"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"AnAfterthought"},"content":"            System.out.println(\"Date and time format is incorrect\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"AnAfterthought"},"content":"            return new ArrayList\u003cTask\u003e();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"AnAfterthought"},"content":"     * Saves tasks into save file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"AnAfterthought"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"AnAfterthought"},"content":"     * @throws IOException If error occurs while writing to file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"AnAfterthought"},"content":"    public void save(TaskList tasks) throws IOException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"AnAfterthought"},"content":"        FileWriter fileWriter \u003d new FileWriter(filePath);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"AnAfterthought"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"AnAfterthought"},"content":"            fileWriter.write(tasks.get(i).toFileFormat() + System.lineSeparator());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"AnAfterthought"},"content":"        fileWriter.close();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":93}},{"path":"src/main/java/bpluschatter/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"package bpluschatter.task;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.enumerations.Priority;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"AnAfterthought"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"AnAfterthought"},"content":" * Represents a deadline task","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"AnAfterthought"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"AnAfterthought"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"AnAfterthought"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"AnAfterthought"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"AnAfterthought"},"content":"     * @param description Details of task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"AnAfterthought"},"content":"     * @param by Date and time to complete task by.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"AnAfterthought"},"content":"    public Deadline(String description, Priority priority, LocalDateTime by) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"AnAfterthought"},"content":"        super(description, priority);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"AnAfterthought"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"AnAfterthought"},"content":"     * Returns string to be saved in file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"AnAfterthought"},"content":"     * @return String to be saved in file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"AnAfterthought"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"AnAfterthought"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"AnAfterthought"},"content":"        String task \u003d \"D |\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"AnAfterthought"},"content":"        task +\u003d isDone ? \" 1 | \" : \" 0 | \";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"AnAfterthought"},"content":"        return task + this.description + \" | \" + this.by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"AnAfterthought"},"content":"                + \" | \" + this.priority.toString();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"AnAfterthought"},"content":"     * Returns if task\u0027s date is the same as specified date.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"AnAfterthought"},"content":"     * @param dateTime Date and time to be compared.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"AnAfterthought"},"content":"     * @return If task\u0027s date is the same as specified date.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"AnAfterthought"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"AnAfterthought"},"content":"    public boolean isSameDate(LocalDateTime dateTime) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"AnAfterthought"},"content":"        return this.by.toLocalDate().equals(dateTime.toLocalDate());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"AnAfterthought"},"content":"     * Returns details of task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"AnAfterthought"},"content":"     * @return Details of task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"AnAfterthought"},"content":"    @Override","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"AnAfterthought"},"content":"    public String toString() {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"AnAfterthought"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"AnAfterthought"},"content":"                + this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\"))","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"AnAfterthought"},"content":"                .replace(\"AM\", \"am\")","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"AnAfterthought"},"content":"                .replace(\"PM\", \"pm\") + \")\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-01-17","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":62}},{"path":"src/main/java/bpluschatter/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"package bpluschatter.task;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.enumerations.Priority;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"AnAfterthought"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"AnAfterthought"},"content":" * Represents an event task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"AnAfterthought"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"AnAfterthought"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"AnAfterthought"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"AnAfterthought"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"AnAfterthought"},"content":"     * Constructor for Event.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"AnAfterthought"},"content":"     * @param description Details of task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"AnAfterthought"},"content":"     * @param from Start of event.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"AnAfterthought"},"content":"     * @param to End of event.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"AnAfterthought"},"content":"    public Event(String description, Priority priority, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"AnAfterthought"},"content":"        super(description, priority);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"AnAfterthought"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"AnAfterthought"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"AnAfterthought"},"content":"     * Returns string to be saved in file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"AnAfterthought"},"content":"     * @return String to be saved in file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"AnAfterthought"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"AnAfterthought"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"AnAfterthought"},"content":"        String task \u003d \"E |\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"AnAfterthought"},"content":"        task +\u003d isDone ? \" 1 | \" : \" 0 | \";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"AnAfterthought"},"content":"        return task + this.description + \" | \"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"AnAfterthought"},"content":"                + this.from.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")) + \" | \"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"AnAfterthought"},"content":"                + this.to.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"AnAfterthought"},"content":"                + \" | \" + this.priority.toString();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"AnAfterthought"},"content":"     * Returns if task\u0027s date is the same as specified date.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"AnAfterthought"},"content":"     * @param dateTime Date and time to be compared.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"AnAfterthought"},"content":"     * @return If task\u0027s date is the same as specified date.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"AnAfterthought"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"AnAfterthought"},"content":"    public boolean isSameDate(LocalDateTime dateTime) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"AnAfterthought"},"content":"        return this.from.toLocalDate().equals(dateTime.toLocalDate());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"AnAfterthought"},"content":"     * Returns details of task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"AnAfterthought"},"content":"     * @return Details of task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"AnAfterthought"},"content":"    @Override","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"AnAfterthought"},"content":"    public String toString() {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"AnAfterthought"},"content":"        return \"[E]\" + super.toString() + \" (from: \"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"AnAfterthought"},"content":"                + this.from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\"))","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"AnAfterthought"},"content":"                .replace(\"AM\", \"am\")","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"AnAfterthought"},"content":"                .replace(\"PM\", \"pm\")","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"AnAfterthought"},"content":"                + \" to: \" + this.to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\"))","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"AnAfterthought"},"content":"                .replace(\"AM\", \"am\")","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"AnAfterthought"},"content":"                .replace(\"PM\", \"pm\") + \")\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-01-17","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":70}},{"path":"src/main/java/bpluschatter/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"package bpluschatter.task;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.enumerations.Priority;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"AnAfterthought"},"content":" * Represents a task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"AnAfterthought"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"AnAfterthought"},"content":"public class Task implements Comparable\u003cTask\u003e {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"AnAfterthought"},"content":"    protected String description;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"AnAfterthought"},"content":"    protected Priority priority;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"AnAfterthought"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"AnAfterthought"},"content":"     * Constructor for Task","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"AnAfterthought"},"content":"     * @param description Details of task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"AnAfterthought"},"content":"    public Task(String description, Priority priority) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"AnAfterthought"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"AnAfterthought"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"AnAfterthought"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"AnAfterthought"},"content":"     * Returns status icon.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"AnAfterthought"},"content":"     * @return Status icon.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"AnAfterthought"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"AnAfterthought"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"AnAfterthought"},"content":"     * Sets the completion status of the task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"AnAfterthought"},"content":"     * @param isDone Completion status of task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"AnAfterthought"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"AnAfterthought"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"AnAfterthought"},"content":"     * Returns completion status of task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"AnAfterthought"},"content":"     * @return Completion status of task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"AnAfterthought"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"AnAfterthought"},"content":"        return this.isDone;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"AnAfterthought"},"content":"     * Returns string to be saved in file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"AnAfterthought"},"content":"     * @return String to be saved in file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"AnAfterthought"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"AnAfterthought"},"content":"        return \"\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"AnAfterthought"},"content":"     * Returns if task\u0027s date is the same as specified date.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"AnAfterthought"},"content":"     * @param dateTime Date and time to be compared.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"AnAfterthought"},"content":"     * @return If task\u0027s date is the same as specified date.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"AnAfterthought"},"content":"    public boolean isSameDate(LocalDateTime dateTime) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"AnAfterthought"},"content":"        return false;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"AnAfterthought"},"content":"    @Override","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"AnAfterthought"},"content":"    public int compareTo(Task task) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"AnAfterthought"},"content":"        if (this.priority.ordinal() \u003c task.priority.ordinal()) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"AnAfterthought"},"content":"            return -1;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"AnAfterthought"},"content":"        } else if (this.priority.ordinal() \u003e task.priority.ordinal()) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"AnAfterthought"},"content":"            return 1;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"AnAfterthought"},"content":"        } else {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"AnAfterthought"},"content":"            return 0;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"AnAfterthought"},"content":"     * Returns details of task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"AnAfterthought"},"content":"     * @return Details of task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"AnAfterthought"},"content":"    public String toString() {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"AnAfterthought"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description + \" \u003c\" + this.priority.toString() + \"\u003e\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-01-17","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":91}},{"path":"src/main/java/bpluschatter/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"package bpluschatter.task;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"AnAfterthought"},"content":" * Represents a list of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"AnAfterthought"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"AnAfterthought"},"content":"public class TaskList {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"AnAfterthought"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"AnAfterthought"},"content":"     * Constructor for TaskList","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"AnAfterthought"},"content":"    public TaskList() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"AnAfterthought"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"AnAfterthought"},"content":"     * Constructor for TaskList","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"AnAfterthought"},"content":"     * @param tasks ArrayList of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"AnAfterthought"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"AnAfterthought"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"AnAfterthought"},"content":"     * Returns updated list of tasks after adding a task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"AnAfterthought"},"content":"     * @param task Task to be added.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"AnAfterthought"},"content":"     * @return Updated list of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"AnAfterthought"},"content":"    public TaskList add(Task task) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"AnAfterthought"},"content":"        this.tasks.add(task);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"AnAfterthought"},"content":"        return new TaskList(this.tasks);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"AnAfterthought"},"content":"     * Returns updated list of tasks after deleting a task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"AnAfterthought"},"content":"     * @param index Index of task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"AnAfterthought"},"content":"     * @return Updated list of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"AnAfterthought"},"content":"    public TaskList remove(int index) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"AnAfterthought"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"AnAfterthought"},"content":"        return new TaskList(this.tasks);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"AnAfterthought"},"content":"     * Returns number of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"AnAfterthought"},"content":"     * @return Number of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"AnAfterthought"},"content":"    public int getSize() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"AnAfterthought"},"content":"        return tasks.size();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"AnAfterthought"},"content":"     * Returns task on specified index.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"AnAfterthought"},"content":"     * @param index Index of task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"AnAfterthought"},"content":"     * @return Task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"AnAfterthought"},"content":"    public Task get(int index) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"AnAfterthought"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"AnAfterthought"},"content":"     * Prints all tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"AnAfterthought"},"content":"    public void list() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"AnAfterthought"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"AnAfterthought"},"content":"            System.out.println(\"\\t\" + (i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"AnAfterthought"},"content":"     * Returns stream of Task objects.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"AnAfterthought"},"content":"     * @return Stream of Task objects.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"AnAfterthought"},"content":"    public Stream\u003cTask\u003e toStream() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"AnAfterthought"},"content":"        return tasks.stream();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"AnAfterthought"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"AnAfterthought"},"content":"    public String toString() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"AnAfterthought"},"content":"        Collections.sort(tasks);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"AnAfterthought"},"content":"        String tasksString \u003d \"\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"AnAfterthought"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"AnAfterthought"},"content":"            tasksString +\u003d (i + 1) + \".\" + tasks.get(i) + \"\\n\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"AnAfterthought"},"content":"        return tasksString;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":97}},{"path":"src/main/java/bpluschatter/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"package bpluschatter.task;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.enumerations.Priority;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":" * Represents todo task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"AnAfterthought"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"AnAfterthought"},"content":"    public ToDo(String description, Priority priority) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"AnAfterthought"},"content":"        super(description, priority);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"AnAfterthought"},"content":"     * Returns string to be saved in file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"AnAfterthought"},"content":"     * @return String to be saved in file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"AnAfterthought"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"AnAfterthought"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"AnAfterthought"},"content":"        String task \u003d \"T |\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"AnAfterthought"},"content":"        task +\u003d isDone ? \" 1 | \" : \" 0 | \";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"AnAfterthought"},"content":"        return task + description + \" | \" + this.priority.toString();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"AnAfterthought"},"content":"     * Returns details of task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"AnAfterthought"},"content":"     * @return Details of task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"AnAfterthought"},"content":"    @Override","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"AnAfterthought"},"content":"    public String toString() {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"AnAfterthought"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-01-17","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":34}},{"path":"src/main/java/bpluschatter/ui/BPlusChatter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"package bpluschatter.ui;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.command.Parser;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.storage.Storage;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.task.TaskList;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"AnAfterthought"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"AnAfterthought"},"content":" * Creates and runs chatbot","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"AnAfterthought"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"AnAfterthought"},"content":"public class BPlusChatter {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"AnAfterthought"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"AnAfterthought"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"AnAfterthought"},"content":"    private Ui ui;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"AnAfterthought"},"content":"     * Constructor for chatbot BPlusChatter.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"AnAfterthought"},"content":"     * @param filePath Save file for chatbot.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"AnAfterthought"},"content":"    public BPlusChatter(String filePath) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"AnAfterthought"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"AnAfterthought"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"AnAfterthought"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"AnAfterthought"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"AnAfterthought"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"AnAfterthought"},"content":"            ui.setLoadingError();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"AnAfterthought"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"AnAfterthought"},"content":"     * Parses user commands and returns string message.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"AnAfterthought"},"content":"    public String run(String userInput) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"AnAfterthought"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"AnAfterthought"},"content":"        if (userInput.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"AnAfterthought"},"content":"            ui.setGoodbyeMessage();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"AnAfterthought"},"content":"            System.exit(0);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"AnAfterthought"},"content":"        tasks \u003d parser.parseCommand(userInput, tasks, ui);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"AnAfterthought"},"content":"        try {","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"AnAfterthought"},"content":"            storage.save(tasks);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"AnAfterthought"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"AnAfterthought"},"content":"            ui.setSavingError();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"AnAfterthought"},"content":"        return ui.toString();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"AnAfterthought"},"content":"     * Returns error status.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"AnAfterthought"},"content":"     * @return Error status.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"AnAfterthought"},"content":"    public boolean getError() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"AnAfterthought"},"content":"        return ui.getIsError();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-01-17","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":60}},{"path":"src/main/java/bpluschatter/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"package bpluschatter.ui;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"AnAfterthought"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"AnAfterthought"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"AnAfterthought"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"AnAfterthought"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"AnAfterthought"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"AnAfterthought"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"AnAfterthought"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"AnAfterthought"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"AnAfterthought"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"AnAfterthought"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"AnAfterthought"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"AnAfterthought"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"AnAfterthought"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"AnAfterthought"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"AnAfterthought"},"content":"    @FXML","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"AnAfterthought"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"AnAfterthought"},"content":"    @FXML","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"AnAfterthought"},"content":"    private Circle displayPicture;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"AnAfterthought"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"AnAfterthought"},"content":"        try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"AnAfterthought"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"AnAfterthought"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"AnAfterthought"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"AnAfterthought"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"AnAfterthought"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"AnAfterthought"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"AnAfterthought"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"AnAfterthought"},"content":"        displayPicture.setFill(new ImagePattern(img));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"AnAfterthought"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"AnAfterthought"},"content":"    private void flip() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"AnAfterthought"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"AnAfterthought"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"AnAfterthought"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"AnAfterthought"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"AnAfterthought"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"AnAfterthought"},"content":"     * Returns DialogBox for user.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"AnAfterthought"},"content":"     * @param text User\u0027s message.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"AnAfterthought"},"content":"     * @param img User\u0027s picture.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"AnAfterthought"},"content":"     * @return DialogBox for user.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"AnAfterthought"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"AnAfterthought"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"AnAfterthought"},"content":"     * Returns DialogBox for chatbot.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"AnAfterthought"},"content":"     * @param text Chatbot\u0027s message.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"AnAfterthought"},"content":"     * @param img Chatbot\u0027s picture.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"AnAfterthought"},"content":"     * @param isError Determine if message is an error message.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"AnAfterthought"},"content":"     * @return DialogBox for chatbot.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"AnAfterthought"},"content":"    public static DialogBox getBPlusChatterDialog(String text, Image img, boolean isError) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"AnAfterthought"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"AnAfterthought"},"content":"        db.flip();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"AnAfterthought"},"content":"        db.changeDialogStyle(isError);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"AnAfterthought"},"content":"        return db;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"AnAfterthought"},"content":"     * Changes dialog box style when error occurs.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"AnAfterthought"},"content":"     * @param isError Error status of message.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"AnAfterthought"},"content":"    private void changeDialogStyle(boolean isError) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"AnAfterthought"},"content":"        if (isError) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"AnAfterthought"},"content":"            dialog.getStyleClass().add(\"error-label\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":89}},{"path":"src/main/java/bpluschatter/ui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"package bpluschatter.ui;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"AnAfterthought"},"content":"public class Launcher {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"AnAfterthought"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"AnAfterthought"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":12}},{"path":"src/main/java/bpluschatter/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"package bpluschatter.ui;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"AnAfterthought"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"AnAfterthought"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"AnAfterthought"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"AnAfterthought"},"content":" * A GUI for BPlusChatter using FXML.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"AnAfterthought"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"AnAfterthought"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"AnAfterthought"},"content":"    private BPlusChatter bPlusChatter \u003d new BPlusChatter(\"./data/BPlusChatter.txt\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"AnAfterthought"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"AnAfterthought"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"AnAfterthought"},"content":"        try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"AnAfterthought"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"AnAfterthought"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"AnAfterthought"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"AnAfterthought"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"AnAfterthought"},"content":"            stage.setTitle(\"BPlusChatter\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"AnAfterthought"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBPlusChatter(bPlusChatter); // inject the BPlusChatter instance","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"AnAfterthought"},"content":"            stage.show();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"AnAfterthought"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"AnAfterthought"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":32}},{"path":"src/main/java/bpluschatter/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"package bpluschatter.ui;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"AnAfterthought"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"AnAfterthought"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"AnAfterthought"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"AnAfterthought"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"AnAfterthought"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"AnAfterthought"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"AnAfterthought"},"content":"    @FXML","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"AnAfterthought"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"AnAfterthought"},"content":"    @FXML","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"AnAfterthought"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"AnAfterthought"},"content":"    @FXML","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"AnAfterthought"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"AnAfterthought"},"content":"    @FXML","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"AnAfterthought"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"AnAfterthought"},"content":"    private BPlusChatter bPlusChatter;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"AnAfterthought"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"AnAfterthought"},"content":"    private Image bPlusChatterImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/BPlusChatter.png\"));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"AnAfterthought"},"content":"     * Sets initial values for GUI.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"AnAfterthought"},"content":"    @FXML","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"AnAfterthought"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"AnAfterthought"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"AnAfterthought"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getBPlusChatterDialog(","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"AnAfterthought"},"content":"                \"Hello! I\u0027m BPlusChatter :)\\nWhat can I do for you?\",","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"AnAfterthought"},"content":"                bPlusChatterImage, false));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"AnAfterthought"},"content":"     * Injects the BPlusChatter instance.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"AnAfterthought"},"content":"    public void setBPlusChatter(BPlusChatter bPlusChatter) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"AnAfterthought"},"content":"        this.bPlusChatter \u003d bPlusChatter;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"AnAfterthought"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing BPlusChatter\u0027s reply","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"AnAfterthought"},"content":"     * and then appends them to the dialog container.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"AnAfterthought"},"content":"     * Clears the user input after processing.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"AnAfterthought"},"content":"    @FXML","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"AnAfterthought"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"AnAfterthought"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"AnAfterthought"},"content":"        String response \u003d bPlusChatter.run(input);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"AnAfterthought"},"content":"        boolean isError \u003d bPlusChatter.getError();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"AnAfterthought"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"AnAfterthought"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"AnAfterthought"},"content":"                DialogBox.getBPlusChatterDialog(response, bPlusChatterImage, isError)","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"AnAfterthought"},"content":"        );","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"AnAfterthought"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":63}},{"path":"src/main/java/bpluschatter/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"package bpluschatter.ui;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.task.Task;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.task.TaskList;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":" * Prints out success and error messages after each command.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"AnAfterthought"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"AnAfterthought"},"content":"public class Ui {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"AnAfterthought"},"content":"    private String message;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"AnAfterthought"},"content":"    private boolean isError \u003d false;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"AnAfterthought"},"content":"     * Sets goodbye message.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"AnAfterthought"},"content":"    public void setGoodbyeMessage() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"AnAfterthought"},"content":"        this.message \u003d \"Bye bye. Come back soon!\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"AnAfterthought"},"content":"        isError \u003d false;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"AnAfterthought"},"content":"     * Sets message after addition of a task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"AnAfterthought"},"content":"     * @param task Task that was added.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"AnAfterthought"},"content":"     * @param count Number of tasks after task was added.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"AnAfterthought"},"content":"    public void setAddMessage(Task task, int count) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"AnAfterthought"},"content":"        this.message \u003d \"OK. I\u0027ve added this task:\\n\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"AnAfterthought"},"content":"        this.message +\u003d task + \"\\n\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"AnAfterthought"},"content":"        this.message +\u003d \"You now have \" + count + \" task(s)\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"AnAfterthought"},"content":"        isError \u003d false;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"AnAfterthought"},"content":"     * Sets message after marking/unmarking a task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"AnAfterthought"},"content":"     * @param task Task that was marked/unmarked.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"AnAfterthought"},"content":"    public void setMarkMessage(Task task) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"AnAfterthought"},"content":"        this.message \u003d task.getIsDone() ? \"Well done! This task is done:\\n\"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"AnAfterthought"},"content":"                : \"Ok, this task is not done yet:\\n\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"AnAfterthought"},"content":"        this.message +\u003d task;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"AnAfterthought"},"content":"        isError \u003d false;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"AnAfterthought"},"content":"     * Sets message after deleting a task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"AnAfterthought"},"content":"     * @param task Task that was deleted.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"AnAfterthought"},"content":"     * @param count Number of tasks in list.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"AnAfterthought"},"content":"    public void setDeleteMessage(Task task, int count) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"AnAfterthought"},"content":"        this.message \u003d \"Ok. I\u0027ve deleted this task:\\n\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"AnAfterthought"},"content":"        this.message +\u003d task + \"\\n\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"AnAfterthought"},"content":"        this.message +\u003d \"You now have \" + count + \" task(s)\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"AnAfterthought"},"content":"        isError \u003d false;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"AnAfterthought"},"content":"     * Sets error message for todo command.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"AnAfterthought"},"content":"    public void setToDoError() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"AnAfterthought"},"content":"        this.message \u003d \"WRONG FORMAT :(\\n\" + \"Format: todo TASK PRIORITY\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"AnAfterthought"},"content":"        isError \u003d true;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"AnAfterthought"},"content":"     * Sets error message for deadline command.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"AnAfterthought"},"content":"    public void setDeadlineError() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"AnAfterthought"},"content":"        this.message \u003d \"WRONG FORMAT :(\\n\" + \"Format: deadline TASK /by DATE TIME PRIORITY\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"AnAfterthought"},"content":"        isError \u003d true;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"AnAfterthought"},"content":"     * Sets error message for event command.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"AnAfterthought"},"content":"    public void setEventError() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"AnAfterthought"},"content":"        this.message \u003d \"WRONG FORMAT :(\\n\" + \"Format: event TASK /from DATE TIME /to DATE TIME PRIORITY\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"AnAfterthought"},"content":"        isError \u003d true;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"AnAfterthought"},"content":"     * Sets error message for on command.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"AnAfterthought"},"content":"    public void setOnError() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"AnAfterthought"},"content":"        this.message \u003d \"WRONG FORMAT :(\\n\" + \"Format: on YYYY-MM-DD\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"AnAfterthought"},"content":"        isError \u003d true;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"AnAfterthought"},"content":"     * Sets error message when loading tasks from save file.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"AnAfterthought"},"content":"    public void setLoadingError() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"AnAfterthought"},"content":"        this.message \u003d \"Error encountered loading tasks!\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"AnAfterthought"},"content":"        isError \u003d true;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"AnAfterthought"},"content":"     * Sets error message when saving tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"AnAfterthought"},"content":"    public void setSavingError() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"AnAfterthought"},"content":"        this.message \u003d \"Error encountered saving tasks!\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"AnAfterthought"},"content":"        isError \u003d true;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"AnAfterthought"},"content":"     * Sets error message for unknown commands.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"AnAfterthought"},"content":"    public void setUnknownCommandError() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"AnAfterthought"},"content":"        this.message \u003d \"UNKNOWN COMMAND :(\\n\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"AnAfterthought"},"content":"                + \"Try starting with todo, deadline, event, mark, unmark, list, delete, on, find or bye\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"AnAfterthought"},"content":"        isError \u003d true;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"AnAfterthought"},"content":"     * Sets error message if date and time format is wrong.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"AnAfterthought"},"content":"    public void setDateTimeFormatError() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"AnAfterthought"},"content":"        this.message \u003d \"WRONG FORMAT :(\\nDate and time (24-hour) format: YYYY-MM-DD HHmm\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"AnAfterthought"},"content":"        isError \u003d true;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"AnAfterthought"},"content":"     * Sets error message for mark/unmark command.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"AnAfterthought"},"content":"    public void setMarkError(int count) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"AnAfterthought"},"content":"        this.message \u003d \"WRONG FORMAT :(\\n\" + \"Format: mark/unmark TASK_NUMBER\\n\"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"AnAfterthought"},"content":"                + \"You have \" + count + \" task(s)\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"AnAfterthought"},"content":"        isError \u003d true;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"AnAfterthought"},"content":"     * Sets error message for delete command.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"AnAfterthought"},"content":"    public void setDeleteError(int count) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"AnAfterthought"},"content":"        this.message \u003d \"WRONG FORMAT :(\\nFormat: delete TASK_NUMBER\\n\"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"AnAfterthought"},"content":"                + \"You have \" + count + \" task(s)\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"AnAfterthought"},"content":"        isError \u003d true;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"AnAfterthought"},"content":"     * Sets message to contain tasks happening on specified date.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"AnAfterthought"},"content":"     * @param tasks List of tasks happening on specified date.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"AnAfterthought"},"content":"    public void setOnMessage(TaskList tasks) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"AnAfterthought"},"content":"        this.message \u003d \"These tasks occur on the chosen date:\\n\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"AnAfterthought"},"content":"        this.message +\u003d tasks.toString();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"AnAfterthought"},"content":"        isError \u003d false;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"AnAfterthought"},"content":"     * Sets message to contain tasks containing a keyword.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"AnAfterthought"},"content":"     * @param tasks List of tasks containing a keyword.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"AnAfterthought"},"content":"    public void setFindMessage(TaskList tasks) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"AnAfterthought"},"content":"        this.message \u003d \"Here are the tasks I found:\\n\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"AnAfterthought"},"content":"        this.message +\u003d tasks.toString();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"AnAfterthought"},"content":"        isError \u003d false;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"AnAfterthought"},"content":"     * Sets message to contain tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"AnAfterthought"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"AnAfterthought"},"content":"    public void setList(TaskList tasks) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"AnAfterthought"},"content":"        this.message \u003d tasks.toString();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"AnAfterthought"},"content":"        isError \u003d false;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"AnAfterthought"},"content":"     * Sets error message if invalid priority is encountered.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"AnAfterthought"},"content":"    public void setPriorityError() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"AnAfterthought"},"content":"        this.message \u003d \"WRONG PRIORITY :(\\nRemember to add a priority level at the end of the command.\\n\"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"AnAfterthought"},"content":"                + \"The priority levels are HIGH, MEDIUM or LOW\\n\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"AnAfterthought"},"content":"        isError \u003d true;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"AnAfterthought"},"content":"     * Returns error status.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"AnAfterthought"},"content":"     * @return Error status.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"AnAfterthought"},"content":"    public boolean getIsError() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"AnAfterthought"},"content":"        return this.isError;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"AnAfterthought"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"AnAfterthought"},"content":"    public String toString() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"AnAfterthought"},"content":"        return this.message;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":196}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"AnAfterthought"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"AnAfterthought"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"AnAfterthought"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"AnAfterthought"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"AnAfterthought"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"AnAfterthought"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"AnAfterthought"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"AnAfterthought"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"AnAfterthought"},"content":"         stylesheets\u003d\"/css/dialog-box.css\"\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"AnAfterthought"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"AnAfterthought"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"AnAfterthought"},"content":"    \u003cCircle fx:id\u003d\"displayPicture\" radius\u003d\"40\" /\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"AnAfterthought"},"content":"  \u003c/children\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"AnAfterthought"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"AnAfterthought"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"AnAfterthought"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"AnAfterthought"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":24}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"AnAfterthought"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"AnAfterthought"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"AnAfterthought"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"AnAfterthought"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"AnAfterthought"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"AnAfterthought"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"AnAfterthought"},"content":"            fx:controller\u003d\"bpluschatter.ui.MainWindow\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"AnAfterthought"},"content":"            stylesheets\u003d\"/css/main.css\"\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"AnAfterthought"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"AnAfterthought"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"AnAfterthought"},"content":"                   promptText\u003d\"Type here\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"AnAfterthought"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"AnAfterthought"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"AnAfterthought"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"AnAfterthought"},"content":"                   prefWidth\u003d\"324.0\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"AnAfterthought"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"AnAfterthought"},"content":"                   AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"AnAfterthought"},"content":"                   AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"AnAfterthought"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"AnAfterthought"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"AnAfterthought"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"AnAfterthought"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"AnAfterthought"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"AnAfterthought"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"AnAfterthought"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"AnAfterthought"},"content":"                AnchorPane.bottomAnchor\u003d\"1.0\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"AnAfterthought"},"content":"                AnchorPane.rightAnchor\u003d\"0.0\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"AnAfterthought"},"content":"                text\u003d\"Send\" /\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"AnAfterthought"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"AnAfterthought"},"content":"                    fitToWidth\u003d\"true\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"AnAfterthought"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"AnAfterthought"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"AnAfterthought"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"AnAfterthought"},"content":"                    prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"AnAfterthought"},"content":"                    vvalue\u003d\"1.0\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"AnAfterthought"},"content":"                    AnchorPane.bottomAnchor\u003d\"43.0\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"AnAfterthought"},"content":"                    AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"AnAfterthought"},"content":"                    AnchorPane.rightAnchor\u003d\"0.0\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"AnAfterthought"},"content":"                    AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"AnAfterthought"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"AnAfterthought"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"AnAfterthought"},"content":"                      prefHeight\u003d\"552.0\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"AnAfterthought"},"content":"                      prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"AnAfterthought"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"AnAfterthought"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"AnAfterthought"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"AnAfterthought"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":56}},{"path":"src/test/java/bpluschatter/command/MarkTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"package bpluschatter.command;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.task.TaskList;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.ui.Ui;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"AnAfterthought"},"content":"/**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"AnAfterthought"},"content":" * JUnit tests for parseMark() which is called by parseCommand().","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"AnAfterthought"},"content":" */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"AnAfterthought"},"content":"public class MarkTest {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"AnAfterthought"},"content":"     * Tests for successful mark command of unmarked task.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"AnAfterthought"},"content":"    public void testMarkUnmarked() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"AnAfterthought"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"AnAfterthought"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"AnAfterthought"},"content":"        TaskList testTaskLists \u003d new TaskList();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"todo Read HIGH\", testTaskLists, ui);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"todo Eat LOW\", testTaskLists, ui);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"mark 2\", testTaskLists, ui);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"1.[T][ ] Read \u003cHIGH\u003e\\n2.[T][X] Eat \u003cLOW\u003e\\n\", testTaskLists.toString(),","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"AnAfterthought"},"content":"                \"Check that correct task is marked\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"Well done! This task is done:\\n\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"AnAfterthought"},"content":"                + \"[T][X] Eat \u003cLOW\u003e\", ui.toString(), \"Check that correct message is sent.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"AnAfterthought"},"content":"     * Tests for successful mark command of marked task.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"AnAfterthought"},"content":"    public void testMarkMarked() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"AnAfterthought"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"AnAfterthought"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"AnAfterthought"},"content":"        TaskList testTaskLists \u003d new TaskList();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"todo Read HIGH\", testTaskLists, ui);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"todo Eat LOW\", testTaskLists, ui);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"mark 2\", testTaskLists, ui);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"mark 2\", testTaskLists, ui);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"1.[T][ ] Read \u003cHIGH\u003e\\n2.[T][X] Eat \u003cLOW\u003e\\n\", testTaskLists.toString(),","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"AnAfterthought"},"content":"                \"Check that correct task is marked\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"Well done! This task is done:\\n\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"AnAfterthought"},"content":"                + \"[T][X] Eat \u003cLOW\u003e\", ui.toString(), \"Check that correct message is sent.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"AnAfterthought"},"content":"     * Tests for successful unmark command of marked task.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"AnAfterthought"},"content":"    public void testUnmarkMarked() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"AnAfterthought"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"AnAfterthought"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"AnAfterthought"},"content":"        TaskList testTaskLists \u003d new TaskList();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"todo Read HIGH\", testTaskLists, ui);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"todo Eat LOW\", testTaskLists, ui);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"mark 2\", testTaskLists, ui);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"unmark 2\", testTaskLists, ui);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"1.[T][ ] Read \u003cHIGH\u003e\\n2.[T][ ] Eat \u003cLOW\u003e\\n\", testTaskLists.toString(),","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"AnAfterthought"},"content":"                \"Check that correct task is unmarked\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"Ok, this task is not done yet:\\n\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"AnAfterthought"},"content":"                + \"[T][ ] Eat \u003cLOW\u003e\", ui.toString(), \"Check that correct message is sent.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"AnAfterthought"},"content":"     * Tests for successful unmark command of unmarked task.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"AnAfterthought"},"content":"    public void testUnmarkUnmarked() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"AnAfterthought"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"AnAfterthought"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"AnAfterthought"},"content":"        TaskList testTaskLists \u003d new TaskList();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"todo Read HIGH\", testTaskLists, ui);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"todo Eat LOW\", testTaskLists, ui);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"mark 2\", testTaskLists, ui);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"unmark 2\", testTaskLists, ui);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"unmark 2\", testTaskLists, ui);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"1.[T][ ] Read \u003cHIGH\u003e\\n2.[T][ ] Eat \u003cLOW\u003e\\n\", testTaskLists.toString(),","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"AnAfterthought"},"content":"                \"Check that correct task is unmarked\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"Ok, this task is not done yet:\\n\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"AnAfterthought"},"content":"                + \"[T][ ] Eat \u003cLOW\u003e\", ui.toString(), \"Check that correct message is sent.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"AnAfterthought"},"content":"     * Tests for mark command when index given is bigger than size of task list.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"AnAfterthought"},"content":"    public void testMarkIndexTooBig() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"AnAfterthought"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"AnAfterthought"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"AnAfterthought"},"content":"        TaskList testTaskLists \u003d new TaskList();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"todo Read HIGH\", testTaskLists, ui);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"todo Eat LOW\", testTaskLists, ui);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"mark 3\", testTaskLists, ui);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"1.[T][ ] Read \u003cHIGH\u003e\\n2.[T][ ] Eat \u003cLOW\u003e\\n\", testTaskLists.toString(),","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"AnAfterthought"},"content":"                \"Check that list is correct\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"WRONG FORMAT :(\\n\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"AnAfterthought"},"content":"                        + \"Format: mark/unmark TASK_NUMBER\\n\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"AnAfterthought"},"content":"                        + \"You have 2 task(s)\", ui.toString(),","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"AnAfterthought"},"content":"                \"Check that correct error message is shown\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"AnAfterthought"},"content":"     * Tests for unmark command when index given is bigger than size of task list.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"AnAfterthought"},"content":"    public void testUnmarkIndexTooBig() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"AnAfterthought"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"AnAfterthought"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"AnAfterthought"},"content":"        TaskList testTaskLists \u003d new TaskList();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"todo Read HIGH\", testTaskLists, ui);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"todo Eat LOW\", testTaskLists, ui);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"mark 2\", testTaskLists, ui);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"unmark 3\", testTaskLists, ui);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"1.[T][ ] Read \u003cHIGH\u003e\\n2.[T][X] Eat \u003cLOW\u003e\\n\", testTaskLists.toString(),","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"AnAfterthought"},"content":"                \"Check that list is correct\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"WRONG FORMAT :(\\n\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"AnAfterthought"},"content":"                        + \"Format: mark/unmark TASK_NUMBER\\n\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"AnAfterthought"},"content":"                        + \"You have 2 task(s)\", ui.toString(),","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"AnAfterthought"},"content":"                \"Check that correct error message is shown\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"AnAfterthought"},"content":"     * Tests for mark command when index is negative.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"AnAfterthought"},"content":"    public void testMarkIndexNegative() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"AnAfterthought"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"AnAfterthought"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"AnAfterthought"},"content":"        TaskList testTaskLists \u003d new TaskList();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"todo Read HIGH\", testTaskLists, ui);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"todo Eat LOW\", testTaskLists, ui);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"mark -1\", testTaskLists, ui);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"1.[T][ ] Read \u003cHIGH\u003e\\n2.[T][ ] Eat \u003cLOW\u003e\\n\", testTaskLists.toString(),","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"AnAfterthought"},"content":"                \"Check that list is correct\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"WRONG FORMAT :(\\n\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"AnAfterthought"},"content":"                        + \"Format: mark/unmark TASK_NUMBER\\n\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"AnAfterthought"},"content":"                        + \"You have 2 task(s)\", ui.toString(),","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"AnAfterthought"},"content":"                \"Check that correct error message is shown\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"AnAfterthought"},"content":"     * Tests for unmark command when index is negative.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"AnAfterthought"},"content":"    public void testUnmarkIndexNegative() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"AnAfterthought"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"AnAfterthought"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"AnAfterthought"},"content":"        TaskList testTaskLists \u003d new TaskList();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"todo Read HIGH\", testTaskLists, ui);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"todo Eat LOW\", testTaskLists, ui);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"mark 2\", testTaskLists, ui);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"unmark -1\", testTaskLists, ui);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"1.[T][ ] Read \u003cHIGH\u003e\\n2.[T][X] Eat \u003cLOW\u003e\\n\", testTaskLists.toString(),","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"AnAfterthought"},"content":"                \"Check that list is correct\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"WRONG FORMAT :(\\n\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"AnAfterthought"},"content":"                        + \"Format: mark/unmark TASK_NUMBER\\n\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"AnAfterthought"},"content":"                        + \"You have 2 task(s)\", ui.toString(),","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"AnAfterthought"},"content":"                \"Check that correct error message is shown\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"AnAfterthought"},"content":"     * Tests for mark command when index is not given.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"AnAfterthought"},"content":"    public void testMarkNoIndex() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"AnAfterthought"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"AnAfterthought"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"AnAfterthought"},"content":"        TaskList testTaskLists \u003d new TaskList();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"todo Read HIGH\", testTaskLists, ui);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"todo Eat LOW\", testTaskLists, ui);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"mark\", testTaskLists, ui);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"1.[T][ ] Read \u003cHIGH\u003e\\n2.[T][ ] Eat \u003cLOW\u003e\\n\", testTaskLists.toString(),","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"AnAfterthought"},"content":"                \"Check that list is correct\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"WRONG FORMAT :(\\n\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"AnAfterthought"},"content":"                        + \"Format: mark/unmark TASK_NUMBER\\n\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"AnAfterthought"},"content":"                        + \"You have 2 task(s)\", ui.toString(),","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"AnAfterthought"},"content":"                \"Check that correct error message is shown\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"AnAfterthought"},"content":"     * Tests for unmark command when index is not given.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"AnAfterthought"},"content":"    public void testUnmarkNoIndex() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"AnAfterthought"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"AnAfterthought"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"AnAfterthought"},"content":"        TaskList testTaskLists \u003d new TaskList();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"todo Read HIGH\", testTaskLists, ui);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"todo Eat LOW\", testTaskLists, ui);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"mark 2\", testTaskLists, ui);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"unmark\", testTaskLists, ui);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"1.[T][ ] Read \u003cHIGH\u003e\\n2.[T][X] Eat \u003cLOW\u003e\\n\", testTaskLists.toString(),","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"AnAfterthought"},"content":"                \"Check that list is correct\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"WRONG FORMAT :(\\n\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"AnAfterthought"},"content":"                        + \"Format: mark/unmark TASK_NUMBER\\n\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"AnAfterthought"},"content":"                        + \"You have 2 task(s)\", ui.toString(),","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"AnAfterthought"},"content":"                \"Check that correct error message is shown\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"AnAfterthought"},"content":"     * Tests for mark command when index given is not a number.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"AnAfterthought"},"content":"    public void testMarkIndexNotNumber() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"AnAfterthought"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"AnAfterthought"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"AnAfterthought"},"content":"        TaskList testTaskLists \u003d new TaskList();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"todo Read HIGH\", testTaskLists, ui);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"todo Eat LOW\", testTaskLists, ui);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"mark a\", testTaskLists, ui);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"1.[T][ ] Read \u003cHIGH\u003e\\n2.[T][ ] Eat \u003cLOW\u003e\\n\", testTaskLists.toString(),","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"AnAfterthought"},"content":"                \"Check that list is correct\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"WRONG FORMAT :(\\n\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"AnAfterthought"},"content":"                        + \"Format: mark/unmark TASK_NUMBER\\n\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"AnAfterthought"},"content":"                        + \"You have 2 task(s)\", ui.toString(),","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"AnAfterthought"},"content":"                \"Check that correct error message is shown\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"AnAfterthought"},"content":"     * Tests for unmark command when index given is not a number.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"AnAfterthought"},"content":"    public void testUnmarkIndexNotNumber() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"AnAfterthought"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"AnAfterthought"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"AnAfterthought"},"content":"        TaskList testTaskLists \u003d new TaskList();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"todo Read HIGH\", testTaskLists, ui);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"todo Eat LOW\", testTaskLists, ui);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"mark 2\", testTaskLists, ui);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"unmark a\", testTaskLists, ui);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"1.[T][ ] Read \u003cHIGH\u003e\\n2.[T][X] Eat \u003cLOW\u003e\\n\", testTaskLists.toString(),","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"AnAfterthought"},"content":"                \"Check that list is correct\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"WRONG FORMAT :(\\n\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"AnAfterthought"},"content":"                        + \"Format: mark/unmark TASK_NUMBER\\n\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"AnAfterthought"},"content":"                        + \"You have 2 task(s)\", ui.toString(),","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"AnAfterthought"},"content":"                \"Check that correct error message is shown\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-02-19","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":265}},{"path":"src/test/java/bpluschatter/command/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"package bpluschatter.command;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.enumerations.Priority;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.task.TaskList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.task.ToDo;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.ui.Ui;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"AnAfterthought"},"content":"public class ParserTest {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"AnAfterthought"},"content":"     * Tests for successful todo command.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"AnAfterthought"},"content":"    public void testParseToDoSuccess() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"AnAfterthought"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"AnAfterthought"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"AnAfterthought"},"content":"        TaskList testTaskLists \u003d new TaskList();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"todo read medium\", testTaskLists, ui);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(1, testTaskLists.getSize(), \"Check size is correct after command\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"[T][ ] read \u003cMEDIUM\u003e\", testTaskLists.get(0).toString(),","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"AnAfterthought"},"content":"                \"Check task list is correct after command\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"AnAfterthought"},"content":"     * Tests for incorrect todo command.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"AnAfterthought"},"content":"    public void testParseToDoFailure() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"AnAfterthought"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"AnAfterthought"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"AnAfterthought"},"content":"        TaskList testTaskLists \u003d new TaskList();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"todo\", testTaskLists, ui);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists.list();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(0, testTaskLists.getSize(), \"Check size is correct after error\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"AnAfterthought"},"content":"     * Tests for successful deadline command.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"AnAfterthought"},"content":"    public void testParseDeadlineSuccess() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"AnAfterthought"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"AnAfterthought"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"AnAfterthought"},"content":"        TaskList testTaskLists \u003d new TaskList();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"deadline read /by 2020-01-01 1600 LOW\", testTaskLists, ui);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(1, testTaskLists.getSize(), \"Check size is correct after command\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"[D][ ] read \u003cLOW\u003e (by: Jan 1 2020 04:00 pm)\", testTaskLists.get(0).toString(),","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"AnAfterthought"},"content":"                \"Check task list is correct after command\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"AnAfterthought"},"content":"     * Tests for incorrect deadline command.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"AnAfterthought"},"content":"    public void testParseDeadlineFailure() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"AnAfterthought"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"AnAfterthought"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"AnAfterthought"},"content":"        TaskList testTaskLists \u003d new TaskList();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"deadline read /by 2020-01-01 high\", testTaskLists, ui);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"WRONG FORMAT :(\\nDate and time (24-hour) format: YYYY-MM-DD HHmm\",","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"AnAfterthought"},"content":"                ui.toString(),","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"AnAfterthought"},"content":"                \"Check correct error message is printed.\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"deadline read high\", testTaskLists, ui);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"WRONG FORMAT :(\\n\" + \"Format: deadline TASK /by DATE TIME PRIORITY\",","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"AnAfterthought"},"content":"                ui.toString(),","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"AnAfterthought"},"content":"                \"Check correct error message is printed.\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(0, testTaskLists.getSize(), \"Check size is correct after error\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"AnAfterthought"},"content":"     * Tests for successful event command.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"AnAfterthought"},"content":"    public void testParseEventSuccess() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"AnAfterthought"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"AnAfterthought"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"AnAfterthought"},"content":"        TaskList testTaskLists \u003d new TaskList();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"event read /from 2020-01-01 1600 /to 2020-01-01 1800 HIGH\",","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"AnAfterthought"},"content":"                testTaskLists, ui);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(1, testTaskLists.getSize(), \"Check size is correct after command\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"[E][ ] read \u003cHIGH\u003e (from: Jan 1 2020 04:00 pm to: Jan 1 2020 06:00 pm)\",","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"AnAfterthought"},"content":"                testTaskLists.get(0).toString(), \"Check task list is correct after command\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"AnAfterthought"},"content":"     * Tests for incorrect event command.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"AnAfterthought"},"content":"    public void testParseEventFailure() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"AnAfterthought"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"AnAfterthought"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"AnAfterthought"},"content":"        TaskList testTaskLists \u003d new TaskList();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"event read from 2020-01-01 1600 to 2020-01-01 1800\",","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"AnAfterthought"},"content":"                testTaskLists, ui);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"WRONG FORMAT :(\\nFormat: event TASK /from DATE TIME /to DATE TIME PRIORITY\",","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"AnAfterthought"},"content":"                ui.toString(),","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"AnAfterthought"},"content":"                \"Check correct error message is printed.\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"event read /from 2020-01-01 /to 2020-01-1 1800 HIGH\",","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"AnAfterthought"},"content":"                testTaskLists, ui);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"WRONG FORMAT :(\\nDate and time (24-hour) format: YYYY-MM-DD HHmm\",","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"AnAfterthought"},"content":"                ui.toString(),","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"AnAfterthought"},"content":"                \"Check correct error message is printed.\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(0, testTaskLists.getSize(), \"Check size is correct after error\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"AnAfterthought"},"content":"     * Tests for successful delete command.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"AnAfterthought"},"content":"    public void testParseDeleteSuccess() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"AnAfterthought"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"AnAfterthought"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"AnAfterthought"},"content":"        TaskList testTaskLists \u003d new TaskList();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"todo read high\", testTaskLists, ui);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"todo eat high\", testTaskLists, ui);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"todo exercise low\", testTaskLists, ui);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"delete 2\", testTaskLists, ui);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(2, testTaskLists.getSize(), \"Check size is correct after delete\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"[T][ ] read \u003cHIGH\u003e\", testTaskLists.get(0).toString(),","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"AnAfterthought"},"content":"                \"Check tasks are correct after delete\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"[T][ ] exercise \u003cLOW\u003e\", testTaskLists.get(1).toString(),","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"AnAfterthought"},"content":"                \"Check tasks are correct after delete\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"AnAfterthought"},"content":"     * Tests for incorrect delete command.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"AnAfterthought"},"content":"    public void testParseDeleteFail() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"AnAfterthought"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"AnAfterthought"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"AnAfterthought"},"content":"        TaskList testTaskLists \u003d new TaskList();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"todo read high\", testTaskLists, ui);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"delete 2\", testTaskLists, ui);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(1, testTaskLists.getSize(), \"Check size is correct after error\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"[T][ ] read \u003cHIGH\u003e\", testTaskLists.get(0).toString(),","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"AnAfterthought"},"content":"                \"Check tasks are correct after error\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"AnAfterthought"},"content":"     * Tests for successful find command using single keyword.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"AnAfterthought"},"content":"    public void testParseFind() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"AnAfterthought"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"AnAfterthought"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"AnAfterthought"},"content":"        TaskList testTaskLists \u003d new TaskList();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d testTaskLists.add(new ToDo(\"Read book\", Priority.LOW));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d testTaskLists.add(new ToDo(\"Eat\", Priority.HIGH));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d testTaskLists.add(new ToDo(\"Write book\", Priority.HIGH));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"AnAfterthought"},"content":"        parser.parseCommand(\"find book\", testTaskLists, ui);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"Here are the tasks I found:\\n1.[T][ ] Write book \u003cHIGH\u003e\\n2.[T][ ] Read book \u003cLOW\u003e\\n\",","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"AnAfterthought"},"content":"                ui.toString(),","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"AnAfterthought"},"content":"                \"Check that correct tasks are found\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"AnAfterthought"},"content":"     * Tests for successful find command using multiple keywords.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"AnAfterthought"},"content":"    public void testParseFindMultiple() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"AnAfterthought"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"AnAfterthought"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"AnAfterthought"},"content":"        TaskList testTaskLists \u003d new TaskList();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d testTaskLists.add(new ToDo(\"Read newspaper\", Priority.LOW));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d testTaskLists.add(new ToDo(\"Eat\", Priority.HIGH));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d testTaskLists.add(new ToDo(\"Write book\", Priority.HIGH));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"AnAfterthought"},"content":"        parser.parseCommand(\"find book,read\", testTaskLists, ui);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"Here are the tasks I found:\\n1.[T][ ] Write book \u003cHIGH\u003e\\n\"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"AnAfterthought"},"content":"                        + \"2.[T][ ] Read newspaper \u003cLOW\u003e\\n\",","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"AnAfterthought"},"content":"                ui.toString(),","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"AnAfterthought"},"content":"                \"Check that correct tasks are found\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"AnAfterthought"},"content":"    public void testWrongPriority() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"AnAfterthought"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"AnAfterthought"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"AnAfterthought"},"content":"        TaskList testTaskLists \u003d new TaskList();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"todo read max\", testTaskLists, ui);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"WRONG PRIORITY :(\\nRemember to add a priority level at the end of the command.\\n\"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"AnAfterthought"},"content":"                        + \"The priority levels are HIGH, MEDIUM or LOW\\n\",","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"AnAfterthought"},"content":"                ui.toString(),","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"AnAfterthought"},"content":"                \"Check correct error message is printed.\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":212}},{"path":"src/test/java/bpluschatter/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"package bpluschatter.task;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"AnAfterthought"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"AnAfterthought"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.enumerations.Priority;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"AnAfterthought"},"content":"public class DeadlineTest {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"AnAfterthought"},"content":"     * Tests that the correct string for saving an unmarked deadline into a file is generated.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"AnAfterthought"},"content":"    public void testToFileFormatUnmarked() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"AnAfterthought"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"AnAfterthought"},"content":"        LocalDateTime by \u003d LocalDateTime.parse(\"2025-02-25 2359\", dateTimeFormatter);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"AnAfterthought"},"content":"        Deadline deadline \u003d new Deadline(\"Homework\", Priority.HIGH, by);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"D | 0 | Homework | 2025-02-25 2359 | HIGH\", deadline.toFileFormat(),","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"AnAfterthought"},"content":"                \"Check that format of string for saving is correct.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"AnAfterthought"},"content":"     * Tests that the correct string for saving a marked deadline into a file is generated.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"AnAfterthought"},"content":"    public void testToFileFormatMarked() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"AnAfterthought"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"AnAfterthought"},"content":"        LocalDateTime by \u003d LocalDateTime.parse(\"2025-02-25 2359\", dateTimeFormatter);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"AnAfterthought"},"content":"        Deadline deadline \u003d new Deadline(\"Homework\", Priority.LOW, by);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"AnAfterthought"},"content":"        deadline.setIsDone(true);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"D | 1 | Homework | 2025-02-25 2359 | LOW\", deadline.toFileFormat(),","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"AnAfterthought"},"content":"                \"Check that format of string for saving is correct.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"AnAfterthought"},"content":"     * Tests that the correct string for an umarked deadline is generated.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"AnAfterthought"},"content":"    public void testToStringUnmarked() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"AnAfterthought"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"AnAfterthought"},"content":"        LocalDateTime by \u003d LocalDateTime.parse(\"2025-02-25 2359\", dateTimeFormatter);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"AnAfterthought"},"content":"        Deadline deadline \u003d new Deadline(\"Homework\", Priority.MEDIUM, by);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"[D][ ] Homework \u003cMEDIUM\u003e (by: Feb 25 2025 11:59 pm)\", deadline.toString(),","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"AnAfterthought"},"content":"                \"Check that format of string for saving is correct.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"AnAfterthought"},"content":"     * Tests that the correct string for a marked deadline is generated.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"AnAfterthought"},"content":"    public void testToStringMarked() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"AnAfterthought"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"AnAfterthought"},"content":"        LocalDateTime by \u003d LocalDateTime.parse(\"2025-02-25 2359\", dateTimeFormatter);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"AnAfterthought"},"content":"        Deadline deadline \u003d new Deadline(\"Homework\", Priority.MEDIUM, by);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"AnAfterthought"},"content":"        deadline.setIsDone(true);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"[D][X] Homework \u003cMEDIUM\u003e (by: Feb 25 2025 11:59 pm)\", deadline.toString(),","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"AnAfterthought"},"content":"                \"Check that format of string for saving is correct.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"AnAfterthought"},"content":"     * Tests that deadline can identify date that is the same as by.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"AnAfterthought"},"content":"    public void testIsSameDateTrue() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"AnAfterthought"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"AnAfterthought"},"content":"        LocalDateTime by \u003d LocalDateTime.parse(\"2025-02-25 2359\", dateTimeFormatter);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"AnAfterthought"},"content":"        Deadline deadline \u003d new Deadline(\"Homework\", Priority.MEDIUM, by);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"AnAfterthought"},"content":"        LocalDateTime other \u003d LocalDateTime.parse(\"2025-02-25 0000\", dateTimeFormatter);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"AnAfterthought"},"content":"        assertTrue(deadline.isSameDate(other));","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"AnAfterthought"},"content":"     * Tests that deadline can identify date that is not the same as by.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"AnAfterthought"},"content":"    public void testIsSameDateFalse() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"AnAfterthought"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"AnAfterthought"},"content":"        LocalDateTime by \u003d LocalDateTime.parse(\"2025-02-25 2359\", dateTimeFormatter);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"AnAfterthought"},"content":"        Deadline deadline \u003d new Deadline(\"Homework\", Priority.MEDIUM, by);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"AnAfterthought"},"content":"        LocalDateTime before \u003d LocalDateTime.parse(\"2025-02-20 0000\", dateTimeFormatter);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"AnAfterthought"},"content":"        LocalDateTime after \u003d LocalDateTime.parse(\"2025-02-27 0000\", dateTimeFormatter);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"AnAfterthought"},"content":"        assertFalse(deadline.isSameDate(before));","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"AnAfterthought"},"content":"        assertFalse(deadline.isSameDate(after));","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-02-19","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":96}},{"path":"src/test/java/bpluschatter/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"package bpluschatter.task;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"AnAfterthought"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"AnAfterthought"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.enumerations.Priority;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"AnAfterthought"},"content":"public class EventTest {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"AnAfterthought"},"content":"     * Tests that the correct string for saving an unmarked event into a file is generated.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"AnAfterthought"},"content":"    public void testToFileFormatUnmarked() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"AnAfterthought"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"AnAfterthought"},"content":"        LocalDateTime from \u003d LocalDateTime.parse(\"2025-02-25 1400\", dateTimeFormatter);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"AnAfterthought"},"content":"        LocalDateTime to \u003d LocalDateTime.parse(\"2025-02-25 1600\", dateTimeFormatter);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"AnAfterthought"},"content":"        Event event \u003d new Event(\"Meeting\", Priority.HIGH, from, to);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"E | 0 | Meeting | 2025-02-25 1400 | 2025-02-25 1600 | HIGH\", event.toFileFormat(),","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"AnAfterthought"},"content":"                \"Check that format of string for saving is correct.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"AnAfterthought"},"content":"     * Tests that the correct string for saving a marked event into a file is generated.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"AnAfterthought"},"content":"    public void testToFileFormatMarked() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"AnAfterthought"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"AnAfterthought"},"content":"        LocalDateTime from \u003d LocalDateTime.parse(\"2025-02-25 1400\", dateTimeFormatter);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"AnAfterthought"},"content":"        LocalDateTime to \u003d LocalDateTime.parse(\"2025-02-25 1600\", dateTimeFormatter);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"AnAfterthought"},"content":"        Event event \u003d new Event(\"Meeting\", Priority.HIGH, from, to);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"AnAfterthought"},"content":"        event.setIsDone(true);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"E | 1 | Meeting | 2025-02-25 1400 | 2025-02-25 1600 | HIGH\", event.toFileFormat(),","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"AnAfterthought"},"content":"                \"Check that format of string for saving is correct.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"AnAfterthought"},"content":"     * Tests that the correct string for an umarked event is generated.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"AnAfterthought"},"content":"    public void testToStringUnmarked() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"AnAfterthought"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"AnAfterthought"},"content":"        LocalDateTime from \u003d LocalDateTime.parse(\"2025-02-25 1400\", dateTimeFormatter);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"AnAfterthought"},"content":"        LocalDateTime to \u003d LocalDateTime.parse(\"2025-02-25 1600\", dateTimeFormatter);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"AnAfterthought"},"content":"        Event event \u003d new Event(\"Meeting\", Priority.HIGH, from, to);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"[E][ ] Meeting \u003cHIGH\u003e (from: Feb 25 2025 02:00 pm to: Feb 25 2025 04:00 pm)\",","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"AnAfterthought"},"content":"                event.toString(),","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"AnAfterthought"},"content":"                \"Check that format of string for saving is correct.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"AnAfterthought"},"content":"     * Tests that the correct string for a marked event is generated.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"AnAfterthought"},"content":"    public void testToStringMarked() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"AnAfterthought"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"AnAfterthought"},"content":"        LocalDateTime from \u003d LocalDateTime.parse(\"2025-02-25 1400\", dateTimeFormatter);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"AnAfterthought"},"content":"        LocalDateTime to \u003d LocalDateTime.parse(\"2025-02-25 1600\", dateTimeFormatter);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"AnAfterthought"},"content":"        Event event \u003d new Event(\"Meeting\", Priority.HIGH, from, to);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"AnAfterthought"},"content":"        event.setIsDone(true);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"[E][X] Meeting \u003cHIGH\u003e (from: Feb 25 2025 02:00 pm to: Feb 25 2025 04:00 pm)\",","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"AnAfterthought"},"content":"                event.toString(),","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"AnAfterthought"},"content":"                \"Check that format of string for saving is correct.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"AnAfterthought"},"content":"     * Tests that event can identify date that is the same as from.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"AnAfterthought"},"content":"    public void testIsSameDateTrue() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"AnAfterthought"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"AnAfterthought"},"content":"        LocalDateTime from \u003d LocalDateTime.parse(\"2025-02-25 1400\", dateTimeFormatter);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"AnAfterthought"},"content":"        LocalDateTime to \u003d LocalDateTime.parse(\"2025-02-25 1600\", dateTimeFormatter);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"AnAfterthought"},"content":"        Event event \u003d new Event(\"Meeting\", Priority.HIGH, from, to);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"AnAfterthought"},"content":"        LocalDateTime other \u003d LocalDateTime.parse(\"2025-02-25 0000\", dateTimeFormatter);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"AnAfterthought"},"content":"        assertTrue(event.isSameDate(other));","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"AnAfterthought"},"content":"     * Tests that event can identify date that is not the same as by.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"AnAfterthought"},"content":"    public void testIsSameDateFalse() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"AnAfterthought"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"AnAfterthought"},"content":"        LocalDateTime from \u003d LocalDateTime.parse(\"2025-02-25 1400\", dateTimeFormatter);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"AnAfterthought"},"content":"        LocalDateTime to \u003d LocalDateTime.parse(\"2025-02-25 1600\", dateTimeFormatter);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"AnAfterthought"},"content":"        Event event \u003d new Event(\"Meeting\", Priority.HIGH, from, to);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"AnAfterthought"},"content":"        LocalDateTime before \u003d LocalDateTime.parse(\"2025-02-20 0000\", dateTimeFormatter);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"AnAfterthought"},"content":"        LocalDateTime after \u003d LocalDateTime.parse(\"2025-02-27 0000\", dateTimeFormatter);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"AnAfterthought"},"content":"        assertFalse(event.isSameDate(before));","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"AnAfterthought"},"content":"        assertFalse(event.isSameDate(after));","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-02-19","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":104}},{"path":"src/test/java/bpluschatter/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"package bpluschatter.task;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.enumerations.Priority;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"AnAfterthought"},"content":"public class TaskListTest {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"AnAfterthought"},"content":"     * Tests for successful addition of tasks.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"AnAfterthought"},"content":"    public void testAddTask() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"AnAfterthought"},"content":"        ArrayList\u003cTask\u003e tasksOne \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"AnAfterthought"},"content":"        ArrayList\u003cTask\u003e tasksTwo \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"AnAfterthought"},"content":"        tasksOne.add(new ToDo(\"Read\", Priority.HIGH));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"AnAfterthought"},"content":"        tasksTwo.add(new ToDo(\"Read\", Priority.HIGH));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"AnAfterthought"},"content":"        TaskList testTaskList \u003d new TaskList(tasksOne);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"AnAfterthought"},"content":"        tasksTwo.add(new ToDo(\"Eat\", Priority.HIGH));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"AnAfterthought"},"content":"        testTaskList \u003d testTaskList.add(new ToDo(\"Eat\", Priority.HIGH));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(2, testTaskList.getSize(), \"Check that size is correct after adding task\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(new TaskList(tasksTwo).get(0).toString(), testTaskList.get(0).toString(),","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"AnAfterthought"},"content":"                \"Check that TaskList is correct after adding task\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(new TaskList(tasksTwo).get(1).toString(), testTaskList.get(1).toString(),","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"AnAfterthought"},"content":"                \"Check that TaskList is correct after adding task\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"AnAfterthought"},"content":"     * Tests for successful removal of task.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"AnAfterthought"},"content":"    public void testRemoveTask() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"AnAfterthought"},"content":"        TaskList testTaskList \u003d new TaskList();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"AnAfterthought"},"content":"        testTaskList \u003d testTaskList.add(new ToDo(\"Read\", Priority.HIGH))","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"AnAfterthought"},"content":"                .add(new ToDo(\"Eat\", Priority.HIGH));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"AnAfterthought"},"content":"        testTaskList \u003d testTaskList.remove(0);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"AnAfterthought"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"AnAfterthought"},"content":"        tasks.add(new ToDo(\"Eat\", Priority.HIGH));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(1, testTaskList.getSize(), \"Check that size is correct after deleting task\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(new TaskList(tasks).get(0).toString(), testTaskList.get(0).toString(),","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"AnAfterthought"},"content":"                \"Check that TaskList is correct after deleting task\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"AnAfterthought"},"content":"     * Tests for successful retrieval of task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"AnAfterthought"},"content":"    public void testGet() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"AnAfterthought"},"content":"        TaskList testTaskList \u003d new TaskList();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"AnAfterthought"},"content":"        testTaskList \u003d testTaskList.add(new ToDo(\"Read\", Priority.HIGH))","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"AnAfterthought"},"content":"                .add(new ToDo(\"Eat\", Priority.HIGH));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"AnAfterthought"},"content":"        testTaskList \u003d testTaskList.remove(0);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"AnAfterthought"},"content":"        testTaskList \u003d testTaskList.add(new ToDo(\"Exercise\", Priority.HIGH))","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"AnAfterthought"},"content":"                .add(new ToDo(\"Clean room\", Priority.HIGH));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"[T][ ] Exercise \u003cHIGH\u003e\", testTaskList.get(1).toString(),","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"AnAfterthought"},"content":"                \"Check that TaskList gets correct task\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"AnAfterthought"},"content":"     * Tests that tasks are listed in descending order of priority.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"AnAfterthought"},"content":"    public void testToString() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"AnAfterthought"},"content":"        TaskList testTaskList \u003d new TaskList();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"AnAfterthought"},"content":"        testTaskList \u003d testTaskList.add(new ToDo(\"Read\", Priority.MEDIUM))","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"AnAfterthought"},"content":"                .add(new ToDo(\"Eat\", Priority.LOW))","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"AnAfterthought"},"content":"                .add(new ToDo(\"Exercise\", Priority.HIGH));","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"1.[T][ ] Exercise \u003cHIGH\u003e\\n\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"AnAfterthought"},"content":"                + \"2.[T][ ] Read \u003cMEDIUM\u003e\\n\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"AnAfterthought"},"content":"                + \"3.[T][ ] Eat \u003cLOW\u003e\\n\", testTaskList.toString(), \"Check that tasks output is correct.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":79}}]
