[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"AnAfterthought"},"content":"    mainClass.set(\"bpluschatter.ui.BPlusChatter\")","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"AnAfterthought"},"content":"    archiveBaseName \u003d \"bpluschatter\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"AnAfterthought"},"content":"checkstyle {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"AnAfterthought"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":7,"-":39}},{"path":"data/BPlusChatter.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"T | 0 | read book","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"D | 1 | read book | 2020-01-01 1600","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"E | 1 | read book | 2020-01-01 1200 | 2020-01-01 1500","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":"T | 0 | exercse]","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":"T | 1 | exercise","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":5}},{"path":"src/main/java/bpluschatter/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"package bpluschatter.command;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.exception.InvalidDeadlineException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.exception.InvalidDeleteException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.exception.InvalidEventException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.exception.InvalidMarkException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.exception.InvalidOnException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.exception.InvalidToDoException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.exception.UnknownCommandException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.task.Deadline;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.task.Event;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.task.Task;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.task.TaskList;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.task.ToDo;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.ui.Ui;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"AnAfterthought"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"AnAfterthought"},"content":" * Represents a parser to make sense of user commands.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"AnAfterthought"},"content":" * The parser can also make sense of tasks from save files.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"AnAfterthought"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"AnAfterthought"},"content":"public class Parser {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"AnAfterthought"},"content":"    private final DateTimeFormatter dateTimeFormatter;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"AnAfterthought"},"content":"     * Constructor for Parser.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"AnAfterthought"},"content":"     * Sets the DateTimeFormatter object for parsing date and time strings.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"AnAfterthought"},"content":"    public Parser() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"AnAfterthought"},"content":"        this.dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"AnAfterthought"},"content":"     * Returns updated list of tasks after adding ToDo task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"AnAfterthought"},"content":"     * @param details Details of todo command.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"AnAfterthought"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"AnAfterthought"},"content":"     * @param ui UI object.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"AnAfterthought"},"content":"     * @return Updated list of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"AnAfterthought"},"content":"     * @throws InvalidToDoException If details is empty.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"AnAfterthought"},"content":"    private TaskList parseToDo(String details, TaskList tasks, Ui ui) throws InvalidToDoException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"AnAfterthought"},"content":"        if (details.isEmpty()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"AnAfterthought"},"content":"            throw new InvalidToDoException();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"AnAfterthought"},"content":"        ToDo toDo \u003d new ToDo(details);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"AnAfterthought"},"content":"        TaskList newTasks \u003d tasks.add(toDo);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"AnAfterthought"},"content":"        ui.showAdd(toDo, tasks.size());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"AnAfterthought"},"content":"        return newTasks;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"AnAfterthought"},"content":"     * Returns updated list of tasks after adding Deadline task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"AnAfterthought"},"content":"     * @param details Details of deadline command.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"AnAfterthought"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"AnAfterthought"},"content":"     * @param ui UI object.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"AnAfterthought"},"content":"     * @return Updated list of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"AnAfterthought"},"content":"     * @throws DateTimeParseException If date and time format is wrong.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"AnAfterthought"},"content":"     * @throws InvalidDeadlineException If deadline command is incomplete.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"AnAfterthought"},"content":"    private TaskList parseDeadline(String details, TaskList tasks, Ui ui) throws DateTimeParseException,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"AnAfterthought"},"content":"            InvalidDeadlineException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"AnAfterthought"},"content":"        String[] detailParts \u003d details.split(\" /by \", 2);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"AnAfterthought"},"content":"        if (detailParts.length !\u003d 2) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"AnAfterthought"},"content":"            throw new InvalidDeadlineException();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"AnAfterthought"},"content":"        LocalDateTime by \u003d LocalDateTime.parse(detailParts[1], dateTimeFormatter);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"AnAfterthought"},"content":"        Deadline deadline \u003d new Deadline(detailParts[0], by);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"AnAfterthought"},"content":"        TaskList newTasks \u003d tasks.add(deadline);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"AnAfterthought"},"content":"        ui.showAdd(deadline, tasks.size());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"AnAfterthought"},"content":"        return newTasks;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"AnAfterthought"},"content":"     * Returns updated list of tasks after adding Event task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"AnAfterthought"},"content":"     * @param details Details of event command.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"AnAfterthought"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"AnAfterthought"},"content":"     * @param ui UI object.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"AnAfterthought"},"content":"     * @return Updated list of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"AnAfterthought"},"content":"     * @throws DateTimeParseException If date and time format is wrong.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"AnAfterthought"},"content":"     * @throws InvalidEventException If event command is incomplete.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"AnAfterthought"},"content":"    private TaskList parseEvent(String details, TaskList tasks, Ui ui) throws DateTimeParseException,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"AnAfterthought"},"content":"            InvalidEventException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"AnAfterthought"},"content":"        if (details.isEmpty()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"AnAfterthought"},"content":"            throw new InvalidEventException();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"AnAfterthought"},"content":"        String[] detailParts \u003d details.split(\" /from \", 2);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"AnAfterthought"},"content":"        if (detailParts.length !\u003d 2) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"AnAfterthought"},"content":"            throw new InvalidEventException();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"AnAfterthought"},"content":"        String[] duration \u003d detailParts[1].split(\" /to \", 2);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"AnAfterthought"},"content":"        if (duration.length !\u003d 2) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"AnAfterthought"},"content":"            throw new InvalidEventException();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"AnAfterthought"},"content":"        LocalDateTime from \u003d LocalDateTime.parse(duration[0], dateTimeFormatter);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"AnAfterthought"},"content":"        LocalDateTime to \u003d LocalDateTime.parse(duration[1], dateTimeFormatter);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"AnAfterthought"},"content":"        Event event \u003d new Event(detailParts[0], from, to);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"AnAfterthought"},"content":"        TaskList newTasks \u003d tasks.add(event);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"AnAfterthought"},"content":"        ui.showAdd(event, tasks.size());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"AnAfterthought"},"content":"        return newTasks;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"AnAfterthought"},"content":"     * Returns updated list of tasks after adding marking/unmarking a task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"AnAfterthought"},"content":"     * @param details Index of task to be marked/unmarked.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"AnAfterthought"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"AnAfterthought"},"content":"     * @param ui UI object.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"AnAfterthought"},"content":"     * @param isDone Is true if task is marked as completed, false if unmarked.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"AnAfterthought"},"content":"     * @return Updated list of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"AnAfterthought"},"content":"     * @throws InvalidMarkException If index is not a number or index larger than number of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"AnAfterthought"},"content":"    private TaskList parseMark(String details, TaskList tasks, Ui ui, boolean isDone) throws InvalidMarkException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"AnAfterthought"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"AnAfterthought"},"content":"            int taskIndex \u003d Integer.parseInt(details) - 1;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"AnAfterthought"},"content":"            tasks.get(taskIndex).setIsDone(isDone);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"AnAfterthought"},"content":"            ui.showMark(tasks.get(taskIndex));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"AnAfterthought"},"content":"            return tasks;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"AnAfterthought"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"AnAfterthought"},"content":"            throw new InvalidMarkException();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"AnAfterthought"},"content":"     * Returns updated list of tasks after adding deleting a task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"AnAfterthought"},"content":"     * @param details Index of task to be deleted.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"AnAfterthought"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"AnAfterthought"},"content":"     * @param ui UI object.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"AnAfterthought"},"content":"     * @return Updated list of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"AnAfterthought"},"content":"     * @throws InvalidDeleteException If index is not a number or index larger than number of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"AnAfterthought"},"content":"    private TaskList parseDelete(String details, TaskList tasks, Ui ui) throws InvalidDeleteException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"AnAfterthought"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"AnAfterthought"},"content":"            int taskIndex \u003d Integer.parseInt(details) - 1;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"AnAfterthought"},"content":"            Task task \u003d tasks.get(taskIndex);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"AnAfterthought"},"content":"            TaskList newTasks \u003d tasks.remove(taskIndex);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"AnAfterthought"},"content":"            ui.showDelete(task, newTasks.size());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"AnAfterthought"},"content":"            return newTasks;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"AnAfterthought"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"AnAfterthought"},"content":"            throw new InvalidDeleteException();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"AnAfterthought"},"content":"     * Prints tasks that occur on specific date.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"AnAfterthought"},"content":"     * @param details Date in format yyyy-MM-dd.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"AnAfterthought"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"AnAfterthought"},"content":"     * @throws InvalidOnException If details is empty.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"AnAfterthought"},"content":"     * @throws DateTimeParseException If date format is wrong or on command is incomplete or incorrect.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"AnAfterthought"},"content":"    private void parseOn(String details, TaskList tasks) throws InvalidOnException, DateTimeParseException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"AnAfterthought"},"content":"        if (details.isEmpty()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"AnAfterthought"},"content":"            throw new InvalidOnException();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"AnAfterthought"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(details + \" 0000\", dateTimeFormatter);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"AnAfterthought"},"content":"        int counter \u003d 1;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"AnAfterthought"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"AnAfterthought"},"content":"            if (tasks.get(i).isSameDate(dateTime)) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"AnAfterthought"},"content":"                System.out.println(\"\\t\" + counter + \".\" + tasks.get(i));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"AnAfterthought"},"content":"                counter +\u003d 1;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"AnAfterthought"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"AnAfterthought"},"content":"     * Prints tasks containing specified keyword.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"AnAfterthought"},"content":"     * @param details Keyword to be found.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"AnAfterthought"},"content":"     * @param tasks List of tasks currently available.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"AnAfterthought"},"content":"     * @param ui UI object.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"AnAfterthought"},"content":"    private void parseFind(String details, TaskList tasks, Ui ui) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"AnAfterthought"},"content":"        TaskList validTasks \u003d new TaskList();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"AnAfterthought"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"AnAfterthought"},"content":"            String taskDescription \u003d tasks.get(i).toString().toLowerCase();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"AnAfterthought"},"content":"            if (taskDescription.contains(details.toLowerCase())) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"AnAfterthought"},"content":"                validTasks.add(tasks.get(i));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"AnAfterthought"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"AnAfterthought"},"content":"        ui.showFind(validTasks);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"AnAfterthought"},"content":"     * Returns updated TaskList after modification commands.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"AnAfterthought"},"content":"     * Returns same TaskList after commands that do not modify TaskList.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"AnAfterthought"},"content":"     * @param userInput Command.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"AnAfterthought"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"AnAfterthought"},"content":"     * @param ui UI object.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"AnAfterthought"},"content":"     * @return Updated list of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"AnAfterthought"},"content":"    public TaskList parseCommand(String userInput, TaskList tasks, Ui ui) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"AnAfterthought"},"content":"        String[] taskParts \u003d userInput.split(\" \", 2);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"AnAfterthought"},"content":"        String command \u003d taskParts[0];","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"AnAfterthought"},"content":"        String details \u003d \"\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"AnAfterthought"},"content":"        if (taskParts.length \u003d\u003d 2) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"AnAfterthought"},"content":"            details \u003d taskParts[1];","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"AnAfterthought"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"AnAfterthought"},"content":"            switch (command.toLowerCase()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"AnAfterthought"},"content":"            case \"list\" -\u003e tasks.list();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"AnAfterthought"},"content":"            case \"todo\" -\u003e {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"AnAfterthought"},"content":"                return parseToDo(details, tasks, ui);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"AnAfterthought"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"AnAfterthought"},"content":"            case \"deadline\" -\u003e {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"AnAfterthought"},"content":"                return parseDeadline(details, tasks, ui);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"AnAfterthought"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"AnAfterthought"},"content":"            case \"event\" -\u003e {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"AnAfterthought"},"content":"                return parseEvent(details, tasks, ui);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"AnAfterthought"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"AnAfterthought"},"content":"            case \"mark\" -\u003e {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"AnAfterthought"},"content":"                return parseMark(details, tasks, ui, true);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"AnAfterthought"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"AnAfterthought"},"content":"            case \"unmark\" -\u003e {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"AnAfterthought"},"content":"                return parseMark(details, tasks, ui, false);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"AnAfterthought"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"AnAfterthought"},"content":"            case \"delete\" -\u003e {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"AnAfterthought"},"content":"                return parseDelete(details, tasks, ui);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"AnAfterthought"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"AnAfterthought"},"content":"            case \"on\" -\u003e parseOn(details, tasks);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"AnAfterthought"},"content":"            case \"find\" -\u003e parseFind(details, tasks, ui);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"AnAfterthought"},"content":"            default -\u003e throw new UnknownCommandException();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"AnAfterthought"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"AnAfterthought"},"content":"        } catch (UnknownCommandException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"AnAfterthought"},"content":"            ui.showUnknownCommandError();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"AnAfterthought"},"content":"        } catch (InvalidToDoException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"AnAfterthought"},"content":"            ui.showToDoError();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"AnAfterthought"},"content":"        } catch (InvalidDeadlineException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"AnAfterthought"},"content":"            ui.showDeadlineError();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"AnAfterthought"},"content":"        } catch (InvalidEventException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"AnAfterthought"},"content":"            ui.showEventError();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"AnAfterthought"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"AnAfterthought"},"content":"            ui.showDateTimeFormatError();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"AnAfterthought"},"content":"        } catch (InvalidMarkException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"AnAfterthought"},"content":"            ui.showMarkError(tasks.size());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"AnAfterthought"},"content":"        } catch (InvalidDeleteException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"AnAfterthought"},"content":"            ui.showDeleteError(tasks.size());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"AnAfterthought"},"content":"        } catch (InvalidOnException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"AnAfterthought"},"content":"            ui.showOnError();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"AnAfterthought"},"content":"        return tasks;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"AnAfterthought"},"content":"     * Returns task parsed from a line in the save file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"AnAfterthought"},"content":"     * @param taskString String from save file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"AnAfterthought"},"content":"     * @return Task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"AnAfterthought"},"content":"    public Task parseFromFile(String taskString) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"AnAfterthought"},"content":"        String[] taskParts \u003d taskString.split(\" \\\\| \");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"AnAfterthought"},"content":"        Task newTask \u003d new Task(taskParts[2]);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"AnAfterthought"},"content":"        switch (taskParts[0]) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"AnAfterthought"},"content":"        case \"T\" -\u003e newTask \u003d new ToDo(taskParts[2]);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"AnAfterthought"},"content":"        case \"D\" -\u003e {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"AnAfterthought"},"content":"            LocalDateTime by \u003d LocalDateTime.parse(taskParts[3], dateTimeFormatter);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"AnAfterthought"},"content":"            newTask \u003d new Deadline(taskParts[2], by);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"AnAfterthought"},"content":"        case \"E\" -\u003e {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"AnAfterthought"},"content":"            LocalDateTime from \u003d LocalDateTime.parse(taskParts[3], dateTimeFormatter);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"AnAfterthought"},"content":"            LocalDateTime to \u003d LocalDateTime.parse(taskParts[4], dateTimeFormatter);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"AnAfterthought"},"content":"            newTask \u003d new Event(taskParts[2], from, to);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"AnAfterthought"},"content":"        default -\u003e newTask \u003d new Task(taskParts[2]);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"AnAfterthought"},"content":"        if (taskParts[1].equals(\"1\")) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"AnAfterthought"},"content":"            newTask.setIsDone(true);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"AnAfterthought"},"content":"        return newTask;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":288}},{"path":"src/main/java/bpluschatter/exception/InvalidDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"package bpluschatter.exception;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":" * Represents an exception when deadline command is incorrect or incomplete.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":"public class InvalidDeadlineException extends Exception {","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-01-18","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":7}},{"path":"src/main/java/bpluschatter/exception/InvalidDeleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"package bpluschatter.exception;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":" * Represents an exception when delete command is incorrect or incomplete.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":"public class InvalidDeleteException extends Exception {","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-01-18","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":7}},{"path":"src/main/java/bpluschatter/exception/InvalidEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"package bpluschatter.exception;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":" * Represents an exception when event command is incorrect or incomplete.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":"public class InvalidEventException extends Exception {","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-01-18","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":7}},{"path":"src/main/java/bpluschatter/exception/InvalidMarkException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"package bpluschatter.exception;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":" * Represents an exception when mark/unmark command is incorrect or incomplete.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":"public class InvalidMarkException extends Exception {","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-01-18","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":7}},{"path":"src/main/java/bpluschatter/exception/InvalidOnException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"package bpluschatter.exception;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":" * Represents an exception when on command is incorrect or incomplete.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":"public class InvalidOnException extends RuntimeException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":7}},{"path":"src/main/java/bpluschatter/exception/InvalidToDoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"package bpluschatter.exception;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":" * Represents an exception when todo command is incorrect or incomplete.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":"public class InvalidToDoException extends Exception {","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-01-18","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":7}},{"path":"src/main/java/bpluschatter/exception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"package bpluschatter.exception;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":" * Represents an exception when an unknown command is given.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":"public class UnknownCommandException extends Exception {","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-01-18","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":7}},{"path":"src/main/java/bpluschatter/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"package bpluschatter.storage;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"import java.io.File;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.command.Parser;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.task.Task;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.task.TaskList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"AnAfterthought"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"AnAfterthought"},"content":" * Saves tasks into a file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"AnAfterthought"},"content":" * Loads tasks from a save file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"AnAfterthought"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"AnAfterthought"},"content":"public class Storage {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"AnAfterthought"},"content":"    private final String filePath;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"AnAfterthought"},"content":"    private final Parser parser;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"AnAfterthought"},"content":"     * Constructor for Storage.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"AnAfterthought"},"content":"     * @param filePath Path of save file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"AnAfterthought"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"AnAfterthought"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"AnAfterthought"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"AnAfterthought"},"content":"     * Returns tasks from save file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"AnAfterthought"},"content":"     * @return List of tasks after retrieving them from save file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"AnAfterthought"},"content":"     * @throws IOException If error occurs during file creation.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"AnAfterthought"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"AnAfterthought"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"AnAfterthought"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"AnAfterthought"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"AnAfterthought"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"AnAfterthought"},"content":"            file.createNewFile();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"AnAfterthought"},"content":"        } else {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"AnAfterthought"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"AnAfterthought"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"AnAfterthought"},"content":"                tasks.add(parser.parseFromFile(scanner.nextLine()));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"AnAfterthought"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"AnAfterthought"},"content":"        return tasks;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"AnAfterthought"},"content":"     * Saves tasks into save file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"AnAfterthought"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"AnAfterthought"},"content":"     * @throws IOException If error occurs while writing to file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"AnAfterthought"},"content":"    public void save(TaskList tasks) throws IOException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"AnAfterthought"},"content":"        FileWriter fileWriter \u003d new FileWriter(filePath);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"AnAfterthought"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"AnAfterthought"},"content":"            fileWriter.write(tasks.get(i).toFileFormat() + System.lineSeparator());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"AnAfterthought"},"content":"        fileWriter.close();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":65}},{"path":"src/main/java/bpluschatter/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"package bpluschatter.task;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":" * Represents a deadline task","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"AnAfterthought"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"AnAfterthought"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"AnAfterthought"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"AnAfterthought"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"AnAfterthought"},"content":"     * @param description Details of task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"AnAfterthought"},"content":"     * @param by Date and time to complete task by.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"AnAfterthought"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"AnAfterthought"},"content":"        super(description);","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"AnAfterthought"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"AnAfterthought"},"content":"     * Returns string to be saved in file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"AnAfterthought"},"content":"     * @return String to be saved in file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"AnAfterthought"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"AnAfterthought"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"AnAfterthought"},"content":"        String task \u003d \"D |\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"AnAfterthought"},"content":"        if (this.isDone) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"AnAfterthought"},"content":"            task +\u003d \" 1 | \";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"AnAfterthought"},"content":"        } else {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"AnAfterthought"},"content":"            task +\u003d \" 0 | \";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"AnAfterthought"},"content":"        return task + this.description + \" | \" + this.by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"AnAfterthought"},"content":"     * Returns if task\u0027s date is the same as specified date.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"AnAfterthought"},"content":"     * @param dateTime Date and time to be compared.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"AnAfterthought"},"content":"     * @return If task\u0027s date is the same as specified date.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"AnAfterthought"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"AnAfterthought"},"content":"    public boolean isSameDate(LocalDateTime dateTime) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"AnAfterthought"},"content":"        return this.by.toLocalDate().equals(dateTime.toLocalDate());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"AnAfterthought"},"content":"     * Returns details of task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"AnAfterthought"},"content":"     * @return Details of task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"AnAfterthought"},"content":"    @Override","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"AnAfterthought"},"content":"    public String toString() {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"AnAfterthought"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"AnAfterthought"},"content":"                + this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\")) + \")\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-01-17","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":61}},{"path":"src/main/java/bpluschatter/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"package bpluschatter.task;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":" * Represents an event task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"AnAfterthought"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"AnAfterthought"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"AnAfterthought"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"AnAfterthought"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"AnAfterthought"},"content":"     * Constructor for Event.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"AnAfterthought"},"content":"     * @param description Details of task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"AnAfterthought"},"content":"     * @param from Start of event.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"AnAfterthought"},"content":"     * @param to End of event.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"AnAfterthought"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"AnAfterthought"},"content":"        super(description);","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"AnAfterthought"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"AnAfterthought"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"AnAfterthought"},"content":"     * Returns string to be saved in file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"AnAfterthought"},"content":"     * @return String to be saved in file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"AnAfterthought"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"AnAfterthought"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"AnAfterthought"},"content":"        String task \u003d \"E |\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"AnAfterthought"},"content":"        if (this.isDone) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"AnAfterthought"},"content":"            task +\u003d \" 1 | \";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"AnAfterthought"},"content":"        } else {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"AnAfterthought"},"content":"            task +\u003d \" 0 | \";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"AnAfterthought"},"content":"        return task + this.description + \" | \"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"AnAfterthought"},"content":"                + this.from.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")) + \" | \"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"AnAfterthought"},"content":"                + this.to.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"AnAfterthought"},"content":"     * Returns if task\u0027s date is the same as specified date.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"AnAfterthought"},"content":"     * @param dateTime Date and time to be compared.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"AnAfterthought"},"content":"     * @return If task\u0027s date is the same as specified date.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"AnAfterthought"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"AnAfterthought"},"content":"    public boolean isSameDate(LocalDateTime dateTime) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"AnAfterthought"},"content":"        return this.from.toLocalDate().equals(dateTime.toLocalDate());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"AnAfterthought"},"content":"     * Returns details of task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"AnAfterthought"},"content":"     * @return Details of task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"AnAfterthought"},"content":"    @Override","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"AnAfterthought"},"content":"    public String toString() {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"AnAfterthought"},"content":"        return \"[E]\" + super.toString() + \" (from: \"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"AnAfterthought"},"content":"                + this.from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\"))","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"AnAfterthought"},"content":"                + \" to: \" + this.to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\")) + \")\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-01-17","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":67}},{"path":"src/main/java/bpluschatter/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"package bpluschatter.task;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":" * Represents a task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"AnAfterthought"},"content":"public class Task {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"AnAfterthought"},"content":"    protected String description;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"AnAfterthought"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"AnAfterthought"},"content":"     * Constructor for Task","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"AnAfterthought"},"content":"     * @param description Details of task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"AnAfterthought"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"AnAfterthought"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"AnAfterthought"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"AnAfterthought"},"content":"     * Returns status icon.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"AnAfterthought"},"content":"     * @return Status icon.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"AnAfterthought"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"AnAfterthought"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"AnAfterthought"},"content":"     * Sets the completion status of the task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"AnAfterthought"},"content":"     * @param isDone Completion status of task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"AnAfterthought"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"AnAfterthought"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"AnAfterthought"},"content":"     * Returns completion status of task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"AnAfterthought"},"content":"     * @return Completion status of task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"AnAfterthought"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"AnAfterthought"},"content":"        return this.isDone;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"AnAfterthought"},"content":"     * Returns string to be saved in file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"AnAfterthought"},"content":"     * @return String to be saved in file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"AnAfterthought"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"AnAfterthought"},"content":"        return \"\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"AnAfterthought"},"content":"     * Returns if task\u0027s date is the same as specified date.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"AnAfterthought"},"content":"     * @param dateTime Date and time to be compared.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"AnAfterthought"},"content":"     * @return If task\u0027s date is the same as specified date.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"AnAfterthought"},"content":"    public boolean isSameDate(LocalDateTime dateTime) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"AnAfterthought"},"content":"        return false;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"AnAfterthought"},"content":"     * Returns details of task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"AnAfterthought"},"content":"     * @return Details of task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"AnAfterthought"},"content":"    public String toString() {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"AnAfterthought"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-01-17","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":76}},{"path":"src/main/java/bpluschatter/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"package bpluschatter.task;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":" * Represents a list of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"AnAfterthought"},"content":"public class TaskList {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"AnAfterthought"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"AnAfterthought"},"content":"     * Constructor for TaskList","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"AnAfterthought"},"content":"    public TaskList() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"AnAfterthought"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"AnAfterthought"},"content":"     * Constructor for TaskList","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"AnAfterthought"},"content":"     * @param tasks ArrayList of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"AnAfterthought"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"AnAfterthought"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"AnAfterthought"},"content":"     * Returns updated list of tasks after adding a task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"AnAfterthought"},"content":"     * @param task Task to be added.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"AnAfterthought"},"content":"     * @return Updated list of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"AnAfterthought"},"content":"    public TaskList add(Task task) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"AnAfterthought"},"content":"        this.tasks.add(task);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"AnAfterthought"},"content":"        return new TaskList(this.tasks);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"AnAfterthought"},"content":"     * Returns updated list of tasks after deleting a task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"AnAfterthought"},"content":"     * @param index Index of task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"AnAfterthought"},"content":"     * @return Updated list of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"AnAfterthought"},"content":"    public TaskList remove(int index) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"AnAfterthought"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"AnAfterthought"},"content":"        return new TaskList(this.tasks);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"AnAfterthought"},"content":"     * Returns number of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"AnAfterthought"},"content":"     * @return Number of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"AnAfterthought"},"content":"    public int size() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"AnAfterthought"},"content":"        return tasks.size();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"AnAfterthought"},"content":"     * Returns task on specified index.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"AnAfterthought"},"content":"     * @param index Index of task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"AnAfterthought"},"content":"     * @return Task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"AnAfterthought"},"content":"    public Task get(int index) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"AnAfterthought"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"AnAfterthought"},"content":"     * Prints all tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"AnAfterthought"},"content":"    public void list() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"AnAfterthought"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"AnAfterthought"},"content":"            System.out.println(\"\\t\" + (i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":76}},{"path":"src/main/java/bpluschatter/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"package bpluschatter.task;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":" * Represents todo task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":"    public ToDo(String description) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"AnAfterthought"},"content":"        super(description);","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"AnAfterthought"},"content":"     * Returns string to be saved in file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"AnAfterthought"},"content":"     * @return String to be saved in file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"AnAfterthought"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"AnAfterthought"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"AnAfterthought"},"content":"        String task \u003d \"T |\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"AnAfterthought"},"content":"        if (isDone) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"AnAfterthought"},"content":"            task +\u003d \" 1 | \";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"AnAfterthought"},"content":"        } else {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"AnAfterthought"},"content":"            task +\u003d \" 0 | \";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"AnAfterthought"},"content":"        return task + description;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"AnAfterthought"},"content":"     * Returns details of task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"AnAfterthought"},"content":"     * @return Details of task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"AnAfterthought"},"content":"    @Override","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"AnAfterthought"},"content":"    public String toString() {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"AnAfterthought"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-01-17","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":36}},{"path":"src/main/java/bpluschatter/ui/BPlusChatter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"package bpluschatter.ui;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.command.Parser;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.storage.Storage;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.task.TaskList;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"AnAfterthought"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"AnAfterthought"},"content":" * Creates and runs chatbot","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"AnAfterthought"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"AnAfterthought"},"content":"public class BPlusChatter {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"AnAfterthought"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"AnAfterthought"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"AnAfterthought"},"content":"    private Ui ui;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"AnAfterthought"},"content":"     * Constructor for chatbot BPlusChatter.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"AnAfterthought"},"content":"     * @param filePath Save file for chatbot.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"AnAfterthought"},"content":"    public BPlusChatter(String filePath) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"AnAfterthought"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"AnAfterthought"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"AnAfterthought"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"AnAfterthought"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"AnAfterthought"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"AnAfterthought"},"content":"            ui.showLoadingError();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"AnAfterthought"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"AnAfterthought"},"content":"     * Parses user commands and returns results.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"AnAfterthought"},"content":"    public void run() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"AnAfterthought"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"AnAfterthought"},"content":"        Scanner userInputScanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"AnAfterthought"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"AnAfterthought"},"content":"        while (true) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"AnAfterthought"},"content":"            String userInput \u003d userInputScanner.nextLine();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"AnAfterthought"},"content":"            if (userInput.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"AnAfterthought"},"content":"                ui.showGoodbye();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"AnAfterthought"},"content":"                break;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"AnAfterthought"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"AnAfterthought"},"content":"            tasks \u003d parser.parseCommand(userInput, tasks, ui);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"AnAfterthought"},"content":"            try {","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"AnAfterthought"},"content":"                storage.save(tasks);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"AnAfterthought"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"AnAfterthought"},"content":"                ui.showSavingError();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"AnAfterthought"},"content":"            }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"AnAfterthought"},"content":"     * Runs chatbot.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"AnAfterthought"},"content":"     * @param args Command line arguments if any.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"AnAfterthought"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"AnAfterthought"},"content":"        new BPlusChatter(\"./data/BPlusChatter.txt\").run();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-01-17","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":65}},{"path":"src/main/java/bpluschatter/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"package bpluschatter.ui;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.task.Task;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.task.TaskList;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":" * Prints out success and error messages after each command.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"AnAfterthought"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"AnAfterthought"},"content":"public class Ui {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"AnAfterthought"},"content":"     * Prints welcome message.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"AnAfterthought"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"AnAfterthought"},"content":"        String greeting \u003d \"\\tHello! I\u0027m BPlusChatter :)\\n\\tWhat can I do for you?\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"AnAfterthought"},"content":"        System.out.println(greeting);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"AnAfterthought"},"content":"     * Prints goodbye message.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"AnAfterthought"},"content":"    public void showGoodbye() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"AnAfterthought"},"content":"        String exit \u003d \"\\tBye bye. Come back soon!\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"AnAfterthought"},"content":"        System.out.println(exit);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"AnAfterthought"},"content":"     * Prints message after addition of a task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"AnAfterthought"},"content":"     * @param task Task that was added.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"AnAfterthought"},"content":"     * @param count Number of tasks after task was added.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"AnAfterthought"},"content":"    public void showAdd(Task task, int count) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"AnAfterthought"},"content":"        System.out.println(\"\\tOK. I\u0027ve added this task:\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"AnAfterthought"},"content":"        System.out.println(\"\\t\\t\" + task);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"AnAfterthought"},"content":"        System.out.println(\"\\tYou now have \" + count + \" task(s)\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"AnAfterthought"},"content":"     * Prints message after marking/unmarking a task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"AnAfterthought"},"content":"     * @param task Task that was marked/unmarked.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"AnAfterthought"},"content":"    public void showMark(Task task) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"AnAfterthought"},"content":"        if (task.getIsDone()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"AnAfterthought"},"content":"            System.out.println(\"\\tWell done! This task is done:\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"AnAfterthought"},"content":"        } else {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"AnAfterthought"},"content":"            System.out.println(\"\\tOk, this task is not done yet:\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"AnAfterthought"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"AnAfterthought"},"content":"        System.out.println(\"\\t\\t\" + task);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"AnAfterthought"},"content":"     * Prints message after deleting a task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"AnAfterthought"},"content":"     * @param task Task that was deleted.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"AnAfterthought"},"content":"     * @param count Number of tasks in list.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"AnAfterthought"},"content":"    public void showDelete(Task task, int count) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"AnAfterthought"},"content":"        System.out.println(\"\\tOk. I\u0027ve deleted this task:\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"AnAfterthought"},"content":"        System.out.println(\"\\t\\t\" + task);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"AnAfterthought"},"content":"        System.out.println(\"\\tYou now have \" + count + \" task(s)\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"AnAfterthought"},"content":"     * Prints error message for todo command.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"AnAfterthought"},"content":"    public void showToDoError() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"AnAfterthought"},"content":"        System.out.println(\"\\tWRONG FORMAT :(\\n \" + \"\\tFormat: todo \u003ctask\u003e\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"AnAfterthought"},"content":"     * Prints error message for deadline command.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"AnAfterthought"},"content":"    public void showDeadlineError() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"AnAfterthought"},"content":"        System.out.println(\"\\tWRONG FORMAT :(\\n \" + \"\\tFormat: deadline \u003ctask\u003e /by \u003cdate\u003e \u003ctime\u003e\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"AnAfterthought"},"content":"     * Prints error message for event command.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"AnAfterthought"},"content":"    public void showEventError() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"AnAfterthought"},"content":"        System.out.println(\"\\tWRONG FORMAT :(\\n \" + \"\\tFormat: event \u003ctask\u003e /from \u003cdate\u003e \u003ctime\u003e /to \u003cdate\u003e \u003ctime\u003e\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"AnAfterthought"},"content":"     * Prints error message for on command.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"AnAfterthought"},"content":"    public void showOnError() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"AnAfterthought"},"content":"        System.out.println(\"\\tWRONG FORMAT :(\\n \" + \"\\tFormat: on yyyy-MM-dd\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"AnAfterthought"},"content":"     * Prints error message when loading tasks from save file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"AnAfterthought"},"content":"    public void showLoadingError() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"AnAfterthought"},"content":"        System.out.println(\"Error encountered loading tasks!\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"AnAfterthought"},"content":"     * Prints error message when saving tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"AnAfterthought"},"content":"    public void showSavingError() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"AnAfterthought"},"content":"        System.out.println(\"Error encountered saving tasks!\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"AnAfterthought"},"content":"     * Prints error message for unknown commands.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"AnAfterthought"},"content":"    public void showUnknownCommandError() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"AnAfterthought"},"content":"        System.out.println(\"\\tUNKNOWN COMMAND :(\\n \"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"AnAfterthought"},"content":"                + \"\\tTry starting with todo, deadline, event, mark, unmark, list, delete, on, find or bye\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"AnAfterthought"},"content":"     * Prints error message if date and time format is wrong.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"AnAfterthought"},"content":"    public void showDateTimeFormatError() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"AnAfterthought"},"content":"        System.out.println(\"\\tWRONG FORMAT :(\\n\\tDate and time (24-hour) format: YYYY-MM-DD HHmm\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"AnAfterthought"},"content":"     * Prints error message for mark/unmark command.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"AnAfterthought"},"content":"    public void showMarkError(int count) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"AnAfterthought"},"content":"        System.out.println(\"\\tWRONG FORMAT :(\\n \" + \"\\tFormat: mark/unmark \u003ctask number\u003e\\n\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"AnAfterthought"},"content":"                + \"\\tYou have \" + count + \" task(s)\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"AnAfterthought"},"content":"     * Prints error message for delete command.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"AnAfterthought"},"content":"    public void showDeleteError(int count) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"AnAfterthought"},"content":"        System.out.println(\"\\tWRONG FORMAT :(\\n\\tFormat: delete \u003ctask number\u003e\\n\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"AnAfterthought"},"content":"                + \"\\tYou have \" + count + \" task(s)\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"AnAfterthought"},"content":"     * Prints tasks containing a keyword.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"AnAfterthought"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"AnAfterthought"},"content":"     * @param tasks List of tasks containing a keyword.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"AnAfterthought"},"content":"    public void showFind(TaskList tasks) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"AnAfterthought"},"content":"        System.out.println(\"\\tHere are the tasks I found:\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"AnAfterthought"},"content":"        tasks.list();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":146}},{"path":"src/test/java/bpluschatter/command/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"package bpluschatter.command;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"AnAfterthought"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.task.TaskList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.task.ToDo;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"AnAfterthought"},"content":"import bpluschatter.ui.Ui;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"AnAfterthought"},"content":"public class ParserTest {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"AnAfterthought"},"content":"     * Tests for successful todo command.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"AnAfterthought"},"content":"    public void testParseToDo_success() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"AnAfterthought"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"AnAfterthought"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"AnAfterthought"},"content":"        TaskList testTaskLists \u003d new TaskList();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"todo read\", testTaskLists, ui);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(1, testTaskLists.size(), \"Check size is correct after command\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"[T][ ] read\", testTaskLists.get(0).toString(),","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"AnAfterthought"},"content":"                \"Check task list is correct after command\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"AnAfterthought"},"content":"     * Tests for incorrect todo command.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"AnAfterthought"},"content":"    public void testParseToDo_failure() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"AnAfterthought"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"AnAfterthought"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"AnAfterthought"},"content":"        TaskList testTaskLists \u003d new TaskList();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"todo\", testTaskLists, ui);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists.list();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(0, testTaskLists.size(), \"Check size is correct after error\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"AnAfterthought"},"content":"     * Tests for successful deadline command.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"AnAfterthought"},"content":"    public void testParseDeadline_success() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"AnAfterthought"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"AnAfterthought"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"AnAfterthought"},"content":"        TaskList testTaskLists \u003d new TaskList();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"deadline read /by 2020-01-01 1600\", testTaskLists, ui);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(1, testTaskLists.size(), \"Check size is correct after command\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"[D][ ] read (by: Jan 1 2020 04:00 pm)\", testTaskLists.get(0).toString(),","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"AnAfterthought"},"content":"                \"Check task list is correct after command\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"AnAfterthought"},"content":"     * Tests for incorrect deadline command.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"AnAfterthought"},"content":"    public void testParseDeadline_failure() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"AnAfterthought"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"AnAfterthought"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"AnAfterthought"},"content":"        TaskList testTaskLists \u003d new TaskList();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"deadline read /by 2020-01-01\", testTaskLists, ui);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"deadline read\", testTaskLists, ui);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(0, testTaskLists.size(), \"Check size is correct after error\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"AnAfterthought"},"content":"     * Tests for successful event command.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"AnAfterthought"},"content":"    public void testParseEvent_success() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"AnAfterthought"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"AnAfterthought"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"AnAfterthought"},"content":"        TaskList testTaskLists \u003d new TaskList();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"event read /from 2020-01-01 1600 /to 2020-01-01 1800\",","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"AnAfterthought"},"content":"                testTaskLists, ui);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(1, testTaskLists.size(), \"Check size is correct after command\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"[E][ ] read (from: Jan 1 2020 04:00 pm to: Jan 1 2020 06:00 pm)\",","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"AnAfterthought"},"content":"                testTaskLists.get(0).toString(), \"Check task list is correct after command\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"AnAfterthought"},"content":"     * Tests for incorrect event command.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"AnAfterthought"},"content":"    public void testParseEvent_failure() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"AnAfterthought"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"AnAfterthought"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"AnAfterthought"},"content":"        TaskList testTaskLists \u003d new TaskList();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"event read from 2020-01-01 1600 to 2020-01-01 1800\",","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"AnAfterthought"},"content":"                testTaskLists, ui);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"event read /from 2020-01-01 /to 2020-01-1 1800\",","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"AnAfterthought"},"content":"                testTaskLists, ui);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(0, testTaskLists.size(), \"Check size is correct after error\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"AnAfterthought"},"content":"     * Tests for successful delete command.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"AnAfterthought"},"content":"    public void testParseDelete_success() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"AnAfterthought"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"AnAfterthought"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"AnAfterthought"},"content":"        TaskList testTaskLists \u003d new TaskList();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"todo read\", testTaskLists, ui);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"todo eat\", testTaskLists, ui);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"todo exercise\", testTaskLists, ui);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"delete 2\", testTaskLists, ui);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(2, testTaskLists.size(), \"Check size is correct after delete\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"[T][ ] read\", testTaskLists.get(0).toString(),","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"AnAfterthought"},"content":"                \"Check tasks are correct after delete\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"[T][ ] exercise\", testTaskLists.get(1).toString(),","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"AnAfterthought"},"content":"                \"Check tasks are correct after delete\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"AnAfterthought"},"content":"     * Tests for incorrect delete command.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"AnAfterthought"},"content":"    public void testParseDelete_fail() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"AnAfterthought"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"AnAfterthought"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"AnAfterthought"},"content":"        TaskList testTaskLists \u003d new TaskList();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"todo read\", testTaskLists, ui);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"delete 2\", testTaskLists, ui);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(1, testTaskLists.size(), \"Check size is correct after error\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"[T][ ] read\", testTaskLists.get(0).toString(),","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"AnAfterthought"},"content":"                \"Check tasks are correct after error\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"AnAfterthought"},"content":"     * Tests for successful mark command.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"AnAfterthought"},"content":"    public void testParseMark() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"AnAfterthought"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"AnAfterthought"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"AnAfterthought"},"content":"        TaskList testTaskLists \u003d new TaskList();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"todo Read\", testTaskLists, ui);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"todo Eat\", testTaskLists, ui);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"mark 1\", testTaskLists, ui);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"[T][X] Read\", testTaskLists.get(0).toString(),","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"AnAfterthought"},"content":"                \"Check that correct task is marked\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"[T][ ] Eat\", testTaskLists.get(1).toString(),","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"AnAfterthought"},"content":"                \"Check that correct task is marked\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"AnAfterthought"},"content":"     * Tests for successful unmark command.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"AnAfterthought"},"content":"    public void testParseUnmark() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"AnAfterthought"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"AnAfterthought"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"AnAfterthought"},"content":"        TaskList testTaskLists \u003d new TaskList();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"todo Read\", testTaskLists, ui);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"todo Eat\", testTaskLists, ui);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"mark 1\", testTaskLists, ui);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"mark 2\", testTaskLists, ui);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d parser.parseCommand(\"unmark 2\", testTaskLists, ui);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"[T][X] Read\", testTaskLists.get(0).toString(),","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"AnAfterthought"},"content":"                \"Check that correct task is unmarked\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"[T][ ] Eat\", testTaskLists.get(1).toString(),","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"AnAfterthought"},"content":"                \"Check that correct task is unmarked\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"AnAfterthought"},"content":"     * Tests for successful find command.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"AnAfterthought"},"content":"    public void testParseFind() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"AnAfterthought"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"AnAfterthought"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"AnAfterthought"},"content":"        TaskList testTaskLists \u003d new TaskList();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"AnAfterthought"},"content":"        ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"AnAfterthought"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d testTaskLists.add(new ToDo(\"Read book\"));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d testTaskLists.add(new ToDo(\"Eat\"));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"AnAfterthought"},"content":"        testTaskLists \u003d testTaskLists.add(new ToDo(\"Write book\"));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"AnAfterthought"},"content":"        parser.parseCommand(\"find book\", testTaskLists, ui);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"\\tHere are the tasks I found:\\n\\t1.[T][ ] Read book\\n\\t2.[T][ ] Write book\\n\",","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"AnAfterthought"},"content":"                outputStream.toString().replaceAll(\"\\r\\n\", \"\\n\"),","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"AnAfterthought"},"content":"                \"Check that correct tasks are found\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"AnAfterthought"},"content":"        System.setOut(System.out);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":212}},{"path":"src/test/java/bpluschatter/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"package bpluschatter.task;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"AnAfterthought"},"content":"public class TaskListTest {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"AnAfterthought"},"content":"     * Tests for successful addition of task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"AnAfterthought"},"content":"    public void testAdd() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"AnAfterthought"},"content":"        ArrayList\u003cTask\u003e tasksOne \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"AnAfterthought"},"content":"        ArrayList\u003cTask\u003e tasksTwo \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"AnAfterthought"},"content":"        tasksOne.add(new ToDo(\"Read\"));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"AnAfterthought"},"content":"        tasksTwo.add(new ToDo(\"Read\"));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"AnAfterthought"},"content":"        TaskList testTaskList \u003d new TaskList(tasksOne);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"AnAfterthought"},"content":"        tasksTwo.add(new ToDo(\"Eat\"));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"AnAfterthought"},"content":"        testTaskList \u003d testTaskList.add(new ToDo(\"Eat\"));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(2, testTaskList.size(), \"Check that size is correct after adding task\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(new TaskList(tasksTwo).get(0).toString(), testTaskList.get(0).toString(),","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"AnAfterthought"},"content":"                \"Check that TaskList is correct after adding task\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(new TaskList(tasksTwo).get(1).toString(), testTaskList.get(1).toString(),","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"AnAfterthought"},"content":"                \"Check that TaskList is correct after adding task\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"AnAfterthought"},"content":"     * Tests for successful deletion of task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"AnAfterthought"},"content":"    public void testDelete() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"AnAfterthought"},"content":"        TaskList testTaskList \u003d new TaskList();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"AnAfterthought"},"content":"        testTaskList \u003d testTaskList.add(new ToDo(\"Read\")).add(new ToDo(\"Eat\"));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"AnAfterthought"},"content":"        testTaskList \u003d testTaskList.remove(0);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"AnAfterthought"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"AnAfterthought"},"content":"        tasks.add(new ToDo(\"Eat\"));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(1, testTaskList.size(), \"Check that size is correct after deleting task\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(new TaskList(tasks).get(0).toString(), testTaskList.get(0).toString(),","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"AnAfterthought"},"content":"                \"Check that TaskList is correct after deleting task\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"AnAfterthought"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"AnAfterthought"},"content":"     * Tests for successful retrieval of task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"AnAfterthought"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"AnAfterthought"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"AnAfterthought"},"content":"    public void testGet() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"AnAfterthought"},"content":"        TaskList testTaskList \u003d new TaskList();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"AnAfterthought"},"content":"        testTaskList \u003d testTaskList.add(new ToDo(\"Read\")).add(new ToDo(\"Eat\"));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"AnAfterthought"},"content":"        testTaskList \u003d testTaskList.remove(0);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"AnAfterthought"},"content":"        testTaskList \u003d testTaskList.add(new ToDo(\"Exercise\")).add(new ToDo(\"Clean room\"));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"AnAfterthought"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"AnAfterthought"},"content":"        assertEquals(\"[T][ ] Exercise\", testTaskList.get(1).toString(),","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"AnAfterthought"},"content":"                \"Check that TaskList gets correct task\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"AnAfterthought"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"AnAfterthought"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":59}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AnAfterthought"},"content":"read book","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"AnAfterthought"},"content":"deadline return book /by 2025-02-01 1300","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"AnAfterthought"},"content":"event meeting /from 2025-02-01 1400 /to 2025-02-01 1600","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"AnAfterthought"},"content":"mark 3","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"AnAfterthought"},"content":"deadline make dinner by 4pm","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"AnAfterthought"},"content":"mark","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"AnAfterthought"},"content":"mark 1","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"AnAfterthought"},"content":"list","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"AnAfterthought"},"content":"unmark 1","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"AnAfterthought"},"content":"list","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"AnAfterthought"},"content":"todo buy eggs","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"AnAfterthought"},"content":"delete 5","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"AnAfterthought"},"content":"delete 1","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"AnAfterthought"},"content":"list","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"AnAfterthought"},"content":"bye","lastModifiedDate":"2025-01-18","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"AnAfterthought"},"content":"java -classpath ..\\bin bpluschatter.ui.BPlusChatter \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"AnAfterthought":1,"-":20}}]
