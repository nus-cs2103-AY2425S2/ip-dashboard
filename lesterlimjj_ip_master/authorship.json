[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"lesterlimjj"},"content":"# owen project template","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lesterlimjj"},"content":"1. After that, locate the `src/main/java/owen.java` file, right-click it, and choose `Run owen.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false}],"authorContributionMap":{"lesterlimjj":2,"-":24}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lesterlimjj"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lesterlimjj"},"content":"checkstyle {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lesterlimjj"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lesterlimjj"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lesterlimjj"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lesterlimjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lesterlimjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lesterlimjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lesterlimjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lesterlimjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lesterlimjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lesterlimjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lesterlimjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lesterlimjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lesterlimjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lesterlimjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lesterlimjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lesterlimjj"},"content":"    mainClass.set(\"owen.Owen\")","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lesterlimjj"},"content":"    archiveBaseName \u003d \"owen\"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lesterlimjj"},"content":"    archiveVersion \u003d \"0.2\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"lesterlimjj":23,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"lesterlimjj"},"content":"# Owen User Guide","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lesterlimjj"},"content":"Owen is your friendly chatbot who manages your tasks for you! ","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lesterlimjj"},"content":"Additionally, Owen only takes in typed commands, perfect for those who love typing fast!","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lesterlimjj"},"content":"![Screenshot of Owen in action](/docs/Ui.png)","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lesterlimjj"},"content":"## Installation:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lesterlimjj"},"content":"1. Download the latest jar from [Owen\u0027s releases](https://github.com/lesterlimjj/ip/releases/) to a folder of your choice.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lesterlimjj"},"content":"2. Open a terminal(e.g. Command Prompt) and navigate to the folder where the jar is located.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lesterlimjj"},"content":"3. Run the following command:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lesterlimjj"},"content":"```bash","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lesterlimjj"},"content":"java -jar owen-\u003cversion\u003e.jar","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lesterlimjj"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lesterlimjj"},"content":"## Owen\u0027s Great Features:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lesterlimjj"},"content":"Owen is apple to perform the following commands:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lesterlimjj"},"content":"- add todo","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lesterlimjj"},"content":"- add deadline","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lesterlimjj"},"content":"- add event","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lesterlimjj"},"content":"- list","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lesterlimjj"},"content":"- mark task as done","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lesterlimjj"},"content":"- unmark task as not done","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lesterlimjj"},"content":"- delete task","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lesterlimjj"},"content":"- tag a task","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lesterlimjj"},"content":"- find task by description","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lesterlimjj"},"content":"- bye","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lesterlimjj"},"content":"## Add Todo Command","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lesterlimjj"},"content":"Adds a simple todo with a description to your tasklist.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lesterlimjj"},"content":"Expected Command Format:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lesterlimjj"},"content":"```text","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lesterlimjj"},"content":"todo (description of task)","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lesterlimjj"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lesterlimjj"},"content":"Example Todo Command:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lesterlimjj"},"content":"```text","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lesterlimjj"},"content":"todo eat lunch","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lesterlimjj"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lesterlimjj"},"content":"For the response, Owen will reply you with the details of the Todo as well as the number of tasks you have.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lesterlimjj"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lesterlimjj"},"content":"The following todo has been added:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lesterlimjj"},"content":"[T][] eat lunch","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lesterlimjj"},"content":"You now have 1 tasks in the list.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lesterlimjj"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lesterlimjj"},"content":"## Add Deadline Command","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lesterlimjj"},"content":"Adds a deadline with a description and end date to your tasklist.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lesterlimjj"},"content":"Expected Command Format:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lesterlimjj"},"content":"```text","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lesterlimjj"},"content":"deadline (description of task) /by (end date)","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lesterlimjj"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lesterlimjj"},"content":"\u003cb\u003eDates need to be either M/d/yyyy HHmm or d/M/yyyy HHmm.\u003c/b\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lesterlimjj"},"content":"Example Deadline Command:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lesterlimjj"},"content":"```text","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lesterlimjj"},"content":"deadline assignment 1 /by 10/3/2020 2359","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lesterlimjj"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lesterlimjj"},"content":"For the response, Owen will reply you with the details of the deadline as well as the number of tasks you have.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lesterlimjj"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lesterlimjj"},"content":"The following deadline has been added:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lesterlimjj"},"content":"[D][] assignment 1 (by: Mar 10 2020 11:59pm)","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lesterlimjj"},"content":"You now have 2 tasks in the list.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lesterlimjj"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lesterlimjj"},"content":"## Add Event Command","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"lesterlimjj"},"content":"Adds a event with a description, start date and end date to your tasklist.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"lesterlimjj"},"content":"Expected Command Format:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"lesterlimjj"},"content":"```text","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"lesterlimjj"},"content":"event (description of task) /from (start date) /to (end date)","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"lesterlimjj"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"lesterlimjj"},"content":"\u003cb\u003eDates need to be either M/d/yyyy HHmm or d/M/yyyy HHmm.\u003c/b\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"lesterlimjj"},"content":"Example Event Command:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"lesterlimjj"},"content":"```text","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"lesterlimjj"},"content":"event project meeting /from 2/12/2020 1800 /to 2/12/2020 2000","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"lesterlimjj"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"lesterlimjj"},"content":"For the response, Owen will reply you with the details of the event as well as the number of tasks you have.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"lesterlimjj"},"content":"The following event has been added:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"lesterlimjj"},"content":"[E][] project meeting (from: Dec 02 2020 6:00pm to: Dec 02 2020 8:00pm)","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"lesterlimjj"},"content":"You now have 3 tasks in the list.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"lesterlimjj"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"lesterlimjj"},"content":"## List Command","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"lesterlimjj"},"content":"Gets the details of all provided tasks.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"lesterlimjj"},"content":"Expected Command Format:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"lesterlimjj"},"content":"```text","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"lesterlimjj"},"content":"list","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"lesterlimjj"},"content":"For the response, Owen will reply you with the details of all the tasks you have given it.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"lesterlimjj"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"lesterlimjj"},"content":"Friend, here is your list of tasks:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"lesterlimjj"},"content":"1. [T][] eat lunch","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"lesterlimjj"},"content":"2. [D][] assignment 1 (by: 10/3/2020 2359)","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"lesterlimjj"},"content":"3. [E][] project meeting (from: Dec 02 2020 6:00pm to: Dec 02 2020 8:00pm)","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"lesterlimjj"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"lesterlimjj"},"content":"## Mark Command","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"lesterlimjj"},"content":"Mark a task to be done based on an index in the list","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"lesterlimjj"},"content":"Expected Command Format:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"lesterlimjj"},"content":"```text","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"lesterlimjj"},"content":"mark (index of task to be done)","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"lesterlimjj"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"lesterlimjj"},"content":"Example mark Command:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"lesterlimjj"},"content":"```text","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"lesterlimjj"},"content":"mark 1","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"lesterlimjj"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"lesterlimjj"},"content":"For the response, Owen will reply you with status of the updated task.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"lesterlimjj"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"lesterlimjj"},"content":"The following is now done:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"lesterlimjj"},"content":"[T][X] eat lunch","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"lesterlimjj"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"lesterlimjj"},"content":"## Unmark Command","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"lesterlimjj"},"content":"unmark a task to be not done based on an index in the list","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"lesterlimjj"},"content":"Expected Command Format:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"lesterlimjj"},"content":"```text","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"lesterlimjj"},"content":"unmark (index of task to be not done)","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"lesterlimjj"},"content":"Example unmark Command:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"lesterlimjj"},"content":"```text","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"lesterlimjj"},"content":"unmark 1","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"lesterlimjj"},"content":"For the response, Owen will reply you with status of the updated task.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"lesterlimjj"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"lesterlimjj"},"content":"The following is now not done:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"lesterlimjj"},"content":"[T][] eat lunch","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"lesterlimjj"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"lesterlimjj"},"content":"## Delete Command","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"lesterlimjj"},"content":"Deletes a task from your tasklist based on an index in the list.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"lesterlimjj"},"content":"Expected Command Format:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"lesterlimjj"},"content":"```text","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"lesterlimjj"},"content":"delete (index of task to be deleted)","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"lesterlimjj"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"lesterlimjj"},"content":"Example unmark Command:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"lesterlimjj"},"content":"```text","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"lesterlimjj"},"content":"delete 1","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"lesterlimjj"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"lesterlimjj"},"content":"For the response, Owen will reply you with the details of the deleted task as well ","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"lesterlimjj"},"content":"as the number of remaining tasks in the list:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"lesterlimjj"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"lesterlimjj"},"content":"The following is now deleted:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"lesterlimjj"},"content":"1. [T][] eat lunch","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"lesterlimjj"},"content":"You now have 2 tasks in the list.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"lesterlimjj"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"lesterlimjj"},"content":"## Tag Task Command","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"lesterlimjj"},"content":"Tag an existing task based on an index in the list.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"lesterlimjj"},"content":"Expected Command Format:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"lesterlimjj"},"content":"```text","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"lesterlimjj"},"content":"tag (index of task to be tag) (provided tag)","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"lesterlimjj"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"lesterlimjj"},"content":"Example unmark Command:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"lesterlimjj"},"content":"```text","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"lesterlimjj"},"content":"tag 1 yummy","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"lesterlimjj"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"lesterlimjj"},"content":"For the response, Owen will reply you with the details of the tagged task:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"lesterlimjj"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"lesterlimjj"},"content":"The following is now tagged:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"lesterlimjj"},"content":"[T][] eat lunch #yummy","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"lesterlimjj"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"lesterlimjj"},"content":"## Find Command","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"lesterlimjj"},"content":"Find a task in the list by its description.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"lesterlimjj"},"content":"Expected Command Format:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"lesterlimjj"},"content":"```text","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"lesterlimjj"},"content":"find (description to search for)","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"lesterlimjj"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"lesterlimjj"},"content":"Example unmark Command:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"lesterlimjj"},"content":"```text","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"lesterlimjj"},"content":"find lunch","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"lesterlimjj"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"lesterlimjj"},"content":"For the response, Owen will reply you with the results of the search:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"lesterlimjj"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"lesterlimjj"},"content":"Friend, here are the results of your search:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"lesterlimjj"},"content":"1. [T][] eat lunch","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"lesterlimjj"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"lesterlimjj"},"content":"## Bye Command","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"lesterlimjj"},"content":"Exit the application.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"lesterlimjj"},"content":"Expected Command Format:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"lesterlimjj"},"content":"```text","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"lesterlimjj"},"content":"bye","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"lesterlimjj"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"lesterlimjj"},"content":"For the response, Owen will reply you with a sincere goodbye message before closing the application:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"lesterlimjj"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"lesterlimjj"},"content":"I am sure we will see each other soon. Goodbye.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"lesterlimjj"},"content":"```","lastModifiedDate":"2025-02-17","isFullCredit":false}],"authorContributionMap":{"lesterlimjj":217,"-":24}},{"path":"src/main/java/owen/Owen.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterlimjj"},"content":"package owen;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lesterlimjj"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lesterlimjj"},"content":"import owen.command.Command;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lesterlimjj"},"content":"import owen.command.ErrorCommand;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lesterlimjj"},"content":"import owen.exception.OwenException;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lesterlimjj"},"content":"import owen.parser.Parser;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lesterlimjj"},"content":"import owen.storage.Storage;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lesterlimjj"},"content":"import owen.task.TaskList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lesterlimjj"},"content":"import owen.ui.GuiController;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lesterlimjj"},"content":"import owen.ui.OwenApplication;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lesterlimjj"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lesterlimjj"},"content":" * Represents the main class of Owen.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lesterlimjj"},"content":" * It is responsible for the overall flow of the program.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lesterlimjj"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lesterlimjj"},"content":"public class Owen {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lesterlimjj"},"content":"    /** Represents the storage of Owen. */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lesterlimjj"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lesterlimjj"},"content":"    /** Represents the task list of Owen. */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lesterlimjj"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lesterlimjj"},"content":"    /** Represents the user interface of Owen. */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lesterlimjj"},"content":"    private GuiController ui;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lesterlimjj"},"content":"     * Constructs an Owen object.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lesterlimjj"},"content":"     * Loads the tasklist data from the storage into tasklist.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lesterlimjj"},"content":"    public Owen() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lesterlimjj"},"content":"        ui \u003d GuiController.getInstance();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lesterlimjj"},"content":"        ui.setOwen(this);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lesterlimjj"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lesterlimjj"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lesterlimjj"},"content":"        storage.loadTaskListData(tasks);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lesterlimjj"},"content":"     * Runs the program until the user exits.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lesterlimjj"},"content":"    public void run(String[] args) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lesterlimjj"},"content":"        Application.launch(OwenApplication.class, args);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lesterlimjj"},"content":"     * Represents the entry point of the program.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lesterlimjj"},"content":"     * @param args Default java main method parameter.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lesterlimjj"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lesterlimjj"},"content":"        new Owen().run(args);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lesterlimjj"},"content":"     * Evaluates the input and executes the corresponding command.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lesterlimjj"},"content":"     * @param input The text in the textfield.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lesterlimjj"},"content":"    public void evaluateInput(String input) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lesterlimjj"},"content":"        try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lesterlimjj"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lesterlimjj"},"content":"            command.execute(ui, storage, tasks);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lesterlimjj"},"content":"        } catch (OwenException exception) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lesterlimjj"},"content":"            ErrorCommand errorCommand \u003d new ErrorCommand(exception.getMessage());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lesterlimjj"},"content":"            errorCommand.execute(ui, storage, tasks);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lesterlimjj"},"content":"        } catch (NumberFormatException exception) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lesterlimjj"},"content":"            ErrorCommand errorCommand \u003d new ErrorCommand(\"please use a number for the index when \"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lesterlimjj"},"content":"                    + \"performing mark, unmark, tagging or delete.\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lesterlimjj"},"content":"            errorCommand.execute(ui, storage, tasks);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lesterlimjj"},"content":"        } catch (IndexOutOfBoundsException exception) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lesterlimjj"},"content":"            ErrorCommand errorCommand \u003d new ErrorCommand(\"The given index does not exist in the task list. \"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lesterlimjj"},"content":"                    + \"Use list command to review the valid indexes.\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lesterlimjj"},"content":"            errorCommand.execute(ui, storage, tasks);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"lesterlimjj"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"lesterlimjj"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"lesterlimjj":80}},{"path":"src/main/java/owen/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterlimjj"},"content":"package owen.command;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lesterlimjj"},"content":"import owen.storage.Storage;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lesterlimjj"},"content":"import owen.task.Deadline;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lesterlimjj"},"content":"import owen.task.TaskList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lesterlimjj"},"content":"import owen.ui.GuiController;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lesterlimjj"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lesterlimjj"},"content":" * Represents a command to add a deadline to the task list.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lesterlimjj"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lesterlimjj"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lesterlimjj"},"content":"    /** The key word to trigger this command */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lesterlimjj"},"content":"    public static final String KEY_WORD \u003d \"deadline\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lesterlimjj"},"content":"    /** The deadline to be added to the task list */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lesterlimjj"},"content":"    private Deadline pendingDeadline;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lesterlimjj"},"content":"     * Constructs an AddDeadlineCommand object.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lesterlimjj"},"content":"     * @param deadline The deadline to be added to the task list.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lesterlimjj"},"content":"     * */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lesterlimjj"},"content":"    public AddDeadlineCommand(Deadline deadline) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lesterlimjj"},"content":"        pendingDeadline \u003d deadline;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lesterlimjj"},"content":"        assert pendingDeadline !\u003d null : \"pendingDeadline should not be null\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lesterlimjj"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lesterlimjj"},"content":"    public void execute(GuiController guiController, Storage storage, TaskList taskList) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lesterlimjj"},"content":"        taskList.addTask(pendingDeadline);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lesterlimjj"},"content":"        storage.appendToTasklistData(pendingDeadline);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lesterlimjj"},"content":"        guiController.addUserDialog();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lesterlimjj"},"content":"        String completeResponse \u003d guiController.formatResponses(\"The following deadline has been added:\",","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lesterlimjj"},"content":"                pendingDeadline.toString(),","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lesterlimjj"},"content":"                \"You now have \" + String.valueOf(taskList.getTaskList().size()) + \" tasks in the list.\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lesterlimjj"},"content":"        guiController.addOwenDialog(completeResponse);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lesterlimjj"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"lesterlimjj":40}},{"path":"src/main/java/owen/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterlimjj"},"content":"package owen.command;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lesterlimjj"},"content":"import owen.storage.Storage;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lesterlimjj"},"content":"import owen.task.Event;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lesterlimjj"},"content":"import owen.task.TaskList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lesterlimjj"},"content":"import owen.ui.GuiController;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lesterlimjj"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lesterlimjj"},"content":" * Represents a command to add an event to the tasklist.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lesterlimjj"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lesterlimjj"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lesterlimjj"},"content":"    /** The key word to trigger this command */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lesterlimjj"},"content":"    public static final String KEY_WORD \u003d \"event\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lesterlimjj"},"content":"    /** The event to be added to the task list */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lesterlimjj"},"content":"    private Event pendingEvent;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lesterlimjj"},"content":"     * Constructs an AddEventCommand object.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lesterlimjj"},"content":"     * @param event The event to be added to the task list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lesterlimjj"},"content":"    public AddEventCommand(Event event) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lesterlimjj"},"content":"        pendingEvent \u003d event;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lesterlimjj"},"content":"        assert pendingEvent !\u003d null : \"pendingEvent should not be null\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lesterlimjj"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lesterlimjj"},"content":"    public void execute(GuiController guiController, Storage storage, TaskList taskList) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lesterlimjj"},"content":"        taskList.addTask(pendingEvent);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lesterlimjj"},"content":"        storage.appendToTasklistData(pendingEvent);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lesterlimjj"},"content":"        guiController.addUserDialog();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lesterlimjj"},"content":"        String completeResponse \u003d guiController.formatResponses(\"The following event has been added: \",","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lesterlimjj"},"content":"                pendingEvent.toString(),","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lesterlimjj"},"content":"                \"You now have \" + String.valueOf(taskList.getTaskList().size()) + \" tasks in the list.\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lesterlimjj"},"content":"        guiController.addOwenDialog(completeResponse);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lesterlimjj"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"lesterlimjj":40}},{"path":"src/main/java/owen/command/AddTagCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterlimjj"},"content":"package owen.command;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lesterlimjj"},"content":"import owen.storage.Storage;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lesterlimjj"},"content":"import owen.task.TaskList;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lesterlimjj"},"content":"import owen.ui.GuiController;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lesterlimjj"},"content":"/**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lesterlimjj"},"content":" * Represents a command to add a tag to a task in tasklist.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lesterlimjj"},"content":" */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lesterlimjj"},"content":"public class AddTagCommand extends Command {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lesterlimjj"},"content":"    /** The key word to trigger this command. */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lesterlimjj"},"content":"    public static final String KEY_WORD \u003d \"tag\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lesterlimjj"},"content":"    /** Index of the task to be tagged */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lesterlimjj"},"content":"    private int pendingTaskIndex;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lesterlimjj"},"content":"    /** The tag to be added to the task */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lesterlimjj"},"content":"    private String tag;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lesterlimjj"},"content":"     * Constructs an AddTagCommand object.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lesterlimjj"},"content":"     * @param taskIndex The index of the task to tag.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lesterlimjj"},"content":"     * @param providedTag The tag to be added to the task.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lesterlimjj"},"content":"     * */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lesterlimjj"},"content":"    public AddTagCommand(int taskIndex, String providedTag) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lesterlimjj"},"content":"        pendingTaskIndex \u003d taskIndex;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lesterlimjj"},"content":"        tag \u003d providedTag;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lesterlimjj"},"content":"    @Override","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lesterlimjj"},"content":"    public void execute(GuiController guiController, Storage storage, TaskList taskList) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lesterlimjj"},"content":"        taskList.addTagToTask(pendingTaskIndex, tag);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lesterlimjj"},"content":"        storage.overwriteTaskListData(taskList.getTaskList());","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lesterlimjj"},"content":"        guiController.addUserDialog();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lesterlimjj"},"content":"        String completeResponse \u003d guiController.formatResponses(\"The following is now tagged: \",","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lesterlimjj"},"content":"                taskList.getTaskStatus(pendingTaskIndex));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lesterlimjj"},"content":"        guiController.addOwenDialog(completeResponse);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lesterlimjj"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"lesterlimjj":40}},{"path":"src/main/java/owen/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterlimjj"},"content":"package owen.command;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lesterlimjj"},"content":"import owen.storage.Storage;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lesterlimjj"},"content":"import owen.task.TaskList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lesterlimjj"},"content":"import owen.task.Todo;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lesterlimjj"},"content":"import owen.ui.GuiController;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lesterlimjj"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lesterlimjj"},"content":" * Represents a command to add a todo to the task list.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lesterlimjj"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lesterlimjj"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lesterlimjj"},"content":"    /** The key word to trigger this command */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lesterlimjj"},"content":"    public static final String KEY_WORD \u003d \"todo\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lesterlimjj"},"content":"    /** The todo to be added to the task list */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lesterlimjj"},"content":"    private Todo pendingTodo;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lesterlimjj"},"content":"     * Constructs an AddTodoCommand object.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lesterlimjj"},"content":"     * @param todo The todo to be added to the task list.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lesterlimjj"},"content":"    public AddTodoCommand(Todo todo) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lesterlimjj"},"content":"        pendingTodo \u003d todo;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lesterlimjj"},"content":"        assert pendingTodo !\u003d null : \"pendingTodo should not be null\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lesterlimjj"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lesterlimjj"},"content":"    public void execute(GuiController guiController, Storage storage, TaskList taskList) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lesterlimjj"},"content":"        taskList.addTask(pendingTodo);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lesterlimjj"},"content":"        storage.appendToTasklistData(pendingTodo);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lesterlimjj"},"content":"        guiController.addUserDialog();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lesterlimjj"},"content":"        String completeResponse \u003d guiController.formatResponses(\"The following todo has been added: \",","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lesterlimjj"},"content":"                pendingTodo.toString(),","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lesterlimjj"},"content":"                \"You now have \" + String.valueOf(taskList.getTaskList().size()) + \" tasks in the list.\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lesterlimjj"},"content":"        guiController.addOwenDialog(completeResponse);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lesterlimjj"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"lesterlimjj":40}},{"path":"src/main/java/owen/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterlimjj"},"content":"package owen.command;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lesterlimjj"},"content":"import owen.storage.Storage;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lesterlimjj"},"content":"import owen.task.TaskList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lesterlimjj"},"content":"import owen.ui.GuiController;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lesterlimjj"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lesterlimjj"},"content":" * Represents a command to exit the program.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lesterlimjj"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lesterlimjj"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lesterlimjj"},"content":"    /** The key word to trigger this command */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lesterlimjj"},"content":"    public static final String KEY_WORD \u003d \"bye\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lesterlimjj"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lesterlimjj"},"content":"    public void execute(GuiController guiController, Storage storage, TaskList taskList) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lesterlimjj"},"content":"        storage.overwriteTaskListData(taskList.getTaskList());","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lesterlimjj"},"content":"        guiController.addUserDialog();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lesterlimjj"},"content":"        String completeResponse \u003d guiController.formatResponses(\"I am sure we will see each other soon. Goodbye.\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lesterlimjj"},"content":"        guiController.addOwenDialog(completeResponse);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lesterlimjj"},"content":"        guiController.exitApplicationWithDelay();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lesterlimjj"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"lesterlimjj":24}},{"path":"src/main/java/owen/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterlimjj"},"content":"package owen.command;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lesterlimjj"},"content":"import owen.storage.Storage;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lesterlimjj"},"content":"import owen.task.TaskList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lesterlimjj"},"content":"import owen.ui.GuiController;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lesterlimjj"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lesterlimjj"},"content":" * Represents an action for interacting with ui, storage and task list.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lesterlimjj"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lesterlimjj"},"content":"public abstract class Command {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lesterlimjj"},"content":"     * Executes the command.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lesterlimjj"},"content":"     * @param gui The ui for text display.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lesterlimjj"},"content":"     * @param storage The storage for saving and loading tasks.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lesterlimjj"},"content":"     * @param taskList The task list to be modified.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lesterlimjj"},"content":"    public abstract void execute(GuiController gui, Storage storage, TaskList taskList);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lesterlimjj"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"lesterlimjj":21}},{"path":"src/main/java/owen/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterlimjj"},"content":"package owen.command;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lesterlimjj"},"content":"import owen.storage.Storage;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lesterlimjj"},"content":"import owen.task.TaskList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lesterlimjj"},"content":"import owen.ui.GuiController;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lesterlimjj"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lesterlimjj"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lesterlimjj"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lesterlimjj"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lesterlimjj"},"content":"    /** Keyword for delete command */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lesterlimjj"},"content":"    public static final String KEY_WORD \u003d \"delete\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lesterlimjj"},"content":"    /** Index of the task to be deleted */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lesterlimjj"},"content":"    private int pendingTaskIndex;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lesterlimjj"},"content":"     * Constructs a DeleteCommand object.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lesterlimjj"},"content":"     * @param taskIndex Index of the task to be deleted.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lesterlimjj"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lesterlimjj"},"content":"        pendingTaskIndex \u003d taskIndex;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lesterlimjj"},"content":"        assert pendingTaskIndex \u003e\u003d 0 : \"pendingTaskIndex should not be negative\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lesterlimjj"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lesterlimjj"},"content":"    public void execute(GuiController guiController, Storage storage, TaskList taskList) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lesterlimjj"},"content":"        String taskStatus \u003d taskList.getTaskStatus(pendingTaskIndex);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lesterlimjj"},"content":"        taskList.deleteTask(pendingTaskIndex);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lesterlimjj"},"content":"        storage.overwriteTaskListData(taskList.getTaskList());","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lesterlimjj"},"content":"        guiController.addUserDialog();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lesterlimjj"},"content":"        String completeResponse \u003d guiController.formatResponses(\"The following is now deleted: \",","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lesterlimjj"},"content":"                taskStatus,","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lesterlimjj"},"content":"                \"You now have \" + String.valueOf(taskList.getTaskList().size()) + \" tasks in the list.\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lesterlimjj"},"content":"        guiController.addOwenDialog(completeResponse);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lesterlimjj"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"lesterlimjj":40}},{"path":"src/main/java/owen/command/ErrorCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterlimjj"},"content":"package owen.command;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lesterlimjj"},"content":"import owen.storage.Storage;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lesterlimjj"},"content":"import owen.task.TaskList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lesterlimjj"},"content":"import owen.ui.GuiController;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lesterlimjj"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lesterlimjj"},"content":" * Represents a command to show an error message.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lesterlimjj"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lesterlimjj"},"content":"public class ErrorCommand extends Command {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lesterlimjj"},"content":"    /** The error message to be shown to the user */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lesterlimjj"},"content":"    private String errorMessage;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lesterlimjj"},"content":"     * Constructs an ErrorCommand object.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lesterlimjj"},"content":"     * @param errorMessage Error message to be shown.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lesterlimjj"},"content":"    public ErrorCommand(String errorMessage) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lesterlimjj"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lesterlimjj"},"content":"        assert errorMessage !\u003d null : \"errorMessage should not be null\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lesterlimjj"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lesterlimjj"},"content":"    public void execute(GuiController guiController, Storage storage, TaskList taskList) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lesterlimjj"},"content":"        storage.overwriteTaskListData(taskList.getTaskList());","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lesterlimjj"},"content":"        guiController.addUserDialog();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lesterlimjj"},"content":"        String completeResponse \u003d guiController.formatResponses(errorMessage);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lesterlimjj"},"content":"        guiController.addOwenDialog(completeResponse);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lesterlimjj"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"lesterlimjj":32}},{"path":"src/main/java/owen/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterlimjj"},"content":"package owen.command;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lesterlimjj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lesterlimjj"},"content":"import owen.storage.Storage;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lesterlimjj"},"content":"import owen.task.Task;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lesterlimjj"},"content":"import owen.task.TaskList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lesterlimjj"},"content":"import owen.ui.GuiController;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lesterlimjj"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lesterlimjj"},"content":" * Represents a command to find tasks that contain a certain word.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lesterlimjj"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lesterlimjj"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lesterlimjj"},"content":"    /** Key word for find command */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lesterlimjj"},"content":"    public static final String KEY_WORD \u003d \"find\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lesterlimjj"},"content":"    /** Word to search for in tasks */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lesterlimjj"},"content":"    private String searchWord;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lesterlimjj"},"content":"     * Constructs a FindCommand object.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lesterlimjj"},"content":"     * @param searchWord Word to search for in tasks.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lesterlimjj"},"content":"    public FindCommand(String searchWord) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lesterlimjj"},"content":"        this.searchWord \u003d searchWord;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lesterlimjj"},"content":"        assert searchWord !\u003d null : \"searchWord should not be null\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lesterlimjj"},"content":"    @Override","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lesterlimjj"},"content":"    public void execute(GuiController guiController, Storage storage, TaskList taskList) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lesterlimjj"},"content":"        ArrayList\u003cTask\u003e searchResults \u003d taskList.searchTasks(searchWord);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lesterlimjj"},"content":"        String formattedSearchResults \u003d taskList.convertTaskListToFormattedString(searchResults);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lesterlimjj"},"content":"        String completeResponse \u003d guiController.formatResponses(\"Friend, here are the results of your search: \",","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lesterlimjj"},"content":"                formattedSearchResults);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lesterlimjj"},"content":"        guiController.addUserDialog();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lesterlimjj"},"content":"        guiController.addOwenDialog(completeResponse);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lesterlimjj"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"lesterlimjj":40}},{"path":"src/main/java/owen/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterlimjj"},"content":"package owen.command;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lesterlimjj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lesterlimjj"},"content":"import owen.storage.Storage;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lesterlimjj"},"content":"import owen.task.Task;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lesterlimjj"},"content":"import owen.task.TaskList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lesterlimjj"},"content":"import owen.ui.GuiController;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lesterlimjj"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lesterlimjj"},"content":" * Represents a command to lists all tasks from the task list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lesterlimjj"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lesterlimjj"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lesterlimjj"},"content":"    /** Key word for list command */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lesterlimjj"},"content":"    public static final String KEY_WORD \u003d \"list\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lesterlimjj"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lesterlimjj"},"content":"    public void execute(GuiController guiController, Storage storage, TaskList taskList) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lesterlimjj"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTaskList();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lesterlimjj"},"content":"        guiController.addUserDialog();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lesterlimjj"},"content":"        String formattedSearchResults \u003d taskList.convertTaskListToFormattedString(tasks);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lesterlimjj"},"content":"        String completeResponse \u003d guiController.formatResponses(\"Friend, here is your list of tasks: \",","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lesterlimjj"},"content":"                formattedSearchResults);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lesterlimjj"},"content":"        guiController.addOwenDialog(completeResponse);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lesterlimjj"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"lesterlimjj":27}},{"path":"src/main/java/owen/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterlimjj"},"content":"package owen.command;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lesterlimjj"},"content":"import owen.storage.Storage;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lesterlimjj"},"content":"import owen.task.TaskList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lesterlimjj"},"content":"import owen.ui.GuiController;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lesterlimjj"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lesterlimjj"},"content":" * Represents a command to mark a task from the task list.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lesterlimjj"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lesterlimjj"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lesterlimjj"},"content":"    /** Keyword to identify mark command */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lesterlimjj"},"content":"    public static final String KEY_WORD \u003d \"mark\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lesterlimjj"},"content":"    /** Index of the task to be marked */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lesterlimjj"},"content":"    private int pendingTaskIndex;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lesterlimjj"},"content":"     * Constructs a MarkCommand object.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lesterlimjj"},"content":"     * @param taskIndex Index of the task to be marked.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lesterlimjj"},"content":"    public MarkCommand(int taskIndex) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lesterlimjj"},"content":"        pendingTaskIndex \u003d taskIndex;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lesterlimjj"},"content":"        assert pendingTaskIndex \u003e\u003d 0 : \"pendingTaskIndex should not be negative\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lesterlimjj"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lesterlimjj"},"content":"    public void execute(GuiController guiController, Storage storage, TaskList taskList) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lesterlimjj"},"content":"        taskList.markTaskAsDone(pendingTaskIndex);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lesterlimjj"},"content":"        storage.overwriteTaskListData(taskList.getTaskList());","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lesterlimjj"},"content":"        guiController.addUserDialog();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lesterlimjj"},"content":"        String completeResponse \u003d guiController.formatResponses(\"The following is now done: \",","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lesterlimjj"},"content":"                taskList.getTaskStatus(pendingTaskIndex));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lesterlimjj"},"content":"        guiController.addOwenDialog(completeResponse);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lesterlimjj"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"lesterlimjj":37}},{"path":"src/main/java/owen/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterlimjj"},"content":"package owen.command;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lesterlimjj"},"content":"import owen.storage.Storage;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lesterlimjj"},"content":"import owen.task.TaskList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lesterlimjj"},"content":"import owen.ui.GuiController;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lesterlimjj"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lesterlimjj"},"content":" * Represents a command to unmark a task from the task list.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lesterlimjj"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lesterlimjj"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lesterlimjj"},"content":"    /** The keyword to identify this command. */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lesterlimjj"},"content":"    public static final String KEY_WORD \u003d \"unmark\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lesterlimjj"},"content":"    /** The index of the task to be unmarked. */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lesterlimjj"},"content":"    private int pendingTaskIndex;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lesterlimjj"},"content":"      * Constructs an UnmarkCommand object.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lesterlimjj"},"content":"      *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lesterlimjj"},"content":"      * @param taskIndex The index of the task to be unmarked.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lesterlimjj"},"content":"      */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lesterlimjj"},"content":"    public UnmarkCommand(int taskIndex) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lesterlimjj"},"content":"        pendingTaskIndex \u003d taskIndex;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lesterlimjj"},"content":"        assert pendingTaskIndex \u003e\u003d 0 : \"Task index should be non-negative\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lesterlimjj"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lesterlimjj"},"content":"    public void execute(GuiController guiController, Storage storage, TaskList taskList) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lesterlimjj"},"content":"        taskList.markTaskAsUndone(pendingTaskIndex);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lesterlimjj"},"content":"        storage.overwriteTaskListData(taskList.getTaskList());","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lesterlimjj"},"content":"        guiController.addUserDialog();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lesterlimjj"},"content":"        String completeResponse \u003d guiController.formatResponses(\"The following is now not done: \",","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lesterlimjj"},"content":"                taskList.getTaskStatus(pendingTaskIndex));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lesterlimjj"},"content":"        guiController.addOwenDialog(completeResponse);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lesterlimjj"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"lesterlimjj":37}},{"path":"src/main/java/owen/exception/OwenException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterlimjj"},"content":"package owen.exception;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lesterlimjj"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lesterlimjj"},"content":" * Represents a custom exception class for catching user input errors.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lesterlimjj"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lesterlimjj"},"content":"public class OwenException extends Exception {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lesterlimjj"},"content":"     * Constructs an OwenException object.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lesterlimjj"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lesterlimjj"},"content":"    public OwenException(String message) {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lesterlimjj"},"content":"        super(message);","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lesterlimjj"},"content":"        assert message !\u003d null : \"Error message should not be null\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lesterlimjj"},"content":"}","lastModifiedDate":"2025-01-16","isFullCredit":false}],"authorContributionMap":{"lesterlimjj":17}},{"path":"src/main/java/owen/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterlimjj"},"content":"package owen.parser;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lesterlimjj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lesterlimjj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lesterlimjj"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lesterlimjj"},"content":"import owen.command.AddDeadlineCommand;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lesterlimjj"},"content":"import owen.command.AddEventCommand;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lesterlimjj"},"content":"import owen.command.AddTagCommand;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lesterlimjj"},"content":"import owen.command.AddTodoCommand;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lesterlimjj"},"content":"import owen.command.ByeCommand;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lesterlimjj"},"content":"import owen.command.Command;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lesterlimjj"},"content":"import owen.command.DeleteCommand;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lesterlimjj"},"content":"import owen.command.FindCommand;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lesterlimjj"},"content":"import owen.command.ListCommand;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lesterlimjj"},"content":"import owen.command.MarkCommand;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lesterlimjj"},"content":"import owen.command.UnmarkCommand;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lesterlimjj"},"content":"import owen.exception.OwenException;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lesterlimjj"},"content":"import owen.task.Deadline;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lesterlimjj"},"content":"import owen.task.Event;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lesterlimjj"},"content":"import owen.task.Todo;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lesterlimjj"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lesterlimjj"},"content":" * Parses the input from the user and determines the command to be executed.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lesterlimjj"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lesterlimjj"},"content":"public class Parser {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lesterlimjj"},"content":"    /** Accepted formats for localDatetime */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lesterlimjj"},"content":"    private static final String[] LOCAL_DATETIME_PATTERNS \u003d {\"d/M/yyyy HHmm\", \"M/d/yyyy HHmm\"};","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lesterlimjj"},"content":"    public static final int INDEX_NOT_FOUND \u003d -1;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lesterlimjj"},"content":"     * Parses the user input based on given command.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lesterlimjj"},"content":"     * @param input The user input provided.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lesterlimjj"},"content":"     * @return The command created from the input.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lesterlimjj"},"content":"     * @throws OwenException If the input fails a check.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lesterlimjj"},"content":"    public static Command parse(String input) throws OwenException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lesterlimjj"},"content":"        String[] inputSplitBySpace \u003d input.split(\" \");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lesterlimjj"},"content":"        String keyWord \u003d inputSplitBySpace[0];","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lesterlimjj"},"content":"        switch (keyWord) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lesterlimjj"},"content":"        case ListCommand.KEY_WORD:","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lesterlimjj"},"content":"            return new ListCommand();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lesterlimjj"},"content":"        case AddTodoCommand.KEY_WORD:","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lesterlimjj"},"content":"            return processInputforAddTodoCommand(input);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lesterlimjj"},"content":"        case AddDeadlineCommand.KEY_WORD:","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lesterlimjj"},"content":"            return processInputforAddDeadlineCommand(input);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lesterlimjj"},"content":"        case AddEventCommand.KEY_WORD:","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lesterlimjj"},"content":"            return processInputforAddEventCommand(input);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lesterlimjj"},"content":"        case MarkCommand.KEY_WORD:","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lesterlimjj"},"content":"            return processInputforMarkCommand(input);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lesterlimjj"},"content":"        case UnmarkCommand.KEY_WORD:","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lesterlimjj"},"content":"            return processInputforUnmarkCommand(input);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lesterlimjj"},"content":"        case DeleteCommand.KEY_WORD:","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lesterlimjj"},"content":"            return processInputforDeleteCommand(input);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lesterlimjj"},"content":"        case ByeCommand.KEY_WORD:","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lesterlimjj"},"content":"            return new ByeCommand();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lesterlimjj"},"content":"        case FindCommand.KEY_WORD:","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lesterlimjj"},"content":"            return processInputforFindCommand(input);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lesterlimjj"},"content":"        case AddTagCommand.KEY_WORD:","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lesterlimjj"},"content":"            return processInputforAddTagCommand(input);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lesterlimjj"},"content":"        default:","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lesterlimjj"},"content":"            throw new OwenException(\"I have not seen that command before. Maybe in another life?\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lesterlimjj"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lesterlimjj"},"content":"     * Processes the input for the add tag command.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lesterlimjj"},"content":"     * @param input The user input provided.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lesterlimjj"},"content":"     * @return The AddTagCommand created from the input.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lesterlimjj"},"content":"    public static AddTagCommand processInputforAddTagCommand(String input) throws OwenException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"lesterlimjj"},"content":"        String[] inputSplitBySpace \u003d input.split(\" \", 3);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"lesterlimjj"},"content":"        checkValidTag(inputSplitBySpace);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"lesterlimjj"},"content":"        int index \u003d Integer.parseInt(inputSplitBySpace[1]) - 1;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"lesterlimjj"},"content":"        String tag \u003d inputSplitBySpace[2];","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"lesterlimjj"},"content":"        AddTagCommand addTagCommand \u003d new AddTagCommand(index, tag);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"lesterlimjj"},"content":"        return addTagCommand;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"lesterlimjj"},"content":"     * Processes the input for the add todo command.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"lesterlimjj"},"content":"     * @param input The user input provided.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"lesterlimjj"},"content":"     * @return The AddTodoCommand created from the input.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"lesterlimjj"},"content":"     * @throws OwenException If the input format fails a check.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"lesterlimjj"},"content":"    public static AddTodoCommand processInputforAddTodoCommand(String input) throws OwenException {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"lesterlimjj"},"content":"        String[] inputSplitBySpace \u003d input.split(\" \");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"lesterlimjj"},"content":"        checkValidTodo(inputSplitBySpace);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"lesterlimjj"},"content":"        String description \u003d input.replaceFirst(inputSplitBySpace[0] + \" \", \"\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"lesterlimjj"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"lesterlimjj"},"content":"        AddTodoCommand addTodoCommand \u003d new AddTodoCommand(todo);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"lesterlimjj"},"content":"        return addTodoCommand;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"lesterlimjj"},"content":"     * Processes the input for the add deadline command.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"lesterlimjj"},"content":"     * @param input The user input provided.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"lesterlimjj"},"content":"     * @return The AddDeadlineCommand created from the input.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"lesterlimjj"},"content":"     * @throws OwenException If the input format fails a check.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"lesterlimjj"},"content":"    public static AddDeadlineCommand processInputforAddDeadlineCommand(String input) throws OwenException {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"lesterlimjj"},"content":"        String[] inputSplitBySpace \u003d input.split(\" \");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"lesterlimjj"},"content":"        String truncatedInput \u003d input.replaceFirst(inputSplitBySpace[0] + \" \", \"\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"lesterlimjj"},"content":"        String[] truncatedSplitBySpace \u003d truncatedInput.split(\" \");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"lesterlimjj"},"content":"        checkValidDeadline(truncatedSplitBySpace);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"lesterlimjj"},"content":"        String[] truncatedSplitByBy \u003d truncatedInput.split(\"/by\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"lesterlimjj"},"content":"        trimStringArray(truncatedSplitByBy);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"lesterlimjj"},"content":"        Deadline deadline \u003d createDeadline(truncatedSplitByBy);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"lesterlimjj"},"content":"        AddDeadlineCommand addDeadlineCommand \u003d new AddDeadlineCommand(deadline);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"lesterlimjj"},"content":"        return addDeadlineCommand;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"lesterlimjj"},"content":"     * Processes the input for the add event command.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"lesterlimjj"},"content":"     * @param input The user input provided.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"lesterlimjj"},"content":"     * @return The AddEventCommand created from the input.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"lesterlimjj"},"content":"     * @throws OwenException If the input format fails a check or if the date format is wrong.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"lesterlimjj"},"content":"    public static AddEventCommand processInputforAddEventCommand(String input) throws OwenException {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"lesterlimjj"},"content":"        String[] inputSplitBySpace \u003d input.split(\" \");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"lesterlimjj"},"content":"        String truncatedInput \u003d input.replaceFirst(inputSplitBySpace[0] + \" \", \"\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"lesterlimjj"},"content":"        String[] truncatedSplitBySpace \u003d truncatedInput.split(\" \");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"lesterlimjj"},"content":"        checkValidEvent(truncatedSplitBySpace);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"lesterlimjj"},"content":"        String[] truncatedSplitByFromTo \u003d truncatedInput.split(\"/from | /to\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"lesterlimjj"},"content":"        trimStringArray(truncatedSplitByFromTo);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"lesterlimjj"},"content":"        Event event \u003d createEvent(truncatedSplitByFromTo);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"lesterlimjj"},"content":"        AddEventCommand addEventCommand \u003d new AddEventCommand(event);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"lesterlimjj"},"content":"        return addEventCommand;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"lesterlimjj"},"content":"     * Processes the input for the mark command.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"lesterlimjj"},"content":"     * @param input The user input provided.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"lesterlimjj"},"content":"     * @return The MarkCommand created from the input.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"lesterlimjj"},"content":"     * @throws OwenException If the input format is wrong or if the date format is wrong.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"lesterlimjj"},"content":"    public static MarkCommand processInputforMarkCommand(String input) throws OwenException {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"lesterlimjj"},"content":"        String[] inputSplitBySpace \u003d input.split(\" \");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"lesterlimjj"},"content":"        checkValidMarkOrDelete(inputSplitBySpace);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"lesterlimjj"},"content":"        int index \u003d Integer.parseInt(inputSplitBySpace[1]) - 1;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"lesterlimjj"},"content":"        MarkCommand markCommand \u003d new MarkCommand(index);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"lesterlimjj"},"content":"        return markCommand;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"lesterlimjj"},"content":"     * Processes the input for the unmark command.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"lesterlimjj"},"content":"     * @param input The user input provided.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"lesterlimjj"},"content":"     * @return The UnmarkCommand created from the input.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"lesterlimjj"},"content":"     * @throws OwenException If the input format is wrong.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"lesterlimjj"},"content":"    public static UnmarkCommand processInputforUnmarkCommand(String input) throws OwenException {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"lesterlimjj"},"content":"        String[] inputSplitBySpace \u003d input.split(\" \");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"lesterlimjj"},"content":"        checkValidMarkOrDelete(inputSplitBySpace);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"lesterlimjj"},"content":"        int index \u003d Integer.parseInt(inputSplitBySpace[1]) - 1;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"lesterlimjj"},"content":"        UnmarkCommand unmarkCommand \u003d new UnmarkCommand(index);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"lesterlimjj"},"content":"        return unmarkCommand;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"lesterlimjj"},"content":"     * Processes the input for the delete command.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"lesterlimjj"},"content":"     * @param input The user input provided.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"lesterlimjj"},"content":"     * @return The DeleteCommand created from the input.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"lesterlimjj"},"content":"    public static DeleteCommand processInputforDeleteCommand(String input) throws OwenException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"lesterlimjj"},"content":"        String[] inputSplitBySpace \u003d input.split(\" \");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"lesterlimjj"},"content":"        checkValidMarkOrDelete(inputSplitBySpace);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"lesterlimjj"},"content":"        int index \u003d Integer.parseInt(inputSplitBySpace[1]) - 1;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"lesterlimjj"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(index);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"lesterlimjj"},"content":"        return deleteCommand;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"lesterlimjj"},"content":"     * Processes the input for the find command.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"lesterlimjj"},"content":"     * @param input The user input provided.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"lesterlimjj"},"content":"     * @return The FindCommand created from the input.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"lesterlimjj"},"content":"    public static FindCommand processInputforFindCommand(String input) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"lesterlimjj"},"content":"        String[] inputSplitBySpace \u003d input.split(\" \", 2);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"lesterlimjj"},"content":"        FindCommand findCommand \u003d new FindCommand(inputSplitBySpace[1]);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"lesterlimjj"},"content":"        return findCommand;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"lesterlimjj"},"content":"     * Checks if todo format is valid.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"lesterlimjj"},"content":"     * @param parts The string array of user input.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"lesterlimjj"},"content":"     * @throws OwenException If input is missing description.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"lesterlimjj"},"content":"    public static void checkValidTodo(String[] parts) throws OwenException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"lesterlimjj"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"lesterlimjj"},"content":"            throw new OwenException(\"You forgot your description. Try again.\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"lesterlimjj"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"lesterlimjj"},"content":"     * Checks if deadline format is valid.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"lesterlimjj"},"content":"     * @param parts The string array of user input.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"lesterlimjj"},"content":"     * @throws OwenException If input is missing start or end date or both.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"lesterlimjj"},"content":"    public static void checkValidEvent(String[] parts) throws OwenException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"lesterlimjj"},"content":"        int toIndex \u003d findKeywordIndex(parts, \"/to\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"lesterlimjj"},"content":"        int fromIndex \u003d findKeywordIndex(parts, \"/from\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"lesterlimjj"},"content":"        checkForMissingKeywordsForEvent(fromIndex, toIndex);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"lesterlimjj"},"content":"        checkForEmptyStartDate(parts, fromIndex, toIndex);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"lesterlimjj"},"content":"        checkForEmptyEndDate(parts, toIndex);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"lesterlimjj"},"content":"     * Returns the index of the provided keyword.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"lesterlimjj"},"content":"     * Returns -1 if keyword cannot be found.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"lesterlimjj"},"content":"     * @param parts The string array of user input.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"lesterlimjj"},"content":"     * @param keyword The string to find index of.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"lesterlimjj"},"content":"     * @return Index of string found.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"lesterlimjj"},"content":"    private static int findKeywordIndex(String[] parts, String keyword) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"lesterlimjj"},"content":"        for (int i \u003d 0; i \u003c parts.length; i++) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"lesterlimjj"},"content":"            if (parts[i].equals(keyword)) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"lesterlimjj"},"content":"                return i;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"lesterlimjj"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"lesterlimjj"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"lesterlimjj"},"content":"        return INDEX_NOT_FOUND; // Return -1 if keyword is not found","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"lesterlimjj"},"content":"     * Checks if the keywords for start and end date are present.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"lesterlimjj"},"content":"     * @param fromIndex the index of the start date.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"lesterlimjj"},"content":"     * @param toIndex the index of the end date.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"lesterlimjj"},"content":"     * @throws OwenException If input is missing start or end date or both.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"lesterlimjj"},"content":"    private static void checkForMissingKeywordsForEvent(int fromIndex, int toIndex) throws OwenException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"lesterlimjj"},"content":"        if (fromIndex \u003d\u003d INDEX_NOT_FOUND \u0026\u0026 toIndex \u003d\u003d INDEX_NOT_FOUND) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"lesterlimjj"},"content":"            throw new OwenException(\"Missing start and end date. Please add a /from \u003cdate/time\u003e and /to \u003cdate/time\u003e.\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"lesterlimjj"},"content":"        } else if (fromIndex \u003d\u003d INDEX_NOT_FOUND) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"lesterlimjj"},"content":"            throw new OwenException(\"Missing start date. Please add a /from \u003cdate/time\u003e.\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"lesterlimjj"},"content":"        } else if (toIndex \u003d\u003d INDEX_NOT_FOUND) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"lesterlimjj"},"content":"            throw new OwenException(\"Missing end date. Please add a /to \u003cdate/time\u003e.\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"lesterlimjj"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"lesterlimjj"},"content":"     * Checks if the start date is empty.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"lesterlimjj"},"content":"     * @param parts the string array of the input.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"lesterlimjj"},"content":"     * @param fromIndex the index of the start date.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"lesterlimjj"},"content":"     * @param toIndex the index of the end date.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"lesterlimjj"},"content":"     * @throws OwenException If start date is empty.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"lesterlimjj"},"content":"    private static void checkForEmptyStartDate(String[] parts, int fromIndex, int toIndex) throws OwenException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"lesterlimjj"},"content":"        boolean isToForStartDate \u003d fromIndex + 1 \u003d\u003d toIndex;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"lesterlimjj"},"content":"        boolean isEmptyStartDate \u003d parts[fromIndex + 1].isEmpty();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"lesterlimjj"},"content":"        boolean isStartDateAbsent \u003d isToForStartDate || isEmptyStartDate;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"lesterlimjj"},"content":"        if (isStartDateAbsent) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"lesterlimjj"},"content":"            throw new OwenException(\"Start date is empty. Please provide a valid date after /from\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"lesterlimjj"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"lesterlimjj"},"content":"     * Checks if the end date is empty.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"lesterlimjj"},"content":"     * @param parts the string array of the input.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"lesterlimjj"},"content":"     * @param toIndex the index of the end date.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"lesterlimjj"},"content":"     * @throws OwenException If end date is empty.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"lesterlimjj"},"content":"    private static void checkForEmptyEndDate(String[] parts, int toIndex) throws OwenException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"lesterlimjj"},"content":"        boolean isEmptyEndDate \u003d toIndex + 1 \u003e\u003d parts.length;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"lesterlimjj"},"content":"        if (isEmptyEndDate) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"lesterlimjj"},"content":"            throw new OwenException(\"End date is empty. Please provide a valid date after /to for event \"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"lesterlimjj"},"content":"                    + \"or /by for deadline.\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"lesterlimjj"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"lesterlimjj"},"content":"     * Checks if the keyword for deadline is present.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"lesterlimjj"},"content":"     * @param byIndex the index of the deadline.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"lesterlimjj"},"content":"     * @throws OwenException If input is missing deadline keyword.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"lesterlimjj"},"content":"    private static void checkForMissingKeywordsForDeadline(int byIndex) throws OwenException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"lesterlimjj"},"content":"        if (byIndex \u003d\u003d INDEX_NOT_FOUND) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"lesterlimjj"},"content":"            throw new OwenException(\"Invalid deadline format. Please add a /by \u003cdate/time\u003e\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"lesterlimjj"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"lesterlimjj"},"content":"     * Checks if deadline format is valid.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"lesterlimjj"},"content":"     * @param parts The string array of user input.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"lesterlimjj"},"content":"     * @throws OwenException If input is missing date.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"lesterlimjj"},"content":"    public static void checkValidDeadline(String[] parts) throws OwenException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"lesterlimjj"},"content":"        int byIndex \u003d findKeywordIndex(parts, \"/by\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"lesterlimjj"},"content":"        checkForMissingKeywordsForDeadline(byIndex);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"lesterlimjj"},"content":"        checkForEmptyEndDate(parts, byIndex);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"lesterlimjj"},"content":"     * Checks if mark format is valid.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"lesterlimjj"},"content":"     * @param parts the string array of user input.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"lesterlimjj"},"content":"     * @throws OwenException If index is missing or parameters \u003e 2.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"lesterlimjj"},"content":"    public static void checkValidMarkOrDelete(String[] parts) throws OwenException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"lesterlimjj"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"lesterlimjj"},"content":"            throw new OwenException(\"Please specify an index. Try again.\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"lesterlimjj"},"content":"        } else if (parts.length \u003e 2) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"lesterlimjj"},"content":"            throw new OwenException(\"Too many parameters for a mark or delete. Limit it to just one index.\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"lesterlimjj"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"lesterlimjj"},"content":"     * Checks if tag format is valid.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"lesterlimjj"},"content":"     * @param parts The string array of user input.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"lesterlimjj"},"content":"     * @throws OwenException If index or tag is missing or tag is empty.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"lesterlimjj"},"content":"    public static void checkValidTag(String[] parts) throws OwenException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"lesterlimjj"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"lesterlimjj"},"content":"            throw new OwenException(\"Please specify an index and a tag. Do try again.\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"lesterlimjj"},"content":"        } else if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"lesterlimjj"},"content":"            throw new OwenException(\"Please specify a tag. Please try again.\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"lesterlimjj"},"content":"        } else if (parts[2].trim().isEmpty()) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"lesterlimjj"},"content":"            throw new OwenException(\"The given tag cannot be empty. Try again.\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"lesterlimjj"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"lesterlimjj"},"content":"     * Processes the string array to get LocalDateTime and creates new deadline.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"lesterlimjj"},"content":"     * @param parts The string array of user input.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"lesterlimjj"},"content":"     * @return The deadline to be added.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"lesterlimjj"},"content":"     * @throws OwenException If date is in wrong format, it will be null.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"lesterlimjj"},"content":"    public static Deadline createDeadline(String[] parts) throws OwenException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"lesterlimjj"},"content":"        LocalDateTime dateline \u003d convertStringToLocalDateTime(parts[1].trim());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"lesterlimjj"},"content":"        if (dateline \u003d\u003d null) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"lesterlimjj"},"content":"            throw new OwenException(\"Given datetime is in wrong format. Please use M/d/yyyy HHmm or d/M/yyyy HHmm\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"lesterlimjj"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"lesterlimjj"},"content":"        Deadline newDeadline \u003d new Deadline(parts[0], dateline);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"lesterlimjj"},"content":"        return newDeadline;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"lesterlimjj"},"content":"     * Processes the string array to get LocalDateTime and creates new event.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"lesterlimjj"},"content":"     * @param parts The string array of user input.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"lesterlimjj"},"content":"     * @return The event to be added.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"lesterlimjj"},"content":"     * @throws OwenException If start or end date is in wrong format, they will be null.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"lesterlimjj"},"content":"    public static Event createEvent(String[] parts) throws OwenException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"lesterlimjj"},"content":"        LocalDateTime startDate \u003d convertStringToLocalDateTime(parts[1].trim());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"lesterlimjj"},"content":"        LocalDateTime endDate \u003d convertStringToLocalDateTime(parts[2].trim());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"lesterlimjj"},"content":"        if (startDate \u003d\u003d null || endDate \u003d\u003d null) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"lesterlimjj"},"content":"            throw new OwenException(\"Given datetime is in wrong format. Please use M/d/yyyy HHmm or d/M/yyyy HHmm\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"lesterlimjj"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"lesterlimjj"},"content":"        if (startDate.isAfter(endDate)) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"lesterlimjj"},"content":"            throw new OwenException(\"Start date cannot be after end date.\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"lesterlimjj"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"lesterlimjj"},"content":"        Event newEvent \u003d new Event(parts[0], startDate, endDate);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"lesterlimjj"},"content":"        return newEvent;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"lesterlimjj"},"content":"     * Removes all lead and trailing whitespaces from elements of string array.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"lesterlimjj"},"content":"     * @param array The string array to be trimmed.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"lesterlimjj"},"content":"    public static void trimStringArray(String[] array) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"lesterlimjj"},"content":"        for (int j \u003d 0; j \u003c array.length; j++) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"lesterlimjj"},"content":"            array[j] \u003d array[j].trim();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"lesterlimjj"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"lesterlimjj"},"content":"     * Converts string to get LocalDateTime in specified patterns.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"lesterlimjj"},"content":"     * @param dateString The date string to be processed.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"lesterlimjj"},"content":"     * @return The LocalDateTime to be used in deadline or event.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"lesterlimjj"},"content":"    public static LocalDateTime convertStringToLocalDateTime(String dateString) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"lesterlimjj"},"content":"        LocalDateTime date \u003d null;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"lesterlimjj"},"content":"        for (int i \u003d 0; i \u003c LOCAL_DATETIME_PATTERNS.length; i++) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"lesterlimjj"},"content":"            DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(LOCAL_DATETIME_PATTERNS[i]);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"lesterlimjj"},"content":"            try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"lesterlimjj"},"content":"                date \u003d LocalDateTime.parse(dateString, dateFormatter);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"lesterlimjj"},"content":"                break; // Exit the loop once the date is successfully parsed","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"lesterlimjj"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"lesterlimjj"},"content":"                // do nothing so that we can check for next pattern","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"lesterlimjj"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"lesterlimjj"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"lesterlimjj"},"content":"        return date;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"lesterlimjj"},"content":"     * Processes the LocalDateTime to get date string in specified patterns.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"lesterlimjj"},"content":"     * @param dateTime The LocalDateTime to be processed.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"lesterlimjj"},"content":"     * @return The date string to be saved in file.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"lesterlimjj"},"content":"    public static String convertLocalDateToPattern(LocalDateTime dateTime) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"lesterlimjj"},"content":"        String dateString \u003d \"\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"lesterlimjj"},"content":"        for (int i \u003d 0; i \u003c LOCAL_DATETIME_PATTERNS.length; i++) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"lesterlimjj"},"content":"            DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(LOCAL_DATETIME_PATTERNS[i]);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"lesterlimjj"},"content":"            try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"lesterlimjj"},"content":"                dateString \u003d dateTime.format(dateFormatter);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"lesterlimjj"},"content":"                break; // Exit the loop once the date is successfully formatted","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"lesterlimjj"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"lesterlimjj"},"content":"                // do nothing so that we can check for next pattern","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"lesterlimjj"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"lesterlimjj"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"lesterlimjj"},"content":"        return dateString;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"lesterlimjj"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"lesterlimjj":442}},{"path":"src/main/java/owen/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterlimjj"},"content":"package owen.storage;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lesterlimjj"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lesterlimjj"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lesterlimjj"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lesterlimjj"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lesterlimjj"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lesterlimjj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lesterlimjj"},"content":"import java.util.List;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lesterlimjj"},"content":"import owen.exception.OwenException;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lesterlimjj"},"content":"import owen.parser.Parser;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lesterlimjj"},"content":"import owen.task.Deadline;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lesterlimjj"},"content":"import owen.task.Event;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lesterlimjj"},"content":"import owen.task.Task;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lesterlimjj"},"content":"import owen.task.TaskList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lesterlimjj"},"content":"import owen.task.Todo;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lesterlimjj"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lesterlimjj"},"content":" * Represents the storage that handles the writing and loading of data.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lesterlimjj"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lesterlimjj"},"content":"public class Storage {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lesterlimjj"},"content":"    /** Path to the task list data file. */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lesterlimjj"},"content":"    private static final Path TASKLIST_PATH \u003d Paths.get(\"./\", \"data\", \"taskList.txt\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lesterlimjj"},"content":"     * Reads the text file data, parses the data into tasks and adds the tasks to the task list.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lesterlimjj"},"content":"     * If the file does not exist, it creates a new file.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lesterlimjj"},"content":"     * @param taskList The tasklist to add the tasks to.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lesterlimjj"},"content":"     * @throws OwenException If there is an error reading the file.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lesterlimjj"},"content":"    public void loadTaskListData(TaskList taskList) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lesterlimjj"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lesterlimjj"},"content":"            createTaskListFileAndDirectoryIfNeeded();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lesterlimjj"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(TASKLIST_PATH);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lesterlimjj"},"content":"            for (int i \u003d 0; i \u003c lines.size(); i++) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lesterlimjj"},"content":"                String[] dataSegments \u003d splitAndTrimLine(lines.get(i));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lesterlimjj"},"content":"                switch (dataSegments[0]) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lesterlimjj"},"content":"                case \"T\":","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lesterlimjj"},"content":"                    addTodoFromDataSegment(dataSegments, taskList);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lesterlimjj"},"content":"                    break;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lesterlimjj"},"content":"                case \"D\":","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lesterlimjj"},"content":"                    addDeadlineFromDataSegment(dataSegments, taskList);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lesterlimjj"},"content":"                    break;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lesterlimjj"},"content":"                case \"E\":","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lesterlimjj"},"content":"                    addEventFromDataSegment(dataSegments, taskList);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lesterlimjj"},"content":"                    break;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lesterlimjj"},"content":"                default:","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lesterlimjj"},"content":"                    throw new OwenException(\"invalid data format in file\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lesterlimjj"},"content":"                }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lesterlimjj"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lesterlimjj"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lesterlimjj"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lesterlimjj"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lesterlimjj"},"content":"     * Creates the task list file and directory if they do not exist.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lesterlimjj"},"content":"     * @throws IOException If there is an error creating the file or directory.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lesterlimjj"},"content":"    public void createTaskListFileAndDirectoryIfNeeded() throws IOException {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lesterlimjj"},"content":"        if (!Files.exists(TASKLIST_PATH.getParent())) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lesterlimjj"},"content":"            Files.createDirectory(TASKLIST_PATH.getParent());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lesterlimjj"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lesterlimjj"},"content":"        if (!Files.exists(TASKLIST_PATH)) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lesterlimjj"},"content":"            Files.createFile(TASKLIST_PATH);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lesterlimjj"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lesterlimjj"},"content":"     * Splits a line into segments and trims each segment.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"lesterlimjj"},"content":"     * @param line The line to split and trim.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"lesterlimjj"},"content":"     * @return An array of trimmed segments.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"lesterlimjj"},"content":"    public String[] splitAndTrimLine(String line) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"lesterlimjj"},"content":"        String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"lesterlimjj"},"content":"        for (int j \u003d 0; j \u003c parts.length; j++) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"lesterlimjj"},"content":"            parts[j] \u003d parts[j].trim();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"lesterlimjj"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"lesterlimjj"},"content":"        return parts;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"lesterlimjj"},"content":"     * Adds a todo task from a data segment.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"lesterlimjj"},"content":"     * @param dataSegments The data segments containing the Todo information.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"lesterlimjj"},"content":"     * @param taskList The task list to add the task to.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"lesterlimjj"},"content":"    public void addTodoFromDataSegment(String[] dataSegments, TaskList taskList) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"lesterlimjj"},"content":"        boolean isDone \u003d dataSegments[1].equals(\"1\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"lesterlimjj"},"content":"        String description \u003d dataSegments[2];","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"lesterlimjj"},"content":"        String[] tags \u003d dataSegments[3].split(\" \");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"lesterlimjj"},"content":"        Todo loadedTodo \u003d new Todo(description, isDone);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"lesterlimjj"},"content":"        addTagsToTaskFromDataSegment(dataSegments[3], loadedTodo);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"lesterlimjj"},"content":"        taskList.addTask(loadedTodo);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"lesterlimjj"},"content":"     * Adds a deadline task from a data segment.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"lesterlimjj"},"content":"     * @param dataSegments The data segments containing the Deadline information.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"lesterlimjj"},"content":"     * @param taskList The task list to add the task to.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"lesterlimjj"},"content":"    public void addDeadlineFromDataSegment(String[] dataSegments, TaskList taskList) throws OwenException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"lesterlimjj"},"content":"        boolean isDone \u003d dataSegments[1].equals(\"1\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"lesterlimjj"},"content":"        String description \u003d dataSegments[2];","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"lesterlimjj"},"content":"        String date \u003d dataSegments[4];","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"lesterlimjj"},"content":"        LocalDateTime deadline \u003d Parser.convertStringToLocalDateTime(date);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"lesterlimjj"},"content":"        Deadline loadedDeadline \u003d new Deadline(description, isDone, deadline);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"lesterlimjj"},"content":"        addTagsToTaskFromDataSegment(dataSegments[3], loadedDeadline);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"lesterlimjj"},"content":"        taskList.addTask(loadedDeadline);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"lesterlimjj"},"content":"     * Adds an event task from a data segment.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"lesterlimjj"},"content":"     * @param dataSegments The data segments containing the Event information.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"lesterlimjj"},"content":"     * @param taskList The task list to add the task to.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"lesterlimjj"},"content":"    public void addEventFromDataSegment(String[] dataSegments, TaskList taskList) throws OwenException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"lesterlimjj"},"content":"        boolean isDone \u003d dataSegments[1].equals(\"1\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"lesterlimjj"},"content":"        String description \u003d dataSegments[2];","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"lesterlimjj"},"content":"        String startDate \u003d dataSegments[4].split(\"-\")[0];","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"lesterlimjj"},"content":"        String endDate \u003d dataSegments[4].split(\"-\")[1];","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"lesterlimjj"},"content":"        LocalDateTime startDateTime \u003d Parser.convertStringToLocalDateTime(startDate);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"lesterlimjj"},"content":"        LocalDateTime endDateTime \u003d Parser.convertStringToLocalDateTime(endDate);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"lesterlimjj"},"content":"        Event loadedEvent \u003d new Event(description, isDone, startDateTime, endDateTime);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"lesterlimjj"},"content":"        addTagsToTaskFromDataSegment(dataSegments[3], loadedEvent);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"lesterlimjj"},"content":"        taskList.addTask(loadedEvent);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"lesterlimjj"},"content":"     * Adds tags to a task from a data segment.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"lesterlimjj"},"content":"     * @param dataSegment The data segment containing the tags.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"lesterlimjj"},"content":"     * @param task The task to add the tags to.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"lesterlimjj"},"content":"    public void addTagsToTaskFromDataSegment(String dataSegment, Task task) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"lesterlimjj"},"content":"        String[] tags \u003d dataSegment.split(\" \");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"lesterlimjj"},"content":"        for (int i \u003d 0; i \u003c tags.length; i++) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"lesterlimjj"},"content":"            if (!tags[i].trim().isEmpty()) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"lesterlimjj"},"content":"                task.addTag(tags[i]);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"lesterlimjj"},"content":"            }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"lesterlimjj"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"lesterlimjj"},"content":"     * Overwrites the current tasklist data with the new tasklist data.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"lesterlimjj"},"content":"     * This method is used to update the tasklist data in the file when a task is deleted or modified.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"lesterlimjj"},"content":"     * @param taskList The new tasklist to be written to the file.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"lesterlimjj"},"content":"    public void overwriteTaskListData(List\u003cTask\u003e taskList) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"lesterlimjj"},"content":"        StringBuilder linesToWrite \u003d new StringBuilder();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"lesterlimjj"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"lesterlimjj"},"content":"            Task task \u003d taskList.get(i);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"lesterlimjj"},"content":"            String line \u003d task.convertToDataFormat();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"lesterlimjj"},"content":"            linesToWrite.append(line);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"lesterlimjj"},"content":"            // the last added task should not have newline","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"lesterlimjj"},"content":"            // since if appended to after overwrite, file format will break due to empty line","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"lesterlimjj"},"content":"            if (i !\u003d taskList.size() - 1) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"lesterlimjj"},"content":"                linesToWrite.append(System.lineSeparator());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"lesterlimjj"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"lesterlimjj"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"lesterlimjj"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"lesterlimjj"},"content":"            Files.writeString(TASKLIST_PATH, linesToWrite);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"lesterlimjj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"lesterlimjj"},"content":"            System.out.println(\"We encountered an error while saving...\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"lesterlimjj"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"lesterlimjj"},"content":"     * Appends a new task to the tasklist data.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"lesterlimjj"},"content":"     * This method is only used when adding a new task to the tasklist data in the file.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"lesterlimjj"},"content":"     * @param task The new task to be added to the tasklist data.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"lesterlimjj"},"content":"    public void appendToTasklistData(Task task) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"lesterlimjj"},"content":"        String line \u003d task.convertToDataFormat();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"lesterlimjj"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"lesterlimjj"},"content":"            // adding a newline for the first added task will break file format","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"lesterlimjj"},"content":"            if (Files.size(TASKLIST_PATH) !\u003d 0) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"lesterlimjj"},"content":"                line \u003d \"\\n\" + line;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"lesterlimjj"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"lesterlimjj"},"content":"            Files.writeString(TASKLIST_PATH, line, StandardOpenOption.APPEND);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"lesterlimjj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"lesterlimjj"},"content":"            System.out.println(\"We encountered an error while saving...\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"lesterlimjj"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"lesterlimjj"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"lesterlimjj":205}},{"path":"src/main/java/owen/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterlimjj"},"content":"package owen.task;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lesterlimjj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lesterlimjj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lesterlimjj"},"content":"import owen.parser.Parser;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lesterlimjj"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lesterlimjj"},"content":" * Represents a task with a specified deadline.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lesterlimjj"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lesterlimjj"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lesterlimjj"},"content":"    /** The date and time of the deadline */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lesterlimjj"},"content":"    private LocalDateTime date;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lesterlimjj"},"content":"     * Constructs a deadline object with the specified description and date.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lesterlimjj"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lesterlimjj"},"content":"     * @param date The date and time of the deadline.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lesterlimjj"},"content":"    public Deadline(String description, LocalDateTime date) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lesterlimjj"},"content":"        super(description);","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lesterlimjj"},"content":"        this.date \u003d date;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lesterlimjj"},"content":"        assert date !\u003d null : \"Date cannot be null\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lesterlimjj"},"content":"     * Constructs a Deadline object with the specified description, completion status, and date.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lesterlimjj"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lesterlimjj"},"content":"     * @param isDone The completion status of the deadline.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lesterlimjj"},"content":"     * @param date  The date and time of the deadline.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lesterlimjj"},"content":"    public Deadline(String description, boolean isDone, LocalDateTime date) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lesterlimjj"},"content":"        super(description, isDone);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lesterlimjj"},"content":"        this.date \u003d date;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lesterlimjj"},"content":"    public LocalDateTime getDate() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lesterlimjj"},"content":"        return date;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lesterlimjj"},"content":"    @Override","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lesterlimjj"},"content":"    public String toString() {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lesterlimjj"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy h:mma\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lesterlimjj"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + getDate().format(outputFormatter) + \")\";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lesterlimjj"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lesterlimjj"},"content":"    public String convertToDataFormat() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lesterlimjj"},"content":"        return \"D\" + \" | \" + super.convertToDataFormat() + \" | \" + Parser.convertLocalDateToPattern(getDate());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lesterlimjj"},"content":"}","lastModifiedDate":"2025-01-16","isFullCredit":false}],"authorContributionMap":{"lesterlimjj":58}},{"path":"src/main/java/owen/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterlimjj"},"content":"package owen.task;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lesterlimjj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lesterlimjj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lesterlimjj"},"content":"import owen.parser.Parser;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lesterlimjj"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lesterlimjj"},"content":" * Represents a task with a start and end date.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lesterlimjj"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lesterlimjj"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lesterlimjj"},"content":"    /** Start date of the event */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lesterlimjj"},"content":"    private LocalDateTime startDate;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lesterlimjj"},"content":"    /** End date of the event */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lesterlimjj"},"content":"    private LocalDateTime endDate;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lesterlimjj"},"content":"     * Constructs an event object with specified description, start date, and end date.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lesterlimjj"},"content":"     * @param description Description of the event.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lesterlimjj"},"content":"     * @param startDate Start date of the event.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lesterlimjj"},"content":"     * @param endDate End date of the event.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lesterlimjj"},"content":"    public Event(String description, LocalDateTime startDate, LocalDateTime endDate) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lesterlimjj"},"content":"        super(description);","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lesterlimjj"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lesterlimjj"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lesterlimjj"},"content":"     * Constructs an event object with specified description, status, start date, and end date.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lesterlimjj"},"content":"     * @param description Description of the event.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lesterlimjj"},"content":"     * @param isDone Whether the event is done.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lesterlimjj"},"content":"     * @param startDate Start date of the event.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lesterlimjj"},"content":"     * @param endDate End date of the event.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lesterlimjj"},"content":"    public Event(String description, boolean isDone, LocalDateTime startDate, LocalDateTime endDate) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lesterlimjj"},"content":"        super(description, isDone);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lesterlimjj"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lesterlimjj"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lesterlimjj"},"content":"        assert startDate !\u003d null : \"Start date should not be null\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lesterlimjj"},"content":"        assert endDate !\u003d null : \"End date should not be null\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lesterlimjj"},"content":"    public LocalDateTime getStartDate() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lesterlimjj"},"content":"        return startDate;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lesterlimjj"},"content":"    public LocalDateTime getEndDate() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lesterlimjj"},"content":"        return endDate;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lesterlimjj"},"content":"    @Override","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lesterlimjj"},"content":"    public String toString() {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lesterlimjj"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy h:mma\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lesterlimjj"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + getStartDate().format(outputFormatter) + \" to: \"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lesterlimjj"},"content":"                + getEndDate().format(outputFormatter) + \")\";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lesterlimjj"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lesterlimjj"},"content":"    public String convertToDataFormat() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lesterlimjj"},"content":"        String combinedDates \u003d Parser.convertLocalDateToPattern(getStartDate()) + \"-\"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lesterlimjj"},"content":"                + Parser.convertLocalDateToPattern(getEndDate());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lesterlimjj"},"content":"        return \"E\" + \" | \" + super.convertToDataFormat() + \" | \" + combinedDates;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lesterlimjj"},"content":"}","lastModifiedDate":"2025-01-16","isFullCredit":false}],"authorContributionMap":{"lesterlimjj":69}},{"path":"src/main/java/owen/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterlimjj"},"content":"package owen.task;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lesterlimjj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lesterlimjj"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lesterlimjj"},"content":" * Represents a task.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lesterlimjj"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lesterlimjj"},"content":"public class Task {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lesterlimjj"},"content":"    /** Description of the task */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lesterlimjj"},"content":"    private String description;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lesterlimjj"},"content":"    /** Status of the task */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lesterlimjj"},"content":"    private boolean isDone;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lesterlimjj"},"content":"    private ArrayList\u003cString\u003e tags \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lesterlimjj"},"content":"     * Constructs a task object with specified description.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lesterlimjj"},"content":"     * @param description Description of the task.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lesterlimjj"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lesterlimjj"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lesterlimjj"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lesterlimjj"},"content":"     * Constructs a task object with specified description and status.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lesterlimjj"},"content":"     * @param description Description of the task.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lesterlimjj"},"content":"     * @param isDone Status of the task.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lesterlimjj"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lesterlimjj"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lesterlimjj"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lesterlimjj"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lesterlimjj"},"content":"        return this.description;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lesterlimjj"},"content":"    public String getDoneIcon() {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lesterlimjj"},"content":"        return isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lesterlimjj"},"content":"    public void setAsDone() {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lesterlimjj"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lesterlimjj"},"content":"    public void setAsNotDone() {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lesterlimjj"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lesterlimjj"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lesterlimjj"},"content":"     * @return String representation of the task.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lesterlimjj"},"content":"    @Override","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lesterlimjj"},"content":"    public String toString() {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lesterlimjj"},"content":"        return getDoneIcon() + \" \" + getDescription() + \" \" + convertTagsToString();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lesterlimjj"},"content":"     * Returns the string representation of the task in data format.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lesterlimjj"},"content":"     * @return String representation of the task in data format.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lesterlimjj"},"content":"    public String convertToDataFormat() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lesterlimjj"},"content":"        String doneStatus \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lesterlimjj"},"content":"        return doneStatus + \" | \" + getDescription() + \" | \" + convertTagsToDataFormat();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lesterlimjj"},"content":"     * Adds a tag to the list of tags for a task.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lesterlimjj"},"content":"     * @param tag The provided tag.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"lesterlimjj"},"content":"    public void addTag(String tag) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"lesterlimjj"},"content":"        tags.add(tag);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"lesterlimjj"},"content":"     * converts the list of tags to a string.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"lesterlimjj"},"content":"     * @return the string representation of the tags.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"lesterlimjj"},"content":"    public String convertTagsToString() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"lesterlimjj"},"content":"        String tagsString \u003d \"\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"lesterlimjj"},"content":"        for (int i \u003d 0; i \u003c tags.size(); i++) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"lesterlimjj"},"content":"            tagsString +\u003d \"#\" + tags.get(i);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"lesterlimjj"},"content":"            if (i !\u003d tags.size() - 1) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"lesterlimjj"},"content":"                tagsString +\u003d \" \";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"lesterlimjj"},"content":"            }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"lesterlimjj"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"lesterlimjj"},"content":"        return tagsString;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"lesterlimjj"},"content":"     * converts the list of tags to a string in data format.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"lesterlimjj"},"content":"     * @return the string representation of the tags in data format.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"lesterlimjj"},"content":"    public String convertTagsToDataFormat() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"lesterlimjj"},"content":"        String tagsString \u003d \"\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"lesterlimjj"},"content":"        for (int i \u003d 0; i \u003c tags.size(); i++) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"lesterlimjj"},"content":"            tagsString +\u003d tags.get(i);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"lesterlimjj"},"content":"            if (i !\u003d tags.size() - 1) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"lesterlimjj"},"content":"                tagsString +\u003d \" \";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"lesterlimjj"},"content":"            }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"lesterlimjj"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"lesterlimjj"},"content":"        return tagsString;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"lesterlimjj"},"content":"}","lastModifiedDate":"2025-01-16","isFullCredit":false}],"authorContributionMap":{"lesterlimjj":116}},{"path":"src/main/java/owen/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterlimjj"},"content":"package owen.task;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lesterlimjj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lesterlimjj"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lesterlimjj"},"content":" * Represents a list of tasks.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lesterlimjj"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lesterlimjj"},"content":"public class TaskList {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lesterlimjj"},"content":"    /** ArrayList of tasks */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lesterlimjj"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lesterlimjj"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lesterlimjj"},"content":"     * @param task The task to be added.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lesterlimjj"},"content":"     * */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lesterlimjj"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lesterlimjj"},"content":"        tasks.add(task);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lesterlimjj"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lesterlimjj"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lesterlimjj"},"content":"     * */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lesterlimjj"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lesterlimjj"},"content":"        tasks.remove(index);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lesterlimjj"},"content":"     * Returns a copy of the task list.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lesterlimjj"},"content":"     * @return Copy of the task list.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lesterlimjj"},"content":"     * */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lesterlimjj"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lesterlimjj"},"content":"        return new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lesterlimjj"},"content":"     * Returns the status of the task at the given index.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lesterlimjj"},"content":"     * @param index The index of the task.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lesterlimjj"},"content":"     * @return The status of the task.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lesterlimjj"},"content":"     * */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lesterlimjj"},"content":"    public String getTaskStatus(int index) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lesterlimjj"},"content":"        return tasks.get(index).toString();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lesterlimjj"},"content":"     * Marks the task at the given index as done.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lesterlimjj"},"content":"     * @param index The index of the task.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lesterlimjj"},"content":"    public void markTaskAsDone(int index) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lesterlimjj"},"content":"        tasks.get(index).setAsDone();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lesterlimjj"},"content":"     * Marks the task at the given index as not done.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lesterlimjj"},"content":"     * @param index The index of the task.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lesterlimjj"},"content":"    public void markTaskAsUndone(int index) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lesterlimjj"},"content":"        tasks.get(index).setAsNotDone();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lesterlimjj"},"content":"     * Searches for tasks based on a word.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lesterlimjj"},"content":"     * @param searchWord The word to search for in task list.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lesterlimjj"},"content":"     * @return A list of matched tasks.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lesterlimjj"},"content":"    public ArrayList\u003cTask\u003e searchTasks(String searchWord) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lesterlimjj"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lesterlimjj"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"lesterlimjj"},"content":"            if (tasks.get(i).getDescription().contains(searchWord)) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"lesterlimjj"},"content":"                foundTasks.add(tasks.get(i));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"lesterlimjj"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"lesterlimjj"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"lesterlimjj"},"content":"        return foundTasks;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"lesterlimjj"},"content":"     * Formats the tasks in a task list into a string.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"lesterlimjj"},"content":"     * Each line contains index and task description.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"lesterlimjj"},"content":"     * @param tasks The list of tasks to be formatted.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"lesterlimjj"},"content":"     * @return A string containing the formatted tasks in the list.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"lesterlimjj"},"content":"    public String convertTaskListToFormattedString(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"lesterlimjj"},"content":"        StringBuilder formattedTaskList \u003d new StringBuilder();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"lesterlimjj"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"lesterlimjj"},"content":"            formattedTaskList.append(i + 1);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"lesterlimjj"},"content":"            formattedTaskList.append(\". \");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"lesterlimjj"},"content":"            formattedTaskList.append(tasks.get(i).toString());","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"lesterlimjj"},"content":"            formattedTaskList.append(\"\\n\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"lesterlimjj"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"lesterlimjj"},"content":"        return formattedTaskList.toString();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"lesterlimjj"},"content":"     * Adds a tag to the task at the given index.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"lesterlimjj"},"content":"     * @param index The index of the task to add tag to.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"lesterlimjj"},"content":"     * @param tag The tag to be added.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"lesterlimjj"},"content":"    public void addTagToTask(int index, String tag) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"lesterlimjj"},"content":"        tasks.get(index).addTag(tag);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"lesterlimjj"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"lesterlimjj":113}},{"path":"src/main/java/owen/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterlimjj"},"content":"package owen.task;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lesterlimjj"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lesterlimjj"},"content":" * Represents a task that is a Todo.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lesterlimjj"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lesterlimjj"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lesterlimjj"},"content":"     * Constructs a Todo object with specified description.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lesterlimjj"},"content":"     * @param description Description of the Todo.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lesterlimjj"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lesterlimjj"},"content":"        super(description);","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lesterlimjj"},"content":"        assert description !\u003d null : \"Description cannot be null\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lesterlimjj"},"content":"     * Constructs a Todo object with specified description and isDone status.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lesterlimjj"},"content":"     * @param description Description of the Todo.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lesterlimjj"},"content":"     * @param isDone Whether the Todo is done.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lesterlimjj"},"content":"    public Todo(String description, Boolean isDone) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lesterlimjj"},"content":"        super(description, isDone);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lesterlimjj"},"content":"    @Override","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lesterlimjj"},"content":"    public String toString() {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lesterlimjj"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lesterlimjj"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lesterlimjj"},"content":"    public String convertToDataFormat() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lesterlimjj"},"content":"        return \"T\" + \" | \" + super.convertToDataFormat();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lesterlimjj"},"content":"}","lastModifiedDate":"2025-01-16","isFullCredit":false}],"authorContributionMap":{"lesterlimjj":37}},{"path":"src/main/java/owen/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterlimjj"},"content":"package owen.ui;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lesterlimjj"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lesterlimjj"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lesterlimjj"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lesterlimjj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lesterlimjj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lesterlimjj"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lesterlimjj"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lesterlimjj"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lesterlimjj"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lesterlimjj"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lesterlimjj"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lesterlimjj"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lesterlimjj"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lesterlimjj"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lesterlimjj"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lesterlimjj"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lesterlimjj"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lesterlimjj"},"content":"    /** Holds the text to be displayed in the dialog box. */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lesterlimjj"},"content":"    @FXML","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lesterlimjj"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lesterlimjj"},"content":"    /** Holds the image to be displayed in the dialog box. */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lesterlimjj"},"content":"    @FXML","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lesterlimjj"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lesterlimjj"},"content":"     * Constructs a DialogBox.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lesterlimjj"},"content":"     * @param text The text to be displayed in the dialog box.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lesterlimjj"},"content":"     * @param img The image to be displayed in the dialog box.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lesterlimjj"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lesterlimjj"},"content":"        try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lesterlimjj"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(OwenWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lesterlimjj"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lesterlimjj"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lesterlimjj"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lesterlimjj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lesterlimjj"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lesterlimjj"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lesterlimjj"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lesterlimjj"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lesterlimjj"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lesterlimjj"},"content":"    private void flip() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lesterlimjj"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lesterlimjj"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lesterlimjj"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lesterlimjj"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lesterlimjj"},"content":"     * Returns a DialogBox for the user.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lesterlimjj"},"content":"     * @param text The text to be shown on user side.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lesterlimjj"},"content":"     * @param img The image of the user.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lesterlimjj"},"content":"     * @return A DialogBox for the user.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lesterlimjj"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lesterlimjj"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lesterlimjj"},"content":"     * Returns a DialogBox for chatbot Owen.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lesterlimjj"},"content":"     * @param text The text to be shown on chatbot side.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lesterlimjj"},"content":"     * @param img The image of the chatbot.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lesterlimjj"},"content":"     * @return A DialogBox for chatbot Owen.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"lesterlimjj"},"content":"    public static DialogBox getOwenDialog(String text, Image img) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"lesterlimjj"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"lesterlimjj"},"content":"        db.flip();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"lesterlimjj"},"content":"        return db;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"lesterlimjj"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"lesterlimjj":84}},{"path":"src/main/java/owen/ui/GuiController.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterlimjj"},"content":"package owen.ui;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lesterlimjj"},"content":"import javafx.animation.KeyFrame;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lesterlimjj"},"content":"import javafx.animation.Timeline;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lesterlimjj"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lesterlimjj"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lesterlimjj"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lesterlimjj"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lesterlimjj"},"content":"import javafx.util.Duration;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lesterlimjj"},"content":"import owen.Owen;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lesterlimjj"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lesterlimjj"},"content":" * Represents a controller class to manage GUI updates","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lesterlimjj"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lesterlimjj"},"content":"public class GuiController {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lesterlimjj"},"content":"    /** Singleton instance for GUI controller */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lesterlimjj"},"content":"    private static GuiController instance \u003d null;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lesterlimjj"},"content":"    /** Text field to get user input */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lesterlimjj"},"content":"    private TextField userTextField;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lesterlimjj"},"content":"    /** The container for the dialog */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lesterlimjj"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lesterlimjj"},"content":"    /** Instance of chatbot */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lesterlimjj"},"content":"    private Owen owen;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lesterlimjj"},"content":"    /** Images for user and owen */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lesterlimjj"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpg\"));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lesterlimjj"},"content":"    private Image owenImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaOwen.jpg\"));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lesterlimjj"},"content":"     * Gets singleton instance of GUI controller.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lesterlimjj"},"content":"     * @return Singleton instance of GUI controller.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lesterlimjj"},"content":"    public static GuiController getInstance() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lesterlimjj"},"content":"        if (instance \u003d\u003d null) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lesterlimjj"},"content":"            instance \u003d new GuiController();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lesterlimjj"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lesterlimjj"},"content":"        return instance;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lesterlimjj"},"content":"     * Sets instance of chatbot for GUI controller.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lesterlimjj"},"content":"     * @param owen Instance of chatbot.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lesterlimjj"},"content":"    public void setOwen(Owen owen) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lesterlimjj"},"content":"        this.owen \u003d owen;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lesterlimjj"},"content":"     * Sets user text field for GUI controller.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lesterlimjj"},"content":"     * @param userTextField Text field for user input.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lesterlimjj"},"content":"    public void setUserTextField(TextField userTextField) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lesterlimjj"},"content":"        this.userTextField \u003d userTextField;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lesterlimjj"},"content":"     * Sets dialog container for GUI controller.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lesterlimjj"},"content":"     * @param dialogContainer Container for dialog.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lesterlimjj"},"content":"    public void setDialogContainer(VBox dialogContainer) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lesterlimjj"},"content":"        this.dialogContainer \u003d dialogContainer;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lesterlimjj"},"content":"     * Adds user dialog box to dialog container.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lesterlimjj"},"content":"    public void addUserDialog() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lesterlimjj"},"content":"        String input \u003d userTextField.getText();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lesterlimjj"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"lesterlimjj"},"content":"                DialogBox.getUserDialog(input, userImage)","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"lesterlimjj"},"content":"        );","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"lesterlimjj"},"content":"        userTextField.clear();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"lesterlimjj"},"content":"     * Adds owen dialog box to dialog container.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"lesterlimjj"},"content":"     * @param response Given response from processed command.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"lesterlimjj"},"content":"    public void addOwenDialog(String response) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"lesterlimjj"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"lesterlimjj"},"content":"                DialogBox.getOwenDialog(response, owenImage)","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"lesterlimjj"},"content":"        );","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"lesterlimjj"},"content":"     * Appends responses from processed command into one string.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"lesterlimjj"},"content":"     * Each response is separated by a newline.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"lesterlimjj"},"content":"     *","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"lesterlimjj"},"content":"     * @param responses Given array of responses from processed command.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"lesterlimjj"},"content":"     * @return Complete string of responses.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"lesterlimjj"},"content":"    public String formatResponses(String... responses) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"lesterlimjj"},"content":"        StringBuilder completeResponse \u003d new StringBuilder();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"lesterlimjj"},"content":"        for (String response : responses) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"lesterlimjj"},"content":"            completeResponse.append(response);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"lesterlimjj"},"content":"            completeResponse.append(\"\\n\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"lesterlimjj"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"lesterlimjj"},"content":"        return completeResponse.toString();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"lesterlimjj"},"content":"     * Calls chatbot to evaluate input given by user.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"lesterlimjj"},"content":"    public void evaluateInput() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"lesterlimjj"},"content":"        owen.evaluateInput(userTextField.getText());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"lesterlimjj"},"content":"     * Shows greeting message to user.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"lesterlimjj"},"content":"    public void greetUser() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"lesterlimjj"},"content":"        String completeGreeting \u003d formatResponses(\"Greetings! I am Owen.\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"lesterlimjj"},"content":"                + \"What would you ask of me?\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"lesterlimjj"},"content":"        addOwenDialog(completeGreeting);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"lesterlimjj"},"content":"     * Exits application after a delay of 1 second.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"lesterlimjj"},"content":"    public void exitApplicationWithDelay() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"lesterlimjj"},"content":"        // Delay exit by 1 second","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"lesterlimjj"},"content":"        Timeline timeline \u003d new Timeline(new KeyFrame(Duration.seconds(1), event -\u003e Platform.exit()));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"lesterlimjj"},"content":"        timeline.play();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"lesterlimjj"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"lesterlimjj":134}},{"path":"src/main/java/owen/ui/OwenApplication.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterlimjj"},"content":"package owen.ui;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lesterlimjj"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lesterlimjj"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lesterlimjj"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lesterlimjj"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lesterlimjj"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lesterlimjj"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lesterlimjj"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lesterlimjj"},"content":" * Represents a class that handles the JavaFX GUI setup for the application.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lesterlimjj"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lesterlimjj"},"content":"public class OwenApplication extends Application {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lesterlimjj"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lesterlimjj"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lesterlimjj"},"content":"        try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lesterlimjj"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(OwenWindow.class.getResource(\"/view/OwenWindow.fxml\"));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lesterlimjj"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lesterlimjj"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lesterlimjj"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lesterlimjj"},"content":"            stage.setTitle(\"Owen\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lesterlimjj"},"content":"            stage.show();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lesterlimjj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lesterlimjj"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lesterlimjj"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lesterlimjj"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"lesterlimjj":29}},{"path":"src/main/java/owen/ui/OwenWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterlimjj"},"content":"package owen.ui;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lesterlimjj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lesterlimjj"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lesterlimjj"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lesterlimjj"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lesterlimjj"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lesterlimjj"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lesterlimjj"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lesterlimjj"},"content":" * Represents the main window UI component.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lesterlimjj"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lesterlimjj"},"content":"public class OwenWindow extends AnchorPane {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lesterlimjj"},"content":"    /** Vertical scrollbar for dialog container */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lesterlimjj"},"content":"    @FXML","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lesterlimjj"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lesterlimjj"},"content":"    /** Container for dialogs */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lesterlimjj"},"content":"    @FXML","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lesterlimjj"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lesterlimjj"},"content":"    /** Text field for user input */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lesterlimjj"},"content":"    @FXML","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lesterlimjj"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lesterlimjj"},"content":"    /** Button for sending user input */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lesterlimjj"},"content":"    @FXML","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lesterlimjj"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lesterlimjj"},"content":"     * Binds guiController to textField and VBox.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lesterlimjj"},"content":"    @FXML","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lesterlimjj"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lesterlimjj"},"content":"        GuiController guiController \u003d GuiController.getInstance();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lesterlimjj"},"content":"        guiController.setDialogContainer(dialogContainer);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lesterlimjj"},"content":"        guiController.setUserTextField(userInput);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lesterlimjj"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lesterlimjj"},"content":"        guiController.greetUser();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lesterlimjj"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lesterlimjj"},"content":"     * Calls guiController to evaluate user input.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lesterlimjj"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lesterlimjj"},"content":"    @FXML","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lesterlimjj"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lesterlimjj"},"content":"        GuiController guiController \u003d GuiController.getInstance();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lesterlimjj"},"content":"        guiController.evaluateInput();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lesterlimjj"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"lesterlimjj":52}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lesterlimjj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lesterlimjj"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lesterlimjj"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lesterlimjj"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lesterlimjj"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lesterlimjj"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lesterlimjj"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lesterlimjj"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lesterlimjj"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lesterlimjj"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lesterlimjj"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lesterlimjj"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lesterlimjj"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lesterlimjj"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lesterlimjj"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lesterlimjj"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lesterlimjj"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lesterlimjj"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lesterlimjj"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lesterlimjj"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"lesterlimjj":22}},{"path":"src/main/resources/view/OwenWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lesterlimjj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lesterlimjj"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lesterlimjj"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lesterlimjj"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lesterlimjj"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lesterlimjj"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lesterlimjj"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lesterlimjj"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/23.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"owen.ui.OwenWindow\"\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lesterlimjj"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lesterlimjj"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lesterlimjj"},"content":"            \u003cfont\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lesterlimjj"},"content":"                \u003cFont name\u003d\"System Italic\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lesterlimjj"},"content":"            \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lesterlimjj"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lesterlimjj"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lesterlimjj"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lesterlimjj"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lesterlimjj"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lesterlimjj"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lesterlimjj"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lesterlimjj"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"lesterlimjj":23}},{"path":"src/test/java/owen/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterlimjj"},"content":"package owen.parser;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lesterlimjj"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lesterlimjj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lesterlimjj"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lesterlimjj"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lesterlimjj"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lesterlimjj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lesterlimjj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lesterlimjj"},"content":"import owen.command.AddDeadlineCommand;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lesterlimjj"},"content":"import owen.command.AddEventCommand;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lesterlimjj"},"content":"import owen.command.AddTagCommand;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lesterlimjj"},"content":"import owen.command.AddTodoCommand;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lesterlimjj"},"content":"import owen.command.ByeCommand;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lesterlimjj"},"content":"import owen.command.Command;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lesterlimjj"},"content":"import owen.command.DeleteCommand;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lesterlimjj"},"content":"import owen.command.ListCommand;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lesterlimjj"},"content":"import owen.command.MarkCommand;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lesterlimjj"},"content":"import owen.command.UnmarkCommand;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lesterlimjj"},"content":"import owen.exception.OwenException;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lesterlimjj"},"content":"import owen.task.Deadline;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lesterlimjj"},"content":"import owen.task.Event;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lesterlimjj"},"content":"public class ParserTest {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lesterlimjj"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lesterlimjj"},"content":"    public void parse_listCommand_success() throws OwenException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lesterlimjj"},"content":"        Command command \u003d Parser.parse(\"list\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lesterlimjj"},"content":"        assertEquals(ListCommand.class, command.getClass());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lesterlimjj"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lesterlimjj"},"content":"    public void parse_addTodoCommand_success() throws OwenException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lesterlimjj"},"content":"        Command command \u003d Parser.parse(\"todo eat apple\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lesterlimjj"},"content":"        assertEquals(AddTodoCommand.class, command.getClass());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lesterlimjj"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lesterlimjj"},"content":"    public void parse_addDeadlineCommand_success() throws OwenException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lesterlimjj"},"content":"        Command command \u003d Parser.parse(\"deadline dream /by 10/3/2020 2000\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lesterlimjj"},"content":"        assertEquals(AddDeadlineCommand.class, command.getClass());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lesterlimjj"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lesterlimjj"},"content":"    public void parse_addEventCommand_success() throws OwenException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lesterlimjj"},"content":"        Command command \u003d Parser.parse(\"event eat death /from 2/12/2019 1800 /to 2/12/2020 2000\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lesterlimjj"},"content":"        assertEquals(AddEventCommand.class, command.getClass());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lesterlimjj"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lesterlimjj"},"content":"    public void parse_markCommand_success() throws OwenException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lesterlimjj"},"content":"        Command command \u003d Parser.parse(\"mark 1\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lesterlimjj"},"content":"        assertEquals(MarkCommand.class, command.getClass());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lesterlimjj"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lesterlimjj"},"content":"    public void parse_unmarkCommand_success() throws OwenException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lesterlimjj"},"content":"        Command command \u003d Parser.parse(\"unmark 1\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lesterlimjj"},"content":"        assertEquals(UnmarkCommand.class, command.getClass());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lesterlimjj"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lesterlimjj"},"content":"    public void parse_deleteCommand_success() throws OwenException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lesterlimjj"},"content":"        Command command \u003d Parser.parse(\"delete 1\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lesterlimjj"},"content":"        assertEquals(DeleteCommand.class, command.getClass());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lesterlimjj"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lesterlimjj"},"content":"    public void parse_byeCommand_success() throws OwenException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lesterlimjj"},"content":"        Command command \u003d Parser.parse(\"bye\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lesterlimjj"},"content":"        assertEquals(ByeCommand.class, command.getClass());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"lesterlimjj"},"content":"    @Test","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"lesterlimjj"},"content":"    public void parse_addTagCommand_success() throws OwenException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"lesterlimjj"},"content":"        Command command \u003d Parser.parse(\"tag 1 fun\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"lesterlimjj"},"content":"        assertEquals(AddTagCommand.class, command.getClass());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"lesterlimjj"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"lesterlimjj"},"content":"    public void parse_invalidCommand_throwsException() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"lesterlimjj"},"content":"        Exception exception \u003d assertThrows(OwenException.class, () -\u003e {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"lesterlimjj"},"content":"            Parser.parse(\"gibber\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"lesterlimjj"},"content":"        });","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"lesterlimjj"},"content":"        assertEquals(\"I have not seen that command before. Maybe in another life?\", exception.getMessage());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"lesterlimjj"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"lesterlimjj"},"content":"    public void checkValidTodo_validTodo_success() throws OwenException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"lesterlimjj"},"content":"        String[] parts \u003d \"todo eat\".split(\" \");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"lesterlimjj"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"lesterlimjj"},"content":"            Parser.checkValidTodo(parts);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"lesterlimjj"},"content":"        });","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"lesterlimjj"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"lesterlimjj"},"content":"    public void checkValidTodo_invalidTodo_throwsException() throws OwenException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"lesterlimjj"},"content":"        String[] parts \u003d \"todo\".split(\" \");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"lesterlimjj"},"content":"        Exception exception \u003d assertThrows(OwenException.class, () -\u003e {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"lesterlimjj"},"content":"            Parser.checkValidTodo(parts);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"lesterlimjj"},"content":"        });","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"lesterlimjj"},"content":"        assertEquals(\"You forgot your description. Try again.\", exception.getMessage());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"lesterlimjj"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"lesterlimjj"},"content":"    public void checkValidDeadline_validDeadline_success() throws OwenException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"lesterlimjj"},"content":"        String input \u003d \"deadline dream /by 10/3/2020 2000\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"lesterlimjj"},"content":"        String truncated \u003d input.replaceFirst(AddDeadlineCommand.KEY_WORD + \" \", \"\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"lesterlimjj"},"content":"        String[] parts \u003d truncated.split(\" \");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"lesterlimjj"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"lesterlimjj"},"content":"            Parser.checkValidDeadline(parts);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"lesterlimjj"},"content":"        });","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"lesterlimjj"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"lesterlimjj"},"content":"    public void checkValidDeadline_invalidDeadline_throwsException() throws OwenException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"lesterlimjj"},"content":"        String input \u003d \"deadline dream 10/3/2020 2000\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"lesterlimjj"},"content":"        String truncated \u003d input.replaceFirst(AddDeadlineCommand.KEY_WORD + \" \", \"\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"lesterlimjj"},"content":"        String[] parts \u003d truncated.split(\" \");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"lesterlimjj"},"content":"        Exception exception \u003d assertThrows(OwenException.class, () -\u003e {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"lesterlimjj"},"content":"            Parser.checkValidDeadline(parts);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"lesterlimjj"},"content":"        });","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"lesterlimjj"},"content":"        assertEquals(\"Invalid deadline format. Please add a /by \u003cdate/time\u003e\", exception.getMessage());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"lesterlimjj"},"content":"        input \u003d \"deadline dream /by  \";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"lesterlimjj"},"content":"        truncated \u003d input.replaceFirst(AddDeadlineCommand.KEY_WORD + \" \", \"\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"lesterlimjj"},"content":"        String[] parts2 \u003d truncated.split(\" \");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"lesterlimjj"},"content":"        exception \u003d assertThrows(OwenException.class, () -\u003e {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"lesterlimjj"},"content":"            Parser.checkValidDeadline(parts2);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"lesterlimjj"},"content":"        });","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"lesterlimjj"},"content":"        assertEquals(\"End date is empty. Please provide a valid date after /to for event \"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"lesterlimjj"},"content":"                + \"or /by for deadline.\", exception.getMessage());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"lesterlimjj"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"lesterlimjj"},"content":"    public void checkValidEvent_validEvent_success() throws OwenException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"lesterlimjj"},"content":"        String input \u003d \"event eat death /from 2/12/2019 1800 /to 2/12/2020 2000\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"lesterlimjj"},"content":"        String truncated \u003d input.replaceFirst(AddEventCommand.KEY_WORD + \" \", \"\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"lesterlimjj"},"content":"        String[] parts \u003d truncated.split(\" \");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"lesterlimjj"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"lesterlimjj"},"content":"            Parser.checkValidEvent(parts);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"lesterlimjj"},"content":"        });","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"lesterlimjj"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"lesterlimjj"},"content":"    public void checkValidEvent_invalidEvent_throwsException() throws OwenException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"lesterlimjj"},"content":"        String input \u003d \"event eat death  2/12/2019 1800 2/12/2020 2000\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"lesterlimjj"},"content":"        String truncated \u003d input.replaceFirst(AddEventCommand.KEY_WORD + \" \", \"\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"lesterlimjj"},"content":"        String[] parts1 \u003d truncated.split(\" \");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"lesterlimjj"},"content":"        Exception exception \u003d assertThrows(OwenException.class, () -\u003e {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"lesterlimjj"},"content":"            Parser.checkValidEvent(parts1);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"lesterlimjj"},"content":"        });","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"lesterlimjj"},"content":"        assertEquals(\"Missing start and end date. \"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"lesterlimjj"},"content":"                + \"Please add a /from \u003cdate/time\u003e and /to \u003cdate/time\u003e.\",","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"lesterlimjj"},"content":"                 exception.getMessage());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"lesterlimjj"},"content":"        input \u003d \"event eat death /from 2/12/2019 1800 2/12/2020 2000\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"lesterlimjj"},"content":"        truncated \u003d input.replaceFirst(AddEventCommand.KEY_WORD + \" \", \"\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"lesterlimjj"},"content":"        String[] parts2 \u003d truncated.split(\" \");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"lesterlimjj"},"content":"        exception \u003d assertThrows(OwenException.class, () -\u003e {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"lesterlimjj"},"content":"            Parser.checkValidEvent(parts2);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"lesterlimjj"},"content":"        });","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"lesterlimjj"},"content":"        assertEquals(\"Missing end date. Please add a /to \u003cdate/time\u003e.\", exception.getMessage());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"lesterlimjj"},"content":"        input \u003d \"event eat death  2/12/2019 1800 /to 2/12/2020 2000\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"lesterlimjj"},"content":"        truncated \u003d input.replaceFirst(AddEventCommand.KEY_WORD + \" \", \"\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"lesterlimjj"},"content":"        String[] parts3 \u003d truncated.split(\" \");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"lesterlimjj"},"content":"        exception \u003d assertThrows(OwenException.class, () -\u003e {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"lesterlimjj"},"content":"            Parser.checkValidEvent(parts3);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"lesterlimjj"},"content":"        });","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"lesterlimjj"},"content":"        assertEquals(\"Missing start date. Please add a /from \u003cdate/time\u003e.\", exception.getMessage());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"lesterlimjj"},"content":"        input \u003d \"event eat death /from 2/12/2019 1800 /to \";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"lesterlimjj"},"content":"        truncated \u003d input.replaceFirst(AddEventCommand.KEY_WORD + \" \", \"\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"lesterlimjj"},"content":"        String[] parts4 \u003d truncated.split(\" \");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"lesterlimjj"},"content":"        exception \u003d assertThrows(OwenException.class, () -\u003e {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"lesterlimjj"},"content":"            Parser.checkValidEvent(parts4);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"lesterlimjj"},"content":"        });","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"lesterlimjj"},"content":"        assertEquals(\"End date is empty. Please provide a valid date after /to for event \"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"lesterlimjj"},"content":"                + \"or /by for deadline.\", exception.getMessage());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"lesterlimjj"},"content":"        input \u003d \"event eat death /from /to 2/12/2020 2000\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"lesterlimjj"},"content":"        truncated \u003d input.replaceFirst(AddEventCommand.KEY_WORD + \" \", \"\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"lesterlimjj"},"content":"        String[] parts5 \u003d truncated.split(\" \");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"lesterlimjj"},"content":"        exception \u003d assertThrows(OwenException.class, () -\u003e {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"lesterlimjj"},"content":"            Parser.checkValidEvent(parts5);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"lesterlimjj"},"content":"        });","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"lesterlimjj"},"content":"        assertEquals(\"Start date is empty. Please provide a valid date after /from\", exception.getMessage());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"lesterlimjj"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"lesterlimjj"},"content":"    public void createDeadline_validDateFormat_success() throws OwenException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"lesterlimjj"},"content":"        String input \u003d \"deadline dream /by 10/3/2020 2000\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"lesterlimjj"},"content":"        String truncated \u003d input.replaceFirst(AddEventCommand.KEY_WORD + \" \", \"\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"lesterlimjj"},"content":"        String[] parts \u003d truncated.split(\" \");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"lesterlimjj"},"content":"        parts \u003d truncated.split(\"/by\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"lesterlimjj"},"content":"        Parser.trimStringArray(parts);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"lesterlimjj"},"content":"        Deadline deadline \u003d Parser.createDeadline(parts);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"lesterlimjj"},"content":"        assertEquals(Deadline.class, deadline.getClass());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"lesterlimjj"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"lesterlimjj"},"content":"    public void createDeadline_invalidDateFormat_throwsException() throws OwenException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"lesterlimjj"},"content":"        String input \u003d \"deadline dream /by 10 Mar 2020 8pm\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"lesterlimjj"},"content":"        String truncated \u003d input.replaceFirst(AddEventCommand.KEY_WORD + \" \", \"\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"lesterlimjj"},"content":"        String[] parts \u003d truncated.split(\" \");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"lesterlimjj"},"content":"        parts \u003d truncated.split(\"/by\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"lesterlimjj"},"content":"        Parser.trimStringArray(parts);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"lesterlimjj"},"content":"        String[] failedParts \u003d parts;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"lesterlimjj"},"content":"        Exception exception \u003d assertThrows(OwenException.class, () -\u003e {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"lesterlimjj"},"content":"            Deadline deadline \u003d Parser.createDeadline(failedParts);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"lesterlimjj"},"content":"        });","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"lesterlimjj"},"content":"        assertEquals(\"Given datetime is in wrong format. \"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"lesterlimjj"},"content":"                + \"Please use M/d/yyyy HHmm or d/M/yyyy HHmm\", exception.getMessage());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"lesterlimjj"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"lesterlimjj"},"content":"    public void createEvent_validDateFormat_success() throws OwenException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"lesterlimjj"},"content":"        String input \u003d \"event eat death /from 2/12/2019 1800 /to 2/12/2020 2000\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"lesterlimjj"},"content":"        String truncated \u003d input.replaceFirst(AddEventCommand.KEY_WORD + \" \", \"\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"lesterlimjj"},"content":"        String[] parts \u003d truncated.split(\" \");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"lesterlimjj"},"content":"        parts \u003d truncated.split(\"/from | /to\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"lesterlimjj"},"content":"        Parser.trimStringArray(parts);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"lesterlimjj"},"content":"        Event event \u003d Parser.createEvent(parts);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"lesterlimjj"},"content":"        assertEquals(Event.class, event.getClass());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"lesterlimjj"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"lesterlimjj"},"content":"    public void createEvent_invalidDateFormat_throwsException() throws OwenException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"lesterlimjj"},"content":"        String input \u003d \"event eat death /from 2 Dec 2019 6pm /to 2 Dec 2020 8pm\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"lesterlimjj"},"content":"        String truncated \u003d input.replaceFirst(AddEventCommand.KEY_WORD + \" \", \"\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"lesterlimjj"},"content":"        String[] parts \u003d truncated.split(\" \");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"lesterlimjj"},"content":"        parts \u003d truncated.split(\"/from | /to\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"lesterlimjj"},"content":"        Parser.trimStringArray(parts);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"lesterlimjj"},"content":"        String[] failedParts \u003d parts;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"lesterlimjj"},"content":"        Exception exception \u003d assertThrows(OwenException.class, () -\u003e {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"lesterlimjj"},"content":"            Event event \u003d Parser.createEvent(failedParts);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"lesterlimjj"},"content":"        });","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"lesterlimjj"},"content":"        assertEquals(\"Given datetime is in wrong format. \"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"lesterlimjj"},"content":"                + \"Please use M/d/yyyy HHmm or d/M/yyyy HHmm\", exception.getMessage());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"lesterlimjj"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"lesterlimjj"},"content":"    public void convertStringToLocalDateTime_validFormat_success() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"lesterlimjj"},"content":"        LocalDateTime dateTime \u003d Parser.convertStringToLocalDateTime(\"2/12/2019 1800\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"lesterlimjj"},"content":"        assertNotNull(dateTime, \"DateTime should be parsed successfully\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"lesterlimjj"},"content":"        assertEquals(2019, dateTime.getYear());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"lesterlimjj"},"content":"        assertEquals(12, dateTime.getMonthValue());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"lesterlimjj"},"content":"        assertEquals(2, dateTime.getDayOfMonth());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"lesterlimjj"},"content":"        dateTime \u003d Parser.convertStringToLocalDateTime(\"3/31/2019 1800\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"lesterlimjj"},"content":"        assertNotNull(dateTime, \"DateTime should be parsed successfully\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"lesterlimjj"},"content":"        assertEquals(2019, dateTime.getYear());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"lesterlimjj"},"content":"        assertEquals(3, dateTime.getMonthValue());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"lesterlimjj"},"content":"        assertEquals(31, dateTime.getDayOfMonth());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"lesterlimjj"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"lesterlimjj"},"content":"    public void convertStringToLocalDateTime_invalidFormat_returnsNull() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"lesterlimjj"},"content":"        LocalDateTime dateTime \u003d Parser.convertStringToLocalDateTime(\"invalid date\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"lesterlimjj"},"content":"        assertNull(dateTime);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"lesterlimjj"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"lesterlimjj"},"content":"    public void convertLocalDateToPattern_validFormat_success() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"lesterlimjj"},"content":"        LocalDateTime dateTime \u003d Parser.convertStringToLocalDateTime(\"2/12/2019 1800\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"lesterlimjj"},"content":"        String dateString \u003d Parser.convertLocalDateToPattern(dateTime);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"lesterlimjj"},"content":"        assertEquals(\"2/12/2019 1800\", dateString);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"lesterlimjj"},"content":"    @Test","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"lesterlimjj"},"content":"    public void checkValidMarkOrDelete_invalidMarkOrDelete_throwsException() throws OwenException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"lesterlimjj"},"content":"        String[] parts \u003d \"mark\".split(\" \");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"lesterlimjj"},"content":"        Exception exception \u003d assertThrows(OwenException.class, () -\u003e {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"lesterlimjj"},"content":"            Parser.checkValidMarkOrDelete(parts);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"lesterlimjj"},"content":"        });","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"lesterlimjj"},"content":"        assertEquals(\"Please specify an index. Try again.\", exception.getMessage());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"lesterlimjj"},"content":"        String[] parts2 \u003d \"mark 1 2\".split(\" \");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"lesterlimjj"},"content":"        exception \u003d assertThrows(OwenException.class, () -\u003e {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"lesterlimjj"},"content":"            Parser.checkValidMarkOrDelete(parts2);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"lesterlimjj"},"content":"        });","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"lesterlimjj"},"content":"        assertEquals(\"Too many parameters for a mark or delete. Limit it to just one index.\", exception.getMessage());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"lesterlimjj"},"content":"    @Test","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"lesterlimjj"},"content":"    public void checkValidTag_invalidTag_throwsException() throws OwenException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"lesterlimjj"},"content":"        String[] parts \u003d \"tag\".split(\" \");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"lesterlimjj"},"content":"        Exception exception \u003d assertThrows(OwenException.class, () -\u003e {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"lesterlimjj"},"content":"            Parser.checkValidTag(parts);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"lesterlimjj"},"content":"        });","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"lesterlimjj"},"content":"        assertEquals(\"Please specify an index and a tag. Do try again.\", exception.getMessage());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"lesterlimjj"},"content":"        String[] parts2 \u003d \"tag 1\".split(\" \");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"lesterlimjj"},"content":"        exception \u003d assertThrows(OwenException.class, () -\u003e {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"lesterlimjj"},"content":"            Parser.checkValidTag(parts2);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"lesterlimjj"},"content":"        });","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"lesterlimjj"},"content":"        assertEquals(\"Please specify a tag. Please try again.\", exception.getMessage());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"lesterlimjj"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"lesterlimjj":319}},{"path":"src/test/java/owen/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterlimjj"},"content":"package owen.storage;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lesterlimjj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lesterlimjj"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lesterlimjj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lesterlimjj"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lesterlimjj"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lesterlimjj"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lesterlimjj"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lesterlimjj"},"content":"import java.util.List;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lesterlimjj"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lesterlimjj"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lesterlimjj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lesterlimjj"},"content":"import owen.parser.Parser;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lesterlimjj"},"content":"import owen.task.Deadline;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lesterlimjj"},"content":"import owen.task.Event;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lesterlimjj"},"content":"import owen.task.TaskList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lesterlimjj"},"content":"import owen.task.Todo;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lesterlimjj"},"content":"public class StorageTest {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lesterlimjj"},"content":"    private static final Path TEST_FILE_PATH \u003d Paths.get(\"./\", \"data\", \"taskList.txt\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lesterlimjj"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lesterlimjj"},"content":"    public void setUp() throws IOException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lesterlimjj"},"content":"        Files.deleteIfExists(TEST_FILE_PATH); // Clean up before each test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lesterlimjj"},"content":"        if (!Files.exists(TEST_FILE_PATH.getParent())) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lesterlimjj"},"content":"            Files.createDirectory(TEST_FILE_PATH.getParent());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lesterlimjj"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lesterlimjj"},"content":"    @AfterEach","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lesterlimjj"},"content":"    public void tearDown() throws IOException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lesterlimjj"},"content":"        Files.deleteIfExists(TEST_FILE_PATH); // Clean up after each test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lesterlimjj"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lesterlimjj"},"content":"    public void loadTaskListData_fileExists_validData() throws IOException {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lesterlimjj"},"content":"        String data \u003d \"T | 1 | Sample Todo | \\n\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lesterlimjj"},"content":"                + \"D | 0 | Submit Assignment | | 3/12/2019 1800 | \\n\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lesterlimjj"},"content":"                + \"E | 1 | Meeting | | 3/12/2019 1800-3/12/2019 2000 | \";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lesterlimjj"},"content":"        Files.writeString(TEST_FILE_PATH, data);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lesterlimjj"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lesterlimjj"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lesterlimjj"},"content":"        storage.loadTaskListData(taskList);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lesterlimjj"},"content":"        assertEquals(3, taskList.getTaskList().size());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lesterlimjj"},"content":"        assertEquals(Todo.class, taskList.getTaskList().get(0).getClass());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lesterlimjj"},"content":"        assertEquals(Deadline.class, taskList.getTaskList().get(1).getClass());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lesterlimjj"},"content":"        assertEquals(Event.class, taskList.getTaskList().get(2).getClass());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lesterlimjj"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lesterlimjj"},"content":"    public void loadTaskListData_fileNotExists_fileCreated() throws IOException {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lesterlimjj"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lesterlimjj"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lesterlimjj"},"content":"        storage.loadTaskListData(taskList);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lesterlimjj"},"content":"        assertTrue(Files.exists(TEST_FILE_PATH));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lesterlimjj"},"content":"        assertTrue(taskList.getTaskList().isEmpty());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lesterlimjj"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lesterlimjj"},"content":"    public void overwriteTaskListData_validTasks_fileUpdated() throws IOException {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lesterlimjj"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lesterlimjj"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lesterlimjj"},"content":"        Todo todo \u003d new Todo(\"Sample Todo\", true);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lesterlimjj"},"content":"        todo.addTag(\"tag1\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lesterlimjj"},"content":"        todo.addTag(\"tag2\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lesterlimjj"},"content":"        Deadline deadline \u003d new Deadline(\"Submit Assignment\", false,","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lesterlimjj"},"content":"                Parser.convertStringToLocalDateTime(\"3/12/2019 1800\"));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lesterlimjj"},"content":"        deadline.addTag(\"tag1\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lesterlimjj"},"content":"        deadline.addTag(\"tag2\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lesterlimjj"},"content":"        Event event \u003d new Event(\"Meeting\", true,","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lesterlimjj"},"content":"                Parser.convertStringToLocalDateTime(\"3/12/2019 1800\"),","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lesterlimjj"},"content":"                Parser.convertStringToLocalDateTime(\"3/12/2019 2000\"));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"lesterlimjj"},"content":"        event.addTag(\"tag1\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"lesterlimjj"},"content":"        event.addTag(\"tag2\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"lesterlimjj"},"content":"        event.addTag(\"tag3\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"lesterlimjj"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"lesterlimjj"},"content":"        taskList.addTask(deadline);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"lesterlimjj"},"content":"        taskList.addTask(event);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"lesterlimjj"},"content":"        storage.overwriteTaskListData(taskList.getTaskList());","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"lesterlimjj"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(TEST_FILE_PATH);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"lesterlimjj"},"content":"        assertEquals(3, lines.size());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"lesterlimjj"},"content":"        assertEquals(\"T | 1 | Sample Todo | tag1 tag2\", lines.get(0));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"lesterlimjj"},"content":"        assertEquals(\"D | 0 | Submit Assignment | tag1 tag2 | 3/12/2019 1800\", lines.get(1));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"lesterlimjj"},"content":"        assertEquals(\"E | 1 | Meeting | tag1 tag2 tag3 | 3/12/2019 1800-3/12/2019 2000\", lines.get(2));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"lesterlimjj"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"lesterlimjj"},"content":"    public void appendToTasklistData_validTask_taskAppended() throws IOException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"lesterlimjj"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"lesterlimjj"},"content":"        String initialData \u003d \"T | 1 | Sample Todo\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"lesterlimjj"},"content":"        Files.writeString(TEST_FILE_PATH, initialData);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"lesterlimjj"},"content":"        Deadline deadline \u003d new Deadline(\"Submit Assignment\", false,","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"lesterlimjj"},"content":"                Parser.convertStringToLocalDateTime(\"3/12/2019 1800\"));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"lesterlimjj"},"content":"        deadline.addTag(\"tag1\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"lesterlimjj"},"content":"        deadline.addTag(\"tag2\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"lesterlimjj"},"content":"        storage.appendToTasklistData(deadline);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"lesterlimjj"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(TEST_FILE_PATH);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"lesterlimjj"},"content":"        assertEquals(2, lines.size());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"lesterlimjj"},"content":"        assertEquals(\"T | 1 | Sample Todo\", lines.get(0));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"lesterlimjj"},"content":"        assertEquals(\"D | 0 | Submit Assignment | tag1 tag2 | 3/12/2019 1800\", lines.get(1));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"lesterlimjj"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"lesterlimjj"},"content":"    public void loadTaskListData_invalidFileContent_throwsRuntimeException() throws IOException {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"lesterlimjj"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"lesterlimjj"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"lesterlimjj"},"content":"        String invalidData \u003d \"Invalid | Data | Format\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"lesterlimjj"},"content":"        Files.writeString(TEST_FILE_PATH, invalidData);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"lesterlimjj"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"lesterlimjj"},"content":"        // Act \u0026 Assert: Exception expected","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"lesterlimjj"},"content":"        assertThrows(RuntimeException.class, () -\u003e storage.loadTaskListData(taskList));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"lesterlimjj"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"lesterlimjj"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"lesterlimjj":125}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lesterlimjj"},"content":"todo eat apples","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lesterlimjj"},"content":"mark 1","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lesterlimjj"},"content":"list","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lesterlimjj"},"content":"unmark 1","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lesterlimjj"},"content":"event eat death /from 2/12/2019 1800 /to 2/12/2020 2000","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lesterlimjj"},"content":"deadline dream /by 10/3/2020 2000","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lesterlimjj"},"content":"delete 2","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lesterlimjj"},"content":"list","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lesterlimjj"},"content":"todo","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lesterlimjj"},"content":"deadline fulfil slayer oath by 13 Jan","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lesterlimjj"},"content":"event play games from Mon 10am to 1pm","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lesterlimjj"},"content":"event play games /from Mon 10am to 1pm","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lesterlimjj"},"content":"event play games from Mon 10am /to 1pm","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lesterlimjj"},"content":"delete 3","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lesterlimjj"},"content":"mark 3","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lesterlimjj"},"content":"mark 1 2","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lesterlimjj"},"content":"unmark 1 2","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lesterlimjj"},"content":"delete 1 2","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lesterlimjj"},"content":"trello","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lesterlimjj"},"content":"bye","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lesterlimjj"},"content":"trello","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"lesterlimjj":21}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lesterlimjj"},"content":"java -classpath ..\\bin Owen \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"lesterlimjj":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lesterlimjj"},"content":"java -classpath ../bin Owen \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"lesterlimjj":1,"-":37}}]
