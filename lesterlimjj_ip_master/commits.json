{"authorDailyContributionsMap":{"lesterlimjj":[{"date":"2025-01-16","commitResults":[{"hash":"72a035266f6e08d9c19bc51f2bb50bdc20ea175e","isMergeCommit":false,"messageTitle":"renamed Duke.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"79130ce27bb2b4ce57d28defbacc4519ce748d65","isMergeCommit":false,"messageTitle":"Added greet and exit","messageBody":"","tags":["level-0"],"fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":6}}},{"hash":"904c357bb944d16d460e2f0e17924b5432cb33d3","isMergeCommit":false,"messageTitle":"add echo feature","messageBody":"","tags":["level-1"],"fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":3}}},{"hash":"9e2a5a7fdd8cf2b1124394ba488e90e785014671","isMergeCommit":false,"messageTitle":"add support for choosing between commands","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":8}}},{"hash":"e3850f08f961f13ad38575ec161f98a839d1f511","isMergeCommit":false,"messageTitle":"add list and add to list features","messageBody":"","tags":["level-2"],"fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":1}}},{"hash":"7c5d107b0cbc03cc8590c245e67797e71ead51d0","isMergeCommit":false,"messageTitle":"add Task class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":0}}},{"hash":"e23bf2e5345134d00e1c38ef107ee33221d3b1aa","isMergeCommit":false,"messageTitle":"Updated main to use Task class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":4}}},{"hash":"badabcb5c378c4aa578cdb1dc66b242b080c348f","isMergeCommit":false,"messageTitle":"update list feature to show task status","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":7}}},{"hash":"7c342a723655b6db76b4cfcba1a9fbd5a59e8918","isMergeCommit":false,"messageTitle":"add mark as done feature","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":3}}},{"hash":"e1205d0ba31629dd5cebe0fd115b7aeeae6592bb","isMergeCommit":false,"messageTitle":"Add mark as not done feature","messageBody":"","tags":["level-3"],"fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":5}}},{"hash":"f18cfda5b92e524c3c8e29b4c0c829d88e88c5dd","isMergeCommit":false,"messageTitle":"add Todo class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":4}}},{"hash":"a10ec3887aa5caca9cff8aa42ecbe205d6fb8ae2","isMergeCommit":false,"messageTitle":"add deadline class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":0}}},{"hash":"e92653e1a498446907aa98302d2221d0083bbb29","isMergeCommit":false,"messageTitle":"add Event class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":0}}},{"hash":"c5694769b7d59992b5879b2a9384f774677df68d","isMergeCommit":false,"messageTitle":"add support for adding Todo, Deadline, Event to tasklist","messageBody":"","tags":["level-4"],"fileTypesAndContributionMap":{"java":{"insertions":93,"deletions":27}}},{"hash":"bc33b9b10ea75599742ded0f1b778f7502a36f68","isMergeCommit":false,"messageTitle":"fixed bugs for echo and list feature and corrected formatting issues when displaying text","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":2}}},{"hash":"331a2f388e6f978293e7120da3dd12b08dfc36fa","isMergeCommit":false,"messageTitle":"added semi-automated testing of chatbot","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":15,"deletions":0},"bat":{"insertions":1,"deletions":1}}},{"hash":"720cde717b66cca8338ddc93702573223317b8e0","isMergeCommit":false,"messageTitle":"Added Exception class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":0}}},{"hash":"7a52364cb9e12953bf8cbb09b2ce4b7cb514e66d","isMergeCommit":false,"messageTitle":"Added exception handling for invalid input","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":78,"deletions":67}}},{"hash":"ff0860f5537beb33726fbdcb6408595dcf8f6376","isMergeCommit":false,"messageTitle":"Add exception handling for unknown user inputs and invalid inputs for todo, deadline and event","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":0}}},{"hash":"49e52d3fb91087c0c649c77203ef928890d9d873","isMergeCommit":false,"messageTitle":"add invalid input handling to mark and unmark feature","messageBody":"","tags":["level-5"],"fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":1}}},{"hash":"d2a0230e00880c0f45738df3f26ca480925b385e","isMergeCommit":false,"messageTitle":"add delete feature","messageBody":"","tags":["level-6"],"fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":6}}}]},{"date":"2025-01-22","commitResults":[{"hash":"2b931dafee6a860cfea708ee96ededb7453e4456","isMergeCommit":false,"messageTitle":"Changed any mentions of Duke to Owen","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":3,"deletions":3}}},{"hash":"04599b2218dcd5ff690f4ae2287ba2dee016d5eb","isMergeCommit":false,"messageTitle":"Updated error handling for deadline and event to be more stringent","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":15}}},{"hash":"659a1f38444479610337fe4fec177a2d996ff35e","isMergeCommit":false,"messageTitle":"fix bug for Todo","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"1ee936094473b0ea97219f42c3f1e39e83f8449c","isMergeCommit":false,"messageTitle":"Update error handling for mark, unmark and delete to cover wider range of errors","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":0}}},{"hash":"210a45312ca10096008037e59b54aaee96ce48d0","isMergeCommit":false,"messageTitle":"Updated semi automated testing to check for new error handling","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":15,"deletions":4},"java":{"insertions":2,"deletions":2}}},{"hash":"80f0601edacded4fe2f46409f6f6d78189a21b7b","isMergeCommit":false,"messageTitle":"added separators to text for neatness","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":6}}}]},{"date":"2025-01-24","commitResults":[{"hash":"7fc88133ccc93ee1a6b3e517450022f34efd84c2","isMergeCommit":false,"messageTitle":"Add loadTasklist function on startup","messageBody":"The chatbot has no ability to retain previously written tasks by\nthe user.\n\nIt would enhance the functionality of the chatbot to be able to\nremember tasks so it needs to be able to load data.\n\nLet\u0027s:\nUse a text file to load Todo, Deadline, and Event items when the\nchatbot starts, with the use of the java.nio.file library.\nEnsure the chatbot creates a data folder and an empty text file\nif they do not exist on startup.\n\nIf the chatbot is able to load data from a text file, we can alter\nthis text file to include user data.\n","fileTypesAndContributionMap":{"java":{"insertions":89,"deletions":2}}},{"hash":"64a2ae8cd0ed1fdfbce4e8304b68f6487b964a70","isMergeCommit":false,"messageTitle":"Add convertToDataFormat function to Task and its children","messageBody":"We have no convenient way of producing the required data format for\na Task class and its children.\n\nWe need a function to streamline the process of getting the string\nto be written to text file.\n\nLet\u0027s include the function in Task and use polymorphism to create\nthe child\u0027s own convertToDataFormat function\n\nUsing polymorphism reduces the amount of checks needed for what\nformat should be used depending on the class.\n\nThere are common fields in the data between Task and its children\nso polymorphism is suitable to be used.\n","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":1}}},{"hash":"37ae52a01e69696197554cad93020f4402a5a611","isMergeCommit":false,"messageTitle":"Add overwriteTasklist and appendToTasklist functions","messageBody":"we have no functions to modify the data in the text file.\n\nwe need a way to save the user\u0027s changes to the tasklist to\ncomplement the load tasklist functionality.\n\nLets,\n*create a appendToTasklist function that append a new line of data\nto the text file.\n*create an overwriteTasklist function that loop through the tasklist\narraylist to overwrite the text file data by writing to it line by\nline.\n\nWe use appendToTasklist when adding a new Task to the Text for\nefficiency (since it directly adds to the list) while overwrite\nis only used for modifying existing data (e.g. mark and delete).\n","fileTypesAndContributionMap":{"java":{"insertions":53,"deletions":12}}},{"hash":"3640ee1fec36ae52a8f4cbfb9702417742a18081","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-level-7\u0027","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{}},{"hash":"63559118d4f9c05216b72fc91f635d4c81582f13","isMergeCommit":false,"messageTitle":"Add processLocalDateTime function","messageBody":"Chatbot takes in dates as Strings and simply repeats them.\n\nChatbot usability would improve if it can handle a range of\ndatetime formats from user\n\nLet\u0027s\n* add processLocalDateTime function to parse a set of defined\ndatetime formats\n* ensure processLocalDateTime can handle both date and datetime by\npadding date with default time value\n\nDoing this will allow the user more flexibility in the type of\ndate inputs given.\n","fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":9}}},{"hash":"990c7ebf29809cb287281aabe760362d1eb29ab9","isMergeCommit":false,"messageTitle":"Update Deadline and Event class to handle LocalDateTime","messageBody":"Using String for dates makes error handling and formatting much\nmore difficult.\n\nLet\u0027s update Deadline and Event to use LocalDateTime instead of\nString for any dates and update the toString to use a more readable\ndate format.\n\nShould allow users to at a glance tell what datetime it is.\n","fileTypesAndContributionMap":{"java":{"insertions":38,"deletions":25}}},{"hash":"9a98a270f02f13ba04005d78455e28e684d5da91","isMergeCommit":false,"messageTitle":"Updated processLocalDateTime to no longer handle LocalDate","messageBody":"processLocalDateTime was taking LocalDate and convert it to\nLocalDateTime with a default value of 12am.\n\nIt should be removed since it can confuse the user with a value he\ndid not input.\n","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":9}}},{"hash":"69bf6eb6b0a29d8ca953294544cbaad9e2d26211","isMergeCommit":false,"messageTitle":"Reorder localDateTimePatterns","messageBody":"The order made it so that the second format would never be checked.\n\nReduces the amount of formats a user can input.\n\nLets swap the order so that the second format is now checked first.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"e59adb78d2b5a3ecf59df2943bc8678f9a5bab94","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-8\u0027","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{}}]},{"date":"2025-01-25","commitResults":[{"hash":"fe99d6da74569fe11acf7594eaed6d938416ab2d","isMergeCommit":false,"messageTitle":"Extract UI-related functions into a separate UI class","messageBody":"UI-related functions (e.g., greetings, task list display) were\npreviously embedded in the main method.\n\nIncluding UI functions in the main method made the code less\nmodular and harder to maintain.\n\nLet\u0027s extract all UI-related functions into a new UI class. This\nclass encapsulates responsibilities such as displaying greetings,\ntask lists, separators, and task counts.\n\nSeparating UI logic improves code readability and maintainability.\n","fileTypesAndContributionMap":{"java":{"insertions":39,"deletions":0}}},{"hash":"818d60c1fede5ef3b5e1011f9bab5e34b2a8dda1","isMergeCommit":false,"messageTitle":"Move processLocalDateTime method to Event and Deadline class","messageBody":"The processLocalDateTime method is located in main.\n\nPlacing processLocalDateTime in main caused repetitive calls\nsince whenever event or deadline object was created, String had\nto be converted to LocalDateTime\n\nLet\u0027s move the processLocalDateTime method into the Event and\nDeadline class, as it directly pertains to parsing the dates\nrequired by only these two classes.\n\nReduces the amount of times this function is called\n","fileTypesAndContributionMap":{"java":{"insertions":42,"deletions":10}}},{"hash":"a7cb479ecbc7b9337b1a53ad98850ec76bbb1dd3","isMergeCommit":false,"messageTitle":"Extract Storage class from main","messageBody":"File handling logic for loading and saving tasks is located in the\nmain class.\n\nHaving file operations in main creates unnecessary coupling, making\n the code harder to maintain.\n\nLet\u0027s extract all file handling responsibilities into a dedicated\nStorage class. This includes: loading tasklist, overwriting tasklist\ndata (when data is modified) and appending new entry to tasklist.\n\nA separate Storage class improves maintainability by allowing\nstorage logic to be modified independently of other components.\n","fileTypesAndContributionMap":{"java":{"insertions":88,"deletions":0}}},{"hash":"6807f67429707d483949b6096e3d9645cd9b3af3","isMergeCommit":false,"messageTitle":"Extract TaskList class from main","messageBody":"The main class handles task management operations, such\nas adding, deleting, and updating tasks.\n\nHaving task management logic in main makes the code harder to scale\nand maintain.\n\nLet\u0027s extract all task management operations into a dedicated\nTaskList class. This class will handle adding/deleting of tasks,\nretrieving the list of tasks and any task updating (e.g. mark).\n\nThis allows our tasklist to be more modular, easier to test, and\nmaintainable.\n","fileTypesAndContributionMap":{"java":{"insertions":43,"deletions":17}}},{"hash":"de9daeaf0489bfb4b4fae8417d2b82776c69273c","isMergeCommit":false,"messageTitle":"Extract abstract command class and all children commands from main","messageBody":"All user commands are handled in main and logic for processing\ncommand intertwined with other components.\n\nThis causes reduced flexibility and increasing complexity for user\ncommands.\n\nLet\u0027s:\n* Introduce an abstract Command class to represent general\ncommands. It has an abstract execute method and isBye method to\nhandle chatbot exit commands.\n* add concrete implementation of user command based on abstract\nCommand class\n\nThis way, adding and updating user commands is easier and more\nmanageable\n","fileTypesAndContributionMap":{"java":{"insertions":115,"deletions":0}}},{"hash":"f81ca359695a3ce765d81a842c8ed88f4559eb3f","isMergeCommit":false,"messageTitle":"Extract parsing logic from main into dedicated Parser class","messageBody":"The main class contains logic for parsing user input and\nhandling various commands.\n\nThis makes the main class overly complex and tightly coupled with\nthe parsing process.\n\nLet\u0027s\n* extract the parsing logic into a new Parser class. The class\nprocesses user input, validates it, and constructs appropriate\ncommand objects.\n* the parse class will also date parsing and handle exception for\ncommands and tasks.\n\nDoing this will ensure a clear separation of concern for parsing\nand exception handling.\n","fileTypesAndContributionMap":{"java":{"insertions":200,"deletions":26}}},{"hash":"6e0732a27ffd8df00e15818d4a9dd60541c66d96","isMergeCommit":false,"messageTitle":"Remove date parsing functions in Deadline and Event class","messageBody":"Date parsing is already handled by Parser class so these functions\nare redundant.\n","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":41}}},{"hash":"0dda9c9a99ee10be7b61039d8ed9e81a2ef23f42","isMergeCommit":false,"messageTitle":"Refactor Owen to delegate responsibilities to other components","messageBody":"The Owen class handles initialization, user interaction, command\nparsing, and task management, leading to a bloated and less modular\ndesign.\n\nCentralizing too many responsibilities in the Owen class makes the\ncode harder to read, maintain, and extend.\n\nLet\u0027s refactor the Owen class to have parser, tasklist and storage\ncomponents.\n\nThis approach simplifies the Owen class and adheres to the single\nresponsibility principle. Additionally, each component focuses on a\nsingle task.\n","fileTypesAndContributionMap":{"java":{"insertions":50,"deletions":345}}},{"hash":"e43b85d95b0b3103cc5069db6702d754c9917ac8","isMergeCommit":false,"messageTitle":"Add error checks for mark and unmark to Parser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":0}}},{"hash":"2f6a2fd3abb196da6e0374ba3156027fccc00472","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-MoreOOP\u0027","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{}},{"hash":"ab09a220775a4eea35ddf48c23bf442e74d62c57","isMergeCommit":false,"messageTitle":"Organize classes into packages to improve project structure","messageBody":"All classes are located in the root directory, leading to a\ncluttered and unorganized project structure.\n\nThe lack of structure makes it harder to maintain the codebase as\nthe project grows.\n\nLet\u0027s organize the classes into the following packages:\ncommand: Contains all command-related classes (e.g. Command,\nAddDeadlineCommand, etc.).\ntask: contains task-related classes (e.g. Todo, Deadline, Event).\nparser: contains parsing related class\nstorage: contains file operation storage class\nui: contains user interaction classes\nexception: contains exception related class\n\nGrouping related classes into packages improves modularity and\nreadability.\n","fileTypesAndContributionMap":{"java":{"insertions":102,"deletions":18}}},{"hash":"9f68820aa9108f8b2b2355107075ba7f86a6acec","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-packages\u0027","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{}}]},{"date":"2025-01-26","commitResults":[{"hash":"5b3eb6368395924defbf8c464ef89b1e065199e6","isMergeCommit":true,"messageTitle":"Merge branch \u0027add-gradle-support\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"878d94c496fc06f96ac0689f8951ce9aaf834520","isMergeCommit":false,"messageTitle":"Update build.grade mainClass to Owen","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}},{"hash":"caaaa5e7cb3c49d9904288a0be651c08be6a9522","isMergeCommit":false,"messageTitle":"Add junit tests for Parser and Storage","messageBody":"Testing for parser and storage required a lot of manual analysis.\n\nManual analysis is time consuming and prone to human error.\n\nLet\u0027s use Junit to create automated tests of Storage and Parser\nfunctions.\n\nAllows for easy checking if new changes break any pre-existing\nfunctionality.\n","fileTypesAndContributionMap":{"java":{"insertions":347,"deletions":1}}},{"hash":"2581e948526c917212c6c1808b6771d87df06517","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-JUnit\u0027","messageBody":"","tags":["A-JUnit"],"fileTypesAndContributionMap":{}},{"hash":"7b34547d6600f17d539e91f627ef0d077165cbfa","isMergeCommit":false,"messageTitle":"configure shadowJar to produce correct Jar file","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":6,"deletions":1}}},{"hash":"3abe0285c8d1e5291d3484665d3250c8723792a4","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Jar\u0027","messageBody":"","tags":["A-Jar"],"fileTypesAndContributionMap":{}},{"hash":"13946af1a75f9f7ed27f94863651f2a1a538f2a1","isMergeCommit":false,"messageTitle":"Update code files to follow Java SE coding standards","messageBody":"Codebase does not fully adhere to Java SE coding standards,\nleading to inconsistencies in formatting, naming conventions,\nand readability.\n\nNon-compliance with Java SE coding standards makes the code harder\nto read, maintain, and collaborate on.\n\nLet\u0027s update the coding standards based on the provided\njava coding standards.\n\nAdhering to Java SE standards promotes clean and maintainable code\n","fileTypesAndContributionMap":{"java":{"insertions":186,"deletions":171}}},{"hash":"7e562a21f800695ec771edc3854b87c60f974100","isMergeCommit":false,"messageTitle":"Add Javadocs to all classes and methods","messageBody":"All methods and classes in the codebase lack proper Javadoc\ncomments.\n\nFuture contributors will have a harder time understanding the\nclasses and methods.\n\nLet\u0027s add Javadoc to all classes and methods.\n\nUsing Javadoc ensures consistency and allows tools to generate\nexternal documentation.\n\nThis makes it easier to share and understand the project\u0027s structure\n and functionality.\n","fileTypesAndContributionMap":{"java":{"insertions":369,"deletions":15}}},{"hash":"5bf821202db14cfefbee487e060fd805bf1b7bac","isMergeCommit":false,"messageTitle":"Add find command to search for tasks","messageBody":"The application lacks a feature to search tasks based on\nwords.\n\nIt might become hard for user to locate a specific task when the\nlist becomes really large.\n\nLet\u0027s create a command that searches the task list based on a word\nor phrase, returning all task with the word or phrase.\n\nThis approach ensures simplicity and clarity, leveraging string\nmatching to identify relevant tasks.\n","fileTypesAndContributionMap":{"java":{"insertions":45,"deletions":0}}},{"hash":"262d8ae04a835ed382079fccbde27a481eaf336e","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CodingStandard\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"b8850390fb1fbc6d737653b0bf133bb0d030cd00","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-JavaDoc\u0027 and resolve conflicts","messageBody":"Master merged with coding standard branch, then JavaDoc branch.\n\nBoth branches cover very similar areas in terms of code edits\n\n# Conflicts:\n#\tsrc/main/java/Owen.java\n#\tsrc/main/java/command/DeleteCommand.java\n#\tsrc/main/java/parser/Parser.java\n#\tsrc/main/java/storage/Storage.java\n#\tsrc/main/java/task/Deadline.java\n#\tsrc/main/java/task/Event.java\n#\tsrc/main/java/ui/Ui.java\n\nLet\u0027s resolve this by keeping both changes from A-JavaDoc and\nA-CodingStandards.\n\nWe need both Java coding standards and JavaDoc for codebase\nscalability.\n","fileTypesAndContributionMap":{}},{"hash":"2b203de77c945cf45ed8bbe4edf7abe1cf561a22","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-9\u0027 and resolve conflicts","messageBody":"Master was using an older version of command switch case as\ncompared to Level 9.\n\n# Conflicts:\n#\tsrc/main/java/parser/Parser.java\n\nLet\u0027s resolve this conflict by taking the branch Level 9 version of\nswitch case.\n\nThe newest version of command switch case has find command.\n","tags":["Level-9","A-JavaDoc","A-CodingStandard"],"fileTypesAndContributionMap":{}}]},{"date":"2025-02-02","commitResults":[{"hash":"43ad64b56f69d691656f0d5b7bd672cf44059346","isMergeCommit":false,"messageTitle":"Add checkstyle","messageBody":"There is no automated way of checking for Java coding standards,\naside from manual checks.\n\nManual checks are inefficient and error-prone.\n\nLet\u0027s add Ab3\u0027s checkstyle to check for Java coding standards. This\nincludes:\n* adding checkstyle configuration files.\n* adding checkstyle-IDEA plugin.\n\nThis allows for an automated way of testing as well as being alerted\nto style violations while coding, ensuring higher code quality in a\nmore efficient manner.\n","fileTypesAndContributionMap":{"java":{"insertions":48,"deletions":29}}},{"hash":"68b78285d30efdfdfafa3c0b4363af5a02c36e09","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CheckStyle\u0027","messageBody":"","tags":["A-CheckStyle"],"fileTypesAndContributionMap":{}}]},{"date":"2025-02-03","commitResults":[{"hash":"1c1c6d2e6f4f622d9071f01e079ea77f83e93545","isMergeCommit":false,"messageTitle":"Add JavaFx UI Components","messageBody":"Application is fully text-based.\n\nThis limits the interactivity and user experience.\n\nLet\u0027s use JavaFx to introduce GUI. This includes:\n*a DialogBox component to replace user and chatbot text.\n*a Window component which contains DialogBoxs and a text field with\na submit button.\n\nThese will appropriately serve as the UI components without\nrequiring drastic changes to the logic.\n","fileTypesAndContributionMap":{"gradle":{"insertions":15,"deletions":0},"fxml":{"insertions":45,"deletions":0},"java":{"insertions":164,"deletions":0}}},{"hash":"0f9949165e3759a1f8c1b73c6ed7e5a4f181dc8c","isMergeCommit":false,"messageTitle":"Add GuiController","messageBody":"UI components has no way to send data to the logic in Owen class.\n\nUnable to create commands from user input.\n\nLet\u0027s create a GuiController class that manages the updating of\nGui elements. It does the following:\n*update the window with new user and chatbot dialog boxes.\n*passes user input to Owen for evaluation.\n\nKeep the code neat and scalable by keeping all UI management in a\nclass, rather than across multiple UI components.\n","fileTypesAndContributionMap":{"java":{"insertions":179,"deletions":74},"md":{"insertions":3,"deletions":3}}},{"hash":"dd94267cf64d7eb55a76b81d3c3e527482acef1f","isMergeCommit":false,"messageTitle":"Update Commands and its subclasses execute function","messageBody":"Execute function uses old UI class for text-based UI.\n\nThis is incompatible with JavaFX UI Component.\n\nLet\u0027s updates them to use GuiController to add user and chatbot\ndialog boxs.\n\nThis ensures that the GUI is appropriately updated after a\ncommand is executed.\n","fileTypesAndContributionMap":{"java":{"insertions":159,"deletions":131}}},{"hash":"7578fefcaa71933d14641af3e491dab4fe231c68","isMergeCommit":false,"messageTitle":"Add Error Command class","messageBody":"Thrown exception are printed as text.\n\nGUI need a way to show these exception.\n\nLet\u0027s add an Error Command class that displays the error message\nin these exception.\n\nEnsures that every exception thrown can be displayed\n","fileTypesAndContributionMap":{"java":{"insertions":95,"deletions":134}}},{"hash":"5378ab9657e30b0d25474434ac56a7c805806d19","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-10\u0027","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{}}]},{"date":"2025-02-10","commitResults":[{"hash":"75ce983d5f51f49f63c446cf00f3b015c6fe48e6","isMergeCommit":false,"messageTitle":"Change method names with tasklist to taskList","messageBody":"Method names used tasklist but the class being referred to is\nnamed TaskList.\n\nThis creates inconsistency in the naming convention.\n\nLet\u0027s change all tasklist in method names to taskList.\n\nThis makes it more evident that our naming convention for method\nnames adheres to camelcase.\n\nNote that junit test case methods are also affected by this change.\n","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":16}}},{"hash":"3a5954011ce41a2bbb77d9e50114885a1d31cfdc","isMergeCommit":false,"messageTitle":"Replace low level statements in execute method in Command classes","messageBody":"Execute function perform string formatting and concatenation\noperations in Command classes.\n\nThis violates SLAP.\n\nLet\u0027s create a formatResponse method in GuiController to replace\nthese low level statements.\n\nThis ensures that level of abstraction is the same in the execute\nmethod.\n","fileTypesAndContributionMap":{"java":{"insertions":69,"deletions":39}}},{"hash":"0ca880a701380689222d56c6076543fa4a5c9c72","isMergeCommit":false,"messageTitle":"Extract methods from parse method","messageBody":"Every switch case statement for a command type has the logic of\nprocessing that command contained in the switch case statement.\n\nThe lines of code for Parse exceeded 30 lines, making it hard to\nunderstand and maintain.\n\nLet\u0027s extract out a process method for each command type.\n\nThis improves readability and ensures that SLAP is easily\nmaintained in the switch case statements.\n","fileTypesAndContributionMap":{"java":{"insertions":135,"deletions":47}}},{"hash":"cb249d24adcf42655853d68281c1838b6650efe3","isMergeCommit":false,"messageTitle":"Extract methods from loadTaskListData method","messageBody":"loadTaskListData reads the text file data, parses the data into\ntasks and adds the tasks to the task list. It also creates the data\nfile and directory if they does not exist.\n\nThe logic for operations are all inside of loadTaskListData, making\nthe lines of code over 30 and violating SLAP in certain areas.\n\nLet\u0027s extract out these operations into methods. In particular, we\nhave:\n*a method for creating the data file and directory if they does\nnot exist\n*a method for splitting and trimming the data\n*a method for creating and adding todo from the data\n*a method for creating and adding deadline from the data\n*a method for creating and adding event from the data\n\nThis improve code readability and ensures that it is easier to\nmaintain.\n","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{"java":{"insertions":108,"deletions":59}}},{"hash":"0bb93a9935771bd9f430f021b30ebc9d794926eb","isMergeCommit":false,"messageTitle":"Add assertions to various methods","messageBody":"There is no usage of assertions in the code.\n\nAssertions allow us to validate assumptions made during runtime,\nensuring the code behaves as expected.\n\nLet\u0027s add assertions to our Command subclasses, Task subclasses and\nexception class. In particular, we can perform assertions on the\nfields in these classes to ensure they are not null or have\nunexpected values during runtime.\n\nThis ensures that much fewer bugs go undetected as the program is\ndeveloped.\n","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":0}}},{"hash":"903e6e38a7ca90c0fbbf61f514d533b3a2fa25f9","isMergeCommit":true,"messageTitle":"Merge pull request #1 from lesterlimjj/branch-A-CodeQuality","messageBody":"Merge Branch-A-CodeQuality into master","fileTypesAndContributionMap":{}},{"hash":"55493a669aad27350789fc6bcbc6fd9c56b148b3","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 of https://github.com/lesterlimjj/ip","messageBody":"","tags":["branch-A-CodeQuality"],"fileTypesAndContributionMap":{}},{"hash":"ae9182600fa7c08359ce41605cbf31c4956af6ec","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into branch-A-Assertions","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"93e16a7e550f46f37e8d01eb1464507b501d2cd7","isMergeCommit":true,"messageTitle":"Merge pull request #2 from lesterlimjj/branch-A-Assertions","messageBody":"Merge branch-A-Assertions into master branch","fileTypesAndContributionMap":{}},{"hash":"819b119c6d80bf534112877f071bf70f49e15d2f","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 of https://github.com/lesterlimjj/ip","messageBody":"","tags":["branch-A-Assertions"],"fileTypesAndContributionMap":{}},{"hash":"19cb825a6ae171faf99bcf0e138c2f0a2eb692ca","isMergeCommit":false,"messageTitle":"Add tagging feature","messageBody":"The program has no way of tagging a task.\n\nTagging can provide useful new information to the user.\n\nLet\u0027s,\n* create a addTagCommand\n* add tags as a ArrayList\u003cString\u003e field to Task\n* update toString and convertToDataFormat to account for tags\n* update parser to understand addTagCommand\n* update loadTaskListData to account for tags\n\nThrough inheriting Task, Todo, Event and Deadline will have tag\nfield and any tag-related methods.\n","fileTypesAndContributionMap":{"java":{"insertions":173,"deletions":28}}},{"hash":"5000e5612054724ac0eb4beddd0983046f1eb323","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-C-Tagging\u0027","messageBody":"","tags":["BCD-Extension"],"fileTypesAndContributionMap":{}}]}]},"authorFileTypeContributionMap":{"lesterlimjj":{"java":2139,"md":3,"fxml":45,"sh":0,"bat":1,"gradle":22,"txt":21}},"authorContributionVariance":{"lesterlimjj":118842.34},"authorDisplayNameMap":{"lesterlimjj":"CS2103-F08-3 LEST.. JUN"}}
