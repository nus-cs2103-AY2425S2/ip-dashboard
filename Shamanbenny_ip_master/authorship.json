[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Shamanbenny"},"content":"   ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Shamanbenny"},"content":"    /$$   /$$ /$$           /$$         /$$      /$$$$$$                  /$$                    ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Shamanbenny"},"content":"   | $$$ | $$|__/          | $$        | $$     /$$__  $$                | $$                    ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Shamanbenny"},"content":"   | $$$$| $$ /$$  /$$$$$$ | $$$$$$$  /$$$$$$  | $$  \\__/  /$$$$$$   /$$$$$$$  /$$$$$$   /$$$$$$ ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Shamanbenny"},"content":"   | $$ $$ $$| $$ /$$__  $$| $$__  $$|_  $$_/  | $$       /$$__  $$ /$$__  $$ /$$__  $$ /$$__  $$","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Shamanbenny"},"content":"   | $$  $$$$| $$| $$  \\ $$| $$  \\ $$  | $$    | $$      | $$  \\ $$| $$  | $$| $$$$$$$$| $$  \\__/","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Shamanbenny"},"content":"   | $$\\  $$$| $$| $$  | $$| $$  | $$  | $$ /$$| $$    $$| $$  | $$| $$  | $$| $$_____/| $$      ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Shamanbenny"},"content":"   | $$ \\  $$| $$|  $$$$$$$| $$  | $$  |  $$$$/|  $$$$$$/|  $$$$$$/|  $$$$$$$|  $$$$$$$| $$      ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Shamanbenny"},"content":"   |__/  \\__/|__/ \\____  $$|__/  |__/   \\___/   \\______/  \\______/  \\_______/ \\_______/|__/      ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Shamanbenny"},"content":"                  /$$  \\ $$                                                                      ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Shamanbenny"},"content":"                 |  $$$$$$/                                                                      ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Shamanbenny"},"content":"                  \\______/                                                                       ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Shamanbenny"},"content":"## Use of AI","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Shamanbenny"},"content":"`/src/main/resources/images/DALL-E_Guest User.png` and `/src/main/resources/images/DALL-E_NightCoder Bot.png` are both generated by DALL-E using ChatGPT.","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"-":6,"Shamanbenny":17}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Shamanbenny"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Shamanbenny"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Shamanbenny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Shamanbenny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Shamanbenny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Shamanbenny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Shamanbenny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Shamanbenny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Shamanbenny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Shamanbenny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Shamanbenny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Shamanbenny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Shamanbenny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Shamanbenny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Shamanbenny"},"content":"checkstyle {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Shamanbenny"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Shamanbenny"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Shamanbenny"},"content":"    mainClass.set(\"nightcoder.Launcher\")","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Shamanbenny"},"content":"    archiveBaseName \u003d \"nightcoder\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":39,"Shamanbenny":21}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Shamanbenny"},"content":"# NightCoder User Guide","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Shamanbenny"},"content":"## Welcome to `nightcoder.NightCoder`","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Shamanbenny"},"content":"`nightcoder.NightCoder` is your playful and motivational coding companion for late-night sessions. With a vibrant personality and powerful task management features, nightcoder.NightCoder is here to keep you organized, inspired, and focused.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Shamanbenny"},"content":"---","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Shamanbenny"},"content":"## Features Overview","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Shamanbenny"},"content":"### Getting Help","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Shamanbenny"},"content":"Access a quick reference guide for all available commands.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Shamanbenny"},"content":"**Command Syntax:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Shamanbenny"},"content":"help","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Shamanbenny"},"content":"**Example:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Shamanbenny"},"content":"help","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Shamanbenny"},"content":"**Expected Outcome:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Shamanbenny"},"content":"\t[ Night Code Command Guide ]","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Shamanbenny"},"content":"\tNeed a hand? No problem! Here\u0027s what I can do for you:","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Shamanbenny"},"content":"\t    help","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Shamanbenny"},"content":"\t    - Prints this handy guide. Because even pros need reminders sometimes.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Shamanbenny"},"content":"\t    ...","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Shamanbenny"},"content":"---","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Shamanbenny"},"content":"### Adding To-Dos","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Shamanbenny"},"content":"nightcoder.NightCoder lets you quickly add tasks to your to-do list, ensuring you don\u0027t forget important tasks during your coding adventures.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Shamanbenny"},"content":"**Command Syntax:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Shamanbenny"},"content":"todo \u003ctask description\u003e","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Shamanbenny"},"content":"**Example:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Shamanbenny"},"content":"todo Finish the project report","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Shamanbenny"},"content":"**Expected Outcome:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Shamanbenny"},"content":"\t[ nightcoder.task.Task #1 Added: Finish the project report ]","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Shamanbenny"},"content":"\tGot it! I\u0027ll keep this safe in your to-do list. Let me know what\u0027s next!","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Shamanbenny"},"content":"---","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Shamanbenny"},"content":"### Adding Deadlines","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Shamanbenny"},"content":"Keep track of time-sensitive tasks by adding deadlines.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Shamanbenny"},"content":"**Command Syntax:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Shamanbenny"},"content":"deadline \u003ctask description\u003e /by \u003cdue date and time\u003e","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Shamanbenny"},"content":"**Example:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Shamanbenny"},"content":"deadline Submit assignment /by 2025-01-30 23:59","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Shamanbenny"},"content":"**Expected Outcome:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Shamanbenny"},"content":"\t[ nightcoder.task.Task #2 Added: Submit assignment ]","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Shamanbenny"},"content":"\tGot it! I\u0027ll keep this safe in your to-do list. Let me know what\u0027s next!","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Shamanbenny"},"content":"---","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Shamanbenny"},"content":"### Adding Events","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Shamanbenny"},"content":"Schedule events with specific start and end times to manage your calendar effectively.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Shamanbenny"},"content":"**Command Syntax:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Shamanbenny"},"content":"event \u003cevent description\u003e /from \u003cstart time\u003e /to \u003cend time\u003e","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Shamanbenny"},"content":"**Example:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Shamanbenny"},"content":"event Team meeting /from 2025-01-21 3:00 PM /to 2025-01-21 4:00 PM","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Shamanbenny"},"content":"**Expected Outcome:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Shamanbenny"},"content":"\t[ nightcoder.task.Task #3 Added: Team meeting ]","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Shamanbenny"},"content":"\tGot it! I\u0027ll keep this safe in your to-do list. Let me know what\u0027s next!","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Shamanbenny"},"content":"---","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Shamanbenny"},"content":"### Viewing Your To-Do List","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Shamanbenny"},"content":"Get an overview of your tasks, including their completion status and descriptions.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Shamanbenny"},"content":"**Command Syntax:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Shamanbenny"},"content":"**Example:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Shamanbenny"},"content":"**Expected Outcome:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Shamanbenny"},"content":"\t1. [T][ ] Finish the project report","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Shamanbenny"},"content":"\t2. [D][ ] Submit assignment (by: 2025-01-30 23:59)","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Shamanbenny"},"content":"\t3. [E][ ] Team meeting (from: 2025-01-21 3:00 PM to: 2025-01-21 4:00 PM)","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Shamanbenny"},"content":"---","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Shamanbenny"},"content":"### Marking Tasks as Complete","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Shamanbenny"},"content":"Track your progress by marking tasks as completed.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Shamanbenny"},"content":"**Command Syntax:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Shamanbenny"},"content":"mark \u003ctask number\u003e","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Shamanbenny"},"content":"**Example:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Shamanbenny"},"content":"mark 1","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Shamanbenny"},"content":"**Expected Outcome:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Shamanbenny"},"content":"\t[ nightcoder.task.Task Marked as Complete! ]","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Shamanbenny"},"content":"\tGreat job! nightcoder.task.Task \"Finish the project report\" is now marked as done. On to the next one!","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Shamanbenny"},"content":"---","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Shamanbenny"},"content":"### Marking Tasks as Incomplete","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Shamanbenny"},"content":"Need to revisit a task? Mark it as incomplete.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Shamanbenny"},"content":"**Command Syntax:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Shamanbenny"},"content":"unmark \u003ctask number\u003e","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Shamanbenny"},"content":"**Example:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Shamanbenny"},"content":"unmark 1","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Shamanbenny"},"content":"**Expected Outcome:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Shamanbenny"},"content":"\t[ nightcoder.task.Task Marked as Incomplete! ]","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Shamanbenny"},"content":"\tGot it! nightcoder.task.Task \"Finish the project report\" is back on your to-do list. Let\u0027s tackle it when you\u0027re ready!","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Shamanbenny"},"content":"---","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Shamanbenny"},"content":"### Deleting Tasks","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Shamanbenny"},"content":"Clean up your to-do list by deleting tasks you no longer need.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Shamanbenny"},"content":"**Command Syntax:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Shamanbenny"},"content":"delete \u003ctask number\u003e","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Shamanbenny"},"content":"**Example:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Shamanbenny"},"content":"delete 2","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Shamanbenny"},"content":"**Expected Outcome:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Shamanbenny"},"content":"\t[ nightcoder.task.Task Deleted! ]","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Shamanbenny"},"content":"\tnightcoder.task.Task \"Submit assignment\" has been removed from your list. Poof, it\u0027s gone! Let me know if there\u0027s anything else to tidy up.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Shamanbenny"},"content":"---","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Shamanbenny"},"content":"## Summary","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Shamanbenny"},"content":"`nightcoder.NightCoder` simplifies task management while keeping your coding spirits high. Whether you\u0027re organizing deadlines or clearing your to-do list, nightcoder.NightCoder is always here to assist. Happy coding!","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"-":23,"Shamanbenny":162}},{"path":"src/main/java/nightcoder/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shamanbenny"},"content":"package nightcoder;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Shamanbenny"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Shamanbenny"},"content":"import nightcoder.javafx.Main;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Shamanbenny"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Shamanbenny"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Shamanbenny"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Shamanbenny"},"content":"public class Launcher {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Shamanbenny"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Shamanbenny"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Shamanbenny"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"Shamanbenny":13}},{"path":"src/main/java/nightcoder/NightCoder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shamanbenny"},"content":"package nightcoder;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Shamanbenny"},"content":"import nightcoder.parser.Parser;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Shamanbenny"},"content":"import nightcoder.storage.Storage;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Shamanbenny"},"content":"import nightcoder.task.TaskList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Shamanbenny"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Shamanbenny"},"content":" * A playful and motivational chatbot assistant for late-night coding sessions.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Shamanbenny"},"content":" *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Shamanbenny"},"content":" * @author ShamanBenny","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Shamanbenny"},"content":" * @version 10","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Shamanbenny"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Shamanbenny"},"content":"public class NightCoder {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Shamanbenny"},"content":"    private static final String DATA_FOLDER \u003d \"data\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Shamanbenny"},"content":"    private static final String TASKS_FILE \u003d \"tasks.txt\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Shamanbenny"},"content":"    private static Parser parser;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Shamanbenny"},"content":"    private static final Storage storage \u003d new Storage(NightCoder.DATA_FOLDER, NightCoder.TASKS_FILE);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Shamanbenny"},"content":"    private static final TaskList tasks \u003d new TaskList(NightCoder.storage);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Shamanbenny"},"content":"    public NightCoder() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Shamanbenny"},"content":"        NightCoder.parser \u003d new Parser(NightCoder.storage, NightCoder.tasks);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Shamanbenny"},"content":"        NightCoder.tasks.loadTasks();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Shamanbenny"},"content":"    public void saveTasksOnClose() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Shamanbenny"},"content":"        NightCoder.tasks.saveTasks();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Shamanbenny"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Shamanbenny"},"content":"        return NightCoder.parser.parseCommand(input);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Shamanbenny"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"Shamanbenny":33}},{"path":"src/main/java/nightcoder/javafx/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shamanbenny"},"content":"package nightcoder.javafx;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Shamanbenny"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Shamanbenny"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Shamanbenny"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Shamanbenny"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Shamanbenny"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Shamanbenny"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Shamanbenny"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Shamanbenny"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Shamanbenny"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Shamanbenny"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Shamanbenny"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Shamanbenny"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Shamanbenny"},"content":"import javafx.scene.text.TextAlignment;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Shamanbenny"},"content":"/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Shamanbenny"},"content":" * The DialogBox class represents a custom dialog box containing text and an image.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Shamanbenny"},"content":" * It is used to display user and bot messages with respective images and format.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Shamanbenny"},"content":" *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Shamanbenny"},"content":" * @author ShamanBenny","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Shamanbenny"},"content":" * @version 10","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Shamanbenny"},"content":" */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Shamanbenny"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Shamanbenny"},"content":"    @FXML","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Shamanbenny"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Shamanbenny"},"content":"    @FXML","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Shamanbenny"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Shamanbenny"},"content":"     * Constructs a DialogBox with the specified text and image.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Shamanbenny"},"content":"     * @param text The text to be displayed in the dialog box.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Shamanbenny"},"content":"     * @param img  The image to be displayed alongside the text.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Shamanbenny"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Shamanbenny"},"content":"        try {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Shamanbenny"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Shamanbenny"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Shamanbenny"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Shamanbenny"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Shamanbenny"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Shamanbenny"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Shamanbenny"},"content":"        this.dialog.setText(text);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Shamanbenny"},"content":"        this.dialog.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Shamanbenny"},"content":"        this.dialog.setTextAlignment(TextAlignment.RIGHT);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Shamanbenny"},"content":"        this.displayPicture.setImage(img);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Shamanbenny"},"content":"     * Flips the dialog box such that the ImageView appears on the left, and the text appears on the right.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Shamanbenny"},"content":"    private void flip() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Shamanbenny"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Shamanbenny"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Shamanbenny"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Shamanbenny"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Shamanbenny"},"content":"        this.setStyle(\"-fx-background-color: #6caad1;\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Shamanbenny"},"content":"        this.dialog.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Shamanbenny"},"content":"        this.dialog.setTextAlignment(TextAlignment.LEFT);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Shamanbenny"},"content":"     * Creates a DialogBox instance for a user message.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Shamanbenny"},"content":"     * @param text The user\u0027s message text.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Shamanbenny"},"content":"     * @param img  The user\u0027s profile image.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Shamanbenny"},"content":"     * @return A DialogBox displaying the user\u0027s message and image.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Shamanbenny"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Shamanbenny"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Shamanbenny"},"content":"     * Creates a DialogBox instance for a bot message and flips it.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Shamanbenny"},"content":"     * @param text The bot\u0027s response text.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Shamanbenny"},"content":"     * @param img  The bot\u0027s profile image.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Shamanbenny"},"content":"     * @return A DialogBox displaying the bot\u0027s message and image, flipped to align left.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Shamanbenny"},"content":"    public static DialogBox getBotDialog(String text, Image img) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Shamanbenny"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Shamanbenny"},"content":"        db.flip();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Shamanbenny"},"content":"        return db;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Shamanbenny"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"Shamanbenny":89}},{"path":"src/main/java/nightcoder/javafx/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shamanbenny"},"content":"package nightcoder.javafx;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Shamanbenny"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Shamanbenny"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Shamanbenny"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Shamanbenny"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Shamanbenny"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Shamanbenny"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Shamanbenny"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Shamanbenny"},"content":"import nightcoder.NightCoder;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Shamanbenny"},"content":"/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Shamanbenny"},"content":" * The Main class initializes and starts the JavaFX application.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Shamanbenny"},"content":" *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Shamanbenny"},"content":" * @author ShamanBenny","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Shamanbenny"},"content":" * @version 10","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Shamanbenny"},"content":" */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Shamanbenny"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Shamanbenny"},"content":"    private NightCoder nightCoder \u003d new NightCoder();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Shamanbenny"},"content":"    private Image fevicon \u003d new Image(this.getClass().getResourceAsStream(\"/images/fevicon.png\"));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Shamanbenny"},"content":"     * Initializes and starts the main JavaFX application.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Shamanbenny"},"content":"     * Loads the FXML layout and sets up the stage properties such as title, icons, and window size.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Shamanbenny"},"content":"     * Also injects the NightCoder instance into the main window.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Shamanbenny"},"content":"     * @param stage The primary stage of the JavaFX application.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Shamanbenny"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Shamanbenny"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Shamanbenny"},"content":"        try {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Shamanbenny"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Shamanbenny"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Shamanbenny"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Shamanbenny"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Shamanbenny"},"content":"            // Set property","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Shamanbenny"},"content":"            stage.setTitle(\"NightCoder\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Shamanbenny"},"content":"            stage.getIcons().add(fevicon);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Shamanbenny"},"content":"            stage.setResizable(false);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Shamanbenny"},"content":"            stage.setMinHeight(800.0);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Shamanbenny"},"content":"            stage.setMaxHeight(800.0);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Shamanbenny"},"content":"            stage.setMinWidth(1000.0);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Shamanbenny"},"content":"            stage.setMaxWidth(1000.0);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Shamanbenny"},"content":"            // Set on window close event","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Shamanbenny"},"content":"            stage.setOnCloseRequest((event) -\u003e {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Shamanbenny"},"content":"                this.nightCoder.saveTasksOnClose();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Shamanbenny"},"content":"            });","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Shamanbenny"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setNightCoder(this.nightCoder); // inject the Duke instance","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Shamanbenny"},"content":"            stage.show();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Shamanbenny"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Shamanbenny"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Shamanbenny"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"Shamanbenny":58}},{"path":"src/main/java/nightcoder/javafx/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shamanbenny"},"content":"package nightcoder.javafx;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Shamanbenny"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Shamanbenny"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Shamanbenny"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Shamanbenny"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Shamanbenny"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Shamanbenny"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Shamanbenny"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Shamanbenny"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Shamanbenny"},"content":"import nightcoder.NightCoder;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Shamanbenny"},"content":"import nightcoder.ui.Ui;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Shamanbenny"},"content":"/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Shamanbenny"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Shamanbenny"},"content":" * Handles user interactions and manages the UI components.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Shamanbenny"},"content":" *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Shamanbenny"},"content":" * @author ShamanBenny","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Shamanbenny"},"content":" * @version 10","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Shamanbenny"},"content":" */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Shamanbenny"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Shamanbenny"},"content":"    @FXML","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Shamanbenny"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Shamanbenny"},"content":"    @FXML","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Shamanbenny"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Shamanbenny"},"content":"    @FXML","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Shamanbenny"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Shamanbenny"},"content":"    @FXML","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Shamanbenny"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Shamanbenny"},"content":"    private NightCoder nightCoder;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Shamanbenny"},"content":"    /* `/images/DALL-E_Guest User.png` generated by DALL-E using ChatGPT */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Shamanbenny"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DALL-E_Guest User.png\"));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Shamanbenny"},"content":"    /* `/images/DALL-E_NightCoder Bot.png` generated by DALL-E using ChatGPT */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Shamanbenny"},"content":"    private Image botImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DALL-E_NightCoder Bot.png\"));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Shamanbenny"},"content":"     * Initializes the main window by displaying the welcome messages and binding scroll properties.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Shamanbenny"},"content":"    @FXML","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Shamanbenny"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Shamanbenny"},"content":"        ArrayList\u003cDialogBox\u003e welcomeDialogs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Shamanbenny"},"content":"        welcomeDialogs.add(DialogBox.getBotDialog(Ui.getWelcomeString(1), this.botImage));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Shamanbenny"},"content":"        welcomeDialogs.add(DialogBox.getBotDialog(Ui.getWelcomeString(2), this.botImage));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Shamanbenny"},"content":"        this.dialogContainer.getChildren().addAll(welcomeDialogs);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Shamanbenny"},"content":"        this.scrollPane.vvalueProperty().bind(this.dialogContainer.heightProperty());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Shamanbenny"},"content":"    /** Injects the NightCoder instance */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Shamanbenny"},"content":"    public void setNightCoder(NightCoder n) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Shamanbenny"},"content":"        this.nightCoder \u003d n;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Shamanbenny"},"content":"     * Handles user input by creating dialog boxes.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Shamanbenny"},"content":"     * Displays the user\u0027s input and the corresponding response from NightCoder.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Shamanbenny"},"content":"     * Clears the text field after processing the input.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Shamanbenny"},"content":"    @FXML","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Shamanbenny"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Shamanbenny"},"content":"        String input \u003d this.userInput.getText();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Shamanbenny"},"content":"        String response \u003d this.nightCoder.getResponse(input);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Shamanbenny"},"content":"        this.dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Shamanbenny"},"content":"                DialogBox.getUserDialog(input, this.userImage),","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Shamanbenny"},"content":"                DialogBox.getBotDialog(response, this.botImage)","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Shamanbenny"},"content":"        );","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Shamanbenny"},"content":"        this.userInput.clear();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Shamanbenny"},"content":"}","lastModifiedDate":"2025-02-09","isFullCredit":false}],"authorContributionMap":{"Shamanbenny":71}},{"path":"src/main/java/nightcoder/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shamanbenny"},"content":"package nightcoder.parser;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Shamanbenny"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Shamanbenny"},"content":"import nightcoder.storage.Storage;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Shamanbenny"},"content":"import nightcoder.task.Task;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Shamanbenny"},"content":"import nightcoder.task.TaskList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Shamanbenny"},"content":"import nightcoder.ui.Ui;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Shamanbenny"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Shamanbenny"},"content":" * Handles user input, processes commands, and manages task-related operations.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Shamanbenny"},"content":" *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Shamanbenny"},"content":" * @author ShamanBenny","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Shamanbenny"},"content":" * @version 10","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Shamanbenny"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Shamanbenny"},"content":"public class Parser {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Shamanbenny"},"content":"    private final Storage storage;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Shamanbenny"},"content":"    private final TaskList tasks;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Shamanbenny"},"content":"     * Constructs a {@code Parser} with the necessary dependencies.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Shamanbenny"},"content":"     * @param storage The {@code Storage} instance to handle task persistence.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Shamanbenny"},"content":"     * @param tasks   The {@code TaskList} containing the list of tasks.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Shamanbenny"},"content":"    public Parser(Storage storage, TaskList tasks) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Shamanbenny"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Shamanbenny"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Shamanbenny"},"content":"     * Parses the user input and executes the corresponding command.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Shamanbenny"},"content":"     * @param input The full user input string to be parsed and processed.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Shamanbenny"},"content":"     * @return The String response of the parsed input command.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Shamanbenny"},"content":"    public String parseCommand(String input) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Shamanbenny"},"content":"        String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Shamanbenny"},"content":"        String command \u003d parts[0].toLowerCase();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Shamanbenny"},"content":"        // The switch structure is retained for clarity and readability. Each case acts as a self-contained command","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Shamanbenny"},"content":"        // handler, making the code easy to navigate without needing separate function calls for every command.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Shamanbenny"},"content":"        switch (command) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Shamanbenny"},"content":"        case \"help\":","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Shamanbenny"},"content":"            return Ui.getHelp();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Shamanbenny"},"content":"        case \"todo\":","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Shamanbenny"},"content":"            if (parts.length !\u003d 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Shamanbenny"},"content":"                return Ui.getInvalidUsage(\"todo\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Shamanbenny"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Shamanbenny"},"content":"            String todoParams \u003d parts[1];","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Shamanbenny"},"content":"            return this.tasks.addToDo(todoParams.trim());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Shamanbenny"},"content":"        case \"deadline\":","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Shamanbenny"},"content":"            if (parts.length !\u003d 2) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Shamanbenny"},"content":"                return Ui.getInvalidUsage(\"deadline\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Shamanbenny"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Shamanbenny"},"content":"            String deadlineParams \u003d parts[1];","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Shamanbenny"},"content":"            if (!deadlineParams.contains(\" /by \")) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Shamanbenny"},"content":"                // Missing \"/by\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Shamanbenny"},"content":"                return Ui.getInvalidUsage(\"deadline\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Shamanbenny"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Shamanbenny"},"content":"            String[] deadlineParts \u003d deadlineParams.split(\" /by \", 2);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Shamanbenny"},"content":"            if (deadlineParts.length \u003c 2 || deadlineParts[0].trim().isEmpty() || deadlineParts[1].trim().isEmpty()) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Shamanbenny"},"content":"                // Missing details for task description, \"/by\", or empty \"/by\" details.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Shamanbenny"},"content":"                return Ui.getInvalidUsage(\"deadline\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Shamanbenny"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Shamanbenny"},"content":"            // Correct Usage from here...","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Shamanbenny"},"content":"            String deadlineDescription \u003d deadlineParts[0];","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Shamanbenny"},"content":"            String deadlineBy \u003d deadlineParts[1];","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Shamanbenny"},"content":"            return this.tasks.addDeadline(deadlineDescription.trim(), deadlineBy.trim());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Shamanbenny"},"content":"        case \"event\":","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Shamanbenny"},"content":"            if (parts.length !\u003d 2) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Shamanbenny"},"content":"                return Ui.getInvalidUsage(\"event\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Shamanbenny"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Shamanbenny"},"content":"            String eventParams \u003d parts[1];","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Shamanbenny"},"content":"            if (!eventParams.contains(\" /from \") || !eventParams.contains(\" /to \")) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Shamanbenny"},"content":"                // Missing \"/from\" or \"/to\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Shamanbenny"},"content":"                return Ui.getInvalidUsage(\"event\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Shamanbenny"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Shamanbenny"},"content":"            int fromIdx \u003d eventParams.indexOf(\" /from \");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Shamanbenny"},"content":"            int toIdx \u003d eventParams.indexOf(\" /to \");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Shamanbenny"},"content":"            String eventDescription \u003d eventParams.split(\" /from | /to \", 2)[0];","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Shamanbenny"},"content":"            String fromParams \u003d \"\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Shamanbenny"},"content":"            String toParams \u003d \"\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Shamanbenny"},"content":"            if (fromIdx \u003c toIdx) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Shamanbenny"},"content":"                fromParams \u003d eventParams.substring(fromIdx + 7, toIdx);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Shamanbenny"},"content":"                toParams \u003d eventParams.substring(toIdx + 5);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Shamanbenny"},"content":"            } else {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Shamanbenny"},"content":"                fromParams \u003d eventParams.substring(fromIdx + 7);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Shamanbenny"},"content":"                toParams \u003d eventParams.substring(toIdx + 5, fromIdx);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Shamanbenny"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Shamanbenny"},"content":"            if (eventDescription.trim().isEmpty() || fromParams.trim().isEmpty() || toParams.trim().isEmpty()) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Shamanbenny"},"content":"                return Ui.getInvalidUsage(\"event\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Shamanbenny"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Shamanbenny"},"content":"            // Correct Usage from here...","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Shamanbenny"},"content":"            return this.tasks.addEvent(eventDescription.trim(), fromParams.trim(), toParams.trim());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Shamanbenny"},"content":"        case \"list\":","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Shamanbenny"},"content":"            return this.tasks.listTasks();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Shamanbenny"},"content":"        case \"mark\":","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Shamanbenny"},"content":"            if (parts.length !\u003d 2) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Shamanbenny"},"content":"                return Ui.getInvalidUsage(\"mark\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Shamanbenny"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Shamanbenny"},"content":"            try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Shamanbenny"},"content":"                // Attempt to parse the task ID","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Shamanbenny"},"content":"                int markId \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Shamanbenny"},"content":"                return setCompleted(markId, true);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Shamanbenny"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Shamanbenny"},"content":"                // Handle invalid input for task ID","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Shamanbenny"},"content":"                return Ui.getInvalidNumberInput(\"mark\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Shamanbenny"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Shamanbenny"},"content":"        case \"unmark\":","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Shamanbenny"},"content":"            if (parts.length !\u003d 2) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Shamanbenny"},"content":"                return Ui.getInvalidUsage(\"unmark\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Shamanbenny"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Shamanbenny"},"content":"            try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Shamanbenny"},"content":"                // Attempt to parse the task ID","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Shamanbenny"},"content":"                int unmarkId \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Shamanbenny"},"content":"                return setCompleted(unmarkId, false);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Shamanbenny"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Shamanbenny"},"content":"                // Handle invalid input for task ID","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Shamanbenny"},"content":"                return Ui.getInvalidNumberInput(\"unmark\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Shamanbenny"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Shamanbenny"},"content":"        case \"delete\":","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Shamanbenny"},"content":"            if (parts.length !\u003d 2) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Shamanbenny"},"content":"                return Ui.getInvalidUsage(\"delete\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Shamanbenny"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Shamanbenny"},"content":"            try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Shamanbenny"},"content":"                // Attempt to parse the task ID","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Shamanbenny"},"content":"                int deleteId \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Shamanbenny"},"content":"                return deleteTask(deleteId);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Shamanbenny"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Shamanbenny"},"content":"                // Handle invalid input for task ID","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Shamanbenny"},"content":"                return Ui.getInvalidNumberInput(\"delete\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Shamanbenny"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Shamanbenny"},"content":"        case \"find\":","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Shamanbenny"},"content":"            if (parts.length !\u003d 2) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Shamanbenny"},"content":"                return Ui.getInvalidUsage(\"find\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Shamanbenny"},"content":"            }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Shamanbenny"},"content":"            String findParams \u003d parts[1];","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Shamanbenny"},"content":"            return this.tasks.listTasks(findParams);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Shamanbenny"},"content":"        default:","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Shamanbenny"},"content":"            return \"\"\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Shamanbenny"},"content":"                    [ Oops! ]","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Shamanbenny"},"content":"                    I didn\u0027t catch that. Type \"help\" to see the list of commands I understand.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Shamanbenny"},"content":"                    Let\u0027s get back on track!\"\"\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Shamanbenny"},"content":"     * Updates the completion status of a task in the to-do list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Shamanbenny"},"content":"     * Marks a specified task as completed or incomplete based on the given parameters.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Shamanbenny"},"content":"     * If the provided index is invalid (not in the range of the task list), it displays an error message.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Shamanbenny"},"content":"     * If the task selected is already set as it should, it also displays an error message.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Shamanbenny"},"content":"     * @param idx The 1-based index of the task in the list to update.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Shamanbenny"},"content":"     * @param isCompleted {@code true} if the task is completed, {@code false} otherwise.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Shamanbenny"},"content":"     * @return The String message indicating the attempt at updating the completion status of a task.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Shamanbenny"},"content":"    private String setCompleted(int idx, boolean isCompleted) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Shamanbenny"},"content":"        // Edge-Case [\u0027idx\u0027 out of bounds]","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Shamanbenny"},"content":"        if (idx \u003e this.tasks.size() || idx \u003c 1) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Shamanbenny"},"content":"            return \"\"\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Shamanbenny"},"content":"                    [ Invalid Task Number! ]","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Shamanbenny"},"content":"                    Hmm, that number doesn\u0027t match any tasks on your list.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Shamanbenny"},"content":"                    Double-check your task list with \"list\", and try again!\"\"\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Shamanbenny"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Shamanbenny"},"content":"        // idx is originally 1-indexed [Therefore minus 1 to access 0-indexed ListArray]","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Shamanbenny"},"content":"        Task task \u003d this.tasks.get(idx - 1);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Shamanbenny"},"content":"        if (task.isCompleted() \u003d\u003d isCompleted) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Shamanbenny"},"content":"            // Edge-Case [\u0027task\u0027 is already set as complete/incomplete]","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Shamanbenny"},"content":"            if (isCompleted) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Shamanbenny"},"content":"                output.append(\"[ Task Already Complete! ]\\nLooks like task \\\"\").append(task.getDescription());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Shamanbenny"},"content":"                output.append(\"\\\" is already marked as done. You\u0027re ahead of the game!\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Shamanbenny"},"content":"            } else {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Shamanbenny"},"content":"                output.append(\"[ Task Already Incomplete ]!\\nTask \\\"\").append(task.getDescription());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Shamanbenny"},"content":"                output.append(\"\\\" is already on your to-do list. No need to unmark it again!\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Shamanbenny"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Shamanbenny"},"content":"        } else {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Shamanbenny"},"content":"            task.setCompleted(isCompleted);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Shamanbenny"},"content":"            try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Shamanbenny"},"content":"                this.storage.setCompleted(idx - 1, isCompleted); // Convert to zero-based index","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Shamanbenny"},"content":"                if (isCompleted) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Shamanbenny"},"content":"                    output.append(\"[ Task Marked as Complete! ]\\nGreat job! Task \\\"\").append(task.getDescription());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Shamanbenny"},"content":"                    output.append(\"\\\" is now marked as done. On to the next one!\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Shamanbenny"},"content":"                } else {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Shamanbenny"},"content":"                    output.append(\"[ Task Marked as Incomplete! ]\\nGot it! Task \\\"\").append(task.getDescription());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Shamanbenny"},"content":"                    output.append(\"\\\" is back on your to-do list. Let\u0027s tackle it when you\u0027re ready!\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Shamanbenny"},"content":"                }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Shamanbenny"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Shamanbenny"},"content":"                if (isCompleted) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Shamanbenny"},"content":"                    output.append(\"[ Task Marked as Complete! ]\\n\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Shamanbenny"},"content":"                } else {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Shamanbenny"},"content":"                    output.append(\"[ Task Marked as Incomplete! ]\\n\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Shamanbenny"},"content":"                }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Shamanbenny"},"content":"                output.append(Ui.getErrorUpdatingTasksFile(e));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Shamanbenny"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Shamanbenny"},"content":"        return output.toString();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Shamanbenny"},"content":"     * Deletes a task from the to-do list based on its 1-based index.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Shamanbenny"},"content":"     * This method removes a task from the task list if the specified index is valid.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Shamanbenny"},"content":"     * If the index is out of bounds, an error message is displayed, and no task is deleted.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Shamanbenny"},"content":"     * @param idx The 1-based index of the task in the list to delete.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Shamanbenny"},"content":"     * @return The String message indicating the attempt at deleting a task from the to-do list.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Shamanbenny"},"content":"    private String deleteTask(int idx) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Shamanbenny"},"content":"        // Edge-Case [\u0027idx\u0027 out of bounds]","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Shamanbenny"},"content":"        if (idx \u003e this.tasks.size() || idx \u003c 1) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Shamanbenny"},"content":"            return \"\"\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Shamanbenny"},"content":"                    [ Invalid Task Number! ]","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Shamanbenny"},"content":"                    Hmm, that number doesn\u0027t match any tasks on your list.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Shamanbenny"},"content":"                    Double-check your task list with \"list\", and try again!\"\"\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Shamanbenny"},"content":"        // idx is originally 1-indexed [Therefore minus 1 to access 0-indexed ListArray]","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Shamanbenny"},"content":"        Task task \u003d this.tasks.remove(idx - 1);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Shamanbenny"},"content":"        try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Shamanbenny"},"content":"            this.storage.deleteTask(idx - 1);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Shamanbenny"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Shamanbenny"},"content":"            return \"[ Task Deleted! ]\\n\" + Ui.getErrorUpdatingTasksFile(e);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Shamanbenny"},"content":"        return \"[ Task Deleted! ]\\nTask \\\"\" + task.getDescription() + \"\\\" has been removed from your list. \"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Shamanbenny"},"content":"                + \"Poof, it\u0027s gone! Let me know if there\u0027s anything else to tidy up.\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Shamanbenny"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"Shamanbenny":228}},{"path":"src/main/java/nightcoder/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shamanbenny"},"content":"package nightcoder.storage;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Shamanbenny"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Shamanbenny"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Shamanbenny"},"content":"import java.io.File;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Shamanbenny"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Shamanbenny"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Shamanbenny"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Shamanbenny"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Shamanbenny"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Shamanbenny"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Shamanbenny"},"content":"import nightcoder.task.Deadline;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Shamanbenny"},"content":"import nightcoder.task.Event;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Shamanbenny"},"content":"import nightcoder.task.Task;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Shamanbenny"},"content":"import nightcoder.task.ToDo;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Shamanbenny"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Shamanbenny"},"content":" * Handles the reading and writing of task data to a file.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Shamanbenny"},"content":" * This class manages loading, saving, updating, and deleting tasks","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Shamanbenny"},"content":" * from a persistent storage file.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Shamanbenny"},"content":" *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Shamanbenny"},"content":" * @author ShamanBenny","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Shamanbenny"},"content":" * @version 10","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Shamanbenny"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Shamanbenny"},"content":"public class Storage {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Shamanbenny"},"content":"    private final String DATA_FOLDER;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Shamanbenny"},"content":"    private final String TASKS_FILE;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Shamanbenny"},"content":"     * Constructs a {@code Storage} instance for managing tasks in the specified folder and file.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Shamanbenny"},"content":"     * @param folder   The directory where task data is stored.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Shamanbenny"},"content":"     * @param filename The name of the file containing task data.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Shamanbenny"},"content":"    public Storage(String folder, String filename) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Shamanbenny"},"content":"        this.DATA_FOLDER \u003d folder;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Shamanbenny"},"content":"        this.TASKS_FILE \u003d filename;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Shamanbenny"},"content":"     * Reads all lines from the file and returns them as a list of Strings.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Shamanbenny"},"content":"     * @return An {@code ArrayList} containing all task entries from the file.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Shamanbenny"},"content":"     *     Returns an empty list if the file does not exist or an error occurs.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Shamanbenny"},"content":"    public ArrayList\u003cString\u003e readLines() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Shamanbenny"},"content":"        File file \u003d new File(this.DATA_FOLDER + \"/\" + this.TASKS_FILE);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Shamanbenny"},"content":"        // Check if file exists, if not, simply return empty ArrayList\u003cString\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Shamanbenny"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Shamanbenny"},"content":"            return new ArrayList\u003cString\u003e();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Shamanbenny"},"content":"        // Read all lines into an ArrayList","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Shamanbenny"},"content":"        ArrayList\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Shamanbenny"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Shamanbenny"},"content":"            String line;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Shamanbenny"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Shamanbenny"},"content":"                lines.add(line);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Shamanbenny"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Shamanbenny"},"content":"            return lines;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Shamanbenny"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Shamanbenny"},"content":"            System.err.println(\"[ ERROR ] Error reading tasks file: \" + e.getMessage());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Shamanbenny"},"content":"            return new ArrayList\u003cString\u003e();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Shamanbenny"},"content":"     * Loads tasks from the file and converts them into {@code Task} objects.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Shamanbenny"},"content":"     * @return An {@code ArrayList} of {@code Task} objects representing previously saved tasks.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Shamanbenny"},"content":"    public ArrayList\u003cTask\u003e loadTasks() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Shamanbenny"},"content":"        ArrayList\u003cString\u003e lines \u003d this.readLines();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Shamanbenny"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Shamanbenny"},"content":"        for (String line : lines) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Shamanbenny"},"content":"            try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Shamanbenny"},"content":"                tasks.add(parseStringToTask(line));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Shamanbenny"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Shamanbenny"},"content":"                System.err.println(\"[ ERROR ] \" + e.getMessage());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Shamanbenny"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Shamanbenny"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Shamanbenny"},"content":"            System.out.println(\"[ INFO ] No previous task data found. Starting fresh!\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Shamanbenny"},"content":"        } else {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Shamanbenny"},"content":"            System.out.println(\"[ INFO ] Tasks loaded successfully from previous sessions!\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Shamanbenny"},"content":"        return tasks;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Shamanbenny"},"content":"     * Parses a task entry from a formatted string and creates a {@code Task} object.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Shamanbenny"},"content":"     * @param line The string containing task details in the format: Type|isCompleted|Description|[Additional Data].","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Shamanbenny"},"content":"     * @return A {@code Task} object parsed from the string.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Shamanbenny"},"content":"     * @throws IllegalArgumentException If the format is invalid or missing required fields.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Shamanbenny"},"content":"    public Task parseStringToTask(String line) throws IllegalArgumentException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Shamanbenny"},"content":"        String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Shamanbenny"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Shamanbenny"},"content":"            throw new IllegalArgumentException(\"Invalid task format detected: \" + line);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Shamanbenny"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Shamanbenny"},"content":"        if (!parts[1].equals(\"0\") \u0026\u0026 !parts[1].equals(\"1\")) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Shamanbenny"},"content":"            throw new IllegalArgumentException(\"Invalid task format detected: \" + line);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Shamanbenny"},"content":"        boolean isCompleted \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Shamanbenny"},"content":"        if (parts[2].trim().isEmpty()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Shamanbenny"},"content":"            throw new IllegalArgumentException(\"Invalid task format detected: \" + line);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Shamanbenny"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Shamanbenny"},"content":"        // \"Incorrect\" indentation by Style Checker due to the use of \"return\".","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Shamanbenny"},"content":"        // It should, in theory, be of the correct indentation.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Shamanbenny"},"content":"        return switch (type) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Shamanbenny"},"content":"            case \"T\" -\u003e new ToDo(description, isCompleted);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Shamanbenny"},"content":"            case \"D\" -\u003e {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Shamanbenny"},"content":"                if (parts.length \u003c 4) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Shamanbenny"},"content":"                    throw new IllegalArgumentException(\"Invalid task format detected: \" + line);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Shamanbenny"},"content":"                }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Shamanbenny"},"content":"                if (parts[3].trim().isEmpty()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Shamanbenny"},"content":"                    throw new IllegalArgumentException(\"Invalid task format detected: \" + line);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Shamanbenny"},"content":"                }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Shamanbenny"},"content":"                yield new Deadline(description, isCompleted, parts[3]);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Shamanbenny"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Shamanbenny"},"content":"            case \"E\" -\u003e {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Shamanbenny"},"content":"                if (parts.length \u003c 5) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Shamanbenny"},"content":"                    throw new IllegalArgumentException(\"Invalid task format detected: \" + line);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Shamanbenny"},"content":"                }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Shamanbenny"},"content":"                if (parts[3].trim().isEmpty() || parts[4].trim().isEmpty()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Shamanbenny"},"content":"                    throw new IllegalArgumentException(\"Invalid task format detected: \" + line);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Shamanbenny"},"content":"                }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Shamanbenny"},"content":"                yield new Event(description, isCompleted, parts[3], parts[4]);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Shamanbenny"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Shamanbenny"},"content":"            default -\u003e throw new IllegalArgumentException(\"Invalid task format detected: \" + line);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Shamanbenny"},"content":"        };","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Shamanbenny"},"content":"     * Deletes a task from the tasks file based on the given index.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Shamanbenny"},"content":"     * @param idx The 0-based index of the task to be deleted.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Shamanbenny"},"content":"     * @throws IOException If an I/O error occurs while modifying the file or if the index is out of bounds.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Shamanbenny"},"content":"    public void deleteTask(int idx) throws IOException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Shamanbenny"},"content":"        ArrayList\u003cString\u003e lines \u003d this.readLines();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Shamanbenny"},"content":"        // Edge case: Ensure the index is within bounds","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Shamanbenny"},"content":"        if (idx \u003c 0 || idx \u003e\u003d lines.size()) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Shamanbenny"},"content":"            throw new IOException(\"Task index out of bounds for file update\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Shamanbenny"},"content":"        // Remove the line containing the indexed task","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Shamanbenny"},"content":"        lines.remove(idx);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Shamanbenny"},"content":"        this.writeLines(lines);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Shamanbenny"},"content":"     * Updates the completion status of a task in the tasks file.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Shamanbenny"},"content":"     * @param idx The 0-based index of the task to be updated.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Shamanbenny"},"content":"     * @param isCompleted {@code true} if the task is completed, {@code false} otherwise.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Shamanbenny"},"content":"     * @throws IOException If an I/O error occurs while updating the file.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Shamanbenny"},"content":"    public void setCompleted(int idx, boolean isCompleted) throws IOException {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Shamanbenny"},"content":"        ArrayList\u003cString\u003e lines \u003d this.readLines();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Shamanbenny"},"content":"        // Edge case: Ensure the index is within bounds","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Shamanbenny"},"content":"        if (idx \u003c 0 || idx \u003e\u003d lines.size()) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Shamanbenny"},"content":"            throw new IOException(\"Task index out of bounds for file update\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Shamanbenny"},"content":"        // Modify the target line","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Shamanbenny"},"content":"        String[] parts \u003d lines.get(idx).split(\"\\\\|\"); // Split into max 3 parts to keep description as-is","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Shamanbenny"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Shamanbenny"},"content":"            throw new IOException(\"Corrupted task entry in file\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Shamanbenny"},"content":"        parts[1] \u003d isCompleted ? \"1\" : \"0\"; // Update completion status","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Shamanbenny"},"content":"        lines.set(idx, String.join(\"|\", parts)); // Reconstruct the line","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Shamanbenny"},"content":"        this.writeLines(lines);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Shamanbenny"},"content":"     * Appends a task entry to the tasks file.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Shamanbenny"},"content":"     * @param dataLine The task entry in string format to be added.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Shamanbenny"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Shamanbenny"},"content":"    public void appendTask(String dataLine) throws IOException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Shamanbenny"},"content":"        // Ensure the directory exists","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Shamanbenny"},"content":"        Files.createDirectories(Paths.get(this.DATA_FOLDER));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Shamanbenny"},"content":"        // Create the file if it does not exist","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Shamanbenny"},"content":"        File file \u003d new File(this.DATA_FOLDER + \"/\" + this.TASKS_FILE);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Shamanbenny"},"content":"        if (!file.exists() \u0026\u0026 !file.createNewFile()) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Shamanbenny"},"content":"            throw new IOException(\"Failed to create tasks file\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Shamanbenny"},"content":"        // Append the data to the file","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Shamanbenny"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file, true))) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Shamanbenny"},"content":"            writer.write(dataLine);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Shamanbenny"},"content":"            writer.newLine(); // Ensure the new line is properly added","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Shamanbenny"},"content":"     * Writes a list of task entries to the tasks file, overwriting its content.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Shamanbenny"},"content":"     * @param lines An {@code ArrayList} containing the updated task entries.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Shamanbenny"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Shamanbenny"},"content":"    public void writeLines(ArrayList\u003cString\u003e lines) throws IOException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Shamanbenny"},"content":"        // Ensure the directory exists","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Shamanbenny"},"content":"        Files.createDirectories(Paths.get(this.DATA_FOLDER));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Shamanbenny"},"content":"        // Create the file if it does not exist","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Shamanbenny"},"content":"        File file \u003d new File(this.DATA_FOLDER + \"/\" + this.TASKS_FILE);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Shamanbenny"},"content":"        if (!file.exists() \u0026\u0026 !file.createNewFile()) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Shamanbenny"},"content":"            throw new IOException(\"Failed to create tasks file\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Shamanbenny"},"content":"        // Write the modified content back to the file","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Shamanbenny"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file, false))) { // Overwrite mode","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Shamanbenny"},"content":"            for (String updatedLine : lines) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Shamanbenny"},"content":"                writer.write(updatedLine);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Shamanbenny"},"content":"                writer.newLine();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Shamanbenny"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Shamanbenny"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"Shamanbenny":233}},{"path":"src/main/java/nightcoder/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shamanbenny"},"content":"package nightcoder.task;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Shamanbenny"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Shamanbenny"},"content":" * Represents a task that has a specific deadline.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Shamanbenny"},"content":" * Extends the base Task class.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Shamanbenny"},"content":" *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Shamanbenny"},"content":" * @author ShamanBenny","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Shamanbenny"},"content":" * @version 10","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Shamanbenny"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Shamanbenny"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Shamanbenny"},"content":"    private final String DUE_BY;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Shamanbenny"},"content":"     * Constructs a new Deadline task with the specified description and deadline.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Shamanbenny"},"content":"     * @param description A brief description of the task.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Shamanbenny"},"content":"     * @param isCompleted The initial completion status of the task (true if completed, false otherwise).","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Shamanbenny"},"content":"     * @param dueBy The deadline for the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Shamanbenny"},"content":"    public Deadline(String description, boolean isCompleted, String dueBy) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Shamanbenny"},"content":"        super(description, isCompleted);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Shamanbenny"},"content":"        assert dueBy !\u003d null \u0026\u0026 !dueBy.trim().isEmpty() : \"Deadline dueBy cannot be null or empty\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Shamanbenny"},"content":"        this.DUE_BY \u003d dueBy;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Shamanbenny"},"content":"    public String getDueBy() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Shamanbenny"},"content":"        assert this.DUE_BY !\u003d null \u0026\u0026 !this.DUE_BY.trim().isEmpty() : \"Deadline DUE_BY should not be null or empty\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Shamanbenny"},"content":"        return this.DUE_BY;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Shamanbenny"},"content":"     * Returns a formatted string representation of the task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Shamanbenny"},"content":"     * @return A string formatted as \"T|completion_status|description|due_by\".","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Shamanbenny"},"content":"    public String getStringFormat() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Shamanbenny"},"content":"        return \"D|\" + (isCompleted() ? \"1\" : \"0\") + \"|\" + getDescription() + \"|\" + getDueBy();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Shamanbenny"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Shamanbenny"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Shamanbenny"},"content":"        return \"[D]\" + super.toString() + \" (By: \" + this.DUE_BY + \")\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Shamanbenny"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"Shamanbenny":44}},{"path":"src/main/java/nightcoder/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shamanbenny"},"content":"package nightcoder.task;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Shamanbenny"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Shamanbenny"},"content":" * Represents a task that occurs during a specific time range.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Shamanbenny"},"content":" * Extends the base Task class.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Shamanbenny"},"content":" *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Shamanbenny"},"content":" * @author ShamanBenny","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Shamanbenny"},"content":" * @version 10","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Shamanbenny"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Shamanbenny"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Shamanbenny"},"content":"    private final String START_TIME;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Shamanbenny"},"content":"    private final String END_TIME;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Shamanbenny"},"content":"     * Constructs a new Event task with the specified description, completion status, start time, and end time.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Shamanbenny"},"content":"     * @param description A brief description of the task.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Shamanbenny"},"content":"     * @param isCompleted The initial completion status of the task (true if completed, false otherwise).","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Shamanbenny"},"content":"     * @param startTime The start time of the event as a string.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Shamanbenny"},"content":"     * @param endTime The end time of the event as a string.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Shamanbenny"},"content":"    public Event(String description, boolean isCompleted, String startTime, String endTime) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Shamanbenny"},"content":"        super(description, isCompleted);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Shamanbenny"},"content":"        assert startTime !\u003d null \u0026\u0026 !startTime.trim().isEmpty() : \"Event startTime cannot be null or empty\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Shamanbenny"},"content":"        assert endTime !\u003d null \u0026\u0026 !endTime.trim().isEmpty() : \"Event endTime cannot be null or empty\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Shamanbenny"},"content":"        this.START_TIME \u003d startTime;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Shamanbenny"},"content":"        this.END_TIME \u003d endTime;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Shamanbenny"},"content":"    public String getStartTime() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Shamanbenny"},"content":"        assert this.START_TIME !\u003d null \u0026\u0026 !this.START_TIME.trim().isEmpty() : \"Event START_TIME should not \"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Shamanbenny"},"content":"                + \"be null or empty\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Shamanbenny"},"content":"        return this.START_TIME;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Shamanbenny"},"content":"    public String getEndTime() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Shamanbenny"},"content":"        assert this.END_TIME !\u003d null \u0026\u0026 !this.END_TIME.trim().isEmpty() : \"Event END_TIME should not be null or empty\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Shamanbenny"},"content":"        return this.END_TIME;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Shamanbenny"},"content":"     * Returns a formatted string representation of the task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Shamanbenny"},"content":"     * @return A string formatted as \"T|completion_status|description|start_time|end_time\".","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Shamanbenny"},"content":"    public String getStringFormat() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Shamanbenny"},"content":"        return \"E|\" + (isCompleted() ? \"1\" : \"0\") + \"|\" + getDescription() + \"|\" + getStartTime() + \"|\" + getEndTime();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Shamanbenny"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Shamanbenny"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Shamanbenny"},"content":"        return \"[E]\" + super.toString() + \" (From: \" + this.START_TIME + \", To: \" + this.END_TIME + \")\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Shamanbenny"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"Shamanbenny":54}},{"path":"src/main/java/nightcoder/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shamanbenny"},"content":"package nightcoder.task;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Shamanbenny"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Shamanbenny"},"content":" * Represents a task\u0027s details, including its description and whether","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Shamanbenny"},"content":" * it has been completed, providing methods to manage and retrieve","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Shamanbenny"},"content":" * task information.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Shamanbenny"},"content":" *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Shamanbenny"},"content":" * @author ShamanBenny","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Shamanbenny"},"content":" * @version 10","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Shamanbenny"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Shamanbenny"},"content":"public abstract class Task {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Shamanbenny"},"content":"    private final String DESCRIPTION;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Shamanbenny"},"content":"    private boolean isCompleted;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Shamanbenny"},"content":"     * Constructs a new Task with the specified description and completion status.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Shamanbenny"},"content":"     * @param description A brief description of the task.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Shamanbenny"},"content":"     * @param isCompleted The initial completion status of the task (true if completed, false otherwise).","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Shamanbenny"},"content":"    public Task(String description, boolean isCompleted) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Shamanbenny"},"content":"        assert description !\u003d null \u0026\u0026 !description.trim().isEmpty() : \"Task description cannot be null or empty\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Shamanbenny"},"content":"        this.DESCRIPTION \u003d description.trim();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Shamanbenny"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Shamanbenny"},"content":"        assert this.DESCRIPTION.equals(description) : \"Final DESCRIPTION should match the provided description\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Shamanbenny"},"content":"    public abstract String getStringFormat();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Shamanbenny"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Shamanbenny"},"content":"        assert this.DESCRIPTION !\u003d null \u0026\u0026 !this.DESCRIPTION.trim().isEmpty() : \"Task description should never be null or empty\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Shamanbenny"},"content":"        return this.DESCRIPTION;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Shamanbenny"},"content":"     * Checks if the task is completed.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Shamanbenny"},"content":"     * @return true if the task is completed, false otherwise.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Shamanbenny"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Shamanbenny"},"content":"        return this.isCompleted;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Shamanbenny"},"content":"     * Sets the completion status of the task.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Shamanbenny"},"content":"     * @param isCompleted true to mark the task as completed, false to mark it as incomplete.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Shamanbenny"},"content":"    public void setCompleted(boolean isCompleted) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Shamanbenny"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Shamanbenny"},"content":"     * Returns a string representation of the task, including its status and description.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Shamanbenny"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Shamanbenny"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Shamanbenny"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Shamanbenny"},"content":"        assert this.DESCRIPTION !\u003d null \u0026\u0026 !this.DESCRIPTION.trim().isEmpty() : \"Task description should not be null or empty in toString\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Shamanbenny"},"content":"        return ((this.isCompleted) ? \"[X] \" : \"[ ] \") + this.DESCRIPTION;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Shamanbenny"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"Shamanbenny":63}},{"path":"src/main/java/nightcoder/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shamanbenny"},"content":"package nightcoder.task;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Shamanbenny"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Shamanbenny"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Shamanbenny"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Shamanbenny"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Shamanbenny"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Shamanbenny"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Shamanbenny"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Shamanbenny"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Shamanbenny"},"content":"import nightcoder.storage.Storage;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Shamanbenny"},"content":"import nightcoder.ui.Ui;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Shamanbenny"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Shamanbenny"},"content":" * Represents the TaskList class that manages a collection of tasks, including To-Do tasks, Deadlines, and Events.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Shamanbenny"},"content":" * It supports adding, listing, and formatting tasks with associated dates.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Shamanbenny"},"content":" * The class interacts with storage object and UI class to persist and display tasks respectively.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Shamanbenny"},"content":" *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Shamanbenny"},"content":" * @author ShamanBenny","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Shamanbenny"},"content":" * @version 10","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Shamanbenny"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Shamanbenny"},"content":"public class TaskList {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Shamanbenny"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Shamanbenny"},"content":"    private HashMap\u003cString, Task\u003e taskLookup; // HashMap for quick lookup for duplicate tasks","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Shamanbenny"},"content":"    private final Storage storage;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Shamanbenny"},"content":"    private final DateTimeFormatter INPUT_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Shamanbenny"},"content":"    private final DateTimeFormatter OUTPUT_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Shamanbenny"},"content":"     * Constructs a TaskList with a given storage.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Shamanbenny"},"content":"     * @param storage The storage handler for tasks.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Shamanbenny"},"content":"    public TaskList(Storage storage) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Shamanbenny"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Shamanbenny"},"content":"        this.taskLookup \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Shamanbenny"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Shamanbenny"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Shamanbenny"},"content":"     * @return The size of the task list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Shamanbenny"},"content":"    public int size() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Shamanbenny"},"content":"        return this.tasks.size();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Shamanbenny"},"content":"     * Returns the element at the specified position in the list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Shamanbenny"},"content":"     * @param index Index of the element to return","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Shamanbenny"},"content":"     * @return The element at the specified position in this list","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Shamanbenny"},"content":"    public Task get(int index) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Shamanbenny"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Shamanbenny"},"content":"     * Removes the element at the specified position in this list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Shamanbenny"},"content":"     * Shifts any subsequent elements to the left (subtracts one from their indices).","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Shamanbenny"},"content":"     * @param index The index of the element to be removed","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Shamanbenny"},"content":"     * @return The element that was removed from the list","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Shamanbenny"},"content":"    public Task remove(int index) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Shamanbenny"},"content":"        Task removedTask \u003d this.tasks.remove(index);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Shamanbenny"},"content":"        this.taskLookup.remove(removedTask.getDescription().toLowerCase());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Shamanbenny"},"content":"        return removedTask;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Shamanbenny"},"content":"     * Loads tasks from the storage file and converts them into {@code ArrayList\u003cTask\u003e}.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Shamanbenny"},"content":"    public void loadTasks() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Shamanbenny"},"content":"        this.tasks \u003d this.storage.loadTasks();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Shamanbenny"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Shamanbenny"},"content":"            this.taskLookup.put(task.getDescription().toLowerCase(), task); // Populate HashMap","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Shamanbenny"},"content":"     * Parses a date string in the format \"yyyy-MM-dd\" and returns it in ISO format.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Shamanbenny"},"content":"     * If the input cannot be parsed, the original input string is returned unchanged.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Shamanbenny"},"content":"     * @param input The date string to be parsed, expected in \"yyyy-MM-dd\" format.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Shamanbenny"},"content":"     * @return A string representation of the parsed date in ISO format, or the original input string if parsing fails.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Shamanbenny"},"content":"    public String parseDate(String input) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Shamanbenny"},"content":"        LocalDate output;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Shamanbenny"},"content":"        try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Shamanbenny"},"content":"            output \u003d LocalDate.parse(input, INPUT_DATE_FORMAT);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Shamanbenny"},"content":"            return output.format(OUTPUT_DATE_FORMAT);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Shamanbenny"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Shamanbenny"},"content":"            return input;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Shamanbenny"},"content":"     * Adds a To Do to the list of tasks. By default, a newly added To Do is not completed.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Shamanbenny"},"content":"     * @param description The description of the task to be added to the list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Shamanbenny"},"content":"     * @return The String message indicating the attempt of adding the To Do task.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Shamanbenny"},"content":"    public String addToDo(String description) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Shamanbenny"},"content":"        if (this.taskLookup.containsKey(description.toLowerCase())) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Shamanbenny"},"content":"            return \"[ Duplicate Task ]\\nTask already exists: \" + description;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Shamanbenny"},"content":"        Task task \u003d new ToDo(description, false);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Shamanbenny"},"content":"        this.tasks.add(task);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Shamanbenny"},"content":"        this.taskLookup.put(description.toLowerCase(), task);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Shamanbenny"},"content":"        try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Shamanbenny"},"content":"            this.storage.appendTask(\"T|0|\" + description);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Shamanbenny"},"content":"            return Ui.getTaskAdded(description, this.size());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Shamanbenny"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Shamanbenny"},"content":"            return \"[ Task #\" + this.size() + \" Added: \" + description + \" ]\\n\" + Ui.getErrorUpdatingTasksFile(e);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Shamanbenny"},"content":"     * Adds a Deadline to the list of tasks. By default, a newly added deadline is not completed.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Shamanbenny"},"content":"     * Requires information on due date.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Shamanbenny"},"content":"     * @param description The description of the task to be added to the list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Shamanbenny"},"content":"     * @param dueBy A string detailing when the task is due by.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Shamanbenny"},"content":"     * @return The String message indicating the attempt of adding the Deadline task.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Shamanbenny"},"content":"    public String addDeadline(String description, String dueBy) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Shamanbenny"},"content":"        if (this.taskLookup.containsKey(description.toLowerCase())) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Shamanbenny"},"content":"            return \"[ Duplicate Task ]\\nTask already exists: \" + description;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Shamanbenny"},"content":"        String parsedDueBy \u003d parseDate(dueBy);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Shamanbenny"},"content":"        Task task \u003d new Deadline(description, false, parsedDueBy);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Shamanbenny"},"content":"        this.tasks.add(task);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Shamanbenny"},"content":"        this.taskLookup.put(description.toLowerCase(), task);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Shamanbenny"},"content":"        try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Shamanbenny"},"content":"            this.storage.appendTask(\"D|0|\" + description + \"|\" + parsedDueBy);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Shamanbenny"},"content":"            return Ui.getTaskAdded(description, this.size());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Shamanbenny"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Shamanbenny"},"content":"            return \"[ Task #\" + this.size() + \" Added: \" + description + \" ]\\n\" + Ui.getErrorUpdatingTasksFile(e);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Shamanbenny"},"content":"     * Adds an Event to the list of tasks. By default, a newly added event is not completed.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Shamanbenny"},"content":"     * Requires information on start and end time.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Shamanbenny"},"content":"     * @param description The description of the task to be added to the list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Shamanbenny"},"content":"     * @param startTime A string detailing when the event starts.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Shamanbenny"},"content":"     * @param endTime A string detailing when the event ends.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Shamanbenny"},"content":"     * @return The String message indicating the attempt of adding the Event task.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Shamanbenny"},"content":"    public String addEvent(String description, String startTime, String endTime) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Shamanbenny"},"content":"        if (this.taskLookup.containsKey(description.toLowerCase())) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Shamanbenny"},"content":"            return \"[ Duplicate Task ]\\nTask already exists: \" + description;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Shamanbenny"},"content":"        String parsedStartTime \u003d parseDate(startTime);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Shamanbenny"},"content":"        String parsedEndTime \u003d parseDate(endTime);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Shamanbenny"},"content":"        Task task \u003d new Event(description, false, parsedStartTime, parsedEndTime);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Shamanbenny"},"content":"        this.tasks.add(task);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Shamanbenny"},"content":"        this.taskLookup.put(description.toLowerCase(), task);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Shamanbenny"},"content":"        try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Shamanbenny"},"content":"            this.storage.appendTask(\"E|0|\" + description + \"|\" + parsedStartTime + \"|\" + parsedEndTime);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Shamanbenny"},"content":"            return Ui.getTaskAdded(description, this.size());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Shamanbenny"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Shamanbenny"},"content":"            return \"[ Task #\" + this.size() + \" Added: \" + description + \" ]\\n\" + Ui.getErrorUpdatingTasksFile(e);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Shamanbenny"},"content":"     * Displays the list of tasks currently stored along with their indices.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Shamanbenny"},"content":"     * If the list is empty, a message indicating no tasks are available is shown.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Shamanbenny"},"content":"     * @return The String message of the list of tasks along with their indices.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Shamanbenny"},"content":"    public String listTasks() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Shamanbenny"},"content":"        if (this.tasks.isEmpty()) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Shamanbenny"},"content":"            return \"[ Your To-Do List is Empty! ]\\n\"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Shamanbenny"},"content":"                    + \"Looks like we\u0027re starting with a clean slate. What shall we tackle first?\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Shamanbenny"},"content":"        // Functional Programming using Streams learnt from CS2030S","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Shamanbenny"},"content":"        return IntStream.range(0, tasks.size())","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Shamanbenny"},"content":"                .mapToObj(idx -\u003e (idx + 1) + \".\" + tasks.get(idx))","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Shamanbenny"},"content":"                .collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Shamanbenny"},"content":"     * Displays the list of tasks currently stored along with their indices containing the specific keyword.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Shamanbenny"},"content":"     * If the list is empty, a message indicating no tasks are available is shown.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Shamanbenny"},"content":"     * @return The String message of the list of tasks along with their indices.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Shamanbenny"},"content":"    public String listTasks(String keyword) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Shamanbenny"},"content":"        if (this.tasks.isEmpty()) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Shamanbenny"},"content":"            return \"[ Your To-Do List is Empty! ]\\n\"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Shamanbenny"},"content":"                    + \"Looks like we\u0027re starting with a clean slate. What shall we tackle first?\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Shamanbenny"},"content":"        // Functional Programming using Streams learnt from CS2030S","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Shamanbenny"},"content":"        String result \u003d IntStream.range(0, tasks.size())","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Shamanbenny"},"content":"                .filter(idx -\u003e tasks.get(idx).getDescription().toLowerCase().contains(keyword.toLowerCase()))","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Shamanbenny"},"content":"                .mapToObj(idx -\u003e (idx + 1) + \".\" + tasks.get(idx))","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Shamanbenny"},"content":"                .collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Shamanbenny"},"content":"        return result.isEmpty()","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Shamanbenny"},"content":"                ? \"[ No match found! ]\\nLooks like the tasks you\u0027re trying to find doesn\u0027t exist. Anything else?\"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Shamanbenny"},"content":"                : result;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Shamanbenny"},"content":"     * Saves the current list of tasks to the designated storage file.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Shamanbenny"},"content":"     * This method should be called at the end of the application to ensure that all tasks are properly backed up.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Shamanbenny"},"content":"    public void saveTasks() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Shamanbenny"},"content":"        ArrayList\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Shamanbenny"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Shamanbenny"},"content":"            lines.add(task.getStringFormat());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Shamanbenny"},"content":"        try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Shamanbenny"},"content":"            this.storage.writeLines(lines);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Shamanbenny"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Shamanbenny"},"content":"            Ui.getErrorUpdatingTasksFile(e);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Shamanbenny"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"Shamanbenny":228}},{"path":"src/main/java/nightcoder/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shamanbenny"},"content":"package nightcoder.task;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Shamanbenny"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Shamanbenny"},"content":" * Represents a task with no specific date or time attached.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Shamanbenny"},"content":" * Extends the base Task class.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Shamanbenny"},"content":" *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Shamanbenny"},"content":" * @author ShamanBenny","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Shamanbenny"},"content":" * @version 10","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Shamanbenny"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Shamanbenny"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Shamanbenny"},"content":"     * Constructs a new To Do task with the specified description.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Shamanbenny"},"content":"     * @param description A brief description of the task.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Shamanbenny"},"content":"     * @param isCompleted The initial completion status of the task (true if completed, false otherwise).","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Shamanbenny"},"content":"    public ToDo(String description, boolean isCompleted) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Shamanbenny"},"content":"        super(description, isCompleted);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Shamanbenny"},"content":"     * Returns a formatted string representation of the task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Shamanbenny"},"content":"     * @return A string formatted as \"T|completion_status|description\".","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Shamanbenny"},"content":"    public String getStringFormat() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Shamanbenny"},"content":"        return \"T|\" + (isCompleted() ? \"1\" : \"0\") + \"|\" + getDescription();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Shamanbenny"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Shamanbenny"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Shamanbenny"},"content":"        return \"[T]\" + super.toString(); // Prefix with [T] for To Do tasks","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Shamanbenny"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"Shamanbenny":35}},{"path":"src/main/java/nightcoder/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shamanbenny"},"content":"package nightcoder.ui;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Shamanbenny"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Shamanbenny"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Shamanbenny"},"content":" * Handles all user interface interactions within the NightCoder application.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Shamanbenny"},"content":" * It provides methods to display messages, errors, and guides to the user in a","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Shamanbenny"},"content":" * structured and readable format.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Shamanbenny"},"content":" * The class is designed as a utility class, hence it cannot be instantiated.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Shamanbenny"},"content":" *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Shamanbenny"},"content":" * @author ShamanBenny","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Shamanbenny"},"content":" * @version 10","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Shamanbenny"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Shamanbenny"},"content":"public class Ui {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Shamanbenny"},"content":"     * Represents the commands supported by the NightCoder application.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Shamanbenny"},"content":"     * Each command is associated with a syntax and a description to provide help and guidance for users.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Shamanbenny"},"content":"    private enum CommandHelp {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Shamanbenny"},"content":"        HELP(\"help\", \"Prints this handy guide. Because even pros need reminders sometimes.\"),","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Shamanbenny"},"content":"        TODO(\"todo \u003cString\u003e\", \"Adds a to-do task to your list. Just tell me what needs doing, \"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Shamanbenny"},"content":"                + \"and I\u0027ll keep track.\\n\\tExample: todo Finish the project report\"),","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Shamanbenny"},"content":"        DEADLINE(\"deadline \u003cString\u003e /by \u003cString\u003e\", \"Adds a task with a deadline. Perfect for those \"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Shamanbenny"},"content":"                + \"time-sensitive missions!\\n\\tExample: deadline Submit assignment /by 2025-01-30 23:59\"),","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Shamanbenny"},"content":"        EVENT(\"event \u003cString\u003e /from \u003cString\u003e /to \u003cString\u003e\", \"Adds an event with a start and \"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Shamanbenny"},"content":"                + \"end time. Keep your schedule sharp!\\n\\tExample: event Team meeting /from 2025-01-21 3:00 PM \"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Shamanbenny"},"content":"                + \"/to 2025-01-21 4:00 PM\"),","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Shamanbenny"},"content":"        LIST(\"list\", \"Shows all your tasks. Think of it as your personal task constellation.\"),","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Shamanbenny"},"content":"        FIND(\"find \u003cString\u003e\", \"Find specific keyword amongst your list of tasks. I\u0027ll do the work of finding \"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Shamanbenny"},"content":"                + \"it for you!\\n\\tExample: find homework\"),","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Shamanbenny"},"content":"        MARK(\"mark \u003cint\u003e\", \"Marks a task as complete. Use the task number from the list.\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Shamanbenny"},"content":"                + \"\\tExample: mark 1\"),","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Shamanbenny"},"content":"        UNMARK(\"unmark \u003cint\u003e\", \"Marks a task as incomplete. Sometimes things need a second look!\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Shamanbenny"},"content":"                + \"\\tExample: unmark 1\"),","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Shamanbenny"},"content":"        DELETE(\"delete \u003cint\u003e\", \"Deletes a task from your to-do list. Use the task number from \"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Shamanbenny"},"content":"                + \"the list.\\n\\tExample: delete 2\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Shamanbenny"},"content":"        private final String SYNTAX;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Shamanbenny"},"content":"        private final String DESCRIPTION;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Shamanbenny"},"content":"        /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Shamanbenny"},"content":"         * Constructs a CommandHelp enum instance with the specified syntax and description.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Shamanbenny"},"content":"         *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Shamanbenny"},"content":"         * @param syntax      The syntax of the command.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Shamanbenny"},"content":"         * @param description The description of the command.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Shamanbenny"},"content":"         */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Shamanbenny"},"content":"        CommandHelp(String syntax, String description) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Shamanbenny"},"content":"            this.SYNTAX \u003d syntax;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Shamanbenny"},"content":"            this.DESCRIPTION \u003d description;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Shamanbenny"},"content":"        public String getSyntax() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Shamanbenny"},"content":"            return SYNTAX;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Shamanbenny"},"content":"        public String getDescription() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Shamanbenny"},"content":"            return DESCRIPTION;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Shamanbenny"},"content":"     * Prevents the instantiation of the {@code Ui} class.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Shamanbenny"},"content":"     * @throws UnsupportedOperationException If an attempt is made to instantiate this class.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Shamanbenny"},"content":"    private Ui() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Shamanbenny"},"content":"        throw new UnsupportedOperationException(\"nightcoder.ui.Ui class should not be instantiated.\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Shamanbenny"},"content":"     * Returns the welcome message without the ASCII art logo.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Shamanbenny"},"content":"     * @param part The index for the part of the welcome message to return.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Shamanbenny"},"content":"     * @return The String containing the welcome message.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Shamanbenny"},"content":"    public static String getWelcomeString(int part) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Shamanbenny"},"content":"        switch (part) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Shamanbenny"},"content":"        case 1:","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Shamanbenny"},"content":"            return \"Ah, there you are! The moon is bright, the code is flowing, and caffeine-wait, I mean \"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Shamanbenny"},"content":"                    + \"motivation-fuels our mission tonight.\\n\\n\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Shamanbenny"},"content":"                    + \"Welcome back to Night Coder, your loyal (and slightly sleep-deprived) coding companion. \"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Shamanbenny"},"content":"                    + \"Whether it\u0027s wrangling deadlines, or organizing your todo list, I\u0027m here to lend a hand.\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Shamanbenny"},"content":"        case 2:","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Shamanbenny"},"content":"            return \"Let\u0027s make some magic together. What\u0027s on the docket tonight?\\n\\n\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Shamanbenny"},"content":"                    + \"If you\u0027re unsure about what I can do, just type \\\"help\\\", and I\u0027ll get you sorted in no time!\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Shamanbenny"},"content":"        default:","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Shamanbenny"},"content":"            return \"\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Shamanbenny"},"content":"     * Returns the message indicating a task has been added.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Shamanbenny"},"content":"     * @param description The description of the newly added task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Shamanbenny"},"content":"     * @param idx The 1-based index of the newly added task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Shamanbenny"},"content":"     * @return The String message indicating a task has been successfully added.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Shamanbenny"},"content":"    public static String getTaskAdded(String description, int idx) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Shamanbenny"},"content":"        return \"[ Task #\" + idx + \" Added: \" + description + \" ]\\n\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Shamanbenny"},"content":"                + \"Got it! I\u0027ll keep this safe in your to-do list. Let me know what\u0027s next!\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Shamanbenny"},"content":"     * Returns the error message for incorrect command usage.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Shamanbenny"},"content":"     * @param command The name of the command for which the usage was invalid.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Shamanbenny"},"content":"     * @return The String message indicating the error for incorrect command usage.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Shamanbenny"},"content":"    public static String getInvalidUsage(String command) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Shamanbenny"},"content":"        return \"[ Oops! ]\\n\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Shamanbenny"},"content":"                + \"Incorrect usage of \\\"\" + command + \"\\\". Type \\\"help\\\" to refer to its \"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Shamanbenny"},"content":"                + \"appropriate usage. Let\u0027s get back on track!\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Shamanbenny"},"content":"     * Returns the error message for invalid input that resulted in Number Format Exception.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Shamanbenny"},"content":"     * @param command The name of the command for which the input was invalid.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Shamanbenny"},"content":"     * @return The String message indicating the invalid input that resulted in NUmber Format Exception.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Shamanbenny"},"content":"    public static String getInvalidNumberInput(String command) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Shamanbenny"},"content":"        return \"[ Invalid Usage! ]\\n\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Shamanbenny"},"content":"                + \"Hmm, please enter a number that matches one of your tasks on the list.\\n\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Shamanbenny"},"content":"                + \"Double-check your task list with \\\"list\\\", and try again!\\n\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Shamanbenny"},"content":"                + \"Example: \" + command + \" 1\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Shamanbenny"},"content":"     * Returns the error message regarding the IOException that occurred during the updating of Tasks Files.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Shamanbenny"},"content":"     * @param e The IOException that occurred.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Shamanbenny"},"content":"     * @return The String message indicating the error message regarding the IOException.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Shamanbenny"},"content":"    public static String getErrorUpdatingTasksFile(IOException e) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Shamanbenny"},"content":"        System.err.println(\"Error writing to tasks file: \" + e.getMessage());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Shamanbenny"},"content":"        return \"[ ERROR ] It appears that the updating of the tasks data file has failed. \"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Shamanbenny"},"content":"                + \"This may result in non-persistent task tracking if not addressed properly.\\n\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Shamanbenny"},"content":"                + \"[ LOG ]   \" + e.getMessage();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Shamanbenny"},"content":"     * Returns a detailed guide of all available commands in the NightCoder application.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Shamanbenny"},"content":"     * The guide includes the syntax and description for each command, making it easy for users","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Shamanbenny"},"content":"     * to understand and use the application effectively.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Shamanbenny"},"content":"     * @return The String message for the printing of a detailed guide for all available commands.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Shamanbenny"},"content":"    public static String getHelp() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Shamanbenny"},"content":"        StringBuilder output \u003d new StringBuilder(\"\"\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Shamanbenny"},"content":"                [ Night Code Command Guide ]","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Shamanbenny"},"content":"                Need a hand? No problem! Here\u0027s what I can do for you:","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Shamanbenny"},"content":"                \"\"\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Shamanbenny"},"content":"        output.append(\"\\n\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Shamanbenny"},"content":"        for (CommandHelp cmd : CommandHelp.values()) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Shamanbenny"},"content":"            output.append(cmd.getSyntax()).append(\"\\n\").append(\"- \").append(cmd.getDescription()).append(\"\\n\\n\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Shamanbenny"},"content":"        output.append(\"Got it? Let\u0027s get back to work!\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Shamanbenny"},"content":"        return output.toString();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Shamanbenny"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"Shamanbenny":162}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Shamanbenny"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Shamanbenny"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Shamanbenny"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Shamanbenny"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Shamanbenny"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Shamanbenny"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"1000.0\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Shamanbenny"},"content":"         style\u003d\"-fx-background-color: #ADD8E6; \"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Shamanbenny"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/23.0.1\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Shamanbenny"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Shamanbenny"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Shamanbenny"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" maxWidth\u003d\"Infinity\"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Shamanbenny"},"content":"               style\u003d\"-fx-font-family: \u0027Monospaced\u0027; -fx-font-size: 14px; -fx-padding: 10px; \"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Shamanbenny"},"content":"               text\u003d\"Label\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Shamanbenny"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Shamanbenny"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Shamanbenny"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Shamanbenny"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Shamanbenny"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Shamanbenny"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false}],"authorContributionMap":{"Shamanbenny":21}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Shamanbenny"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Shamanbenny"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Shamanbenny"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Shamanbenny"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Shamanbenny"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Shamanbenny"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Shamanbenny"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"800.0\" prefWidth\u003d\"1000.0\" xmlns\u003d\"http://javafx.com/javafx/23.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"nightcoder.javafx.MainWindow\"\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Shamanbenny"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Shamanbenny"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"910.0\" AnchorPane.bottomAnchor\u003d\"5.0\" AnchorPane.leftAnchor\u003d\"5.0\" /\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Shamanbenny"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"524.0\" layoutY\u003d\"758.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"5.0\" AnchorPane.rightAnchor\u003d\"5.0\" /\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Shamanbenny"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"743.0\" prefWidth\u003d\"590.0\" vvalue\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"5.0\" AnchorPane.rightAnchor\u003d\"5.0\" AnchorPane.topAnchor\u003d\"5.0\"\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Shamanbenny"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Shamanbenny"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"738.0\" prefWidth\u003d\"975.0\" /\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Shamanbenny"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Shamanbenny"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Shamanbenny"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Shamanbenny"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false}],"authorContributionMap":{"Shamanbenny":19}},{"path":"src/test/java/nightcoder/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shamanbenny"},"content":"package nightcoder.storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Shamanbenny"},"content":"import nightcoder.task.Deadline;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Shamanbenny"},"content":"import nightcoder.task.Event;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Shamanbenny"},"content":"import nightcoder.task.Task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Shamanbenny"},"content":"import nightcoder.task.ToDo;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Shamanbenny"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Shamanbenny"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Shamanbenny"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Shamanbenny"},"content":"public class StorageTest {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Shamanbenny"},"content":"    private final Storage storage \u003d new Storage(\"\", \"\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Shamanbenny"},"content":"    @Test","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Shamanbenny"},"content":"    public void parseStringToTask_validToDoUsage_returnsTask() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Shamanbenny"},"content":"        // Scenario 1 - Incomplete Task","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Shamanbenny"},"content":"        Task task1 \u003d new ToDo(\"Running\", false);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Shamanbenny"},"content":"        Task task1Test \u003d this.storage.parseStringToTask(\"T|0|Running\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Shamanbenny"},"content":"        assertEquals(task1.getDescription(), task1Test.getDescription());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Shamanbenny"},"content":"        assertEquals(task1.isCompleted(), task1Test.isCompleted());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Shamanbenny"},"content":"        // Scenario 2 - Complete Task","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Shamanbenny"},"content":"        Task task2 \u003d new ToDo(\"Jogging Home\", true);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Shamanbenny"},"content":"        Task task2Test \u003d this.storage.parseStringToTask(\"T|1|Jogging Home\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Shamanbenny"},"content":"        assertEquals(task2.getDescription(), task2Test.getDescription());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Shamanbenny"},"content":"        assertEquals(task2.isCompleted(), task2Test.isCompleted());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Shamanbenny"},"content":"    @Test","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Shamanbenny"},"content":"    public void parseStringToTask_validDeadlineUsage_returnsTask() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Shamanbenny"},"content":"        // Scenario 1 - Incomplete Task","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Shamanbenny"},"content":"        Deadline task1 \u003d new Deadline(\"Submit Report\", false, \"2025-02-10\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Shamanbenny"},"content":"        Task task1Test \u003d this.storage.parseStringToTask(\"D|0|Submit Report|2025-02-10\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Shamanbenny"},"content":"        assertEquals(task1.getDescription(), task1Test.getDescription());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Shamanbenny"},"content":"        assertEquals(task1.isCompleted(), task1Test.isCompleted());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Shamanbenny"},"content":"        assertEquals(task1.getDueBy(), ((Deadline) task1Test).getDueBy());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Shamanbenny"},"content":"        // Scenario 2 - Complete Task","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Shamanbenny"},"content":"        Deadline task2 \u003d new Deadline(\"Finish Homework\", true, \"2025-02-15\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Shamanbenny"},"content":"        Task task2Test \u003d this.storage.parseStringToTask(\"D|1|Finish Homework|2025-02-15\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Shamanbenny"},"content":"        assertEquals(task2.getDescription(), task2Test.getDescription());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Shamanbenny"},"content":"        assertEquals(task2.isCompleted(), task2Test.isCompleted());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Shamanbenny"},"content":"        assertEquals(task2.getDueBy(), ((Deadline) task2Test).getDueBy());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Shamanbenny"},"content":"    @Test","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Shamanbenny"},"content":"    public void parseStringToTask_validEventUsage_returnsTask() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Shamanbenny"},"content":"        // Scenario 1 - Incomplete Task","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Shamanbenny"},"content":"        Event task1 \u003d new Event(\"Team Meeting\", false, \"2025-02-12 13:00\", \"2025-02-12 14:00\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Shamanbenny"},"content":"        Task task1Test \u003d this.storage.parseStringToTask(\"E|0|Team Meeting|2025-02-12 13:00|2025-02-12 14:00\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Shamanbenny"},"content":"        assertEquals(task1.getDescription(), task1Test.getDescription());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Shamanbenny"},"content":"        assertEquals(task1.isCompleted(), task1Test.isCompleted());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Shamanbenny"},"content":"        assertEquals(task1.getStartTime(), ((Event) task1Test).getStartTime());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Shamanbenny"},"content":"        assertEquals(task1.getEndTime(), ((Event) task1Test).getEndTime());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Shamanbenny"},"content":"        // Scenario 2 - Complete Task","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Shamanbenny"},"content":"        Event task2 \u003d new Event(\"Conference\", true, \"2025-03-01 09:00\", \"2025-03-01 10:00\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Shamanbenny"},"content":"        Task task2Test \u003d this.storage.parseStringToTask(\"E|1|Conference|2025-03-01 09:00|2025-03-01 10:00\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Shamanbenny"},"content":"        assertEquals(task2.getDescription(), task2Test.getDescription());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Shamanbenny"},"content":"        assertEquals(task2.isCompleted(), task2Test.isCompleted());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Shamanbenny"},"content":"        assertEquals(task2.getStartTime(), ((Event) task2Test).getStartTime());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Shamanbenny"},"content":"        assertEquals(task2.getEndTime(), ((Event) task2Test).getEndTime());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Shamanbenny"},"content":"    @Test","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Shamanbenny"},"content":"    public void parseStringToTask_invalidFormat_throwsException() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Shamanbenny"},"content":"        // Missing task type","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Shamanbenny"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e this.storage.parseStringToTask(\"|1|Todo without type\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Shamanbenny"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e this.storage.parseStringToTask(\"|1|Task without \"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Shamanbenny"},"content":"                + \"type|Tonight\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Shamanbenny"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e this.storage.parseStringToTask(\"|1|Task without \"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Shamanbenny"},"content":"                + \"type|2025-01-01 10:00|2025-01-01 12:00\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Shamanbenny"},"content":"        // Missing completion status","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Shamanbenny"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e this.storage.parseStringToTask(\"T||Missing completion\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Shamanbenny"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e this.storage.parseStringToTask(\"D||Missing completion\"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Shamanbenny"},"content":"                + \"|Tonight\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Shamanbenny"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e this.storage.parseStringToTask(\"E||Missing completion\"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Shamanbenny"},"content":"                + \"|2:00|4:00\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Shamanbenny"},"content":"        // Missing description","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Shamanbenny"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e this.storage.parseStringToTask(\"T|0|\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Shamanbenny"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e this.storage.parseStringToTask(\"D|0||Tonight\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Shamanbenny"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e this.storage.parseStringToTask(\"E|0||2:00|4:00\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Shamanbenny"},"content":"        // Completely empty string","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Shamanbenny"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e this.storage.parseStringToTask(\"\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Shamanbenny"},"content":"        // Only type provided","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Shamanbenny"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e this.storage.parseStringToTask(\"T\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Shamanbenny"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e this.storage.parseStringToTask(\"D\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Shamanbenny"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e this.storage.parseStringToTask(\"E\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Shamanbenny"},"content":"    @Test","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Shamanbenny"},"content":"    public void parseStringToTask_invalidTaskType_throwsException() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Shamanbenny"},"content":"        // Unrecognized task type","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Shamanbenny"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e this.storage.parseStringToTask(\"X|1|Unknown Type Task\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Shamanbenny"},"content":"    @Test","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Shamanbenny"},"content":"    public void parseStringToTask_invalidDeadlineFormat_throwsException() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Shamanbenny"},"content":"        // Missing deadline date","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Shamanbenny"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e this.storage.parseStringToTask(\"D|0|Missing Date\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Shamanbenny"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e this.storage.parseStringToTask(\"D|0|Missing Date|\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Shamanbenny"},"content":"        // Only type and status provided","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Shamanbenny"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e this.storage.parseStringToTask(\"D|1\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Shamanbenny"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e this.storage.parseStringToTask(\"D|1||\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Shamanbenny"},"content":"    @Test","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Shamanbenny"},"content":"    public void parseStringToTask_invalidEventFormat_throwsException() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Shamanbenny"},"content":"        // Missing start and/or end time","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Shamanbenny"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e this.storage.parseStringToTask(\"E|0|Incomplete Event\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Shamanbenny"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e this.storage.parseStringToTask(\"E|0|Incomplete Event|\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Shamanbenny"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e this.storage.parseStringToTask(\"E|0|Incomplete Event|\"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Shamanbenny"},"content":"                + \"2:00\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Shamanbenny"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e this.storage.parseStringToTask(\"E|0|Incomplete Event|\"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Shamanbenny"},"content":"                + \"2:00|\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Shamanbenny"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e this.storage.parseStringToTask(\"E|0|Incomplete Event||\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Shamanbenny"},"content":"        // Only type and status provided","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Shamanbenny"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e this.storage.parseStringToTask(\"E|1\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Shamanbenny"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e this.storage.parseStringToTask(\"E|1|||\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Shamanbenny"},"content":"    @Test","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Shamanbenny"},"content":"    public void parseStringToTask_invalidCompletionStatus_throwsException() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Shamanbenny"},"content":"        // Non-numeric completion status","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Shamanbenny"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e this.storage.parseStringToTask(\"T|X|Invalid Completion\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Shamanbenny"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e this.storage.parseStringToTask(\"D|X|Invalid Completion|\"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Shamanbenny"},"content":"                + \"2:00\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Shamanbenny"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e this.storage.parseStringToTask(\"E|X|Invalid Completion|\"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Shamanbenny"},"content":"                + \"2:00|4:00\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Shamanbenny"},"content":"        // Negative number as completion status","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Shamanbenny"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e this.storage.parseStringToTask(\"T|-1|Negative Completion\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Shamanbenny"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e this.storage.parseStringToTask(\"D|-1|Negative Completion|\"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Shamanbenny"},"content":"                + \"2:00\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Shamanbenny"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e this.storage.parseStringToTask(\"E|-1|Negative Completion|\"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Shamanbenny"},"content":"                + \"2:00|4:00\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Shamanbenny"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"Shamanbenny":145}},{"path":"src/test/java/nightcoder/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shamanbenny"},"content":"package nightcoder.task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Shamanbenny"},"content":"import nightcoder.storage.Storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Shamanbenny"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Shamanbenny"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Shamanbenny"},"content":"public class TaskListTest {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Shamanbenny"},"content":"    // Storage is instantiated but never used in the following tests","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Shamanbenny"},"content":"    private final TaskList taskList \u003d new TaskList(new Storage(\"\", \"\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Shamanbenny"},"content":"    @Test","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Shamanbenny"},"content":"    public void parseDate_all20thOfEachMonth_returnsFormattedDateString() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Shamanbenny"},"content":"        String[] expectedDates \u003d {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Shamanbenny"},"content":"            \"Jan 20 2025\", \"Feb 20 2025\", \"Mar 20 2025\", \"Apr 20 2025\",","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Shamanbenny"},"content":"            \"May 20 2025\", \"Jun 20 2025\", \"Jul 20 2025\", \"Aug 20 2025\",","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Shamanbenny"},"content":"            \"Sep 20 2025\", \"Oct 20 2025\", \"Nov 20 2025\", \"Dec 20 2025\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Shamanbenny"},"content":"        };","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Shamanbenny"},"content":"        for (int month \u003d 1; month \u003c\u003d 12; month++) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Shamanbenny"},"content":"            String inputDate \u003d String.format(\"2025-%02d-20\", month);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Shamanbenny"},"content":"            assertEquals(expectedDates[month - 1], this.taskList.parseDate(inputDate),","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Shamanbenny"},"content":"                    \"Failed at month: \" + month);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Shamanbenny"},"content":"    @Test","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Shamanbenny"},"content":"    public void parseDate_invalidDate_returnsInputString() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Shamanbenny"},"content":"        assertEquals(\"0000-00-00\", this.taskList.parseDate(\"0000-00-00\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Shamanbenny"},"content":"        assertEquals(\"2025-03-20 15:00\", this.taskList.parseDate(\"2025-03-20 15:00\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Shamanbenny"},"content":"        assertEquals(\"Tonight\", this.taskList.parseDate(\"Tonight\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Shamanbenny"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"Shamanbenny":33}}]
