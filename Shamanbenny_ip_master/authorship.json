[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Shamanbenny"},"content":"1. After that, locate the `src/main/java/nightcoder.NightCoder.java` file, right-click it, and choose `Run nightcoder.NightCoder.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Shamanbenny"},"content":"   ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Shamanbenny"},"content":"    /$$   /$$ /$$           /$$         /$$      /$$$$$$                  /$$                    ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Shamanbenny"},"content":"   | $$$ | $$|__/          | $$        | $$     /$$__  $$                | $$                    ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Shamanbenny"},"content":"   | $$$$| $$ /$$  /$$$$$$ | $$$$$$$  /$$$$$$  | $$  \\__/  /$$$$$$   /$$$$$$$  /$$$$$$   /$$$$$$ ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Shamanbenny"},"content":"   | $$ $$ $$| $$ /$$__  $$| $$__  $$|_  $$_/  | $$       /$$__  $$ /$$__  $$ /$$__  $$ /$$__  $$","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Shamanbenny"},"content":"   | $$  $$$$| $$| $$  \\ $$| $$  \\ $$  | $$    | $$      | $$  \\ $$| $$  | $$| $$$$$$$$| $$  \\__/","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Shamanbenny"},"content":"   | $$\\  $$$| $$| $$  | $$| $$  | $$  | $$ /$$| $$    $$| $$  | $$| $$  | $$| $$_____/| $$      ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Shamanbenny"},"content":"   | $$ \\  $$| $$|  $$$$$$$| $$  | $$  |  $$$$/|  $$$$$$/|  $$$$$$/|  $$$$$$$|  $$$$$$$| $$      ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Shamanbenny"},"content":"   |__/  \\__/|__/ \\____  $$|__/  |__/   \\___/   \\______/  \\______/  \\_______/ \\_______/|__/      ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Shamanbenny"},"content":"                  /$$  \\ $$                                                                      ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Shamanbenny"},"content":"                 |  $$$$$$/                                                                      ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Shamanbenny"},"content":"                  \\______/                                                                       ","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false}],"authorContributionMap":{"-":15,"Shamanbenny":15}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Shamanbenny"},"content":"# nightcoder.NightCoder User Guide","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Shamanbenny"},"content":"## Welcome to nightcoder.NightCoder","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Shamanbenny"},"content":"nightcoder.NightCoder is your playful and motivational coding companion for late-night sessions. With a vibrant personality and powerful task management features, nightcoder.NightCoder is here to keep you organized, inspired, and focused.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Shamanbenny"},"content":"---","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Shamanbenny"},"content":"## Features Overview","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Shamanbenny"},"content":"### Getting Help","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Shamanbenny"},"content":"Access a quick reference guide for all available commands.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Shamanbenny"},"content":"**Command Syntax:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Shamanbenny"},"content":"help","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Shamanbenny"},"content":"**Example:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Shamanbenny"},"content":"help","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Shamanbenny"},"content":"**Expected Outcome:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Shamanbenny"},"content":"\t[ Night Code Command Guide ]","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Shamanbenny"},"content":"\tNeed a hand? No problem! Here\u0027s what I can do for you:","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Shamanbenny"},"content":"\t    help","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Shamanbenny"},"content":"\t    - Prints this handy guide. Because even pros need reminders sometimes.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Shamanbenny"},"content":"\t    ...","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Shamanbenny"},"content":"---","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Shamanbenny"},"content":"### Adding To-Dos","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Shamanbenny"},"content":"nightcoder.NightCoder lets you quickly add tasks to your to-do list, ensuring you don\u0027t forget important tasks during your coding adventures.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Shamanbenny"},"content":"**Command Syntax:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Shamanbenny"},"content":"todo \u003ctask description\u003e","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Shamanbenny"},"content":"**Example:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Shamanbenny"},"content":"todo Finish the project report","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Shamanbenny"},"content":"**Expected Outcome:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Shamanbenny"},"content":"\t[ nightcoder.task.Task #1 Added: Finish the project report ]","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Shamanbenny"},"content":"\tGot it! I\u0027ll keep this safe in your to-do list. Let me know what\u0027s next!","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Shamanbenny"},"content":"---","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Shamanbenny"},"content":"### Adding Deadlines","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Shamanbenny"},"content":"Keep track of time-sensitive tasks by adding deadlines.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Shamanbenny"},"content":"**Command Syntax:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Shamanbenny"},"content":"deadline \u003ctask description\u003e /by \u003cdue date and time\u003e","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Shamanbenny"},"content":"**Example:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Shamanbenny"},"content":"deadline Submit assignment /by 2025-01-30 23:59","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Shamanbenny"},"content":"**Expected Outcome:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Shamanbenny"},"content":"\t[ nightcoder.task.Task #2 Added: Submit assignment ]","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Shamanbenny"},"content":"\tGot it! I\u0027ll keep this safe in your to-do list. Let me know what\u0027s next!","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Shamanbenny"},"content":"---","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Shamanbenny"},"content":"### Adding Events","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Shamanbenny"},"content":"Schedule events with specific start and end times to manage your calendar effectively.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Shamanbenny"},"content":"**Command Syntax:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Shamanbenny"},"content":"event \u003cevent description\u003e /from \u003cstart time\u003e /to \u003cend time\u003e","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Shamanbenny"},"content":"**Example:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Shamanbenny"},"content":"event Team meeting /from 2025-01-21 3:00 PM /to 2025-01-21 4:00 PM","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Shamanbenny"},"content":"**Expected Outcome:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Shamanbenny"},"content":"\t[ nightcoder.task.Task #3 Added: Team meeting ]","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Shamanbenny"},"content":"\tGot it! I\u0027ll keep this safe in your to-do list. Let me know what\u0027s next!","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Shamanbenny"},"content":"---","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Shamanbenny"},"content":"### Viewing Your To-Do List","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Shamanbenny"},"content":"Get an overview of your tasks, including their completion status and descriptions.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Shamanbenny"},"content":"**Command Syntax:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Shamanbenny"},"content":"**Example:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Shamanbenny"},"content":"**Expected Outcome:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Shamanbenny"},"content":"\t1. [T][ ] Finish the project report","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Shamanbenny"},"content":"\t2. [D][ ] Submit assignment (by: 2025-01-30 23:59)","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Shamanbenny"},"content":"\t3. [E][ ] Team meeting (from: 2025-01-21 3:00 PM to: 2025-01-21 4:00 PM)","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Shamanbenny"},"content":"---","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Shamanbenny"},"content":"### Marking Tasks as Complete","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Shamanbenny"},"content":"Track your progress by marking tasks as completed.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Shamanbenny"},"content":"**Command Syntax:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Shamanbenny"},"content":"mark \u003ctask number\u003e","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Shamanbenny"},"content":"**Example:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Shamanbenny"},"content":"mark 1","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Shamanbenny"},"content":"**Expected Outcome:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Shamanbenny"},"content":"\t[ nightcoder.task.Task Marked as Complete! ]","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Shamanbenny"},"content":"\tGreat job! nightcoder.task.Task \"Finish the project report\" is now marked as done. On to the next one!","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Shamanbenny"},"content":"---","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Shamanbenny"},"content":"### Marking Tasks as Incomplete","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Shamanbenny"},"content":"Need to revisit a task? Mark it as incomplete.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Shamanbenny"},"content":"**Command Syntax:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Shamanbenny"},"content":"unmark \u003ctask number\u003e","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Shamanbenny"},"content":"**Example:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Shamanbenny"},"content":"unmark 1","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Shamanbenny"},"content":"**Expected Outcome:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Shamanbenny"},"content":"\t[ nightcoder.task.Task Marked as Incomplete! ]","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Shamanbenny"},"content":"\tGot it! nightcoder.task.Task \"Finish the project report\" is back on your to-do list. Let\u0027s tackle it when you\u0027re ready!","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Shamanbenny"},"content":"---","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Shamanbenny"},"content":"### Deleting Tasks","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Shamanbenny"},"content":"Clean up your to-do list by deleting tasks you no longer need.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Shamanbenny"},"content":"**Command Syntax:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Shamanbenny"},"content":"delete \u003ctask number\u003e","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Shamanbenny"},"content":"**Example:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Shamanbenny"},"content":"delete 2","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Shamanbenny"},"content":"**Expected Outcome:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Shamanbenny"},"content":"\t[ nightcoder.task.Task Deleted! ]","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Shamanbenny"},"content":"\tnightcoder.task.Task \"Submit assignment\" has been removed from your list. Poof, it\u0027s gone! Let me know if there\u0027s anything else to tidy up.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Shamanbenny"},"content":"---","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Shamanbenny"},"content":"### Exiting nightcoder.NightCoder","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Shamanbenny"},"content":"Wrap up your session and exit nightcoder.NightCoder gracefully.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Shamanbenny"},"content":"**Command Syntax:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Shamanbenny"},"content":"bye","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Shamanbenny"},"content":"**Example:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Shamanbenny"},"content":"bye","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Shamanbenny"},"content":"**Expected Outcome:**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Shamanbenny"},"content":"\tAlright, signing off for now. Remember, even the brightest coders need some rest...","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Shamanbenny"},"content":"\tGoodnight, and happy coding!","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Shamanbenny"},"content":"\tPowering Down...","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Shamanbenny"},"content":"```","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Shamanbenny"},"content":"---","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Shamanbenny"},"content":"## Summary","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Shamanbenny"},"content":"nightcoder.NightCoder simplifies task management while keeping your coding spirits high. Whether you\u0027re organizing deadlines or clearing your to-do list, nightcoder.NightCoder is always here to assist. Happy coding!","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"-":16,"Shamanbenny":191}},{"path":"src/main/java/nightcoder/NightCoder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shamanbenny"},"content":"package nightcoder;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Shamanbenny"},"content":"import nightcoder.parser.Parser;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Shamanbenny"},"content":"import nightcoder.storage.Storage;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Shamanbenny"},"content":"import nightcoder.task.TaskList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Shamanbenny"},"content":"import nightcoder.ui.Ui;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Shamanbenny"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Shamanbenny"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Shamanbenny"},"content":" * A playful and motivational chatbot assistant for late-night coding sessions.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Shamanbenny"},"content":" *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Shamanbenny"},"content":" * @author ShamanBenny","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Shamanbenny"},"content":" * @version 8.1","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Shamanbenny"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Shamanbenny"},"content":"public class NightCoder {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Shamanbenny"},"content":"    private static final String DATA_FOLDER \u003d \"data\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Shamanbenny"},"content":"    private static final String TASKS_FILE \u003d \"tasks.txt\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Shamanbenny"},"content":"    private static Parser parser;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Shamanbenny"},"content":"    private static final Storage STORAGE \u003d new Storage(NightCoder.DATA_FOLDER, NightCoder.TASKS_FILE);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Shamanbenny"},"content":"    private static final TaskList TASKS \u003d new TaskList(NightCoder.STORAGE);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Shamanbenny"},"content":"     * The main entry point of the program. Initializes the application, loads tasks from storage,","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Shamanbenny"},"content":"     * and starts the user input loop until termination.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Shamanbenny"},"content":"     * @param args Command-line arguments (not used in this application).","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Shamanbenny"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Shamanbenny"},"content":"        Ui.printWelcome();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Shamanbenny"},"content":"        NightCoder.TASKS.loadTasks();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Shamanbenny"},"content":"        try (Scanner scannerInstance \u003d new Scanner(System.in)) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Shamanbenny"},"content":"            NightCoder.parser \u003d new Parser(scannerInstance, NightCoder.STORAGE, NightCoder.TASKS);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Shamanbenny"},"content":"            while (true) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Shamanbenny"},"content":"                if (!NightCoder.parser.getUserInput()) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Shamanbenny"},"content":"                    break;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Shamanbenny"},"content":"                }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Shamanbenny"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Shamanbenny"},"content":"        NightCoder.TASKS.saveTasks();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Shamanbenny"},"content":"        Ui.printExit();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Shamanbenny"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"Shamanbenny":43}},{"path":"src/main/java/nightcoder/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shamanbenny"},"content":"package nightcoder.parser;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Shamanbenny"},"content":"import nightcoder.storage.Storage;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Shamanbenny"},"content":"import nightcoder.task.Task;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Shamanbenny"},"content":"import nightcoder.task.TaskList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Shamanbenny"},"content":"import nightcoder.ui.Ui;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Shamanbenny"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Shamanbenny"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Shamanbenny"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Shamanbenny"},"content":" * Handles user input, processes commands, and manages task-related operations.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Shamanbenny"},"content":" *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Shamanbenny"},"content":" * @author ShamanBenny","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Shamanbenny"},"content":" * @version 8.1","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Shamanbenny"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Shamanbenny"},"content":"public class Parser {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Shamanbenny"},"content":"    private final Scanner SCANNER;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Shamanbenny"},"content":"    private final Storage STORAGE;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Shamanbenny"},"content":"    private final TaskList TASKS;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Shamanbenny"},"content":"     * Constructs a {@code nightcoder.parser.Parser} with the necessary dependencies.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Shamanbenny"},"content":"     * @param scanner The {@code Scanner} instance to read user input.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Shamanbenny"},"content":"     * @param storage The {@code nightcoder.storage.Storage} instance to handle task persistence.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Shamanbenny"},"content":"     * @param tasks   The {@code nightcoder.task.TaskList} containing the list of tasks.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Shamanbenny"},"content":"    public Parser(Scanner scanner, Storage storage, TaskList tasks) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Shamanbenny"},"content":"        this.SCANNER \u003d scanner;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Shamanbenny"},"content":"        this.STORAGE \u003d storage;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Shamanbenny"},"content":"        this.TASKS \u003d tasks;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Shamanbenny"},"content":"     * Reads user input from the console and processes it as a command.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Shamanbenny"},"content":"     * If the input is \"bye\" (case-insensitive), the method exits the loop by returning false.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Shamanbenny"},"content":"     * Otherwise, it passes the input to {@link #parseCommand(String)} for further processing.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Shamanbenny"},"content":"     * @return {@code false} if the input is \"bye\", {@code true} otherwise.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Shamanbenny"},"content":"    public boolean getUserInput() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Shamanbenny"},"content":"        String userInput \u003d this.SCANNER.nextLine().trim(); // Trim to remove extra spaces","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Shamanbenny"},"content":"        if (\"bye\".equalsIgnoreCase(userInput)) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Shamanbenny"},"content":"            return false; // Return false if the input is \"bye\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Shamanbenny"},"content":"        this.parseCommand(userInput);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Shamanbenny"},"content":"        return true; // Return true for other inputs","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Shamanbenny"},"content":"     * Parses the user input and executes the corresponding command.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Shamanbenny"},"content":"     * @param input The full user input string to be parsed and processed.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Shamanbenny"},"content":"    private void parseCommand(String input) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Shamanbenny"},"content":"        System.out.println(Ui.LINE_BREAK);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Shamanbenny"},"content":"        String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Shamanbenny"},"content":"        String command \u003d parts[0].toLowerCase();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Shamanbenny"},"content":"        // The switch structure is retained for clarity and readability. Each case acts as a self-contained command","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Shamanbenny"},"content":"        // handler, making the code easy to navigate without needing separate function calls for every command.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Shamanbenny"},"content":"        switch (command) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Shamanbenny"},"content":"        case \"help\":","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Shamanbenny"},"content":"            Ui.printHelp();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Shamanbenny"},"content":"            break;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Shamanbenny"},"content":"        case \"todo\":","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Shamanbenny"},"content":"            if (parts.length !\u003d 2) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Shamanbenny"},"content":"                Ui.printInvalidUsage(\"todo\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Shamanbenny"},"content":"                break;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Shamanbenny"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Shamanbenny"},"content":"            String todoParams \u003d parts[1];","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Shamanbenny"},"content":"            this.TASKS.addToDo(todoParams);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Shamanbenny"},"content":"            break;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Shamanbenny"},"content":"        case \"deadline\":","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Shamanbenny"},"content":"            if (parts.length !\u003d 2) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Shamanbenny"},"content":"                Ui.printInvalidUsage(\"deadline\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Shamanbenny"},"content":"                break;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Shamanbenny"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Shamanbenny"},"content":"            String deadlineParams \u003d parts[1];","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Shamanbenny"},"content":"            if (!deadlineParams.contains(\" /by \")) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Shamanbenny"},"content":"                // Missing \"/by\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Shamanbenny"},"content":"                Ui.printInvalidUsage(\"deadline\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Shamanbenny"},"content":"                break;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Shamanbenny"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Shamanbenny"},"content":"            String[] deadlineParts \u003d deadlineParams.split(\" /by \", 2);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Shamanbenny"},"content":"            if (deadlineParts.length \u003c 2 || deadlineParts[1].isEmpty()) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Shamanbenny"},"content":"                // Missing details for task description, \"/by\", or empty \"/by\" details.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Shamanbenny"},"content":"                Ui.printInvalidUsage(\"deadline\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Shamanbenny"},"content":"                break;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Shamanbenny"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Shamanbenny"},"content":"            // Correct Usage from here...","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Shamanbenny"},"content":"            String deadlineDescription \u003d deadlineParts[0];","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Shamanbenny"},"content":"            String deadlineBy \u003d deadlineParts[1];","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Shamanbenny"},"content":"            this.TASKS.addDeadline(deadlineDescription, deadlineBy);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Shamanbenny"},"content":"            break;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Shamanbenny"},"content":"        case \"event\":","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Shamanbenny"},"content":"            if (parts.length !\u003d 2) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Shamanbenny"},"content":"                Ui.printInvalidUsage(\"event\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Shamanbenny"},"content":"                break;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Shamanbenny"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Shamanbenny"},"content":"            String eventParams \u003d parts[1];","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Shamanbenny"},"content":"            if (!eventParams.contains(\" /from \") || !eventParams.contains(\" /to \")) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Shamanbenny"},"content":"                // Missing \"/from\" or \"/to\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Shamanbenny"},"content":"                Ui.printInvalidUsage(\"event\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Shamanbenny"},"content":"                break;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Shamanbenny"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Shamanbenny"},"content":"            int fromIdx \u003d eventParams.indexOf(\" /from \");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Shamanbenny"},"content":"            int toIdx \u003d eventParams.indexOf(\" /to \");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Shamanbenny"},"content":"            String eventDescription \u003d eventParams.split(\" /from | /to \", 2)[0];","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Shamanbenny"},"content":"            String fromParams \u003d \"\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Shamanbenny"},"content":"            String toParams \u003d \"\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Shamanbenny"},"content":"            if (fromIdx \u003c toIdx) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Shamanbenny"},"content":"                fromParams \u003d eventParams.substring(fromIdx + 7, toIdx);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Shamanbenny"},"content":"                toParams \u003d eventParams.substring(toIdx + 5);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Shamanbenny"},"content":"            } else {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Shamanbenny"},"content":"                fromParams \u003d eventParams.substring(fromIdx + 7);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Shamanbenny"},"content":"                toParams \u003d eventParams.substring(toIdx + 5, fromIdx);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Shamanbenny"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Shamanbenny"},"content":"            if (eventDescription.isEmpty() || fromParams.isEmpty() || toParams.isEmpty()) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Shamanbenny"},"content":"                Ui.printInvalidUsage(\"event\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Shamanbenny"},"content":"                break;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Shamanbenny"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Shamanbenny"},"content":"            // Correct Usage from here...","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Shamanbenny"},"content":"            this.TASKS.addEvent(eventDescription, fromParams, toParams);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Shamanbenny"},"content":"            break;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Shamanbenny"},"content":"        case \"list\":","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Shamanbenny"},"content":"            this.TASKS.listTasks();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Shamanbenny"},"content":"            break;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Shamanbenny"},"content":"        case \"mark\":","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Shamanbenny"},"content":"            if (parts.length !\u003d 2) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Shamanbenny"},"content":"                Ui.printInvalidUsage(\"mark\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Shamanbenny"},"content":"                break;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Shamanbenny"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Shamanbenny"},"content":"            try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Shamanbenny"},"content":"                // Attempt to parse the task ID","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Shamanbenny"},"content":"                int markId \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Shamanbenny"},"content":"                setCompleted(markId, true);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Shamanbenny"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Shamanbenny"},"content":"                // Handle invalid input for task ID","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Shamanbenny"},"content":"                Ui.printInvalidNumberInput(\"mark\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Shamanbenny"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Shamanbenny"},"content":"            break;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Shamanbenny"},"content":"        case \"unmark\":","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Shamanbenny"},"content":"            if (parts.length !\u003d 2) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Shamanbenny"},"content":"                Ui.printInvalidUsage(\"unmark\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Shamanbenny"},"content":"                break;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Shamanbenny"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Shamanbenny"},"content":"            try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Shamanbenny"},"content":"                // Attempt to parse the task ID","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Shamanbenny"},"content":"                int unmarkId \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Shamanbenny"},"content":"                setCompleted(unmarkId, false);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Shamanbenny"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Shamanbenny"},"content":"                // Handle invalid input for task ID","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Shamanbenny"},"content":"                Ui.printInvalidNumberInput(\"unmark\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Shamanbenny"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Shamanbenny"},"content":"            break;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Shamanbenny"},"content":"        case \"delete\":","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Shamanbenny"},"content":"            if (parts.length !\u003d 2) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Shamanbenny"},"content":"                Ui.printInvalidUsage(\"delete\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Shamanbenny"},"content":"                break;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Shamanbenny"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Shamanbenny"},"content":"            try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Shamanbenny"},"content":"                // Attempt to parse the task ID","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Shamanbenny"},"content":"                int deleteId \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Shamanbenny"},"content":"                deleteTask(deleteId);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Shamanbenny"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Shamanbenny"},"content":"                // Handle invalid input for task ID","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Shamanbenny"},"content":"                Ui.printInvalidNumberInput(\"delete\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Shamanbenny"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Shamanbenny"},"content":"            break;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Shamanbenny"},"content":"        default:","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Shamanbenny"},"content":"            System.out.println(\"\"\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Shamanbenny"},"content":"                    \\t[ Oops! ]","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Shamanbenny"},"content":"                    \\tI didn\u0027t catch that. Type \"help\" to see the list of commands I understand.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Shamanbenny"},"content":"                    \\tLet\u0027s get back on track!\"\"\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Shamanbenny"},"content":"        System.out.println(Ui.LINE_BREAK + \"\\n\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Shamanbenny"},"content":"     * Updates the completion status of a task in the to-do list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Shamanbenny"},"content":"     * Marks a specified task as completed or incomplete based on the given parameters.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Shamanbenny"},"content":"     * If the provided index is invalid (not in the range of the task list), it displays an error message.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Shamanbenny"},"content":"     * If the task selected is already set as it should, it also displays an error message.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Shamanbenny"},"content":"     * @param idx The 1-based index of the task in the list to update.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Shamanbenny"},"content":"     * @param completed {@code true} if the task is completed, {@code false} otherwise.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Shamanbenny"},"content":"    private void setCompleted(int idx, boolean completed) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Shamanbenny"},"content":"        // Edge-Case [\u0027idx\u0027 out of bounds]","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Shamanbenny"},"content":"        if (idx \u003e this.TASKS.size() || idx \u003c 1) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Shamanbenny"},"content":"            System.out.println(\"\"\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Shamanbenny"},"content":"                    \\t[ Invalid Task Number! ]","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Shamanbenny"},"content":"                    \\tHmm, that number doesn\u0027t match any tasks on your list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Shamanbenny"},"content":"                    \\tDouble-check your task list with \"list\", and try again!\"\"\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Shamanbenny"},"content":"            return;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Shamanbenny"},"content":"        // idx is originally 1-indexed [Therefore minus 1 to access 0-indexed ListArray]","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Shamanbenny"},"content":"        Task task \u003d this.TASKS.get(idx - 1);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Shamanbenny"},"content":"        if (task.isCompleted() \u003d\u003d completed) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Shamanbenny"},"content":"            // Edge-Case [\u0027task\u0027 is already set as complete/incomplete]","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Shamanbenny"},"content":"            if (completed) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Shamanbenny"},"content":"                System.out.println(\"\\t[ Task Already Complete! ]\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Shamanbenny"},"content":"                System.out.println(\"\\tLooks like task \\\"\" + task.getDescription() + \"\\\" is already marked as done. \" +","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Shamanbenny"},"content":"                        \"You\u0027re ahead of the game!\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Shamanbenny"},"content":"            } else {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Shamanbenny"},"content":"                System.out.println(\"\\t[ Task Already Incomplete ]!\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Shamanbenny"},"content":"                System.out.println(\"\\tTask \\\"\" + task.getDescription() + \"\\\" is already on your to-do list. \" +","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Shamanbenny"},"content":"                        \"No need to unmark it again!\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Shamanbenny"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Shamanbenny"},"content":"        } else {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Shamanbenny"},"content":"            task.setCompleted(completed);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Shamanbenny"},"content":"            try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Shamanbenny"},"content":"                this.STORAGE.setCompleted(idx - 1, completed); // Convert to zero-based index","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Shamanbenny"},"content":"                if (completed) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Shamanbenny"},"content":"                    System.out.println(\"\\t[ Task Marked as Complete! ]\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Shamanbenny"},"content":"                    System.out.println(\"\\tGreat job! Task \\\"\" + task.getDescription() + \"\\\" is now marked as done. \" +","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Shamanbenny"},"content":"                            \"On to the next one!\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Shamanbenny"},"content":"                } else {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Shamanbenny"},"content":"                    System.out.println(\"\\t[ Task Marked as Incomplete! ]\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Shamanbenny"},"content":"                    System.out.println(\"\\tGot it! Task \\\"\" + task.getDescription() + \"\\\" is back on your to-do list. \" +","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Shamanbenny"},"content":"                            \"Let\u0027s tackle it when you\u0027re ready!\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Shamanbenny"},"content":"                }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Shamanbenny"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Shamanbenny"},"content":"                if (completed) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Shamanbenny"},"content":"                    System.out.println(\"\\t[ Task Marked as Complete! ]\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Shamanbenny"},"content":"                } else {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Shamanbenny"},"content":"                    System.out.println(\"\\t[ Task Marked as Incomplete! ]\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Shamanbenny"},"content":"                }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Shamanbenny"},"content":"                Ui.printErrorUpdatingTasksFile(e);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Shamanbenny"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Shamanbenny"},"content":"     * Deletes a task from the to-do list based on its 1-based index.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Shamanbenny"},"content":"     * This method removes a task from the task list if the specified index is valid.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Shamanbenny"},"content":"     * If the index is out of bounds, an error message is displayed, and no task is deleted.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"Shamanbenny"},"content":"     * @param idx The 1-based index of the task in the list to delete.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Shamanbenny"},"content":"    private void deleteTask(int idx) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Shamanbenny"},"content":"        // Edge-Case [\u0027idx\u0027 out of bounds]","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Shamanbenny"},"content":"        if (idx \u003e this.TASKS.size() || idx \u003c 1) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Shamanbenny"},"content":"            System.out.println(\"\"\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Shamanbenny"},"content":"                    \\t[ Invalid Task Number! ]","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Shamanbenny"},"content":"                    \\tHmm, that number doesn\u0027t match any tasks on your list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Shamanbenny"},"content":"                    \\tDouble-check your task list with \"list\", and try again!\"\"\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Shamanbenny"},"content":"            return;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Shamanbenny"},"content":"        // idx is originally 1-indexed [Therefore minus 1 to access 0-indexed ListArray]","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Shamanbenny"},"content":"        Task task \u003d this.TASKS.remove(idx - 1);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"Shamanbenny"},"content":"        try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"Shamanbenny"},"content":"            this.STORAGE.deleteTask(idx - 1);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"Shamanbenny"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"Shamanbenny"},"content":"            System.out.println(\"\\t[ Task Deleted! ]\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"Shamanbenny"},"content":"            Ui.printErrorUpdatingTasksFile(e);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"Shamanbenny"},"content":"        System.out.println(\"\\t[ Task Deleted! ]\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"Shamanbenny"},"content":"        System.out.println(\"\\tTask \\\"\" + task.getDescription() + \"\\\" has been removed from your list. \" +","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"Shamanbenny"},"content":"                \"Poof, it\u0027s gone! Let me know if there\u0027s anything else to tidy up.\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"Shamanbenny"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"Shamanbenny":268}},{"path":"src/main/java/nightcoder/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shamanbenny"},"content":"package nightcoder.storage;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Shamanbenny"},"content":"import nightcoder.task.Deadline;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Shamanbenny"},"content":"import nightcoder.task.Event;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Shamanbenny"},"content":"import nightcoder.task.Task;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Shamanbenny"},"content":"import nightcoder.task.ToDo;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Shamanbenny"},"content":"import nightcoder.ui.Ui;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Shamanbenny"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Shamanbenny"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Shamanbenny"},"content":"import java.io.File;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Shamanbenny"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Shamanbenny"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Shamanbenny"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Shamanbenny"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Shamanbenny"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Shamanbenny"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Shamanbenny"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Shamanbenny"},"content":" * Handles the reading and writing of task data to a file.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Shamanbenny"},"content":" * This class manages loading, saving, updating, and deleting tasks","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Shamanbenny"},"content":" * from a persistent storage file.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Shamanbenny"},"content":" *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Shamanbenny"},"content":" * @author ShamanBenny","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Shamanbenny"},"content":" * @version 8.1","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Shamanbenny"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Shamanbenny"},"content":"public class Storage {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Shamanbenny"},"content":"    private final String DATA_FOLDER;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Shamanbenny"},"content":"    private final String TASKS_FILE;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Shamanbenny"},"content":"     * Constructs a {@code nightcoder.storage.Storage} instance for managing tasks in the specified folder and file.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Shamanbenny"},"content":"     * @param folder   The directory where task data is stored.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Shamanbenny"},"content":"     * @param filename The name of the file containing task data.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Shamanbenny"},"content":"    public Storage(String folder, String filename) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Shamanbenny"},"content":"        this.DATA_FOLDER \u003d folder;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Shamanbenny"},"content":"        this.TASKS_FILE \u003d filename;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Shamanbenny"},"content":"     * Reads all lines from the file and returns them as a list of Strings.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Shamanbenny"},"content":"     * @return An {@code ArrayList} containing all task entries from the file.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Shamanbenny"},"content":"     * Returns an empty list if the file does not exist or an error occurs.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Shamanbenny"},"content":"    public ArrayList\u003cString\u003e readLines() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Shamanbenny"},"content":"        File file \u003d new File(this.DATA_FOLDER + \"/\" + this.TASKS_FILE);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Shamanbenny"},"content":"        // Check if file exists, if not, simply return empty ArrayList\u003cString\u003e","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Shamanbenny"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Shamanbenny"},"content":"            return new ArrayList\u003cString\u003e();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Shamanbenny"},"content":"        // Read all lines into an ArrayList","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Shamanbenny"},"content":"        ArrayList\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Shamanbenny"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Shamanbenny"},"content":"            String line;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Shamanbenny"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Shamanbenny"},"content":"                lines.add(line);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Shamanbenny"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Shamanbenny"},"content":"            return lines;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Shamanbenny"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Shamanbenny"},"content":"            Ui.printIndentedLine(\"[ ERROR ] Error reading tasks file: \" + e.getMessage());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Shamanbenny"},"content":"            return new ArrayList\u003cString\u003e();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Shamanbenny"},"content":"     * Loads tasks from the file and converts them into {@code nightcoder.task.Task} objects.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Shamanbenny"},"content":"     * @return An {@code ArrayList} of {@code nightcoder.task.Task} objects representing previously saved tasks.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Shamanbenny"},"content":"    public ArrayList\u003cTask\u003e loadTasks() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Shamanbenny"},"content":"        ArrayList\u003cString\u003e lines \u003d this.readLines();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Shamanbenny"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Shamanbenny"},"content":"        for (String line : lines) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Shamanbenny"},"content":"            try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Shamanbenny"},"content":"                tasks.add(parseStringToTask(line));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Shamanbenny"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Shamanbenny"},"content":"                Ui.printIndentedLine(\"[ ERROR ] \" + e.getMessage());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Shamanbenny"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Shamanbenny"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Shamanbenny"},"content":"            Ui.printIndentedLine(\"[ INFO ] No previous task data found. Starting fresh!\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Shamanbenny"},"content":"        } else {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Shamanbenny"},"content":"            Ui.printIndentedLine(\"[ INFO ] Tasks loaded successfully from previous sessions!\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Shamanbenny"},"content":"        System.out.println(Ui.LINE_BREAK + \"\\n\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Shamanbenny"},"content":"        return tasks;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Shamanbenny"},"content":"     * Parses a task entry from a formatted string and creates a {@code nightcoder.task.Task} object.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Shamanbenny"},"content":"     * @param line The string containing task details in the format: Type|Completed|Description|[Additional Data].","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Shamanbenny"},"content":"     * @return A {@code nightcoder.task.Task} object parsed from the string.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Shamanbenny"},"content":"     * @throws IllegalArgumentException If the format is invalid or missing required fields.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Shamanbenny"},"content":"    public Task parseStringToTask(String line) throws IllegalArgumentException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Shamanbenny"},"content":"        String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Shamanbenny"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Shamanbenny"},"content":"            throw new IllegalArgumentException(\"Invalid task format detected: \" + line);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Shamanbenny"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Shamanbenny"},"content":"        boolean isCompleted \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Shamanbenny"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Shamanbenny"},"content":"        return switch (type) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Shamanbenny"},"content":"            case \"T\" -\u003e new ToDo(description, isCompleted);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Shamanbenny"},"content":"            case \"D\" -\u003e {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Shamanbenny"},"content":"                if (parts.length \u003c 4) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Shamanbenny"},"content":"                    throw new IllegalArgumentException(\"Invalid task format detected: \" + line);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Shamanbenny"},"content":"                }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Shamanbenny"},"content":"                yield new Deadline(description, isCompleted, parts[3]);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Shamanbenny"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Shamanbenny"},"content":"            case \"E\" -\u003e {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Shamanbenny"},"content":"                if (parts.length \u003c 5) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Shamanbenny"},"content":"                    throw new IllegalArgumentException(\"Invalid task format detected: \" + line);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Shamanbenny"},"content":"                }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Shamanbenny"},"content":"                yield new Event(description, isCompleted, parts[3], parts[4]);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Shamanbenny"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Shamanbenny"},"content":"            default -\u003e throw new IllegalArgumentException(\"Invalid task format detected: \" + line);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Shamanbenny"},"content":"        };","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Shamanbenny"},"content":"     * Deletes a task from the tasks file based on the given index.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Shamanbenny"},"content":"     * @param idx The 0-based index of the task to be deleted.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Shamanbenny"},"content":"     * @throws IOException If an I/O error occurs while modifying the file or if the index is out of bounds.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Shamanbenny"},"content":"    public void deleteTask(int idx) throws IOException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Shamanbenny"},"content":"        ArrayList\u003cString\u003e lines \u003d this.readLines();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Shamanbenny"},"content":"        // Edge case: Ensure the index is within bounds","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Shamanbenny"},"content":"        if (idx \u003c 0 || idx \u003e\u003d lines.size()) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Shamanbenny"},"content":"            throw new IOException(\"Task index out of bounds for file update\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Shamanbenny"},"content":"        // Remove the line containing the indexed task","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Shamanbenny"},"content":"        lines.remove(idx);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Shamanbenny"},"content":"        this.writeLines(lines);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Shamanbenny"},"content":"     * Updates the completion status of a task in the tasks file.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Shamanbenny"},"content":"     * @param idx The 0-based index of the task to be updated.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Shamanbenny"},"content":"     * @param completed {@code true} if the task is completed, {@code false} otherwise.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Shamanbenny"},"content":"     * @throws IOException If an I/O error occurs while updating the file.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Shamanbenny"},"content":"    public void setCompleted(int idx, boolean completed) throws IOException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Shamanbenny"},"content":"        ArrayList\u003cString\u003e lines \u003d this.readLines();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Shamanbenny"},"content":"        // Edge case: Ensure the index is within bounds","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Shamanbenny"},"content":"        if (idx \u003c 0 || idx \u003e\u003d lines.size()) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Shamanbenny"},"content":"            throw new IOException(\"Task index out of bounds for file update\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Shamanbenny"},"content":"        // Modify the target line","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Shamanbenny"},"content":"        String[] parts \u003d lines.get(idx).split(\"\\\\|\"); // Split into max 3 parts to keep description as-is","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Shamanbenny"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Shamanbenny"},"content":"            throw new IOException(\"Corrupted task entry in file\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Shamanbenny"},"content":"        parts[1] \u003d completed ? \"1\" : \"0\"; // Update completion status","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Shamanbenny"},"content":"        lines.set(idx, String.join(\"|\", parts)); // Reconstruct the line","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Shamanbenny"},"content":"        this.writeLines(lines);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Shamanbenny"},"content":"     * Appends a task entry to the tasks file.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Shamanbenny"},"content":"     * @param dataLine The task entry in string format to be added.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Shamanbenny"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Shamanbenny"},"content":"    public void appendTask(String dataLine) throws IOException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Shamanbenny"},"content":"        // Ensure the directory exists","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Shamanbenny"},"content":"        Files.createDirectories(Paths.get(this.DATA_FOLDER));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Shamanbenny"},"content":"        // Create the file if it does not exist","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Shamanbenny"},"content":"        File file \u003d new File(this.DATA_FOLDER + \"/\" + this.TASKS_FILE);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Shamanbenny"},"content":"        if (!file.exists() \u0026\u0026 !file.createNewFile()) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Shamanbenny"},"content":"            throw new IOException(\"Failed to create tasks file\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Shamanbenny"},"content":"        // Append the data to the file","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Shamanbenny"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file, true))) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Shamanbenny"},"content":"            writer.write(dataLine);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Shamanbenny"},"content":"            writer.newLine(); // Ensure the new line is properly added","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Shamanbenny"},"content":"     * Writes a list of task entries to the tasks file, overwriting its content.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Shamanbenny"},"content":"     * @param lines An {@code ArrayList} containing the updated task entries.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Shamanbenny"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Shamanbenny"},"content":"    public void writeLines(ArrayList\u003cString\u003e lines) throws IOException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Shamanbenny"},"content":"        // Ensure the directory exists","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Shamanbenny"},"content":"        Files.createDirectories(Paths.get(this.DATA_FOLDER));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Shamanbenny"},"content":"        // Create the file if it does not exist","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Shamanbenny"},"content":"        File file \u003d new File(this.DATA_FOLDER + \"/\" + this.TASKS_FILE);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Shamanbenny"},"content":"        if (!file.exists() \u0026\u0026 !file.createNewFile()) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Shamanbenny"},"content":"            throw new IOException(\"Failed to create tasks file\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Shamanbenny"},"content":"        // Write the modified content back to the file","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Shamanbenny"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file, false))) { // Overwrite mode","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Shamanbenny"},"content":"            for (String updatedLine : lines) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Shamanbenny"},"content":"                writer.write(updatedLine);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Shamanbenny"},"content":"                writer.newLine();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Shamanbenny"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Shamanbenny"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"Shamanbenny":221}},{"path":"src/main/java/nightcoder/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shamanbenny"},"content":"package nightcoder.task;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Shamanbenny"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Shamanbenny"},"content":" * Represents a task that has a specific deadline.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Shamanbenny"},"content":" * Extends the base Task class.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Shamanbenny"},"content":" *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Shamanbenny"},"content":" * @author ShamanBenny","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Shamanbenny"},"content":" * @version 8.1","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Shamanbenny"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Shamanbenny"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Shamanbenny"},"content":"    private final String dueBy;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Shamanbenny"},"content":"     * Constructs a new Deadline task with the specified description and deadline.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Shamanbenny"},"content":"     * @param description A brief description of the task.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Shamanbenny"},"content":"     * @param isCompleted The initial completion status of the task (true if completed, false otherwise).","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Shamanbenny"},"content":"    public Deadline(String description, boolean isCompleted, String dueBy) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Shamanbenny"},"content":"        super(description, isCompleted);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Shamanbenny"},"content":"        this.dueBy \u003d dueBy;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Shamanbenny"},"content":"    public String getDueBy() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Shamanbenny"},"content":"        return this.dueBy;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Shamanbenny"},"content":"     * Returns a formatted string representation of the task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Shamanbenny"},"content":"     * @return A string formatted as \"T|completion_status|description|due_by\".","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Shamanbenny"},"content":"    public String getStringFormat() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Shamanbenny"},"content":"        return \"D|\" + (isCompleted() ? \"1\" : \"0\") + \"|\" + getDescription() + \"|\" + getDueBy();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Shamanbenny"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Shamanbenny"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Shamanbenny"},"content":"        return \"[D]\" + super.toString() + \" (By: \" + this.dueBy + \")\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Shamanbenny"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"Shamanbenny":41}},{"path":"src/main/java/nightcoder/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shamanbenny"},"content":"package nightcoder.task;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Shamanbenny"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Shamanbenny"},"content":" * Represents a task that occurs during a specific time range.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Shamanbenny"},"content":" * Extends the base Task class.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Shamanbenny"},"content":" *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Shamanbenny"},"content":" * @author ShamanBenny","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Shamanbenny"},"content":" * @version 8.1","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Shamanbenny"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Shamanbenny"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Shamanbenny"},"content":"    private final String startTime;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Shamanbenny"},"content":"    private final String endTime;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Shamanbenny"},"content":"     * Constructs a new Event task with the specified description, completion status, start time, and end time.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Shamanbenny"},"content":"     * @param description A brief description of the task.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Shamanbenny"},"content":"     * @param isCompleted The initial completion status of the task (true if completed, false otherwise).","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Shamanbenny"},"content":"     * @param startTime   The start time of the event as a string.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Shamanbenny"},"content":"     * @param endTime     The end time of the event as a string.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Shamanbenny"},"content":"    public Event(String description, boolean isCompleted, String startTime, String endTime) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Shamanbenny"},"content":"        super(description, isCompleted);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Shamanbenny"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Shamanbenny"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Shamanbenny"},"content":"    public String getStartTime() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Shamanbenny"},"content":"        return this.startTime;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Shamanbenny"},"content":"    public String getEndTime() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Shamanbenny"},"content":"        return this.endTime;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Shamanbenny"},"content":"     * Returns a formatted string representation of the task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Shamanbenny"},"content":"     * @return A string formatted as \"T|completion_status|description|start_time|end_time\".","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Shamanbenny"},"content":"    public String getStringFormat() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Shamanbenny"},"content":"        return \"E|\" + (isCompleted() ? \"1\" : \"0\") + \"|\" + getDescription() + \"|\" + getStartTime() + \"|\" + getEndTime();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Shamanbenny"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Shamanbenny"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Shamanbenny"},"content":"        return \"[E]\" + super.toString() + \" (From: \" + this.startTime + \", To: \" + this.endTime + \")\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Shamanbenny"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"Shamanbenny":49}},{"path":"src/main/java/nightcoder/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shamanbenny"},"content":"package nightcoder.task;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Shamanbenny"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Shamanbenny"},"content":" * This class encapsulates a task\u0027s details, including its description and","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Shamanbenny"},"content":" * whether it has been completed, providing methods to manage and retrieve","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Shamanbenny"},"content":" * task information.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Shamanbenny"},"content":" *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Shamanbenny"},"content":" * @author ShamanBenny","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Shamanbenny"},"content":" * @version 8.1","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Shamanbenny"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Shamanbenny"},"content":"public abstract class Task {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Shamanbenny"},"content":"    private final String description;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Shamanbenny"},"content":"    private boolean isCompleted;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Shamanbenny"},"content":"     * Constructs a new Task with the specified description and completion status.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Shamanbenny"},"content":"     * @param description A brief description of the task.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Shamanbenny"},"content":"     * @param isCompleted The initial completion status of the task (true if completed, false otherwise).","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Shamanbenny"},"content":"    public Task(String description, boolean isCompleted) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Shamanbenny"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Shamanbenny"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Shamanbenny"},"content":"    public abstract String getStringFormat();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Shamanbenny"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Shamanbenny"},"content":"        return this.description;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Shamanbenny"},"content":"     * Checks if the task is completed.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Shamanbenny"},"content":"     * @return true if the task is completed, false otherwise.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Shamanbenny"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Shamanbenny"},"content":"        return this.isCompleted;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Shamanbenny"},"content":"     * Sets the completion status of the task.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Shamanbenny"},"content":"     * @param isCompleted true to mark the task as completed, false to mark it as incomplete.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Shamanbenny"},"content":"    public void setCompleted(boolean isCompleted) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Shamanbenny"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Shamanbenny"},"content":"     * Returns a string representation of the task, including its status and description.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Shamanbenny"},"content":"     * The format is:","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Shamanbenny"},"content":"     * - `[X] \u003cdescription\u003e` for completed tasks.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Shamanbenny"},"content":"     * - `[ ] \u003cdescription\u003e` for incomplete tasks.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Shamanbenny"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Shamanbenny"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Shamanbenny"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Shamanbenny"},"content":"        return (this.isCompleted ? \"[X] \":\"[ ] \") + this.description;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Shamanbenny"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"Shamanbenny":62}},{"path":"src/main/java/nightcoder/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shamanbenny"},"content":"package nightcoder.task;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Shamanbenny"},"content":"import nightcoder.storage.Storage;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Shamanbenny"},"content":"import nightcoder.ui.Ui;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Shamanbenny"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Shamanbenny"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Shamanbenny"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Shamanbenny"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Shamanbenny"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Shamanbenny"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Shamanbenny"},"content":" * The TaskList class manages a collection of tasks, including To-Do tasks, Deadlines, and Events.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Shamanbenny"},"content":" * It supports adding, listing, and formatting tasks with associated dates.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Shamanbenny"},"content":" * The class interacts with storage object and UI class to persist and display tasks respectively.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Shamanbenny"},"content":" *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Shamanbenny"},"content":" * @author ShamanBenny","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Shamanbenny"},"content":" * @version 8.1","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Shamanbenny"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Shamanbenny"},"content":"public class TaskList {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Shamanbenny"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Shamanbenny"},"content":"    private final Storage STORAGE;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Shamanbenny"},"content":"    private final DateTimeFormatter INPUT_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Shamanbenny"},"content":"    private final DateTimeFormatter OUTPUT_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Shamanbenny"},"content":"     * Constructs a TaskList with a given storage.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Shamanbenny"},"content":"     * @param storage The storage handler for tasks.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Shamanbenny"},"content":"    public TaskList(Storage storage) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Shamanbenny"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Shamanbenny"},"content":"        this.STORAGE \u003d storage;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Shamanbenny"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Shamanbenny"},"content":"     * @return The size of the task list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Shamanbenny"},"content":"    public int size() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Shamanbenny"},"content":"        return this.tasks.size();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Shamanbenny"},"content":"     * Returns the element at the specified position in the list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Shamanbenny"},"content":"     * @param index Index of the element to return","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Shamanbenny"},"content":"     * @return The element at the specified position in this list","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Shamanbenny"},"content":"    public Task get(int index) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Shamanbenny"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Shamanbenny"},"content":"     * Removes the element at the specified position in this list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Shamanbenny"},"content":"     * Shifts any subsequent elements to the left (subtracts one from their indices).","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Shamanbenny"},"content":"     * @param index The index of the element to be removed","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Shamanbenny"},"content":"     * @return The element that was removed from the list","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Shamanbenny"},"content":"    public Task remove(int index) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Shamanbenny"},"content":"        return this.tasks.remove(index);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Shamanbenny"},"content":"     * Loads tasks from the storage file and converts them into {@code ArrayList\u003cnightcoder.task.Task\u003e}.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Shamanbenny"},"content":"    public void loadTasks() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Shamanbenny"},"content":"        this.tasks \u003d this.STORAGE.loadTasks();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Shamanbenny"},"content":"     * Parses a date string in the format \"yyyy-MM-dd\" and returns it in ISO format.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Shamanbenny"},"content":"     * If the input cannot be parsed, the original input string is returned unchanged.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Shamanbenny"},"content":"     * @param input The date string to be parsed, expected in \"yyyy-MM-dd\" format.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Shamanbenny"},"content":"     * @return A string representation of the parsed date in ISO format, or the original input string if parsing fails.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Shamanbenny"},"content":"    public String parseDate(String input) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Shamanbenny"},"content":"        LocalDate output;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Shamanbenny"},"content":"        try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Shamanbenny"},"content":"            output \u003d LocalDate.parse(input, INPUT_DATE_FORMAT);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Shamanbenny"},"content":"            return output.format(OUTPUT_DATE_FORMAT);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Shamanbenny"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Shamanbenny"},"content":"            return input;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Shamanbenny"},"content":"     * Adds a To Do to the list of tasks. By default, a newly added To Do is not completed.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Shamanbenny"},"content":"     * @param description The description of the task to be added to the list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Shamanbenny"},"content":"    public  void addToDo(String description) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Shamanbenny"},"content":"        Task task \u003d new ToDo(description, false);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Shamanbenny"},"content":"        this.tasks.add(task);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Shamanbenny"},"content":"        try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Shamanbenny"},"content":"            this.STORAGE.appendTask(\"T|0|\" + description);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Shamanbenny"},"content":"            Ui.printTaskAdded(description, this.size());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Shamanbenny"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Shamanbenny"},"content":"            Ui.printIndentedLine(\"[ Task #\" + this.size() + \" Added: \" + description + \" ]\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Shamanbenny"},"content":"            Ui.printErrorUpdatingTasksFile(e);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Shamanbenny"},"content":"     * Adds a Deadline to the list of tasks. By default, a newly added deadline is not completed.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Shamanbenny"},"content":"     * Requires information on due date.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Shamanbenny"},"content":"     * @param description The description of the task to be added to the list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Shamanbenny"},"content":"     * @param dueBy A string detailing when the task is due by.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Shamanbenny"},"content":"    public void addDeadline(String description, String dueBy) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Shamanbenny"},"content":"        String parsedDueBy \u003d parseDate(dueBy);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Shamanbenny"},"content":"        Task task \u003d new Deadline(description, false, parsedDueBy);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Shamanbenny"},"content":"        this.tasks.add(task);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Shamanbenny"},"content":"        try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Shamanbenny"},"content":"            this.STORAGE.appendTask(\"D|0|\" + description + \"|\" + parsedDueBy);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Shamanbenny"},"content":"            Ui.printTaskAdded(description, this.size());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Shamanbenny"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Shamanbenny"},"content":"            Ui.printIndentedLine(\"[ Task #\" + this.size() + \" Added: \" + description + \" ]\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Shamanbenny"},"content":"            Ui.printErrorUpdatingTasksFile(e);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Shamanbenny"},"content":"     * Adds an Event to the list of tasks. By default, a newly added event is not completed.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Shamanbenny"},"content":"     * Requires information on start and end time.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Shamanbenny"},"content":"     * @param description The description of the task to be added to the list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Shamanbenny"},"content":"     * @param startTime A string detailing when the event starts.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Shamanbenny"},"content":"     * @param endTime A string detailing when the event ends.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Shamanbenny"},"content":"    public void addEvent(String description, String startTime, String endTime) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Shamanbenny"},"content":"        String parsedStartTime \u003d parseDate(startTime);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Shamanbenny"},"content":"        String parsedEndTime \u003d parseDate(endTime);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Shamanbenny"},"content":"        Task task \u003d new Event(description, false, parsedStartTime, parsedEndTime);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Shamanbenny"},"content":"        this.tasks.add(task);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Shamanbenny"},"content":"        try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Shamanbenny"},"content":"            this.STORAGE.appendTask(\"E|0|\" + description + \"|\" + parsedStartTime + \"|\" + parsedEndTime);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Shamanbenny"},"content":"            Ui.printTaskAdded(description, this.size());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Shamanbenny"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Shamanbenny"},"content":"            Ui.printIndentedLine(\"[ Task #\" + this.size() + \" Added: \" + description + \" ]\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Shamanbenny"},"content":"            Ui.printErrorUpdatingTasksFile(e);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Shamanbenny"},"content":"     * Displays the list of tasks currently stored along with their indices.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Shamanbenny"},"content":"     * If the list is empty, a message indicating no tasks are available is shown.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Shamanbenny"},"content":"    public void listTasks() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Shamanbenny"},"content":"        if (this.tasks.isEmpty()) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Shamanbenny"},"content":"            Ui.printIndentedLine(\"[ Your To-Do List is Empty! ]\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Shamanbenny"},"content":"            Ui.printIndentedLine(\"Looks like we\u0027re starting with a clean slate. What shall we tackle first?\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Shamanbenny"},"content":"        } else {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Shamanbenny"},"content":"            for (int idx \u003d 0; idx \u003c this.size(); idx++) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Shamanbenny"},"content":"                Task task \u003d this.tasks.get(idx);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Shamanbenny"},"content":"                Ui.printIndentedLine((idx+1) + \".\" + task);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Shamanbenny"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Shamanbenny"},"content":"     * Saves the current list of tasks to the designated storage file.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Shamanbenny"},"content":"     * This method should be called at the end of the application to ensure that all tasks are properly backed up.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Shamanbenny"},"content":"    public void saveTasks() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Shamanbenny"},"content":"        ArrayList\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Shamanbenny"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Shamanbenny"},"content":"            lines.add(task.getStringFormat());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Shamanbenny"},"content":"        try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Shamanbenny"},"content":"            this.STORAGE.writeLines(lines);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Shamanbenny"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Shamanbenny"},"content":"            Ui.printErrorUpdatingTasksFile(e);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Shamanbenny"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"Shamanbenny":183}},{"path":"src/main/java/nightcoder/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shamanbenny"},"content":"package nightcoder.task;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Shamanbenny"},"content":"/**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Shamanbenny"},"content":" * Represents a task with no specific date or time attached.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Shamanbenny"},"content":" * Extends the base Task class.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Shamanbenny"},"content":" *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Shamanbenny"},"content":" * @author ShamanBenny","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Shamanbenny"},"content":" * @version 8.1","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Shamanbenny"},"content":" */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Shamanbenny"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Shamanbenny"},"content":"     * Constructs a new To Do task with the specified description.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Shamanbenny"},"content":"     * @param description A brief description of the task.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Shamanbenny"},"content":"     * @param isCompleted The initial completion status of the task (true if completed, false otherwise).","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Shamanbenny"},"content":"    public ToDo(String description, boolean isCompleted) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Shamanbenny"},"content":"        super(description, isCompleted);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Shamanbenny"},"content":"     * Returns a formatted string representation of the task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Shamanbenny"},"content":"     * @return A string formatted as \"T|completion_status|description\".","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Shamanbenny"},"content":"    public String getStringFormat() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Shamanbenny"},"content":"        return \"T|\" + (isCompleted() ? \"1\" : \"0\") + \"|\" + getDescription();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Shamanbenny"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Shamanbenny"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Shamanbenny"},"content":"        return \"[T]\" + super.toString(); // Prefix with [T] for To Do tasks","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Shamanbenny"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"Shamanbenny":35}},{"path":"src/main/java/nightcoder/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shamanbenny"},"content":"package nightcoder.ui;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Shamanbenny"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Shamanbenny"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Shamanbenny"},"content":" * The {@code nightcoder.ui.Ui} class is responsible for handling all user interface interactions","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Shamanbenny"},"content":" * within the NightCoder application. It provides methods to display messages,","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Shamanbenny"},"content":" * errors, and guides to the user in a structured and readable format.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Shamanbenny"},"content":" * The class is designed as a utility class, hence it cannot be instantiated.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Shamanbenny"},"content":" *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Shamanbenny"},"content":" * @author ShamanBenny","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Shamanbenny"},"content":" * @version 8.1","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Shamanbenny"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Shamanbenny"},"content":"public class Ui {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Shamanbenny"},"content":"    public static final String LINE_BREAK \u003d","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Shamanbenny"},"content":"            \"\\t______________________________________________________________________________________________\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Shamanbenny"},"content":"    public static final String LOGO \u003d \"\"\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Shamanbenny"},"content":"            \\t  /$$   /$$ /$$           /$$         /$$      /$$$$$$                  /$$                   \\s","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Shamanbenny"},"content":"            \\t | $$$ | $$|__/          | $$        | $$     /$$__  $$                | $$                   \\s","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Shamanbenny"},"content":"            \\t | $$$$| $$ /$$  /$$$$$$ | $$$$$$$  /$$$$$$  | $$  \\\\__/  /$$$$$$   /$$$$$$$  /$$$$$$   /$$$$$$\\s","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Shamanbenny"},"content":"            \\t | $$ $$ $$| $$ /$$__  $$| $$__  $$|_  $$_/  | $$       /$$__  $$ /$$__  $$ /$$__  $$ /$$__  $$","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Shamanbenny"},"content":"            \\t | $$  $$$$| $$| $$  \\\\ $$| $$  \\\\ $$  | $$    | $$      | $$  \\\\ $$| $$  | $$| $$$$$$$$| $$  \\\\__/","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Shamanbenny"},"content":"            \\t | $$\\\\  $$$| $$| $$  | $$| $$  | $$  | $$ /$$| $$    $$| $$  | $$| $$  | $$| $$_____/| $$     \\s","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Shamanbenny"},"content":"            \\t | $$ \\\\  $$| $$|  $$$$$$$| $$  | $$  |  $$$$/|  $$$$$$/|  $$$$$$/|  $$$$$$$|  $$$$$$$| $$     \\s","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Shamanbenny"},"content":"            \\t |__/  \\\\__/|__/ \\\\____  $$|__/  |__/   \\\\___/   \\\\______/  \\\\______/  \\\\_______/ \\\\_______/|__/    \\s","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Shamanbenny"},"content":"            \\t                /$$  \\\\ $$                                                                     \\s","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Shamanbenny"},"content":"            \\t               |  $$$$$$/                                                                     \\s","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Shamanbenny"},"content":"            \\t                \\\\______/                                                                      \\s\"\"\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Shamanbenny"},"content":"     * Represents the commands supported by the NightCoder application.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Shamanbenny"},"content":"     * Each command is associated with a syntax and a description to provide","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Shamanbenny"},"content":"     * help and guidance for users.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Shamanbenny"},"content":"    private enum CommandHelp {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Shamanbenny"},"content":"        HELP(\"help\", \"Prints this handy guide. Because even pros need reminders sometimes.\"),","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Shamanbenny"},"content":"        TODO(\"todo \u003cString\u003e\", \"Adds a to-do task to your list. Just tell me what needs doing, \" +","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Shamanbenny"},"content":"                \"and I\u0027ll keep track.\\n\\t      Example: todo Finish the project report\"),","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Shamanbenny"},"content":"        DEADLINE(\"deadline \u003cString\u003e /by \u003cString\u003e\", \"Adds a task with a deadline. Perfect for those \" +","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Shamanbenny"},"content":"                \"time-sensitive missions!\\n\\t      Example: deadline Submit assignment /by 2025-01-30 23:59\"),","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Shamanbenny"},"content":"        EVENT(\"event \u003cString\u003e /from \u003cString\u003e /to \u003cString\u003e\", \"Adds an event with a start and end time. \" +","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Shamanbenny"},"content":"                \"Keep your schedule sharp!\\n\\t      Example: event Team meeting /from 2025-01-21 3:00 PM \" +","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Shamanbenny"},"content":"                \"/to 2025-01-21 4:00 PM\"),","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Shamanbenny"},"content":"        LIST(\"list\", \"Shows all your tasks. Think of it as your personal task constellation.\"),","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Shamanbenny"},"content":"        MARK(\"mark \u003cint\u003e\", \"Marks a task as complete. Use the task number from the list.\\n\" +","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Shamanbenny"},"content":"                \"\\t      Example: mark 1\"),","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Shamanbenny"},"content":"        UNMARK(\"unmark \u003cint\u003e\", \"Marks a task as incomplete. Sometimes things need a second look!\\n\" +","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Shamanbenny"},"content":"                \"\\t      tExample: unmark 1\"),","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Shamanbenny"},"content":"        DELETE(\"delete \u003cint\u003e\", \"Deletes a task from your to-do list. Use the task number from the list.\\n\" +","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Shamanbenny"},"content":"                \"\\t      Example: delete 2\"),","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Shamanbenny"},"content":"        BYE(\"bye\", \"Exits the program. But don\u0027t be a stranger-I\u0027ll be here when you need me again!\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Shamanbenny"},"content":"        private final String syntax;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Shamanbenny"},"content":"        private final String description;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Shamanbenny"},"content":"        /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Shamanbenny"},"content":"         * Constructs a CommandHelp enum instance with the specified syntax and description.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Shamanbenny"},"content":"         *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Shamanbenny"},"content":"         * @param syntax      The syntax of the command.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Shamanbenny"},"content":"         * @param description The description of the command.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Shamanbenny"},"content":"         */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Shamanbenny"},"content":"        CommandHelp(String syntax, String description) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Shamanbenny"},"content":"            this.syntax \u003d syntax;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Shamanbenny"},"content":"            this.description \u003d description;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Shamanbenny"},"content":"        public String getSyntax() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Shamanbenny"},"content":"            return syntax;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Shamanbenny"},"content":"        public String getDescription() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Shamanbenny"},"content":"            return description;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Shamanbenny"},"content":"     * Private constructor to prevent instantiation of the {@code nightcoder.ui.Ui} class.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Shamanbenny"},"content":"     * @throws UnsupportedOperationException If an attempt is made to instantiate this class.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Shamanbenny"},"content":"    private Ui() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Shamanbenny"},"content":"        throw new UnsupportedOperationException(\"nightcoder.ui.Ui class should not be instantiated.\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Shamanbenny"},"content":"    public static void printIndentedLine(String line) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Shamanbenny"},"content":"        System.out.println(\"\\t\" + line);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Shamanbenny"},"content":"     * Prints the welcome message along with an ASCII art logo.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Shamanbenny"},"content":"    public static void printWelcome() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Shamanbenny"},"content":"        System.out.println(\"\\n\" + Ui.LINE_BREAK + \"\\n\\n\" + Ui.LOGO);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Shamanbenny"},"content":"        Ui.printIndentedLine(\"Booting Up...\\n\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Shamanbenny"},"content":"        System.out.println(\"\"\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Shamanbenny"},"content":"                \\tAh, there you are! The moon is bright, the code is flowing, and caffeine-wait, I mean","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Shamanbenny"},"content":"                \\tmotivation-fuels our mission tonight. Welcome back to Night Coder, your loyal (and slightly","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Shamanbenny"},"content":"                \\tsleep-deprived) coding companion. Whether it\u0027s wrangling deadlines, or organizing your todo","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Shamanbenny"},"content":"                \\tlist, I\u0027m here to lend a hand.\"\"\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Shamanbenny"},"content":"        System.out.println(\" \");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Shamanbenny"},"content":"        Ui.printIndentedLine(\"Let\u0027s make some magic together. What\u0027s on the docket tonight?\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Shamanbenny"},"content":"        System.out.println(\" \");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Shamanbenny"},"content":"        Ui.printIndentedLine(\"If you\u0027re unsure about what I can do, just type \\\"help\\\", and I\u0027ll get you \" +","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Shamanbenny"},"content":"                \"sorted in no time!\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Shamanbenny"},"content":"        System.out.println(Ui.LINE_BREAK + \"\\n\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Shamanbenny"},"content":"     * Prints a message indicating a task has been added.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Shamanbenny"},"content":"     * @param description The description of the newly added task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Shamanbenny"},"content":"     * @param idx The 1-based index of the newly added task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Shamanbenny"},"content":"    public static void printTaskAdded(String description, int idx) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Shamanbenny"},"content":"        System.out.println(\"\\t[ Task #\" + idx + \" Added: \" + description + \" ]\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Shamanbenny"},"content":"        System.out.println(\"\\tGot it! I\u0027ll keep this safe in your to-do list. Let me know what\u0027s next!\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Shamanbenny"},"content":"     * Prints an error message for incorrect command usage.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Shamanbenny"},"content":"     * @param command The name of the command for which the usage was invalid.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Shamanbenny"},"content":"    public static void printInvalidUsage(String command) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Shamanbenny"},"content":"        Ui.printIndentedLine(\"[ Oops! ]\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Shamanbenny"},"content":"        Ui.printIndentedLine(\"Incorrect usage of \\\"\" + command + \"\\\". Type \\\"help\\\" to refer to its \" +","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Shamanbenny"},"content":"                \"appropriate usage. Let\u0027s get back on track!\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Shamanbenny"},"content":"     * Prints an error message for invalid input that resulted in Number Format Exception.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Shamanbenny"},"content":"     * @param command The name of the command for which the input was invalid.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Shamanbenny"},"content":"    public static void printInvalidNumberInput(String command) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Shamanbenny"},"content":"        Ui.printIndentedLine(\"[ Invalid Usage! ]\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Shamanbenny"},"content":"        Ui.printIndentedLine(\"Hmm, please enter a number that matches one of your tasks on the list.\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Shamanbenny"},"content":"        Ui.printIndentedLine(\"Double-check your task list with \\\"list\\\", and try again!\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Shamanbenny"},"content":"        Ui.printIndentedLine(\"Example: \" + command + \" 1\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Shamanbenny"},"content":"     * Prints an error message regarding the IOException that occurred during the updating of Tasks Files.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Shamanbenny"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Shamanbenny"},"content":"     * @param e The IOException that occurred.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Shamanbenny"},"content":"    public static void printErrorUpdatingTasksFile(IOException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Shamanbenny"},"content":"        System.err.println(\"Error writing to tasks file: \" + e.getMessage());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Shamanbenny"},"content":"        Ui.printIndentedLine(\"[ ERROR ] It appears that the updating of the tasks data file has failed.\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Shamanbenny"},"content":"        Ui.printIndentedLine(\"          This may result in non-persistent task tracking if not addressed properly.\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Shamanbenny"},"content":"        Ui.printIndentedLine(\"[ LOG ]   \" + e.getMessage());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Shamanbenny"},"content":"     * Prints a detailed guide of all available commands in the NightCoder application.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Shamanbenny"},"content":"     * The guide includes the syntax and description for each command, making it easy for users","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Shamanbenny"},"content":"     * to understand and use the application effectively.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Shamanbenny"},"content":"    public static void printHelp() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Shamanbenny"},"content":"        System.out.println(\"\\t[ Night Code Command Guide ]\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Shamanbenny"},"content":"        System.out.println(\"\\tNeed a hand? No problem! Here\u0027s what I can do for you:\\n\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Shamanbenny"},"content":"        for (Ui.CommandHelp cmd : Ui.CommandHelp.values()) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Shamanbenny"},"content":"            System.out.println(\"\\t    \" + cmd.getSyntax());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Shamanbenny"},"content":"            System.out.println(\"\\t    - \" + cmd.getDescription() + \"\\n\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Shamanbenny"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Shamanbenny"},"content":"        System.out.println(\"\\tGot it? Let\u0027s get back to work!\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Shamanbenny"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Shamanbenny"},"content":"     * Displays a farewell message before exiting the application","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Shamanbenny"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Shamanbenny"},"content":"    public static void printExit() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Shamanbenny"},"content":"        System.out.println(Ui.LINE_BREAK);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Shamanbenny"},"content":"        System.out.println(\"\"\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Shamanbenny"},"content":"                ","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Shamanbenny"},"content":"                \\tAlright, signing off for now. Remember, even the brightest coders need some rest-yes, I\u0027m","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Shamanbenny"},"content":"                \\tlooking at you! ( 0 w 0 )\"\"\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Shamanbenny"},"content":"        System.out.println(\"\"\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Shamanbenny"},"content":"                \\tIf you need me, you know where to find me. Until next time, keep dreaming big, debugging smart,","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Shamanbenny"},"content":"                \\tand chasing that moonlit inspiration.\"\"\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Shamanbenny"},"content":"        Ui.printIndentedLine(\"Goodnight, and happy coding!\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Shamanbenny"},"content":"        System.out.println(\" \");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Shamanbenny"},"content":"        Ui.printIndentedLine(\"Powering Down...\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Shamanbenny"},"content":"        System.out.println(Ui.LINE_BREAK);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Shamanbenny"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Shamanbenny"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"Shamanbenny":188}},{"path":"text-ui-test/input1.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Shamanbenny"},"content":"awdasd","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Shamanbenny"},"content":"hesdha","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Shamanbenny"},"content":"help","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Shamanbenny"},"content":"mark 1","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Shamanbenny"},"content":"mark -1","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Shamanbenny"},"content":"mark abc","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Shamanbenny"},"content":"unmark 1","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Shamanbenny"},"content":"unmark -1","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Shamanbenny"},"content":"unmark abc","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Shamanbenny"},"content":"delete 1","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Shamanbenny"},"content":"delete -1","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Shamanbenny"},"content":"delete abc","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Shamanbenny"},"content":"todo","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Shamanbenny"},"content":"todo Test NightCoder\u0027s features","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Shamanbenny"},"content":"mark 1","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Shamanbenny"},"content":"mark 1","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Shamanbenny"},"content":"unmark 1","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Shamanbenny"},"content":"unmark 1","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Shamanbenny"},"content":"deadline","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Shamanbenny"},"content":"deadline Running","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Shamanbenny"},"content":"deadline Running /by","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Shamanbenny"},"content":"deadline /by Tonight","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Shamanbenny"},"content":"deadline Running /by 2025-02-01 20:30:00","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Shamanbenny"},"content":"deadline Jogging /by 2025-02-03","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Shamanbenny"},"content":"mark 2","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Shamanbenny"},"content":"mark 3","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Shamanbenny"},"content":"mark 2","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Shamanbenny"},"content":"mark 3","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Shamanbenny"},"content":"unmark 2","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Shamanbenny"},"content":"unmark 3","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Shamanbenny"},"content":"unmark 2","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Shamanbenny"},"content":"unmark 3","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Shamanbenny"},"content":"event","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Shamanbenny"},"content":"event Teams meeting","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Shamanbenny"},"content":"event Teams meeting /from","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Shamanbenny"},"content":"event Teams meeting /from 3pm","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Shamanbenny"},"content":"event Teams meeting /to","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Shamanbenny"},"content":"event Teams meeting /to 4pm","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Shamanbenny"},"content":"event Teams meeting /from 3pm /to","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Shamanbenny"},"content":"event Teams meeting /to 4pm /from","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Shamanbenny"},"content":"event /from 3pm /to 4pm","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Shamanbenny"},"content":"event /to 4pm /from 3pm","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Shamanbenny"},"content":"event Teams meeting /from 3pm /to 4pm","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Shamanbenny"},"content":"event Vacation /to 2025-03-02 /from 2025-03-01","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Shamanbenny"},"content":"mark 4","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Shamanbenny"},"content":"mark 5","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Shamanbenny"},"content":"mark 4","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Shamanbenny"},"content":"mark 5","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Shamanbenny"},"content":"unmark 4","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Shamanbenny"},"content":"unmark 5","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Shamanbenny"},"content":"unmark 4","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Shamanbenny"},"content":"unmark 5","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Shamanbenny"},"content":"mark 0","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Shamanbenny"},"content":"mark 6","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Shamanbenny"},"content":"unmark 0","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Shamanbenny"},"content":"unmark 6","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Shamanbenny"},"content":"delete 0","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Shamanbenny"},"content":"delete 3","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Shamanbenny"},"content":"help","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Shamanbenny"},"content":"bye","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"Shamanbenny":83}},{"path":"text-ui-test/input2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Shamanbenny"},"content":"awdasd","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Shamanbenny"},"content":"hesdha","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Shamanbenny"},"content":"help","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Shamanbenny"},"content":"mark 7","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Shamanbenny"},"content":"mark -1","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Shamanbenny"},"content":"mark abc","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Shamanbenny"},"content":"unmark 7","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Shamanbenny"},"content":"unmark -1","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Shamanbenny"},"content":"unmark abc","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Shamanbenny"},"content":"delete 7","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Shamanbenny"},"content":"delete -1","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Shamanbenny"},"content":"delete abc","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Shamanbenny"},"content":"mark 1","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Shamanbenny"},"content":"mark 2","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Shamanbenny"},"content":"unmark 3","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Shamanbenny"},"content":"unmark 4","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Shamanbenny"},"content":"unmark 1","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Shamanbenny"},"content":"mark 4","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Shamanbenny"},"content":"todo","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Shamanbenny"},"content":"todo Test NightCoder\u0027s features","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Shamanbenny"},"content":"mark 7","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Shamanbenny"},"content":"mark 7","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Shamanbenny"},"content":"unmark 7","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Shamanbenny"},"content":"unmark 7","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Shamanbenny"},"content":"deadline","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Shamanbenny"},"content":"deadline Running","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Shamanbenny"},"content":"deadline Running /by","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Shamanbenny"},"content":"deadline /by Tonight","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Shamanbenny"},"content":"deadline Running /by 2025-02-01 20:30:00","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Shamanbenny"},"content":"deadline Jogging /by 2025-02-03","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Shamanbenny"},"content":"mark 8","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Shamanbenny"},"content":"mark 9","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Shamanbenny"},"content":"mark 8","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Shamanbenny"},"content":"mark 9","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Shamanbenny"},"content":"unmark 8","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Shamanbenny"},"content":"unmark 9","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Shamanbenny"},"content":"unmark 8","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Shamanbenny"},"content":"unmark 9","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Shamanbenny"},"content":"event","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Shamanbenny"},"content":"event Teams meeting","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Shamanbenny"},"content":"event Teams meeting /from","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Shamanbenny"},"content":"event Teams meeting /from 3pm","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Shamanbenny"},"content":"event Teams meeting /to","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Shamanbenny"},"content":"event Teams meeting /to 4pm","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Shamanbenny"},"content":"event Teams meeting /from 3pm /to","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Shamanbenny"},"content":"event Teams meeting /to 4pm /from","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Shamanbenny"},"content":"event /from 3pm /to 4pm","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Shamanbenny"},"content":"event /to 4pm /from 3pm","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Shamanbenny"},"content":"event Teams meeting /from 3pm /to 4pm","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Shamanbenny"},"content":"event Vacation /to 2025-03-02 /from 2025-03-01","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Shamanbenny"},"content":"mark 10","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Shamanbenny"},"content":"mark 11","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Shamanbenny"},"content":"mark 10","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Shamanbenny"},"content":"mark 11","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Shamanbenny"},"content":"unmark 10","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Shamanbenny"},"content":"unmark 11","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Shamanbenny"},"content":"unmark 10","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Shamanbenny"},"content":"unmark 11","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Shamanbenny"},"content":"mark 0","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Shamanbenny"},"content":"mark 12","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Shamanbenny"},"content":"unmark 0","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Shamanbenny"},"content":"unmark 12","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Shamanbenny"},"content":"delete 0","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Shamanbenny"},"content":"delete 3","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Shamanbenny"},"content":"delete 7","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Shamanbenny"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Shamanbenny"},"content":"help","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Shamanbenny"},"content":"bye","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"Shamanbenny":93}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Shamanbenny"},"content":"if exist ACTUAL1.TXT del ACTUAL1.TXT","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Shamanbenny"},"content":"if exist ACTUAL2.TXT del ACTUAL2.TXT","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Shamanbenny"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\nightcoder\\NightCoder.java","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Shamanbenny"},"content":"REM Run first test case (input1.txt) without tasks.txt","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Shamanbenny"},"content":"if exist data\\tasks.txt del data\\tasks.txt","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Shamanbenny"},"content":"java -classpath ..\\bin nightcoder.NightCoder \u003c input1.txt \u003e ACTUAL1.TXT","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Shamanbenny"},"content":"REM compare output to expected output","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Shamanbenny"},"content":"FC ACTUAL1.TXT EXPECTED1.TXT","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Shamanbenny"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Shamanbenny"},"content":"    echo ********** TEST 1 FAILED **********","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Shamanbenny"},"content":") ELSE (","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Shamanbenny"},"content":"    echo ********** TEST 1 PASSED **********","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Shamanbenny"},"content":")","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Shamanbenny"},"content":"REM Prepare tasks.txt for second test case (input2.txt)","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Shamanbenny"},"content":"(","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Shamanbenny"},"content":"    echo T^|0^|Go jogging","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Shamanbenny"},"content":"    echo T^|1^|Go fishing","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Shamanbenny"},"content":"    echo D^|0^|Homework^|Tonight","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Shamanbenny"},"content":"    echo D^|1^|Submit interview application^|1 Feb","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Shamanbenny"},"content":"    echo E^|0^|My birthday party^|3 Feb 3pm^|5pm","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Shamanbenny"},"content":"    echo E^|1^|New Year\u0027s Celebration^|1 Jan 12pm^|3pm","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Shamanbenny"},"content":") \u003e data\\tasks.txt","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Shamanbenny"},"content":"REM Run second test case (input2.txt)","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Shamanbenny"},"content":"java -classpath ..\\bin nightcoder.NightCoder \u003c input2.txt \u003e ACTUAL2.TXT","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Shamanbenny"},"content":"REM compare output to expected output","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Shamanbenny"},"content":"FC ACTUAL2.TXT EXPECTED2.TXT","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Shamanbenny"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Shamanbenny"},"content":"    echo ********** TEST 2 FAILED **********","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Shamanbenny"},"content":") ELSE (","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Shamanbenny"},"content":"    echo ********** TEST 2 PASSED **********","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Shamanbenny"},"content":")","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Shamanbenny"},"content":"REM Ensure the final data/tasks.txt matches EXPECTED2_tasks.TXT","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Shamanbenny"},"content":"FC data\\tasks.txt EXPECTED2_TASKS.TXT","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Shamanbenny"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Shamanbenny"},"content":"    echo ********** TEST 2 FINAL TASKS CHECK FAILED **********","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Shamanbenny"},"content":") ELSE (","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Shamanbenny"},"content":"    echo ********** TEST 2 FINAL TASKS CHECK PASSED **********","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Shamanbenny"},"content":")","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Shamanbenny"},"content":"echo ********** TESTING COMPLETE **********","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"-":15,"Shamanbenny":45}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Shamanbenny"},"content":"# Create bin directory if it doesn\u0027t exist","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Shamanbenny"},"content":"if [ ! -d \"../bin\" ]; then","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Shamanbenny"},"content":"# Delete output from previous run","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Shamanbenny"},"content":"rm -f ACTUAL1.TXT ACTUAL2.TXT","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Shamanbenny"},"content":"# Compile the code into the bin folder, terminate if error occurs","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Shamanbenny"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/nightcoder/NightCoder.java; then","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Shamanbenny"},"content":"# Run first test case (input1.txt) without tasks.txt","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Shamanbenny"},"content":"if [ -e \"data/tasks.txt\" ]; then","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Shamanbenny"},"content":"    rm data/tasks.txt","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Shamanbenny"},"content":"fi","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Shamanbenny"},"content":"java -classpath ../bin nightcoder.NightCoder \u003c input1.txt \u003e ACTUAL1.TXT","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Shamanbenny"},"content":"cp EXPECTED1.TXT EXPECTED1-UNIX.TXT","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Shamanbenny"},"content":"dos2unix ACTUAL1.TXT EXPECTED1-UNIX.TXT","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Shamanbenny"},"content":"# Compare output to expected output","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Shamanbenny"},"content":"if ! diff ACTUAL1.TXT EXPECTED1-UNIX.TXT \u003e /dev/null; then","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Shamanbenny"},"content":"    echo \"********** TEST 1 FAILED **********\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Shamanbenny"},"content":"    echo \"********** TEST 1 PASSED **********\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Shamanbenny"},"content":"fi","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Shamanbenny"},"content":"# Prepare tasks.txt for second test case (input2.txt)","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Shamanbenny"},"content":"cat \u003c\u003cEOL \u003e data/tasks.txt","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Shamanbenny"},"content":"T|0|Go jogging","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Shamanbenny"},"content":"T|1|Go fishing","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Shamanbenny"},"content":"D|0|Homework|Tonight","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Shamanbenny"},"content":"D|1|Submit interview application|1 Feb","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Shamanbenny"},"content":"E|0|My birthday party|3 Feb 3pm|5pm","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Shamanbenny"},"content":"E|1|New Year\u0027s Celebration|1 Jan 12pm|3pm","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Shamanbenny"},"content":"EOL","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Shamanbenny"},"content":"# Run second test case (input2.txt)","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Shamanbenny"},"content":"java -classpath ../bin nightcoder.NightCoder \u003c input2.txt \u003e ACTUAL2.TXT","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Shamanbenny"},"content":"# convert to UNIX format","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Shamanbenny"},"content":"cp EXPECTED2.TXT EXPECTED2-UNIX.TXT","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Shamanbenny"},"content":"dos2unix ACTUAL2.TXT EXPECTED2-UNIX.TXT","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Shamanbenny"},"content":"# Compare output to expected output","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Shamanbenny"},"content":"if ! diff ACTUAL2.TXT EXPECTED2-UNIX.TXT \u003e /dev/null; then","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Shamanbenny"},"content":"    echo \"********** TEST 2 FAILED **********\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Shamanbenny"},"content":"else","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Shamanbenny"},"content":"    echo \"********** TEST 2 PASSED **********\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Shamanbenny"},"content":"# convert to UNIX format","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Shamanbenny"},"content":"cp EXPECTED2_TASKS.TXT EXPECTED2_TASKS-UNIX.TXT","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Shamanbenny"},"content":"cp data/tasks.txt ACTUAL2_TASKS-UNIX.TXT","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Shamanbenny"},"content":"dos2unix ACTUAL2_TASKS-UNIX.TXT EXPECTED2_TASKS-UNIX.TXT","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Shamanbenny"},"content":"# Ensure the final data/tasks.txt matches EXPECTED2_TASKS.TXT","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Shamanbenny"},"content":"if ! diff ACTUAL2_TASKS-UNIX.TXT EXPECTED2_TASKS-UNIX.TXT \u003e /dev/null; then","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Shamanbenny"},"content":"    echo \"********** TEST 2 FINAL TASKS CHECK FAILED **********\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Shamanbenny"},"content":"else","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Shamanbenny"},"content":"    echo \"********** TEST 2 FINAL TASKS CHECK PASSED **********\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Shamanbenny"},"content":"fi","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Shamanbenny"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Shamanbenny"},"content":"echo \"********** TESTING COMPLETE **********\"","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"-":14,"Shamanbenny":57}}]
