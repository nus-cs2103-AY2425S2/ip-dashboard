[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"xinnnyeee"},"content":"# Ekko - Your Personal Task Manager","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xinnnyeee"},"content":"Ekko is a simple, interactive task manager built with JavaFX. It helps users keep track of tasks, deadlines, and notes efficiently.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xinnnyeee"},"content":"## Features","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xinnnyeee"},"content":"### üìù Task Management","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xinnnyeee"},"content":"- **TODO**: Add a general task.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xinnnyeee"},"content":"  ```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xinnnyeee"},"content":"  TODO \u003cdescription\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xinnnyeee"},"content":"  ```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xinnnyeee"},"content":"- **DEADLINE**: Add a task with a due date and time.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xinnnyeee"},"content":"  ```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xinnnyeee"},"content":"  DEADLINE \u003cdescription\u003e /by DD/MM/YYYY HH:MM","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xinnnyeee"},"content":"  ```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xinnnyeee"},"content":"- **EVENT**: Add an event with a start and end time.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xinnnyeee"},"content":"  ```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xinnnyeee"},"content":"  EVENT \u003cdescription\u003e /from DD/MM/YYYY HH:MM /to DD/MM/YYYY HH:MM","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xinnnyeee"},"content":"  ```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xinnnyeee"},"content":"### ‚úÖ Task Updates","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xinnnyeee"},"content":"- **Mark Task as Done**:","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xinnnyeee"},"content":"  ```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xinnnyeee"},"content":"  MARK \u003cindex\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xinnnyeee"},"content":"  ```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xinnnyeee"},"content":"- **Unmark Task as Not Done**:","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xinnnyeee"},"content":"  ```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xinnnyeee"},"content":"  UNMARK \u003cindex\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xinnnyeee"},"content":"  ```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xinnnyeee"},"content":"### üîç Searching \u0026 Listing","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xinnnyeee"},"content":"- **Find Tasks by Keyword**:","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xinnnyeee"},"content":"  ```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xinnnyeee"},"content":"  FIND \u003ckeyword\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xinnnyeee"},"content":"  ```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xinnnyeee"},"content":"- **List All Tasks and Notes**:","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xinnnyeee"},"content":"  ```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xinnnyeee"},"content":"  LIST","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xinnnyeee"},"content":"  ```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xinnnyeee"},"content":"### üóëÔ∏è Deletion","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xinnnyeee"},"content":"- **Delete a Task**:","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xinnnyeee"},"content":"  ```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xinnnyeee"},"content":"  DELETE \u003cindex\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xinnnyeee"},"content":"  ```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xinnnyeee"},"content":"### üìù Notes","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xinnnyeee"},"content":"- **Add a Note**:","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xinnnyeee"},"content":"  ```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xinnnyeee"},"content":"  NOTE /t \u003ctitle\u003e /d \u003cdescription\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xinnnyeee"},"content":"  ```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xinnnyeee"},"content":"- **Remove a Note**:","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xinnnyeee"},"content":"  ```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xinnnyeee"},"content":"  RMNOTE \u003ctitle\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xinnnyeee"},"content":"  ```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xinnnyeee"},"content":"## üíæ Storage","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xinnnyeee"},"content":"Ekko automatically saves tasks and notes to a local file (`ekko.txt`) in a `data` directory. Your tasks persist even after exiting the program.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"xinnnyeee"},"content":"## üöÄ Getting Started","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"xinnnyeee"},"content":"### Prerequisites","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"xinnnyeee"},"content":"- Java 17 or later","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"xinnnyeee"},"content":"- JavaFX 17","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"xinnnyeee"},"content":"### Running Ekko","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"xinnnyeee"},"content":"1. Download the JAR file ekko.jar from the latest release v2.0.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"xinnnyeee"},"content":"  ","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"xinnnyeee"},"content":"2. Navigate to the directory that contains the downloaded JAR file:","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"xinnnyeee"},"content":"   ```sh","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"xinnnyeee"},"content":"   cd Downloads","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"xinnnyeee"},"content":"3. Run the program with command:","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"xinnnyeee"},"content":"   ```sh","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"xinnnyeee"},"content":"   java -jar ekko.jar","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"xinnnyeee"},"content":"---","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"xinnnyeee"},"content":"Enjoy using Ekko! üéâ If you have any feature requests or issues, feel free to open an issue or contribute to the project!","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false}],"authorContributionMap":{"xinnnyeee":71,"-":8}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xinnnyeee"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xinnnyeee"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xinnnyeee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xinnnyeee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xinnnyeee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xinnnyeee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xinnnyeee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xinnnyeee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xinnnyeee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xinnnyeee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xinnnyeee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xinnnyeee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xinnnyeee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xinnnyeee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xinnnyeee"},"content":"    mainClass.set(\"ekko.Launcher\")","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xinnnyeee"},"content":"    archiveBaseName \u003d \"ekko\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xinnnyeee"},"content":"checkstyle {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xinnnyeee"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"xinnnyeee"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"xinnnyeee":20,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"xinnnyeee"},"content":"# üê± Ekko - Your Personal Task Manager","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xinnnyeee"},"content":"(...and emotional support cat \u003c3 Try typing in meow! )","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xinnnyeee"},"content":"Ekko is a simple, interactive task manager built with JavaFX. It helps users keep track of tasks, deadlines, and notes efficiently.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xinnnyeee"},"content":"\u003e To ekko the black cat, you\u0027re an orange, which ekko mistook for one of his orange wool balls. ","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xinnnyeee"},"content":"\"Those balls don\u0027t tend to be too intellectual, \" and ekko is a helpful cat, \"guess I would","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xinnnyeee"},"content":"help them remember stuff...only if they ask first! \"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xinnnyeee"},"content":"Notice all commands are capitalised? Don\u0027t worry, ekko is considerate of your intelligence! All commands are made __*case-insensitive*__, ","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xinnnyeee"},"content":"so you can type in anyhow you want! ","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xinnnyeee"},"content":"## Features","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xinnnyeee"},"content":"### ‚å®Ô∏è Get In-App User Manual by hitting __*ENTER*__","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xinnnyeee"},"content":"- Just send in a blank message, and Ekko would respond you with a guide!","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xinnnyeee"},"content":"### üìù Task Management","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xinnnyeee"},"content":"- **TODO**: Add a general task.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xinnnyeee"},"content":"  ```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xinnnyeee"},"content":"  TODO \u003cdescription\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xinnnyeee"},"content":"  e.g. todo running","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xinnnyeee"},"content":"  ```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xinnnyeee"},"content":"- **DEADLINE**: Add a task with a due date and time. For deadlines, **_time is optional_**, and its omission would result ","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xinnnyeee"},"content":"in the time being automatically set to **_2359_**.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xinnnyeee"},"content":"  ```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xinnnyeee"},"content":"  DEADLINE \u003cdescription\u003e /by DD/MM/YYYY (HH:MM)","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xinnnyeee"},"content":"  e.g. deadline homework /by 10/02/2025","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xinnnyeee"},"content":"    or deadline homework /by 10/02/2025 23:59","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xinnnyeee"},"content":"  ```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xinnnyeee"},"content":"- **EVENT**: Add an event with a start and end time. For events, time is compulsory, ","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xinnnyeee"},"content":"but you may omit the minute if it\u0027s a whole hour. ","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xinnnyeee"},"content":"  ```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xinnnyeee"},"content":"  EVENT \u003cdescription\u003e /from DD/MM/YYYY HH(:MM) /to DD/MM/YYYY HH(:MM)","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xinnnyeee"},"content":"  e.g. event dinner /from 10/09/2025 12 /to 10/09/2025 13","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xinnnyeee"},"content":"  ```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xinnnyeee"},"content":"### ‚úÖ Task Updates","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xinnnyeee"},"content":"- **Mark Task as Done**:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xinnnyeee"},"content":"  ```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xinnnyeee"},"content":"  MARK \u003cindex\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xinnnyeee"},"content":"  e.g. mark 1","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xinnnyeee"},"content":"  ```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xinnnyeee"},"content":"- **Unmark Task as Not Done**:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xinnnyeee"},"content":"  ```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xinnnyeee"},"content":"  UNMARK \u003cindex\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xinnnyeee"},"content":"  e.g. unmark 1","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xinnnyeee"},"content":"  ```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xinnnyeee"},"content":"### üîç Searching \u0026 Listing","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xinnnyeee"},"content":"- **Find Tasks by Keyword**:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xinnnyeee"},"content":"  ```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xinnnyeee"},"content":"  FIND \u003ckeyword\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xinnnyeee"},"content":"  e.g. find reading","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xinnnyeee"},"content":"  ```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xinnnyeee"},"content":"- **List All Tasks and Notes**:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"xinnnyeee"},"content":"  ```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"xinnnyeee"},"content":"  LIST","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"xinnnyeee"},"content":"  ```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"xinnnyeee"},"content":"### üóëÔ∏è Deletion","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"xinnnyeee"},"content":"- **Delete a Task**:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"xinnnyeee"},"content":"  ```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"xinnnyeee"},"content":"  DELETE \u003cindex\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"xinnnyeee"},"content":"  e.g. delete 0","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"xinnnyeee"},"content":"  ```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"xinnnyeee"},"content":"### üìù Notes","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"xinnnyeee"},"content":"- **Add a Note**:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"  ```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"xinnnyeee"},"content":"  NOTE /t \u003ctitle\u003e /d \u003cdescription\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"xinnnyeee"},"content":"  e.g. note /t height /d 185cm","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"xinnnyeee"},"content":"  ```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"xinnnyeee"},"content":"- **Remove a Note**:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"xinnnyeee"},"content":"  ```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"xinnnyeee"},"content":"  RMNOTE \u003ctitle\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"xinnnyeee"},"content":"  e.g. rmnote height","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"  ```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"xinnnyeee"},"content":"## üíæ Storage","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"xinnnyeee"},"content":"Ekko automatically saves tasks and notes to a local file (`ekko.txt`) in a `data` directory. Your tasks persist even after exiting the program.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"xinnnyeee"},"content":"## üöÄ Getting Started","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"xinnnyeee"},"content":"### Prerequisites","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"xinnnyeee"},"content":"- Java 17 or later","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"xinnnyeee"},"content":"- JavaFX 17","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"xinnnyeee"},"content":"### Running Ekko","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"xinnnyeee"},"content":"1. Download the JAR file from the latest release v2.0","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"xinnnyeee"},"content":"  ","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"xinnnyeee"},"content":"2. Navigate to the Downloads directory:","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"xinnnyeee"},"content":"   ```sh","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"xinnnyeee"},"content":"   cd Downloads/","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"xinnnyeee"},"content":"   ```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"xinnnyeee"},"content":"3. Run the program:","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"xinnnyeee"},"content":"   ```sh","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"xinnnyeee"},"content":"   java -jar ekko.jar","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"xinnnyeee"},"content":"   ```","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"xinnnyeee"},"content":"---","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"xinnnyeee"},"content":"Enjoy using Ekko! üéâ If you have any feature requests or issues, feel free to open an issue or contribute to the project!","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"xinnnyeee":85,"-":19}},{"path":"src/main/java/ekko/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinnnyeee"},"content":"package ekko;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xinnnyeee"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xinnnyeee"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xinnnyeee"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xinnnyeee"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xinnnyeee"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xinnnyeee"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xinnnyeee"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xinnnyeee"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xinnnyeee"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xinnnyeee"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xinnnyeee"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xinnnyeee"},"content":"/**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xinnnyeee"},"content":" * Handle the creation of Dialog Boxes","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xinnnyeee"},"content":" */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xinnnyeee"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xinnnyeee"},"content":"    @FXML","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xinnnyeee"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xinnnyeee"},"content":"    @FXML","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xinnnyeee"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xinnnyeee"},"content":"     * Initialise a dialog box with text and profile picture","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xinnnyeee"},"content":"     * @param text content of the dialog box","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xinnnyeee"},"content":"     * @param img profile picture of the text sender","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xinnnyeee"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xinnnyeee"},"content":"        try {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xinnnyeee"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xinnnyeee"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xinnnyeee"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xinnnyeee"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xinnnyeee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xinnnyeee"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xinnnyeee"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xinnnyeee"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xinnnyeee"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xinnnyeee"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xinnnyeee"},"content":"    private void flip() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xinnnyeee"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xinnnyeee"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xinnnyeee"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xinnnyeee"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xinnnyeee"},"content":"     * Create a new dialog box for user","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xinnnyeee"},"content":"     * @param s text","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xinnnyeee"},"content":"     * @param i image","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xinnnyeee"},"content":"     * @return the dialog box","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"xinnnyeee"},"content":"    public static DialogBox getUserDialog(String s, Image i) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"xinnnyeee"},"content":"        return new DialogBox(s, i);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"xinnnyeee"},"content":"     * Create a new dialog box for ekko","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"xinnnyeee"},"content":"     * @param s text","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"xinnnyeee"},"content":"     * @param i image","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"xinnnyeee"},"content":"     * @return the dialog box","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"xinnnyeee"},"content":"    public static DialogBox getEkkoDialog(String s, Image i) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"xinnnyeee"},"content":"        var db \u003d new DialogBox(s, i);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"xinnnyeee"},"content":"        db.flip();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"xinnnyeee"},"content":"        return db;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"xinnnyeee"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"xinnnyeee":74}},{"path":"src/main/java/ekko/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinnnyeee"},"content":"package ekko;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xinnnyeee"},"content":"import ekko.core.Main;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xinnnyeee"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xinnnyeee"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xinnnyeee"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xinnnyeee"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xinnnyeee"},"content":"public class Launcher {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xinnnyeee"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xinnnyeee"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xinnnyeee"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"xinnnyeee":13}},{"path":"src/main/java/ekko/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinnnyeee"},"content":"package ekko;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xinnnyeee"},"content":"import ekko.ui.Ekko;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xinnnyeee"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xinnnyeee"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xinnnyeee"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xinnnyeee"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xinnnyeee"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xinnnyeee"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xinnnyeee"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xinnnyeee"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xinnnyeee"},"content":"/**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xinnnyeee"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xinnnyeee"},"content":" */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xinnnyeee"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xinnnyeee"},"content":"    @FXML","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xinnnyeee"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xinnnyeee"},"content":"    @FXML","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xinnnyeee"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xinnnyeee"},"content":"    @FXML","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xinnnyeee"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xinnnyeee"},"content":"    @FXML","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xinnnyeee"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xinnnyeee"},"content":"    private Ekko ekko;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xinnnyeee"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/dino.png\"));","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xinnnyeee"},"content":"    private Image ekkoImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/ekko.png\"));","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xinnnyeee"},"content":"     * Initialise the interface, making sure that the scroll pane can be scrolled down","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xinnnyeee"},"content":"    @FXML","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xinnnyeee"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xinnnyeee"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xinnnyeee"},"content":"        scrollPane.setOnScroll(event -\u003e {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xinnnyeee"},"content":"            double deltaY \u003d event.getDeltaY(); // Get scroll amount","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xinnnyeee"},"content":"            double height \u003d scrollPane.getContent().getBoundsInLocal().getHeight();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xinnnyeee"},"content":"            double vValue \u003d scrollPane.getVvalue();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xinnnyeee"},"content":"            // Adjust scrolling speed","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xinnnyeee"},"content":"            scrollPane.setVvalue(vValue - deltaY / height);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xinnnyeee"},"content":"        });","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xinnnyeee"},"content":"     * Injects the Ekko instance","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xinnnyeee"},"content":"    public void setEkko(Ekko e) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xinnnyeee"},"content":"        ekko \u003d e;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xinnnyeee"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xinnnyeee"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"xinnnyeee"},"content":"    @FXML","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"xinnnyeee"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"xinnnyeee"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"xinnnyeee"},"content":"        assert input !\u003d null : \"User input cannot be null.\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"xinnnyeee"},"content":"        String response \u003d ekko.getResponse(input);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"xinnnyeee"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"xinnnyeee"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"xinnnyeee"},"content":"                DialogBox.getEkkoDialog(response, ekkoImage)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"xinnnyeee"},"content":"        );","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"xinnnyeee"},"content":"        // Ensure the ScrollPane scrolls to the bottom","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"xinnnyeee"},"content":"        Platform.runLater(() -\u003e {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"xinnnyeee"},"content":"            scrollPane.vvalueProperty().unbind();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"xinnnyeee"},"content":"            scrollPane.setVvalue(1.0);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"xinnnyeee"},"content":"        });","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"xinnnyeee"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"xinnnyeee"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"xinnnyeee":76}},{"path":"src/main/java/ekko/core/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinnnyeee"},"content":"package ekko.core;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xinnnyeee"},"content":"/**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xinnnyeee"},"content":" * Usable commands of the program Ekko.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xinnnyeee"},"content":" */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xinnnyeee"},"content":"public enum Commands {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xinnnyeee"},"content":"    TODO, MARK, UNMARK, LIST, BYE, DEADLINE, EVENT, DELETE, MEOW, FIND, NOTE, RMNOTE, HOW","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xinnnyeee"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"xinnnyeee":8}},{"path":"src/main/java/ekko/core/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinnnyeee"},"content":"package ekko.core;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xinnnyeee"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xinnnyeee"},"content":"import ekko.MainWindow;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xinnnyeee"},"content":"import ekko.ui.Ekko;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xinnnyeee"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xinnnyeee"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xinnnyeee"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xinnnyeee"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xinnnyeee"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xinnnyeee"},"content":"/**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xinnnyeee"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xinnnyeee"},"content":" */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xinnnyeee"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xinnnyeee"},"content":"     * Instantiate a new Ekko instance","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xinnnyeee"},"content":"    private Ekko ekko \u003d new Ekko();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xinnnyeee"},"content":"     * Start the application","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xinnnyeee"},"content":"     * @param stage the primary stage for this application, onto which","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xinnnyeee"},"content":"     *              the application scene can be set.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xinnnyeee"},"content":"     *              Applications may create other stages, if needed, but they will not be","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xinnnyeee"},"content":"     *              primary stages.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xinnnyeee"},"content":"    @Override","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xinnnyeee"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xinnnyeee"},"content":"        try {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xinnnyeee"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xinnnyeee"},"content":"            if (fxmlLoader.getLocation() \u003d\u003d null) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xinnnyeee"},"content":"                throw new IOException(\"FXML file not found: /view/MainWindow.fxml\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xinnnyeee"},"content":"            }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xinnnyeee"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xinnnyeee"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xinnnyeee"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xinnnyeee"},"content":"            stage.setTitle(\"Ekko Chatbot\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xinnnyeee"},"content":"            stage.setMinHeight(220);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xinnnyeee"},"content":"            stage.setMinWidth(417);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xinnnyeee"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setEkko(ekko);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xinnnyeee"},"content":"            stage.setOnCloseRequest(event -\u003e System.exit(0)); // Ensure proper exit","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xinnnyeee"},"content":"            stage.show();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xinnnyeee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xinnnyeee"},"content":"            System.err.println(\"Error loading MainWindow.fxml. Check the file path.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xinnnyeee"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xinnnyeee"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xinnnyeee"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"xinnnyeee":51}},{"path":"src/main/java/ekko/core/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinnnyeee"},"content":"package ekko.core;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xinnnyeee"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xinnnyeee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xinnnyeee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xinnnyeee"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xinnnyeee"},"content":"import java.util.List;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xinnnyeee"},"content":"import ekko.notes.NotesCollection;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xinnnyeee"},"content":"import ekko.storage.Storage;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xinnnyeee"},"content":"import ekko.task.Deadline;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xinnnyeee"},"content":"import ekko.task.Event;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xinnnyeee"},"content":"import ekko.task.Todo;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xinnnyeee"},"content":"import ekko.task.Todolist;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xinnnyeee"},"content":"/**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xinnnyeee"},"content":" * Handle the parsing of user\u0027s input.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xinnnyeee"},"content":" */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xinnnyeee"},"content":"public class Parser {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xinnnyeee"},"content":"    private static final List\u003cDateTimeFormatter\u003e DATE_TIME_FORMATTERS \u003d List.of(","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xinnnyeee"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"),","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xinnnyeee"},"content":"            DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"),","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xinnnyeee"},"content":"            DateTimeFormatter.ofPattern(\"dd MM yyyy HH:mm\"),","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xinnnyeee"},"content":"            DateTimeFormatter.ofPattern(\"yyyy MM dd HH:mm\"),","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xinnnyeee"},"content":"            DateTimeFormatter.ofPattern(\"MM-dd-yyyy HH:mm\"),","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xinnnyeee"},"content":"            DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"),","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xinnnyeee"},"content":"            DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\"),","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xinnnyeee"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH\"),","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xinnnyeee"},"content":"            DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH\"),","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xinnnyeee"},"content":"            DateTimeFormatter.ofPattern(\"MM-dd-yyyy HH\"),","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xinnnyeee"},"content":"            DateTimeFormatter.ofPattern(\"MMM dd yyyy HH\"),","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xinnnyeee"},"content":"            DateTimeFormatter.ofPattern(\"dd MMM yyyy HH\")","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xinnnyeee"},"content":"    );","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xinnnyeee"},"content":"    private static final List\u003cDateTimeFormatter\u003e DATE_FORMATTERS \u003d List.of(","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xinnnyeee"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"),","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xinnnyeee"},"content":"            DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"),","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xinnnyeee"},"content":"            DateTimeFormatter.ofPattern(\"dd MM yyyy\"),","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xinnnyeee"},"content":"            DateTimeFormatter.ofPattern(\"yyyy MM dd\"),","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xinnnyeee"},"content":"            DateTimeFormatter.ofPattern(\"MM-dd-yyyy\"),","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xinnnyeee"},"content":"            DateTimeFormatter.ofPattern(\"MMM dd yyyy\"),","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xinnnyeee"},"content":"            DateTimeFormatter.ofPattern(\"dd MMM yyyy\")","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xinnnyeee"},"content":"    );","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xinnnyeee"},"content":"     * Extract the command word of an input","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xinnnyeee"},"content":"     * @param input String user input","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xinnnyeee"},"content":"     * @return String command word","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xinnnyeee"},"content":"    public static Commands parseCommand(String input) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xinnnyeee"},"content":"        return Commands.valueOf(input.trim().split(\" \")[0].toUpperCase());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xinnnyeee"},"content":"     * Parse the String date and time input to a LocalDateTime object","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xinnnyeee"},"content":"     * @param input String date and time","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"xinnnyeee"},"content":"     * @return LocalDateTime","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"xinnnyeee"},"content":"    public static LocalDateTime parseDateTime(String input) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"xinnnyeee"},"content":"        String trimmedInput \u003d input.trim();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"xinnnyeee"},"content":"        for (DateTimeFormatter formatter : DATE_TIME_FORMATTERS) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"xinnnyeee"},"content":"            try {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"xinnnyeee"},"content":"                return LocalDateTime.parse(trimmedInput, formatter);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"xinnnyeee"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"xinnnyeee"},"content":"                continue;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"xinnnyeee"},"content":"            }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"xinnnyeee"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"xinnnyeee"},"content":"        for (DateTimeFormatter formatter : DATE_FORMATTERS) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"xinnnyeee"},"content":"            try {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"xinnnyeee"},"content":"                return LocalDate.parse(trimmedInput, formatter).atTime(23, 59, 59);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"xinnnyeee"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"xinnnyeee"},"content":"                continue;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"xinnnyeee"},"content":"            }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"xinnnyeee"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"xinnnyeee"},"content":"        throw new IllegalArgumentException(\"Invalid date or date-time format: \" + trimmedInput);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"xinnnyeee"},"content":"     * Parse input with command EVENT","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"xinnnyeee"},"content":"     * @param todolist todolist in ekko","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"xinnnyeee"},"content":"     * @param storage file in ekko","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"xinnnyeee"},"content":"     * @param input String user input","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"xinnnyeee"},"content":"     * @return new Event created","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"xinnnyeee"},"content":"    public static String parseEvent(Todolist todolist, Storage storage, String input) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"xinnnyeee"},"content":"        String des \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"xinnnyeee"},"content":"        String start \u003d des.split(\"/from \")[1].split(\" /to\")[0];","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"xinnnyeee"},"content":"        LocalDateTime startTime \u003d Parser.parseDateTime(start);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"xinnnyeee"},"content":"        String end \u003d des.split(\"/to \")[1];","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"xinnnyeee"},"content":"        LocalDateTime endTime \u003d Parser.parseDateTime(end);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"xinnnyeee"},"content":"        des \u003d des.split(\"/from\")[0];","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"xinnnyeee"},"content":"        String resp \u003d todolist.add(new Event(des, startTime, endTime));","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"xinnnyeee"},"content":"        storage.updateFile(todolist);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"xinnnyeee"},"content":"        return resp;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"xinnnyeee"},"content":"     * Parse input with command TODO to create a Todo object","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"xinnnyeee"},"content":"     * @param todolist todolist in ekko","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"xinnnyeee"},"content":"     * @param storage file in ekko","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"xinnnyeee"},"content":"     * @param input String user input","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"xinnnyeee"},"content":"     * @return new Todo created","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"xinnnyeee"},"content":"    public static String parseTodo(Todolist todolist, Storage storage, String input) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"xinnnyeee"},"content":"        String des \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"xinnnyeee"},"content":"        String resp \u003d todolist.add(new Todo(des));","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"xinnnyeee"},"content":"        storage.updateFile(todolist);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"xinnnyeee"},"content":"        return resp;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"xinnnyeee"},"content":"     * Parse input with command DEADLINE to create a Deadline Object","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"xinnnyeee"},"content":"     * @param todolist todolist in ekko","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"xinnnyeee"},"content":"     * @param storage file in ekko","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"xinnnyeee"},"content":"     * @param input String user input","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"xinnnyeee"},"content":"     * @return new Deadline created","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"xinnnyeee"},"content":"    public static String parseDeadline(Todolist todolist, Storage storage, String input) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"xinnnyeee"},"content":"        String des \u003d input.split(\" \", 2)[1].split(\"/by\")[0];","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"xinnnyeee"},"content":"        String stringDate \u003d input.split(\"/by \")[1];","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"xinnnyeee"},"content":"        LocalDateTime dueDateTime \u003d Parser.parseDateTime(stringDate);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"xinnnyeee"},"content":"        String resp \u003d todolist.add(new Deadline(des, dueDateTime));","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"xinnnyeee"},"content":"        storage.updateFile(todolist);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"xinnnyeee"},"content":"        return resp;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"xinnnyeee"},"content":"     * Output words of love (just an Easter egg)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"xinnnyeee"},"content":"     * @return String easter egg","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"xinnnyeee"},"content":"    public static String parseMeow() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"xinnnyeee"},"content":"        return \"Meow, I love you too.\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"xinnnyeee"},"content":"     * Parse input with Find command.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"xinnnyeee"},"content":"     * @param todolist todolist in ekko","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"xinnnyeee"},"content":"     * @param storage file in ekko","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"xinnnyeee"},"content":"     * @param input String user input","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"xinnnyeee"},"content":"     * @return search keyword","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"xinnnyeee"},"content":"    public static String parseFind(Todolist todolist, Storage storage, String input) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"xinnnyeee"},"content":"        String keyword \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"xinnnyeee"},"content":"        String resp \u003d todolist.filter(keyword);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"xinnnyeee"},"content":"        if (resp.isBlank()) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"xinnnyeee"},"content":"            return \"Nothing found meow, maybe you can add that into your list? \";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"xinnnyeee"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"xinnnyeee"},"content":"        return \"Here are the relevant items on your list: \\n\" + resp;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"xinnnyeee"},"content":"     * Parse the MARK command.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"xinnnyeee"},"content":"     * @param todolist todolist in ekko","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"xinnnyeee"},"content":"     * @param storage file in ekko","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"xinnnyeee"},"content":"     * @param input from user","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"xinnnyeee"},"content":"     * @return Response from Ekko","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"xinnnyeee"},"content":"    public static String parseMark(Todolist todolist, Storage storage, String input) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"xinnnyeee"},"content":"        try {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"xinnnyeee"},"content":"            int index \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"xinnnyeee"},"content":"            String resp \u003d todolist.mark(index);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"xinnnyeee"},"content":"            storage.updateFile(todolist);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"xinnnyeee"},"content":"            return resp;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"xinnnyeee"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"xinnnyeee"},"content":"            return \"meow, please put a number after the command.\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"xinnnyeee"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"xinnnyeee"},"content":"     * Parse the UNMARK command.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"xinnnyeee"},"content":"     * @param todolist todolist in ekko","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"xinnnyeee"},"content":"     * @param storage file in ekko","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"xinnnyeee"},"content":"     * @param input from user","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"xinnnyeee"},"content":"     * @return Response from Ekko","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"xinnnyeee"},"content":"    public static String parseUnmark(Todolist todolist, Storage storage, String input) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"xinnnyeee"},"content":"        try {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"xinnnyeee"},"content":"            int index \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"xinnnyeee"},"content":"            String resp \u003d todolist.unmark(index);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"xinnnyeee"},"content":"            storage.updateFile(todolist);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"xinnnyeee"},"content":"            return resp;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"xinnnyeee"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"xinnnyeee"},"content":"            return \"meow, please put a number after the command.\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"xinnnyeee"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"xinnnyeee"},"content":"     * Parse the DELETE command.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"xinnnyeee"},"content":"     * @param todolist todolist in ekko","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"xinnnyeee"},"content":"     * @param storage file in ekko","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"xinnnyeee"},"content":"     * @param input from user","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"xinnnyeee"},"content":"     * @return Response from Ekko","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"xinnnyeee"},"content":"    public static String parseDelete(Todolist todolist, Storage storage, String input) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"xinnnyeee"},"content":"        try {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"xinnnyeee"},"content":"            int index \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"xinnnyeee"},"content":"            String resp \u003d todolist.delete(index);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"xinnnyeee"},"content":"            storage.updateFile(todolist);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"xinnnyeee"},"content":"            return resp;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"xinnnyeee"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"xinnnyeee"},"content":"            return \"meow, please put a number after the command.\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"xinnnyeee"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"xinnnyeee"},"content":"     * Parse the NOTE command.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"xinnnyeee"},"content":"     * @param notelist note collection in ekko","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"xinnnyeee"},"content":"     * @param storage storage instance","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"xinnnyeee"},"content":"     * @param input user input","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"xinnnyeee"},"content":"     * @return response message","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"xinnnyeee"},"content":"    public static String parseNote(NotesCollection notelist, Storage storage, String input) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"xinnnyeee"},"content":"        String title \u003d input.split(\"/t \", 2)[1].split(\"/d \", 2)[0].trim();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"xinnnyeee"},"content":"        String description \u003d input.split(\"/d \", 2)[1].trim();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"xinnnyeee"},"content":"        String resp \u003d notelist.addNote(title, description);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"xinnnyeee"},"content":"        storage.updateNotes(notelist);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"xinnnyeee"},"content":"        return resp;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"xinnnyeee"},"content":"     * Parse the RMNOTE command.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"xinnnyeee"},"content":"     * @param notelist note collection in ekko","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"xinnnyeee"},"content":"     * @param storage storage instance in ekko","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"xinnnyeee"},"content":"     * @param input user input","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"xinnnyeee"},"content":"     * @return response message by ekko","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"xinnnyeee"},"content":"    public static String parseRMnote(NotesCollection notelist, Storage storage, String input) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"xinnnyeee"},"content":"        String title \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"xinnnyeee"},"content":"        String resp \u003d notelist.removeNote(title);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"xinnnyeee"},"content":"        storage.updateNotes(notelist);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"xinnnyeee"},"content":"        return resp;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"xinnnyeee"},"content":"     * Parse the LIST command.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"xinnnyeee"},"content":"     * @param notelist note collection in ekko","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"xinnnyeee"},"content":"     * @param todolist todolist in ekko","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"xinnnyeee"},"content":"     * @return string of both the task list and the note collection","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"xinnnyeee"},"content":"    public static String parseList(NotesCollection notelist, Todolist todolist) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"xinnnyeee"},"content":"        String todo \u003d todolist.toString();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"xinnnyeee"},"content":"        String note \u003d notelist.toString();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"xinnnyeee"},"content":"        if (note.isEmpty()) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"xinnnyeee"},"content":"            note \u003d \"Meow, your note list is empty! Anything you want ekko to remember? \";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"xinnnyeee"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"xinnnyeee"},"content":"        if (todo.isEmpty()) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"xinnnyeee"},"content":"            todo \u003d \"Meow, your task list is empty! Yayy let\u0027s take a break together~\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"xinnnyeee"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"xinnnyeee"},"content":"        return \"Your tasks: \\n\" + todo + \"\\n\\nYour notes: \\n\" + note;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"xinnnyeee"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"xinnnyeee":253}},{"path":"src/main/java/ekko/notes/Note.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinnnyeee"},"content":"package ekko.notes;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xinnnyeee"},"content":"/**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xinnnyeee"},"content":" * A Note constitute a title and a description","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xinnnyeee"},"content":" */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xinnnyeee"},"content":"public class Note {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xinnnyeee"},"content":"    private String title;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xinnnyeee"},"content":"    private String description;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xinnnyeee"},"content":"     * Instantiates a Note","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xinnnyeee"},"content":"    public Note(String title, String description) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xinnnyeee"},"content":"        this.title \u003d title;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xinnnyeee"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xinnnyeee"},"content":"     * Get title of a Note","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xinnnyeee"},"content":"     * @return title","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xinnnyeee"},"content":"    public String getTitle() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xinnnyeee"},"content":"        return title;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xinnnyeee"},"content":"     * Get description of a Note","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xinnnyeee"},"content":"     * @return description","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xinnnyeee"},"content":"    public String getDescription() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xinnnyeee"},"content":"        return description;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xinnnyeee"},"content":"     * Print a Note","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xinnnyeee"},"content":"     * @return string format of a note","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xinnnyeee"},"content":"    public String toString() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xinnnyeee"},"content":"        return title + \": \" + description;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xinnnyeee"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"xinnnyeee":42}},{"path":"src/main/java/ekko/notes/NotesCollection.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinnnyeee"},"content":"package ekko.notes;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xinnnyeee"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xinnnyeee"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xinnnyeee"},"content":"/**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xinnnyeee"},"content":" * A collection of Notes","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xinnnyeee"},"content":" */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xinnnyeee"},"content":"public class NotesCollection {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xinnnyeee"},"content":"    private HashMap\u003cString, String\u003e notes;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xinnnyeee"},"content":"     * HashMap used for easy look up","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xinnnyeee"},"content":"    public NotesCollection() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xinnnyeee"},"content":"        notes \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xinnnyeee"},"content":"     * Adding a Note to a collection of notes","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xinnnyeee"},"content":"     * @param title the note\u0027s title","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xinnnyeee"},"content":"     * @param content the note\u0027s content","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xinnnyeee"},"content":"     * @return response message for adding a Note to the collection","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xinnnyeee"},"content":"    public String addNote(String title, String content) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xinnnyeee"},"content":"        notes.put(title, content);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xinnnyeee"},"content":"        return \"Ekko has helped you remember it!\\n\" + title + \": \" + content;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xinnnyeee"},"content":"     * Adding a Note to a collection of notes","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xinnnyeee"},"content":"     * @param note the note being added","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xinnnyeee"},"content":"     * @return response message for adding a Note to the collection","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xinnnyeee"},"content":"    public String addNote(Note note) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xinnnyeee"},"content":"        notes.put(note.getTitle(), note.getDescription());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xinnnyeee"},"content":"        return \"Ekko has helped you remember it!\\n\" + note.getTitle() + \": \" + note.getDescription();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xinnnyeee"},"content":"     * Remove a Note from the collection","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xinnnyeee"},"content":"     * @param title title of the note","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xinnnyeee"},"content":"     * @return response message for deleting the Note from the collection","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xinnnyeee"},"content":"    public String removeNote(String title) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xinnnyeee"},"content":"        notes.remove(title);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xinnnyeee"},"content":"        return \"Ekko has helped you removed: \" + title;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xinnnyeee"},"content":"     * Convert the note collection to a string.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xinnnyeee"},"content":"     * @return string representation of the note collection.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xinnnyeee"},"content":"    public String toString() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xinnnyeee"},"content":"        return notes.entrySet().stream().map(e -\u003e e.getKey() + \": \" + e.getValue())","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xinnnyeee"},"content":"                    .collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xinnnyeee"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"xinnnyeee":58}},{"path":"src/main/java/ekko/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinnnyeee"},"content":"package ekko.storage;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xinnnyeee"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xinnnyeee"},"content":"import java.io.File;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xinnnyeee"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xinnnyeee"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xinnnyeee"},"content":"import ekko.notes.NotesCollection;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xinnnyeee"},"content":"import ekko.task.Todolist;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xinnnyeee"},"content":"/**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xinnnyeee"},"content":" * Handles the creation of directory and file, writing and updating the file.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xinnnyeee"},"content":" */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xinnnyeee"},"content":"public class Storage {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xinnnyeee"},"content":"    private String dirPath;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xinnnyeee"},"content":"    private String todoPath;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xinnnyeee"},"content":"    private String notePath;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xinnnyeee"},"content":"     * Instantiates a Storage object with one directory and two files.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xinnnyeee"},"content":"    public Storage() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xinnnyeee"},"content":"        this.dirPath \u003d makeDir();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xinnnyeee"},"content":"        this.todoPath \u003d createFile(\"ekko.txt\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xinnnyeee"},"content":"        this.notePath \u003d createFile(\"note.txt\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xinnnyeee"},"content":"     * Creates a directory named \"data\" in the project folder if it does not exist.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xinnnyeee"},"content":"     * @return the path to the created directory.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xinnnyeee"},"content":"    private String makeDir() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xinnnyeee"},"content":"        String projPath \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xinnnyeee"},"content":"        String dirPath \u003d projPath + File.separator + \"data\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xinnnyeee"},"content":"        File dir \u003d new File(dirPath);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xinnnyeee"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xinnnyeee"},"content":"            dir.mkdir();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xinnnyeee"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xinnnyeee"},"content":"        return dirPath;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xinnnyeee"},"content":"     * Creates a file in the directory if it does not exist.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xinnnyeee"},"content":"     * @param fileName name of the file.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xinnnyeee"},"content":"     * @return the path to the created file.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xinnnyeee"},"content":"    private String createFile(String fileName) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xinnnyeee"},"content":"        String filePath \u003d dirPath + File.separator + fileName;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xinnnyeee"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xinnnyeee"},"content":"        try {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xinnnyeee"},"content":"            if (!file.exists()) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xinnnyeee"},"content":"                file.createNewFile();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xinnnyeee"},"content":"            }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xinnnyeee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xinnnyeee"},"content":"            System.out.println(\"Error creating file: \" + e.getMessage());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xinnnyeee"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xinnnyeee"},"content":"        return filePath;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"xinnnyeee"},"content":"     * Updates both todolist and notelist in this storage to sync it with the current todolist.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"xinnnyeee"},"content":"     * @param todolist current todolist to sync.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"xinnnyeee"},"content":"    public void updateFile(Todolist todolist) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"xinnnyeee"},"content":"        if (todoPath \u003d\u003d null) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"xinnnyeee"},"content":"            System.out.println(\"Error: File path is not initialized.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"xinnnyeee"},"content":"            return;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"xinnnyeee"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"xinnnyeee"},"content":"        try {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"xinnnyeee"},"content":"            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(todoPath));","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"xinnnyeee"},"content":"            bw.write(todolist.toString());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"xinnnyeee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"xinnnyeee"},"content":"            System.out.println(\"Uh oh, something went wrong when trying to write into a file.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"xinnnyeee"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"xinnnyeee"},"content":"     * Update the note tracking file to the latest change.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"xinnnyeee"},"content":"     * @param notelist current notelist in the storage instance.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"xinnnyeee"},"content":"    public void updateNotes(NotesCollection notelist) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"xinnnyeee"},"content":"        if (notePath \u003d\u003d null) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"xinnnyeee"},"content":"            System.out.println(\"Error: File path is not initialized.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"xinnnyeee"},"content":"            return;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"xinnnyeee"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"xinnnyeee"},"content":"        try {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"xinnnyeee"},"content":"            BufferedWriter bw2 \u003d new BufferedWriter(new FileWriter(notePath));","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"xinnnyeee"},"content":"            bw2.write(notelist.toString());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"xinnnyeee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"xinnnyeee"},"content":"            System.out.println(\"Uh oh, something went wrong when trying to write into a file.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"xinnnyeee"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"xinnnyeee"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"xinnnyeee":95}},{"path":"src/main/java/ekko/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinnnyeee"},"content":"package ekko.task;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xinnnyeee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xinnnyeee"},"content":"/**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xinnnyeee"},"content":" * A deadline.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xinnnyeee"},"content":" */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xinnnyeee"},"content":"public class Deadline extends Todo {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xinnnyeee"},"content":"    private LocalDateTime dueDate;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xinnnyeee"},"content":"     * Create a deadline.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xinnnyeee"},"content":"     * @param description task description","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xinnnyeee"},"content":"     * @param dueDate date and time when the task is due","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xinnnyeee"},"content":"    public Deadline(String description, LocalDateTime dueDate) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xinnnyeee"},"content":"        super(description);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xinnnyeee"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xinnnyeee"},"content":"     * String representation of the deadline.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xinnnyeee"},"content":"     * @return tag, done status and description","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xinnnyeee"},"content":"    @Override","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xinnnyeee"},"content":"    public String toString() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xinnnyeee"},"content":"        return String.format(\"[D] %s %s (by: %s)\", super.printDone(), super.printDes(), this.dueDate.toString());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xinnnyeee"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"xinnnyeee":28}},{"path":"src/main/java/ekko/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinnnyeee"},"content":"package ekko.task;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xinnnyeee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xinnnyeee"},"content":"/**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xinnnyeee"},"content":" * Events are Todos with start and end time.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xinnnyeee"},"content":" */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xinnnyeee"},"content":"public class Event extends Todo {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xinnnyeee"},"content":"    private LocalDateTime start;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xinnnyeee"},"content":"    private LocalDateTime end;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xinnnyeee"},"content":"     * Create an event.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xinnnyeee"},"content":"     * @param description String description","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xinnnyeee"},"content":"     * @param start starting date and time of the event","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xinnnyeee"},"content":"     * @param end ending date and time of the event","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xinnnyeee"},"content":"    public Event(String description, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xinnnyeee"},"content":"        super(description);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xinnnyeee"},"content":"        if (!start.isBefore(end)) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xinnnyeee"},"content":"            throw new IllegalArgumentException(\"The start time must be before the end time.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xinnnyeee"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xinnnyeee"},"content":"        this.start \u003d start;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xinnnyeee"},"content":"        this.end \u003d end;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xinnnyeee"},"content":"     * Convert the event to its String representation.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xinnnyeee"},"content":"     * @return String","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xinnnyeee"},"content":"    @Override","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xinnnyeee"},"content":"    public String toString() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xinnnyeee"},"content":"        return String.format(\"[E] %s %s (from: %s to: %s)\",","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xinnnyeee"},"content":"            super.printDone(), super.printDes(), this.start.toString(), this.end.toString());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xinnnyeee"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"xinnnyeee":36}},{"path":"src/main/java/ekko/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinnnyeee"},"content":"package ekko.task;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xinnnyeee"},"content":"/**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xinnnyeee"},"content":" * A task to be completed, the most generic item on the Todolist.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xinnnyeee"},"content":" */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xinnnyeee"},"content":"public class Todo {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xinnnyeee"},"content":"    private String description;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xinnnyeee"},"content":"    private boolean done;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xinnnyeee"},"content":"     * Instantiate a task","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xinnnyeee"},"content":"     * @param description description of the task","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xinnnyeee"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xinnnyeee"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xinnnyeee"},"content":"        this.done \u003d false;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xinnnyeee"},"content":"     * Mark the task as done.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xinnnyeee"},"content":"    public void markDone() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xinnnyeee"},"content":"        this.done \u003d true;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xinnnyeee"},"content":"     * Check whether the task is done.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xinnnyeee"},"content":"     * @return boolean","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xinnnyeee"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xinnnyeee"},"content":"        return done;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xinnnyeee"},"content":"     * Make the task undone.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xinnnyeee"},"content":"    public void unDo() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xinnnyeee"},"content":"        this.done \u003d false;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xinnnyeee"},"content":"     * Return the description String of the task.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xinnnyeee"},"content":"     * @return description","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xinnnyeee"},"content":"    public String printDes() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xinnnyeee"},"content":"        return description;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xinnnyeee"},"content":"     * Return the String representation of the checkbox.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xinnnyeee"},"content":"     * @return String checkbox","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xinnnyeee"},"content":"    public String printDone() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xinnnyeee"},"content":"        if (done) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xinnnyeee"},"content":"            return \"[X]\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xinnnyeee"},"content":"        } else {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xinnnyeee"},"content":"            return \"[ ]\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xinnnyeee"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"xinnnyeee"},"content":"     * Return the String representation of the entire task.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"xinnnyeee"},"content":"     * @return the task type, the checkbox and the task description","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"xinnnyeee"},"content":"    public String toString() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"xinnnyeee"},"content":"        return String.format(\"[T] %s %s\", printDone(), printDes());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"xinnnyeee"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"xinnnyeee":67}},{"path":"src/main/java/ekko/task/Todolist.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinnnyeee"},"content":"package ekko.task;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xinnnyeee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xinnnyeee"},"content":"import java.util.List;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xinnnyeee"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xinnnyeee"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xinnnyeee"},"content":"/**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xinnnyeee"},"content":" * A collection of all the possible activities (todos).","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xinnnyeee"},"content":" */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xinnnyeee"},"content":"public class Todolist {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xinnnyeee"},"content":"    private int count;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xinnnyeee"},"content":"    private List\u003cTodo\u003e list;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xinnnyeee"},"content":"     * Instantiates a todolist with number of tasks and an arraylist","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xinnnyeee"},"content":"    public Todolist() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xinnnyeee"},"content":"        this.count \u003d 0;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xinnnyeee"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xinnnyeee"},"content":"     * Adding a Todo to the list.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xinnnyeee"},"content":"     * @param task a todo","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xinnnyeee"},"content":"     * @return String notation for completing the task","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xinnnyeee"},"content":"    public String add(Todo task) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xinnnyeee"},"content":"        assert task !\u003d null : \"Task cannot be null!\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xinnnyeee"},"content":"        this.count +\u003d 1;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xinnnyeee"},"content":"        list.add(task);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xinnnyeee"},"content":"        return String.format(\"Got it! I\u0027ve added this task: \\n%s\\nNow you have %d task(s) in the list.\",","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xinnnyeee"},"content":"                task.toString(), count);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xinnnyeee"},"content":"     * Convert the todolist to a long String, separated by new lines.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xinnnyeee"},"content":"     * @return long String separated by new lines","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xinnnyeee"},"content":"    public String toString() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xinnnyeee"},"content":"        return IntStream.range(0, list.size())","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xinnnyeee"},"content":"                .mapToObj(i -\u003e (i + 1) + \". \" + list.get(i).toString())","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xinnnyeee"},"content":"                .collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xinnnyeee"},"content":"     * Unmark a Todo on the list.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xinnnyeee"},"content":"     * @param index the index number of the item","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xinnnyeee"},"content":"     * @return completion message","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xinnnyeee"},"content":"    public String unmark(int index) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xinnnyeee"},"content":"        if (index \u003c\u003d 0 || index \u003e list.size()) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xinnnyeee"},"content":"            return \"Beware! You can\u0027t unmark a task that\u0027s not on the list meow!\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xinnnyeee"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xinnnyeee"},"content":"        Todo target \u003d list.get(index - 1);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xinnnyeee"},"content":"        assert target.isDone() : \"The selected task hasn\u0027t been marked meow!\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xinnnyeee"},"content":"        target.unDo();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xinnnyeee"},"content":"        return String.format(\"Meow, please remember to do it still...\\n%s\", target);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"xinnnyeee"},"content":"     * Mark a Todo as done.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"xinnnyeee"},"content":"     * @param index the index number of the item","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"xinnnyeee"},"content":"     * @return completion message","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"xinnnyeee"},"content":"    public String mark(int index) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"xinnnyeee"},"content":"        assert index \u003e 0 \u0026\u0026 index \u003c\u003d count : \"Index out of bounds for marking task!\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"xinnnyeee"},"content":"        if (index \u003c\u003d 0 || index \u003e list.size()) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"xinnnyeee"},"content":"            return \"Beware! You can\u0027t mark a task that\u0027s not on the list meow!\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"xinnnyeee"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"xinnnyeee"},"content":"        Todo target \u003d list.get(index - 1);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"xinnnyeee"},"content":"        target.markDone();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"xinnnyeee"},"content":"        return String.format(\"Yippee! One task off the list: \\n%s\", target);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"xinnnyeee"},"content":"     * Delete a Todo from the list.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"xinnnyeee"},"content":"     * @param index the index number of the item","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"xinnnyeee"},"content":"     * @return completion message","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"xinnnyeee"},"content":"    public String delete(int index) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"xinnnyeee"},"content":"        assert index \u003e 0 \u0026\u0026 index \u003c\u003d count : \"Selected task not in your list!\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"xinnnyeee"},"content":"        if (index \u003c\u003d 0 || index \u003e list.size()) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"xinnnyeee"},"content":"            return \"You can\u0027t delete a task that\u0027s not on the list meow!\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"xinnnyeee"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"xinnnyeee"},"content":"        Todo target \u003d list.get(index - 1);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"xinnnyeee"},"content":"        list.remove(index - 1);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"xinnnyeee"},"content":"        count -\u003d 1;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"xinnnyeee"},"content":"        return String.format(\"Ekko has eaten your task!\\n%s\\nOnly %d tasks left! Jiayouu\",","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"xinnnyeee"},"content":"            target.toString(), count);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"xinnnyeee"},"content":"     * Find the task with keyword search","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"xinnnyeee"},"content":"     * @param keyword that the task description contain","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"xinnnyeee"},"content":"     * @return the task(s) containing the keyword(s)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"xinnnyeee"},"content":"    public String filter(String keyword) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"xinnnyeee"},"content":"        List\u003cTodo\u003e filteredItems \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"xinnnyeee"},"content":"        for (int i \u003d 0; i \u003c count; i++) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"xinnnyeee"},"content":"            if (list.get(i).printDes().contains(keyword)) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"xinnnyeee"},"content":"                filteredItems.add(list.get(i));","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"xinnnyeee"},"content":"            }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"xinnnyeee"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"xinnnyeee"},"content":"        return filteredItems.stream().map(Todo::toString).collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"xinnnyeee"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"xinnnyeee":106}},{"path":"src/main/java/ekko/ui/Ekko.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinnnyeee"},"content":"package ekko.ui;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xinnnyeee"},"content":"import ekko.core.Commands;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xinnnyeee"},"content":"import ekko.core.Parser;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xinnnyeee"},"content":"import ekko.notes.NotesCollection;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xinnnyeee"},"content":"import ekko.storage.Storage;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xinnnyeee"},"content":"import ekko.task.Todolist;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xinnnyeee"},"content":"/**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xinnnyeee"},"content":" * Handle user interface functionalities.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xinnnyeee"},"content":" */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xinnnyeee"},"content":"public class Ekko {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xinnnyeee"},"content":"     * Brief intro from Ekko and guide to use the chatbot","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xinnnyeee"},"content":"    private static final String MANUAL \u003d \"\"\"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xinnnyeee"},"content":"    Here\u0027s how you can use me :3","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xinnnyeee"},"content":"    üìå Task Management:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xinnnyeee"},"content":"    - TODO \u003cdescription\u003e ‚ûù Add a generic task to your to-do list.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xinnnyeee"},"content":"    - DEADLINE \u003cdescription\u003e /by DD/MM/YYYY HH ‚ûù Add a task with a due date and time.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xinnnyeee"},"content":"    - EVENT \u003cdescription\u003e /from DD/MM/YYYY HH /to DD/MM/YYYY HH ‚ûù Add an activity with a start and end time.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xinnnyeee"},"content":"    ‚úÖ Task Updates:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xinnnyeee"},"content":"    - MARK \u003cindex\u003e ‚ûù Mark the task at the given index as done.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xinnnyeee"},"content":"    - UNMARK \u003cindex\u003e ‚ûù Mark the task at the given index as not done.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xinnnyeee"},"content":"    üîç Searching \u0026 Listing:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xinnnyeee"},"content":"    - FIND \u003ckeyword\u003e ‚ûù Search for tasks with relevant keywords.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xinnnyeee"},"content":"    - LIST ‚ûù Display all tasks and notes in your to-do list.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xinnnyeee"},"content":"    üóëÔ∏è Deletion:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xinnnyeee"},"content":"    - DELETE \u003cindex\u003e ‚ûù Remove a task from the to-do list.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xinnnyeee"},"content":"    üìù Notes:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xinnnyeee"},"content":"    - NOTE /t \u003ctitle\u003e /d \u003cdescription\u003e ‚ûù Add a note.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xinnnyeee"},"content":"    - RMNOTE \u003ctitle\u003e ‚ûù Remove a note.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xinnnyeee"},"content":"        \"\"\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xinnnyeee"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xinnnyeee"},"content":"    private Todolist todolist;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xinnnyeee"},"content":"    private NotesCollection notelist;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xinnnyeee"},"content":"     * Initialise the todolist and storage file for an Ekko instance","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xinnnyeee"},"content":"    public Ekko() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xinnnyeee"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xinnnyeee"},"content":"        this.todolist \u003d new Todolist();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xinnnyeee"},"content":"        this.notelist \u003d new NotesCollection();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xinnnyeee"},"content":"     * Get the String output for any user input, and print greeting upon empty input","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xinnnyeee"},"content":"     * @param input user input","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xinnnyeee"},"content":"     * @return response from ekko","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"xinnnyeee"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"xinnnyeee"},"content":"        // Check if the input is empty or null, and return the greeting","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"xinnnyeee"},"content":"        if (input \u003d\u003d null || input.trim().isEmpty()) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"xinnnyeee"},"content":"            return greet();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"xinnnyeee"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"xinnnyeee"},"content":"        try {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"xinnnyeee"},"content":"            Commands command \u003d Parser.parseCommand(input);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"xinnnyeee"},"content":"            switch (command) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"xinnnyeee"},"content":"            case TODO:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"xinnnyeee"},"content":"                return Parser.parseTodo(todolist, storage, input);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"xinnnyeee"},"content":"            case BYE:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"xinnnyeee"},"content":"                Ekko.exit();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"xinnnyeee"},"content":"                break;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"xinnnyeee"},"content":"            case MARK:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"xinnnyeee"},"content":"                return Parser.parseMark(todolist, storage, input);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"xinnnyeee"},"content":"            case UNMARK:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"xinnnyeee"},"content":"                return Parser.parseUnmark(todolist, storage, input);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"xinnnyeee"},"content":"            case LIST:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"xinnnyeee"},"content":"                return Parser.parseList(notelist, todolist);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"xinnnyeee"},"content":"            case DEADLINE:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"xinnnyeee"},"content":"                return Parser.parseDeadline(todolist, storage, input);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"xinnnyeee"},"content":"            case EVENT:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"xinnnyeee"},"content":"                return Parser.parseEvent(todolist, storage, input);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"xinnnyeee"},"content":"            case DELETE:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"xinnnyeee"},"content":"                return Parser.parseDelete(todolist, storage, input);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"xinnnyeee"},"content":"            case MEOW:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"xinnnyeee"},"content":"                return Parser.parseMeow();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"xinnnyeee"},"content":"            case FIND:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"xinnnyeee"},"content":"                return Parser.parseFind(todolist, storage, input);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"xinnnyeee"},"content":"            case NOTE:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"xinnnyeee"},"content":"                return Parser.parseNote(notelist, storage, input);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"xinnnyeee"},"content":"            case RMNOTE:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"xinnnyeee"},"content":"                return Parser.parseRMnote(notelist, storage, input);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"xinnnyeee"},"content":"            case HOW:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"xinnnyeee"},"content":"                return MANUAL;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"xinnnyeee"},"content":"            default:","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"xinnnyeee"},"content":"                return \"Meow?\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"xinnnyeee"},"content":"            }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"xinnnyeee"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"xinnnyeee"},"content":"            return \"Meow, sorry I am just a little Ekko. \";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"xinnnyeee"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"xinnnyeee"},"content":"            return \"Meow, please complete your command!\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"xinnnyeee"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"xinnnyeee"},"content":"        return \"Meow, sorry I am just a little Ekko. \";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"xinnnyeee"},"content":"     * Greet the user when starting the program.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"xinnnyeee"},"content":"    public static String greet() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"xinnnyeee"},"content":"        return (\"Hello from Ekko \u003c3\\n\" + \"\\n\" + MANUAL + \"\\nWhat can I do for you?\\n(Input \\\"bye\\\" to exit)\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"xinnnyeee"},"content":"     * Exit the program.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"xinnnyeee"},"content":"    public static void exit() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"xinnnyeee"},"content":"        System.exit(0);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"xinnnyeee"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"xinnnyeee"},"content":"     * Repeat whatever that was said by the user.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"xinnnyeee"},"content":"     * @param text String to repeat","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"xinnnyeee"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"xinnnyeee"},"content":"    public static String echo(String text) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"xinnnyeee"},"content":"        return text;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"xinnnyeee"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"xinnnyeee":129}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"xinnnyeee"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xinnnyeee"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xinnnyeee"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xinnnyeee"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xinnnyeee"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xinnnyeee"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xinnnyeee"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" spacing\u003d\"10.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xinnnyeee"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xinnnyeee"},"content":"        \u003cLabel fx:id\u003d\"dialog\" lineSpacing\u003d\"1.0\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xinnnyeee"},"content":"         \u003cfont\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xinnnyeee"},"content":"            \u003cFont name\u003d\"PT Mono\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xinnnyeee"},"content":"         \u003c/font\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xinnnyeee"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xinnnyeee"},"content":"            \u003cInsets left\u003d\"7.0\" right\u003d\"7.0\" /\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xinnnyeee"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xinnnyeee"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xinnnyeee"},"content":"            \u003cInsets bottom\u003d\"6.0\" left\u003d\"6.0\" right\u003d\"6.0\" top\u003d\"6.0\" /\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xinnnyeee"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xinnnyeee"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xinnnyeee"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xinnnyeee"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xinnnyeee"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xinnnyeee"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xinnnyeee"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"xinnnyeee":26}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"xinnnyeee"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xinnnyeee"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xinnnyeee"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xinnnyeee"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xinnnyeee"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xinnnyeee"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xinnnyeee"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xinnnyeee"},"content":"\u003cAnchorPane prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"ekko.MainWindow\"\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xinnnyeee"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xinnnyeee"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"41.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xinnnyeee"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xinnnyeee"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" /\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xinnnyeee"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xinnnyeee"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xinnnyeee"},"content":"        \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" promptText\u003d\"Hit \u0026quot;Enter\u0026quot; for user guide\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\"\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xinnnyeee"},"content":"         \u003cfont\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xinnnyeee"},"content":"            \u003cFont name\u003d\"Andale Mono\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xinnnyeee"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xinnnyeee"},"content":"        \u003cButton fx:id\u003d\"sendButton\" alignment\u003d\"CENTER\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xinnnyeee"},"content":"         \u003cfont\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xinnnyeee"},"content":"            \u003cFont name\u003d\"System Bold Italic\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xinnnyeee"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xinnnyeee"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xinnnyeee"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"xinnnyeee":26}},{"path":"src/test/java/ekko/core/TestParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinnnyeee"},"content":"package ekko.core;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xinnnyeee"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xinnnyeee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xinnnyeee"},"content":"import ekko.notes.NotesCollection;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xinnnyeee"},"content":"import ekko.storage.Storage;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xinnnyeee"},"content":"import ekko.task.Todo;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xinnnyeee"},"content":"import ekko.task.Todolist;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xinnnyeee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xinnnyeee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xinnnyeee"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xinnnyeee"},"content":"// used AI to improve and generate JUnit test cases","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xinnnyeee"},"content":"public class TestParser {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xinnnyeee"},"content":"    private Todolist todolist;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xinnnyeee"},"content":"    private NotesCollection notesCollection;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xinnnyeee"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xinnnyeee"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xinnnyeee"},"content":"    public void setUp() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xinnnyeee"},"content":"        // Initialize the objects for each test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xinnnyeee"},"content":"        todolist \u003d new Todolist();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xinnnyeee"},"content":"        notesCollection \u003d new NotesCollection();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xinnnyeee"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xinnnyeee"},"content":"    // Test for parsing commands","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xinnnyeee"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xinnnyeee"},"content":"    public void testParseCommand() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xinnnyeee"},"content":"        assertEquals(Commands.TODO, Parser.parseCommand(\"todo do something\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xinnnyeee"},"content":"        assertEquals(Commands.EVENT, Parser.parseCommand(\"event meeting /from 2025-02-20 10:00 /to 2025-02-20 12:00\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xinnnyeee"},"content":"        assertEquals(Commands.DEADLINE, Parser.parseCommand(\"deadline submit report /by 2025-02-21 18:00\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xinnnyeee"},"content":"        assertEquals(Commands.MARK, Parser.parseCommand(\"mark 1\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xinnnyeee"},"content":"        assertEquals(Commands.UNMARK, Parser.parseCommand(\"unmark 1\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xinnnyeee"},"content":"    // Test for date and time parsing","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xinnnyeee"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xinnnyeee"},"content":"    public void testParseDateTime() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xinnnyeee"},"content":"        String dateStr1 \u003d \"2025-02-20 10:00\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xinnnyeee"},"content":"        String dateStr2 \u003d \"20/02/2025 10:00\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xinnnyeee"},"content":"        String dateStr3 \u003d \"20 02 2025 10:00\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xinnnyeee"},"content":"        LocalDateTime date1 \u003d Parser.parseDateTime(dateStr1);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xinnnyeee"},"content":"        LocalDateTime date2 \u003d Parser.parseDateTime(dateStr2);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xinnnyeee"},"content":"        LocalDateTime date3 \u003d Parser.parseDateTime(dateStr3);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xinnnyeee"},"content":"        assertEquals(LocalDateTime.of(2025, 2, 20, 10, 0), date1);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xinnnyeee"},"content":"        assertEquals(LocalDateTime.of(2025, 2, 20, 10, 0), date2);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xinnnyeee"},"content":"        assertEquals(LocalDateTime.of(2025, 2, 20, 10, 0), date3);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xinnnyeee"},"content":"    // Test for parsing event command","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xinnnyeee"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xinnnyeee"},"content":"    public void testParseEvent() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"xinnnyeee"},"content":"        String input \u003d \"event meeting /from 2025-02-20 10:00 /to 2025-02-20 12:00\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"xinnnyeee"},"content":"        String response \u003d Parser.parseEvent(todolist, storage, input);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"xinnnyeee"},"content":"        assertTrue(response.contains(\"meeting\"), \"Event description should be included.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"xinnnyeee"},"content":"        assertTrue(response.contains(\"2025-02-20T10:00\"), \"Start time should be included.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"xinnnyeee"},"content":"        assertTrue(response.contains(\"2025-02-20T12:00\"), \"End time should be included.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"xinnnyeee"},"content":"    // Test for parsing todo command","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"xinnnyeee"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"xinnnyeee"},"content":"    public void testParseTodo() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"xinnnyeee"},"content":"        String input \u003d \"todo finish homework\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"xinnnyeee"},"content":"        String response \u003d Parser.parseTodo(todolist, storage, input);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"xinnnyeee"},"content":"        assertTrue(response.contains(\"finish homework\"), \"Todo description should be included.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"xinnnyeee"},"content":"    // Test for parsing deadline command","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"xinnnyeee"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"xinnnyeee"},"content":"    public void testParseDeadline() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"xinnnyeee"},"content":"        String input \u003d \"deadline submit report /by 2025-02-21 18:00\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"xinnnyeee"},"content":"        String response \u003d Parser.parseDeadline(todolist, storage, input);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"xinnnyeee"},"content":"        assertTrue(response.contains(\"submit report\"), \"Deadline description should be included.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"xinnnyeee"},"content":"        assertTrue(response.contains(\"2025-02-21T18:00\"), \"Deadline date should be included.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"xinnnyeee"},"content":"    // Test for parsing meow command (Easter egg)","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"xinnnyeee"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"xinnnyeee"},"content":"    public void testParseMeow() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"xinnnyeee"},"content":"        String response \u003d Parser.parseMeow();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"xinnnyeee"},"content":"        assertEquals(\"Meow, I love you too.\", response, \"Meow response should be correct.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"xinnnyeee"},"content":"    // Test for parseFind command","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"xinnnyeee"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"xinnnyeee"},"content":"    public void testParseFind() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"xinnnyeee"},"content":"        todolist.add(new Todo(\"Finish homework\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"xinnnyeee"},"content":"        todolist.add(new Todo(\"Buy groceries\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"xinnnyeee"},"content":"        String input \u003d \"find homework\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"xinnnyeee"},"content":"        String response \u003d Parser.parseFind(todolist, storage, input);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"xinnnyeee"},"content":"        assertTrue(response.contains(\"homework\"), \"Find command should return relevant tasks.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"xinnnyeee"},"content":"    // Test for parseMark command","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"xinnnyeee"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"xinnnyeee"},"content":"    public void testParseMark() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"xinnnyeee"},"content":"        todolist.add(new Todo(\"Finish homework\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"xinnnyeee"},"content":"        String input \u003d \"mark 1\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"xinnnyeee"},"content":"        String response \u003d Parser.parseMark(todolist, storage, input);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"xinnnyeee"},"content":"        assertTrue(response.contains(\"off the list\"), \"Mark command should return success message.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"xinnnyeee"},"content":"    // Test for parseUnmark command","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"xinnnyeee"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"xinnnyeee"},"content":"    public void testParseUnmark() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"xinnnyeee"},"content":"        todolist.add(new Todo(\"Finish homework\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"xinnnyeee"},"content":"        todolist.mark(1);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"xinnnyeee"},"content":"        String input \u003d \"unmark 1\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"xinnnyeee"},"content":"        String response \u003d Parser.parseUnmark(todolist, storage, input);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"xinnnyeee"},"content":"        assertTrue(response.contains(\"Meow, please remember to do it still...\"), \"Unmark command should return success message.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"xinnnyeee"},"content":"    // Test for parseDelete command","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"xinnnyeee"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"xinnnyeee"},"content":"    public void testParseDelete() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"xinnnyeee"},"content":"        todolist.add(new Todo(\"Finish homework\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"xinnnyeee"},"content":"        String input \u003d \"delete 1\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"xinnnyeee"},"content":"        String response \u003d Parser.parseDelete(todolist, storage, input);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"xinnnyeee"},"content":"        assertTrue(response.contains(\"eaten your task\"), \"Delete command should return success message.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"xinnnyeee"},"content":"    // Test for parseNote command","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"xinnnyeee"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"xinnnyeee"},"content":"    public void testParseNote() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"xinnnyeee"},"content":"        String input \u003d \"note /t Meeting /d Discuss project progress\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"xinnnyeee"},"content":"        String response \u003d Parser.parseNote(notesCollection, storage, input);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"xinnnyeee"},"content":"        assertTrue(response.contains(\"Meeting\"), \"Note title should be included.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"xinnnyeee"},"content":"        assertTrue(response.contains(\"Discuss project progress\"), \"Note description should be included.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"xinnnyeee"},"content":"    // Test for parseRMnote command","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"xinnnyeee"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"xinnnyeee"},"content":"    public void testParseRMnote() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"xinnnyeee"},"content":"        notesCollection.addNote(\"Meeting\", \"Discuss project progress\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"xinnnyeee"},"content":"        String input \u003d \"rmnote Meeting\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"xinnnyeee"},"content":"        String response \u003d Parser.parseRMnote(notesCollection, storage, input);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"xinnnyeee"},"content":"        assertTrue(response.contains(\"removed\"), \"Remove note command should return success message.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"xinnnyeee"},"content":"    // Test for parseList command","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"xinnnyeee"},"content":"    @Test","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"xinnnyeee"},"content":"    public void testParseList() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"xinnnyeee"},"content":"        todolist.add(new Todo(\"Finish homework\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"xinnnyeee"},"content":"        notesCollection.addNote(\"Meeting\", \"Discuss project progress\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"xinnnyeee"},"content":"        String response \u003d Parser.parseList(notesCollection, todolist);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"xinnnyeee"},"content":"        assertTrue(response.contains(\"Finish homework\"), \"Todo list should be included in list command.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"xinnnyeee"},"content":"        assertTrue(response.contains(\"Meeting\"), \"Note list should be included in list command.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"xinnnyeee"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"xinnnyeee":157}},{"path":"src/test/java/ekko/notes/TestNote.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinnnyeee"},"content":"package ekko.notes;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xinnnyeee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xinnnyeee"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xinnnyeee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xinnnyeee"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xinnnyeee"},"content":"public class TestNote {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xinnnyeee"},"content":"    private Note note;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xinnnyeee"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xinnnyeee"},"content":"    public void setUp() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xinnnyeee"},"content":"        // Create a Note instance for testing","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xinnnyeee"},"content":"        note \u003d new Note(\"Sample Title\", \"This is a sample description.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xinnnyeee"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xinnnyeee"},"content":"    public void testGetTitle() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xinnnyeee"},"content":"        // Verify that the title is returned correctly","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xinnnyeee"},"content":"        assertEquals(\"Sample Title\", note.getTitle(), \"Title should be \u0027Sample Title\u0027\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xinnnyeee"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xinnnyeee"},"content":"    public void testGetDescription() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xinnnyeee"},"content":"        // Verify that the description is returned correctly","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xinnnyeee"},"content":"        assertEquals(\"This is a sample description.\", note.getDescription(), \"Description should match the provided description.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xinnnyeee"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xinnnyeee"},"content":"    public void testToString() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xinnnyeee"},"content":"        // Verify that the toString method returns the correct format","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xinnnyeee"},"content":"        String expectedOutput \u003d \"Sample Title: This is a sample description.\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xinnnyeee"},"content":"        assertEquals(expectedOutput, note.toString(), \"The toString method should return the formatted string.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xinnnyeee"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xinnnyeee"},"content":"    public void testNoteInitialization() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xinnnyeee"},"content":"        // Verify the initialization of Note with specific values","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xinnnyeee"},"content":"        assertNotNull(note, \"Note object should be properly initialized.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xinnnyeee"},"content":"}","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"xinnnyeee":42}},{"path":"src/test/java/ekko/notes/TestNotesCollection.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinnnyeee"},"content":"package ekko.notes;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xinnnyeee"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xinnnyeee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xinnnyeee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xinnnyeee"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xinnnyeee"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xinnnyeee"},"content":"public class TestNotesCollection {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xinnnyeee"},"content":"    private NotesCollection notesCollection;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xinnnyeee"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xinnnyeee"},"content":"    public void setUp() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xinnnyeee"},"content":"        // Initialize a new NotesCollection for each test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xinnnyeee"},"content":"        notesCollection \u003d new NotesCollection();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xinnnyeee"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xinnnyeee"},"content":"    public void testAddNoteWithTitleAndContent() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xinnnyeee"},"content":"        // Add a note with title and content","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xinnnyeee"},"content":"        String title \u003d \"Meeting\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xinnnyeee"},"content":"        String content \u003d \"Discuss project progress\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xinnnyeee"},"content":"        String expectedMessage \u003d \"Ekko has helped you remember it!\\nMeeting: Discuss project progress\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xinnnyeee"},"content":"        String result \u003d notesCollection.addNote(title, content);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xinnnyeee"},"content":"        // Verify the response message and that the note is added","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xinnnyeee"},"content":"        assertEquals(expectedMessage, result, \"The response message should confirm the note was added.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xinnnyeee"},"content":"        assertTrue(notesCollection.toString().contains(\"Meeting: Discuss project progress\"), \"The note should appear in the collection.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xinnnyeee"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xinnnyeee"},"content":"    public void testAddNoteWithNoteObject() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xinnnyeee"},"content":"        // Add a note using the Note object","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xinnnyeee"},"content":"        Note note \u003d new Note(\"Shopping\", \"Buy groceries\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xinnnyeee"},"content":"        String expectedMessage \u003d \"Ekko has helped you remember it!\\nShopping: Buy groceries\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xinnnyeee"},"content":"        String result \u003d notesCollection.addNote(note);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xinnnyeee"},"content":"        // Verify the response message and that the note is added","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xinnnyeee"},"content":"        assertEquals(expectedMessage, result, \"The response message should confirm the note was added.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xinnnyeee"},"content":"        assertTrue(notesCollection.toString().contains(\"Shopping: Buy groceries\"), \"The note should appear in the collection.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xinnnyeee"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xinnnyeee"},"content":"    public void testRemoveNote() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xinnnyeee"},"content":"        // Add and remove a note","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xinnnyeee"},"content":"        notesCollection.addNote(\"Task\", \"Complete homework\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xinnnyeee"},"content":"        String expectedRemoveMessage \u003d \"Ekko has helped you removed: Task\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xinnnyeee"},"content":"        String result \u003d notesCollection.removeNote(\"Task\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xinnnyeee"},"content":"        // Verify the response message and that the note is removed","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xinnnyeee"},"content":"        assertEquals(expectedRemoveMessage, result, \"The response message should confirm the note was removed.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xinnnyeee"},"content":"        assertFalse(notesCollection.toString().contains(\"Task: Complete homework\"), \"The note should not appear in the collection after removal.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"xinnnyeee"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"xinnnyeee"},"content":"    public void testToString() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"xinnnyeee"},"content":"        // Add multiple notes and verify the string representation of the collection","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"xinnnyeee"},"content":"        notesCollection.addNote(\"Work\", \"Finish coding project\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"xinnnyeee"},"content":"        notesCollection.addNote(\"Exercise\", \"Go for a run\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"xinnnyeee"},"content":"        String expectedString \u003d \"Exercise: Go for a run\\nWork: Finish coding project\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"xinnnyeee"},"content":"        assertEquals(expectedString, notesCollection.toString(), \"The string representation of the collection should match the expected format.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"xinnnyeee"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"xinnnyeee"},"content":"    public void testEmptyCollection() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"xinnnyeee"},"content":"        // Verify that an empty collection returns an empty string","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"xinnnyeee"},"content":"        assertEquals(\"\", notesCollection.toString(), \"The string representation of an empty collection should be empty.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"xinnnyeee"},"content":"}","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"xinnnyeee":74}},{"path":"src/test/java/ekko/task/TestDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinnnyeee"},"content":"package ekko.task;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xinnnyeee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xinnnyeee"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xinnnyeee"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xinnnyeee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xinnnyeee"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xinnnyeee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xinnnyeee"},"content":"class DeadlineTest {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xinnnyeee"},"content":"    private Deadline deadline;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xinnnyeee"},"content":"    private LocalDateTime dueDate;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xinnnyeee"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xinnnyeee"},"content":"    void setUp() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xinnnyeee"},"content":"        dueDate \u003d LocalDateTime.of(2025, 3, 10, 23, 59);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xinnnyeee"},"content":"        deadline \u003d new Deadline(\"Finish assignment\", dueDate);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xinnnyeee"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xinnnyeee"},"content":"    void testDeadlineCreation() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xinnnyeee"},"content":"        assertEquals(\"Finish assignment\", deadline.printDes());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xinnnyeee"},"content":"        assertFalse(deadline.isDone());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xinnnyeee"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xinnnyeee"},"content":"    void testMarkDone() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xinnnyeee"},"content":"        deadline.markDone();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xinnnyeee"},"content":"        assertTrue(deadline.isDone());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xinnnyeee"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xinnnyeee"},"content":"    void testToStringNotDone() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xinnnyeee"},"content":"        String expected \u003d \"[D] [ ] Finish assignment (by: 2025-03-10T23:59)\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xinnnyeee"},"content":"        assertEquals(expected, deadline.toString());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xinnnyeee"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xinnnyeee"},"content":"    void testToStringDone() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xinnnyeee"},"content":"        deadline.markDone();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xinnnyeee"},"content":"        String expected \u003d \"[D] [X] Finish assignment (by: 2025-03-10T23:59)\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xinnnyeee"},"content":"        assertEquals(expected, deadline.toString());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xinnnyeee"},"content":"}","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"xinnnyeee":46}},{"path":"src/test/java/ekko/task/TestEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinnnyeee"},"content":"package ekko.task;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xinnnyeee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xinnnyeee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xinnnyeee"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xinnnyeee"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xinnnyeee"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xinnnyeee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xinnnyeee"},"content":"class EventTest {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xinnnyeee"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xinnnyeee"},"content":"    void testConstructor() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xinnnyeee"},"content":"        LocalDateTime start \u003d LocalDateTime.of(2025, 2, 20, 10, 0);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xinnnyeee"},"content":"        LocalDateTime end \u003d LocalDateTime.of(2025, 2, 20, 12, 0);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xinnnyeee"},"content":"        Event event \u003d new Event(\"Project meeting\", start, end);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xinnnyeee"},"content":"        assertEquals(\"Project meeting\", event.printDes(), \"Description should match the provided value.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xinnnyeee"},"content":"        assertFalse(event.isDone(), \"Newly created event should not be marked as done.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xinnnyeee"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xinnnyeee"},"content":"    void testMarkDone() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xinnnyeee"},"content":"        LocalDateTime start \u003d LocalDateTime.of(2025, 3, 15, 9, 0);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xinnnyeee"},"content":"        LocalDateTime end \u003d LocalDateTime.of(2025, 3, 15, 11, 0);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xinnnyeee"},"content":"        Event event \u003d new Event(\"Team discussion\", start, end);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xinnnyeee"},"content":"        event.markDone();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xinnnyeee"},"content":"        assertTrue(event.isDone(), \"Event should be marked as done after calling markDone().\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xinnnyeee"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xinnnyeee"},"content":"    void testToString() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xinnnyeee"},"content":"        LocalDateTime start \u003d LocalDateTime.of(2025, 4, 10, 14, 30);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xinnnyeee"},"content":"        LocalDateTime end \u003d LocalDateTime.of(2025, 4, 10, 16, 30);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xinnnyeee"},"content":"        Event event \u003d new Event(\"Conference call\", start, end);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xinnnyeee"},"content":"        String expectedOutput \u003d \"[E] [ ] Conference call (from: 2025-04-10T14:30 to: 2025-04-10T16:30)\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xinnnyeee"},"content":"        assertEquals(expectedOutput, event.toString(), \"toString() should return correctly formatted string.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xinnnyeee"},"content":"        event.markDone();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xinnnyeee"},"content":"        String expectedDoneOutput \u003d \"[E] [X] Conference call (from: 2025-04-10T14:30 to: 2025-04-10T16:30)\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xinnnyeee"},"content":"        assertEquals(expectedDoneOutput, event.toString(), \"toString() should update when event is marked done.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xinnnyeee"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xinnnyeee"},"content":"    void testInvalidStartEndTime() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xinnnyeee"},"content":"        LocalDateTime start \u003d LocalDateTime.of(2025, 5, 1, 14, 0);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xinnnyeee"},"content":"        LocalDateTime end \u003d LocalDateTime.of(2025, 5, 1, 12, 0);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xinnnyeee"},"content":"        IllegalArgumentException exception \u003d assertThrows(IllegalArgumentException.class, () -\u003e {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xinnnyeee"},"content":"            new Event(\"Invalid Event\", start, end);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xinnnyeee"},"content":"        });","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xinnnyeee"},"content":"        assertEquals(\"The start time must be before the end time.\", exception.getMessage(),","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xinnnyeee"},"content":"                \"Constructor should throw an AssertionError when start time is after end time.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xinnnyeee"},"content":"}","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"xinnnyeee":58}},{"path":"src/test/java/ekko/task/TestTodo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinnnyeee"},"content":"package ekko.task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xinnnyeee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xinnnyeee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xinnnyeee"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xinnnyeee"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xinnnyeee"},"content":"class TodoTest {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xinnnyeee"},"content":"    @Test","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xinnnyeee"},"content":"    void testConstructor() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xinnnyeee"},"content":"        Todo task \u003d new Todo(\"Finish assignment\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xinnnyeee"},"content":"        assertEquals(\"Finish assignment\", task.printDes());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xinnnyeee"},"content":"        assertFalse(task.isDone(), \"New task should not be marked as done by default.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xinnnyeee"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xinnnyeee"},"content":"    void testMarkDone() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xinnnyeee"},"content":"        Todo task \u003d new Todo(\"Submit report\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xinnnyeee"},"content":"        task.markDone();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xinnnyeee"},"content":"        assertTrue(task.isDone(), \"Task should be marked as done after calling markDone().\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xinnnyeee"},"content":"        assertEquals(\"[X]\", task.printDone(), \"Checkbox should display \u0027[X]\u0027 when task is done.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xinnnyeee"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xinnnyeee"},"content":"    void testUnDo() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xinnnyeee"},"content":"        Todo task \u003d new Todo(\"Read book\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xinnnyeee"},"content":"        task.markDone();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xinnnyeee"},"content":"        task.unDo();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xinnnyeee"},"content":"        assertFalse(task.isDone(), \"Task should be marked as undone after calling unDo().\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xinnnyeee"},"content":"        assertEquals(\"[ ]\", task.printDone(), \"Checkbox should display \u0027[ ]\u0027 when task is undone.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xinnnyeee"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xinnnyeee"},"content":"    void testPrintDes() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xinnnyeee"},"content":"        Todo task \u003d new Todo(\"Buy groceries\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xinnnyeee"},"content":"        assertEquals(\"Buy groceries\", task.printDes(), \"printDes() should return the task description.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xinnnyeee"},"content":"    @Test","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xinnnyeee"},"content":"    void testPrintDone() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xinnnyeee"},"content":"        Todo task \u003d new Todo(\"Exercise\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xinnnyeee"},"content":"        assertEquals(\"[ ]\", task.printDone(), \"printDone() should initially return \u0027[ ]\u0027.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xinnnyeee"},"content":"        task.markDone();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xinnnyeee"},"content":"        assertEquals(\"[X]\", task.printDone(), \"printDone() should return \u0027[X]\u0027 after marking as done.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xinnnyeee"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xinnnyeee"},"content":"    void testToString() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xinnnyeee"},"content":"        Todo task \u003d new Todo(\"Walk the dog\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xinnnyeee"},"content":"        assertEquals(\"[T] [ ] Walk the dog\", task.toString(), \"toString() should return correct format for an undone task.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xinnnyeee"},"content":"        task.markDone();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xinnnyeee"},"content":"        assertEquals(\"[T] [X] Walk the dog\", task.toString(), \"toString() should return correct format for a done task.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xinnnyeee"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"xinnnyeee":55}},{"path":"src/test/java/ekko/task/TestTodolist.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinnnyeee"},"content":"package ekko.task;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xinnnyeee"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xinnnyeee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xinnnyeee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xinnnyeee"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xinnnyeee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xinnnyeee"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xinnnyeee"},"content":"public class TestTodolist {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xinnnyeee"},"content":"    private Todolist todolist;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xinnnyeee"},"content":"    private Todo todoTask;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xinnnyeee"},"content":"    private Event eventTask;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xinnnyeee"},"content":"    private Deadline deadlineTask;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xinnnyeee"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xinnnyeee"},"content":"    public void setUp() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xinnnyeee"},"content":"        todolist \u003d new Todolist();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xinnnyeee"},"content":"        todoTask \u003d new Todo(\"Complete homework\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xinnnyeee"},"content":"        eventTask \u003d new Event(\"Meeting with boss\",","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xinnnyeee"},"content":"                LocalDateTime.of(2025, 2, 20, 10, 0),","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xinnnyeee"},"content":"                LocalDateTime.of(2025, 2, 20, 12, 0));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xinnnyeee"},"content":"        deadlineTask \u003d new Deadline(\"Submit report\",","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xinnnyeee"},"content":"                LocalDateTime.of(2025, 2, 19, 23, 59));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xinnnyeee"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xinnnyeee"},"content":"    public void testAddTodo() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xinnnyeee"},"content":"        String result \u003d todolist.add(todoTask);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xinnnyeee"},"content":"        assertEquals(\"Got it! I\u0027ve added this task: \\n[T] [ ] Complete homework\\nNow you have 1 task(s) in the list.\",","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xinnnyeee"},"content":"                result);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xinnnyeee"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xinnnyeee"},"content":"    public void testAddEvent() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xinnnyeee"},"content":"        String result \u003d todolist.add(eventTask);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xinnnyeee"},"content":"        assertEquals(\"Got it! I\u0027ve added this task: \\n[E] [ ] Meeting with boss (from: 2025-02-20T10:00 to: 2025-02-20T12:00)\\nNow you have 1 task(s) in the list.\",","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xinnnyeee"},"content":"                result);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xinnnyeee"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xinnnyeee"},"content":"    public void testAddDeadline() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xinnnyeee"},"content":"        String result \u003d todolist.add(deadlineTask);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xinnnyeee"},"content":"        assertEquals(\"Got it! I\u0027ve added this task: \\n[D] [ ] Submit report (by: 2025-02-19T23:59)\\nNow you have 1 task(s) in the list.\",","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xinnnyeee"},"content":"                result);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xinnnyeee"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xinnnyeee"},"content":"    public void testMarkTodo() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xinnnyeee"},"content":"        todolist.add(todoTask);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xinnnyeee"},"content":"        String result \u003d todolist.mark(1);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xinnnyeee"},"content":"        assertEquals(\"Yippee! One task off the list: \\n[T] [X] Complete homework\", result);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xinnnyeee"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"xinnnyeee"},"content":"    public void testUnmarkTodo() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"xinnnyeee"},"content":"        todolist.add(todoTask);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"xinnnyeee"},"content":"        todolist.mark(1); // Mark it first","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"xinnnyeee"},"content":"        String result \u003d todolist.unmark(1);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"xinnnyeee"},"content":"        assertEquals(\"Meow, please remember to do it still...\\n[T] [ ] Complete homework\", result);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"xinnnyeee"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"xinnnyeee"},"content":"    public void testDeleteTodo() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"xinnnyeee"},"content":"        todolist.add(todoTask);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"xinnnyeee"},"content":"        String result \u003d todolist.delete(1);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"xinnnyeee"},"content":"        assertEquals(\"Ekko has eaten your task!\\n[T] [ ] Complete homework\\nOnly 0 tasks left! Jiayouu\", result);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"xinnnyeee"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"xinnnyeee"},"content":"    public void testFilterTask() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"xinnnyeee"},"content":"        todolist.add(todoTask);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"xinnnyeee"},"content":"        todolist.add(eventTask);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"xinnnyeee"},"content":"        String result \u003d todolist.filter(\"boss\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"xinnnyeee"},"content":"        assertEquals(\"[E] [ ] Meeting with boss (from: 2025-02-20T10:00 to: 2025-02-20T12:00)\", result);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"xinnnyeee"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"xinnnyeee"},"content":"    public void testToString() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"xinnnyeee"},"content":"        todolist.add(todoTask);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"xinnnyeee"},"content":"        todolist.add(eventTask);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"xinnnyeee"},"content":"        String result \u003d todolist.toString();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"xinnnyeee"},"content":"        assertTrue(result.contains(\"[T] [ ] Complete homework\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"xinnnyeee"},"content":"        assertTrue(result.contains(\"[E] [ ] Meeting with boss\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"xinnnyeee"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"xinnnyeee"},"content":"    public void testMarkTodoOutOfBounds() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"xinnnyeee"},"content":"        todolist.add(todoTask);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"xinnnyeee"},"content":"        assertThrows(AssertionError.class, () -\u003e todolist.mark(2));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"xinnnyeee"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"xinnnyeee"},"content":"    public void testDeleteTodoOutOfBounds() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"xinnnyeee"},"content":"        todolist.add(todoTask);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"xinnnyeee"},"content":"        assertThrows(AssertionError.class, () -\u003e todolist.delete(2));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"xinnnyeee"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"xinnnyeee"},"content":"}","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"xinnnyeee":101}},{"path":"src/test/java/ekko/ui/TestEkko.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xinnnyeee"},"content":"package ekko.ui;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xinnnyeee"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xinnnyeee"},"content":"public class TestEkko {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xinnnyeee"},"content":"}","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"xinnnyeee":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xinnnyeee"},"content":"todo running","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xinnnyeee"},"content":"deadline hi /by 1pm","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xinnnyeee"},"content":"mark 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xinnnyeee"},"content":"event hi /from 1 /to 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xinnnyeee"},"content":"mark 3","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xinnnyeee"},"content":"unmark 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xinnnyeee"},"content":"delete 1","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xinnnyeee"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xinnnyeee"},"content":"bye","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"xinnnyeee":9}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xinnnyeee"},"content":"java -classpath ../bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"xinnnyeee":1,"-":37}}]
