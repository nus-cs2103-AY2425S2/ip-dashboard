[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Noob-No-1"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Noob-No-1"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Noob-No-1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Noob-No-1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Noob-No-1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Noob-No-1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Noob-No-1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Noob-No-1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Noob-No-1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Noob-No-1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Noob-No-1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Noob-No-1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Noob-No-1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Noob-No-1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Noob-No-1"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"Noob-No-1":16,"-":40}},{"path":"data/task_history.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Noob-No-1"},"content":"T | 1 | read book","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Noob-No-1"},"content":"T | 0 | join sports club","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Noob-No-1"},"content":"T | 0 | shit my pants","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Noob-No-1"},"content":"D | 1 | wash my pants | 12/12/2024 1800","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Noob-No-1"},"content":"T | 0 | kms","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Noob-No-1"},"content":"T | 0 | kms","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Noob-No-1"},"content":"T | 0 | return book","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Noob-No-1"},"content":"D | 0 | shit my pants | 22/12/2024 1200","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"Noob-No-1":8}},{"path":"src/main/java/duke/BrainrotException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Noob-No-1"},"content":"package duke;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Noob-No-1"},"content":"public class BrainrotException extends Exception {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Noob-No-1"},"content":"    public BrainrotException(String message) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Noob-No-1"},"content":"        super(message);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Noob-No-1"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"Noob-No-1":7}},{"path":"src/main/java/duke/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Noob-No-1"},"content":"package duke;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Noob-No-1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Noob-No-1"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Noob-No-1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Noob-No-1"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Noob-No-1"},"content":"    public LocalDateTime by;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Noob-No-1"},"content":"    public String by_str;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Noob-No-1"},"content":"    public String description;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Noob-No-1"},"content":"     * Constructs a Deadline object","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Noob-No-1"},"content":"     * @param description a string describing what the task is about","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Noob-No-1"},"content":"     * @param by a string representing the deadline of the current task","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Noob-No-1"},"content":"     * @param status a boolean indicating the current task done","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Noob-No-1"},"content":"    public Deadlines(String description, String by, boolean status) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Noob-No-1"},"content":"        super(description, status);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Noob-No-1"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Noob-No-1"},"content":"        this.by_str \u003d by;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Noob-No-1"},"content":"        this.by \u003d parseDateTime(by);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Noob-No-1"},"content":"     * Parses the string of by to LocalDateTime type","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Noob-No-1"},"content":"     * @param by a String of the deadline","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Noob-No-1"},"content":"     * @return return the deadline in LocalDateTime type","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Noob-No-1"},"content":"    private LocalDateTime parseDateTime(String by) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Noob-No-1"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Noob-No-1"},"content":"        return LocalDateTime.parse(by, formatter);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Noob-No-1"},"content":"     * Converts the Deadline object to string to be written into the data file","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Noob-No-1"},"content":"     * @return a String of the file format of the Deadline object","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Noob-No-1"},"content":"    public String toFileFormat() { //D | 0 | return book | June 6thk","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Noob-No-1"},"content":"        return \"D\" + \" | \" + (super.isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + by_str;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Noob-No-1"},"content":"    public String getDueDate() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Noob-No-1"},"content":"        return by_str;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Noob-No-1"},"content":"     * Converts the Deadline object to String format to be printed","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Noob-No-1"},"content":"     * @return  a String format to be printed","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Noob-No-1"},"content":"    @Override","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Noob-No-1"},"content":"    public String toString() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Noob-No-1"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, hh:mm a\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Noob-No-1"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(formatter) + \")\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Noob-No-1"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"Noob-No-1":58}},{"path":"src/main/java/duke/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Noob-No-1"},"content":"package duke;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Noob-No-1"},"content":"import duke.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Noob-No-1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Noob-No-1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Noob-No-1"},"content":"public class Events extends Task {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Noob-No-1"},"content":"    private final String type \u003d \"E\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Noob-No-1"},"content":"    public LocalDateTime from;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Noob-No-1"},"content":"    public LocalDateTime to;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Noob-No-1"},"content":"    public String from_str;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Noob-No-1"},"content":"    public String to_str;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Noob-No-1"},"content":"    public String details;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Noob-No-1"},"content":"    public Events(String description, String from, String to, boolean status) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Noob-No-1"},"content":"        super(description, status);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Noob-No-1"},"content":"        this.details \u003d description;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Noob-No-1"},"content":"        from_str \u003d from;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Noob-No-1"},"content":"        to_str \u003d to;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Noob-No-1"},"content":"        this.from \u003d parseDateTime(from);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Noob-No-1"},"content":"        this.to \u003d parseDateTime(to);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Noob-No-1"},"content":"    public String getFrom_str() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Noob-No-1"},"content":"        return from_str;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Noob-No-1"},"content":"    public String getTo_str() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Noob-No-1"},"content":"        return to_str;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Noob-No-1"},"content":"     * Parses the string of by to LocalDateTime type","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Noob-No-1"},"content":"     * @param s a String of the deadline","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Noob-No-1"},"content":"     * @return return the deadline in LocalDateTime type","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Noob-No-1"},"content":"     */private LocalDateTime parseDateTime(String s) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Noob-No-1"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Noob-No-1"},"content":"        return LocalDateTime.parse(s, formatter);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Noob-No-1"},"content":"     * Converts the Event object to string to be written into the data file","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Noob-No-1"},"content":"     * @return a String of the file format of the Deadline object","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Noob-No-1"},"content":"    public String toFileFormat() { //E | 0 | project meeting | Mon 2pm | 4pm","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Noob-No-1"},"content":"        return \"E\" + \" | \" + (super.isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + from_str + \" | \" + to_str;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Noob-No-1"},"content":"     * Converts the Event object to String format to be printed","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Noob-No-1"},"content":"     * @return  a String format to be printed","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Noob-No-1"},"content":"    @Override","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Noob-No-1"},"content":"    public String toString() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Noob-No-1"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, hh:mm a\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Noob-No-1"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(formatter) + \" to: \" + to.format(formatter) + \")\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Noob-No-1"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"Noob-No-1":64}},{"path":"src/main/java/duke/GreenFloyd.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Noob-No-1"},"content":"package duke;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Noob-No-1"},"content":"public class GreenFloyd {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Noob-No-1"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Noob-No-1"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Noob-No-1"},"content":"    private Ui ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Noob-No-1"},"content":"    private boolean isExit;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Noob-No-1"},"content":"     * Constructs a Goofy ahh GreenFloyd object","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Noob-No-1"},"content":"     * @param filePath a String of the data file","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Noob-No-1"},"content":"    public GreenFloyd(String filePath) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Noob-No-1"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Noob-No-1"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Noob-No-1"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Noob-No-1"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Noob-No-1"},"content":"        } catch (BrainrotException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Noob-No-1"},"content":"            ui.showLoadingError();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Noob-No-1"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Noob-No-1"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Noob-No-1"},"content":"     * Gets the private task list","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Noob-No-1"},"content":"     * @return the inner task list","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Noob-No-1"},"content":"    public TaskList getTasks() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Noob-No-1"},"content":"        return tasks;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Noob-No-1"},"content":"     * Runs the main logic","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Noob-No-1"},"content":"    public void run() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Noob-No-1"},"content":"        ui.greeting();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Noob-No-1"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Noob-No-1"},"content":"        while (!isExit) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Noob-No-1"},"content":"            try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Noob-No-1"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Noob-No-1"},"content":"                ui.printSeparateBar();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Noob-No-1"},"content":"                handleCommand(fullCommand);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Noob-No-1"},"content":"                isExit \u003d this.isExit;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Noob-No-1"},"content":"            } catch (BrainrotException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Noob-No-1"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Noob-No-1"},"content":"            } finally {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Noob-No-1"},"content":"                ui.printSeparateBar();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Noob-No-1"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Noob-No-1"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Noob-No-1"},"content":"     * Handles the user command and performs the corresponding action.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Noob-No-1"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Noob-No-1"},"content":"     * @param input The full command entered by the user.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Noob-No-1"},"content":"     * @return True if the command is \"bye\", false otherwise.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Noob-No-1"},"content":"     * @throws BrainrotException If the command is invalid or an error occurs.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Noob-No-1"},"content":"    public String handleCommand(String input) throws BrainrotException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Noob-No-1"},"content":"        String[] parsedInput \u003d Parser.parseInput(input);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Noob-No-1"},"content":"        String action \u003d parsedInput[0];","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Noob-No-1"},"content":"        String details \u003d parsedInput[1];","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Noob-No-1"},"content":"        assert action !\u003d null : \"Empty action field\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Noob-No-1"},"content":"        switch (action) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Noob-No-1"},"content":"        case \"bye\":","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Noob-No-1"},"content":"            ui.bye();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Noob-No-1"},"content":"            isExit \u003d true;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Noob-No-1"},"content":"        case \"list\":","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Noob-No-1"},"content":"            return tasks.listTasks();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Noob-No-1"},"content":"        case \"mark\":","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Noob-No-1"},"content":"            return markTaskAsDone(details);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Noob-No-1"},"content":"        case \"unmark\":","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Noob-No-1"},"content":"            return markTaskAsUndone(details);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Noob-No-1"},"content":"        case \"delete\":","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Noob-No-1"},"content":"            return deleteTask(details);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Noob-No-1"},"content":"        case \"todo\":","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Noob-No-1"},"content":"            return addTodo(details);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Noob-No-1"},"content":"        case \"deadline\":","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Noob-No-1"},"content":"            return addDeadline(details);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Noob-No-1"},"content":"        case \"event\":","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Noob-No-1"},"content":"            return addEvent(details);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Noob-No-1"},"content":"        case \"find\":","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Noob-No-1"},"content":"            return findTask(details);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Noob-No-1"},"content":"        default:","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Noob-No-1"},"content":"            return \"Bruh what you yapping about\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Noob-No-1"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Noob-No-1"},"content":"     * Marks a task as done.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Noob-No-1"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Noob-No-1"},"content":"     * @param details The index of the task to mark as done.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Noob-No-1"},"content":"     * @throws BrainrotException If the index is invalid.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Noob-No-1"},"content":"     * @return String message of the response from the bot","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Noob-No-1"},"content":"    private String markTaskAsDone(String details) throws BrainrotException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Noob-No-1"},"content":"        int index \u003d parseIndex(details);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Noob-No-1"},"content":"        Task task \u003d tasks.getTask(index);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Noob-No-1"},"content":"        task.markAsDone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Noob-No-1"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Noob-No-1"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\\n\\t\" + task.toString();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Noob-No-1"},"content":"     * Marks a task as undone.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Noob-No-1"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Noob-No-1"},"content":"     * @param details The index of the task to mark as undone.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Noob-No-1"},"content":"     * @throws BrainrotException If the index is invalid.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Noob-No-1"},"content":"    private String markTaskAsUndone(String details) throws BrainrotException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Noob-No-1"},"content":"        int index \u003d parseIndex(details);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Noob-No-1"},"content":"        Task task \u003d tasks.getTask(index);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Noob-No-1"},"content":"        task.markAsUndone();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Noob-No-1"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Noob-No-1"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\\n\\t\" + task.toString();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Noob-No-1"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Noob-No-1"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Noob-No-1"},"content":"     * @param details The index of the task to delete.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Noob-No-1"},"content":"     * @throws BrainrotException If the index is invalid.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Noob-No-1"},"content":"    private String deleteTask(String details) throws BrainrotException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Noob-No-1"},"content":"        int index \u003d parseIndex(details);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Noob-No-1"},"content":"        Task task \u003d tasks.getTask(index);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Noob-No-1"},"content":"        tasks.deleteTask(index);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Noob-No-1"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Noob-No-1"},"content":"        return ui.printDeletedTaskStr(task, tasks.size());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Noob-No-1"},"content":"     * Adds a ToDos task to the task list.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Noob-No-1"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Noob-No-1"},"content":"     * @param details The description of the todo task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Noob-No-1"},"content":"     * @throws BrainrotException If the description is empty.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Noob-No-1"},"content":"    private String addTodo(String details) throws BrainrotException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Noob-No-1"},"content":"        if (details.isEmpty()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Noob-No-1"},"content":"            throw new BrainrotException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Noob-No-1"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Noob-No-1"},"content":"        String description \u003d details.trim();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Noob-No-1"},"content":"        if (checkForDuplicateTask(description)) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Noob-No-1"},"content":"            return \"The task already exists!\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Noob-No-1"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Noob-No-1"},"content":"        Task task \u003d new ToDos(details, false);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Noob-No-1"},"content":"        tasks.addTask(task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Noob-No-1"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Noob-No-1"},"content":"        return ui.printAddedTaskStr(task, tasks.size());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Noob-No-1"},"content":"     * Adds a deadline task to the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Noob-No-1"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Noob-No-1"},"content":"     * @param details The description and deadline of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Noob-No-1"},"content":"     * @throws BrainrotException If the description or deadline is invalid.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Noob-No-1"},"content":"    private String addDeadline(String details) throws BrainrotException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Noob-No-1"},"content":"        String[] parts \u003d details.split(\"/by\", 2);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Noob-No-1"},"content":"        if (parts.length \u003c 2 || parts[0].trim().isEmpty() || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Noob-No-1"},"content":"            throw new BrainrotException(\"Invalid deadline format. Use: deadline \u003cdescription\u003e /by \u003cdate\u003e\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Noob-No-1"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Noob-No-1"},"content":"        String description \u003d parts[0].trim();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Noob-No-1"},"content":"        String dueDate \u003d parts[1].trim();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Noob-No-1"},"content":"        if (checkForDuplicateTask(description, dueDate)) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Noob-No-1"},"content":"            return \"The task already exists!\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Noob-No-1"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Noob-No-1"},"content":"        Task task \u003d new Deadlines(parts[0].trim(), parts[1].trim(), false);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Noob-No-1"},"content":"        tasks.addTask(task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Noob-No-1"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Noob-No-1"},"content":"        return ui.printAddedTaskStr(task, tasks.size());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Noob-No-1"},"content":"     * Adds an event task to the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Noob-No-1"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Noob-No-1"},"content":"     * @param details The description, start time, and end time of the event.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Noob-No-1"},"content":"     * @throws BrainrotException If the description or times are invalid.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Noob-No-1"},"content":"    private String addEvent(String details) throws BrainrotException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Noob-No-1"},"content":"        String[] parts \u003d details.split(\"/from\", 2);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Noob-No-1"},"content":"        if (parts.length \u003c 2 || parts[0].trim().isEmpty() || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Noob-No-1"},"content":"            throw new BrainrotException(\"Invalid event format. Use: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Noob-No-1"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Noob-No-1"},"content":"        String[] timeParts \u003d parts[1].split(\"/to\", 2);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Noob-No-1"},"content":"        if (timeParts.length \u003c 2 || timeParts[0].trim().isEmpty() || timeParts[1].trim().isEmpty()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Noob-No-1"},"content":"            throw new BrainrotException(\"Invalid event format. Use: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Noob-No-1"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Noob-No-1"},"content":"        String description \u003d parts[0].trim();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Noob-No-1"},"content":"        String startTime \u003d parts[1].trim();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Noob-No-1"},"content":"        String endTime \u003d parts[2].trim();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Noob-No-1"},"content":"        if (checkForDuplicateTask(description, startTime, endTime)) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Noob-No-1"},"content":"            return \"The task already exists!\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Noob-No-1"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Noob-No-1"},"content":"        Task task \u003d new Events(parts[0].trim(), timeParts[0].trim(), timeParts[1].trim(), false);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Noob-No-1"},"content":"        tasks.addTask(task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Noob-No-1"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Noob-No-1"},"content":"        return ui.printAddedTaskStr(task, tasks.size());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Noob-No-1"},"content":"     * Checks if a duplicate Event task exists in the task list.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Noob-No-1"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Noob-No-1"},"content":"     * @param description The event description.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Noob-No-1"},"content":"     * @param startTime The start time of the event.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Noob-No-1"},"content":"     * @param endTime The end time of the event.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Noob-No-1"},"content":"     * @return True if a duplicate event exists, otherwise false.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Noob-No-1"},"content":"    private boolean checkForDuplicateTask(String description, String startTime, String endTime) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Noob-No-1"},"content":"        return tasks.getTasks().stream()","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Noob-No-1"},"content":"                .filter(task -\u003e task instanceof Events)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Noob-No-1"},"content":"                .map(task -\u003e (Events) task)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Noob-No-1"},"content":"                .anyMatch(event -\u003e event.getDescription().equalsIgnoreCase(description) \u0026\u0026","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Noob-No-1"},"content":"                        event.getFrom_str().equals(startTime) \u0026\u0026","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Noob-No-1"},"content":"                        event.getTo_str().equals(endTime));","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Noob-No-1"},"content":"     * Checks if a duplicate Deadline task exists in the task list.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Noob-No-1"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Noob-No-1"},"content":"     * @param description The deadline description.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Noob-No-1"},"content":"     * @param dueDate The due date of the deadline.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Noob-No-1"},"content":"     * @return True if a duplicate deadline exists, otherwise false.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Noob-No-1"},"content":"    private boolean checkForDuplicateTask(String description, String dueDate) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Noob-No-1"},"content":"        return tasks.getTasks().stream()","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Noob-No-1"},"content":"                .filter(task -\u003e task instanceof Deadlines)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Noob-No-1"},"content":"                .map(task -\u003e (Deadlines) task)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Noob-No-1"},"content":"                .anyMatch(deadline -\u003e deadline.getDescription().equalsIgnoreCase(description) \u0026\u0026","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Noob-No-1"},"content":"                        deadline.getDueDate().equals(dueDate));","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Noob-No-1"},"content":"     * Checks if a duplicate Todo task exists in the task list.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Noob-No-1"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Noob-No-1"},"content":"     * @param description The todo description.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Noob-No-1"},"content":"     * @return True if a duplicate todo exists, otherwise false.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Noob-No-1"},"content":"    private boolean checkForDuplicateTask(String description) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"Noob-No-1"},"content":"        return tasks.getTasks().stream()","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"Noob-No-1"},"content":"                .filter(task -\u003e task instanceof ToDos)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Noob-No-1"},"content":"                .map(task -\u003e (ToDos) task)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Noob-No-1"},"content":"                .anyMatch(todo -\u003e todo.getDescription().equalsIgnoreCase(description));","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Noob-No-1"},"content":"     * Prints tasks that match the keyword provided","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Noob-No-1"},"content":"     * @param details keyword from user input","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Noob-No-1"},"content":"     * @throws BrainrotException","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"Noob-No-1"},"content":"    public String findTask(String details) throws BrainrotException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Noob-No-1"},"content":"        String message \u003d \"Here are the matching tasks in your list: \\n\\n\\t\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Noob-No-1"},"content":"        int matchCount \u003d 0;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Noob-No-1"},"content":"        TaskList matched \u003d new TaskList();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"Noob-No-1"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"Noob-No-1"},"content":"            Task task \u003d tasks.getTask(i);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"Noob-No-1"},"content":"            if (task.getDescription().contains(details)) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"Noob-No-1"},"content":"                matched.addTask(task);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"Noob-No-1"},"content":"                matchCount++;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"Noob-No-1"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"Noob-No-1"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"Noob-No-1"},"content":"        if (matchCount \u003d\u003d 0) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"Noob-No-1"},"content":"            return \"No tasks found with the keyword: \" + details;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"Noob-No-1"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"Noob-No-1"},"content":"        return message + matched.listTasks();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"Noob-No-1"},"content":"     * Parses the task index from the user input.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"Noob-No-1"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"Noob-No-1"},"content":"     * @param details The string containing the task index.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"Noob-No-1"},"content":"     * @return The parsed task index (zero-based).","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"Noob-No-1"},"content":"     * @throws BrainrotException If the index is invalid.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"Noob-No-1"},"content":"    private int parseIndex(String details) throws BrainrotException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"Noob-No-1"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"Noob-No-1"},"content":"            int index \u003d Integer.parseInt(details) - 1;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"Noob-No-1"},"content":"            if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"Noob-No-1"},"content":"                throw new BrainrotException(\"Invalid task index.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"Noob-No-1"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"Noob-No-1"},"content":"            return index;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"Noob-No-1"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"Noob-No-1"},"content":"            throw new BrainrotException(\"Please provide a valid task number.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"Noob-No-1"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"Noob-No-1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"Noob-No-1"},"content":"        new GreenFloyd(\"data/task_history.txt\").run();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"Noob-No-1"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"Noob-No-1":293}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Noob-No-1"},"content":"package duke;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Noob-No-1"},"content":"import duke.gui.Main;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Noob-No-1"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Noob-No-1"},"content":"/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Noob-No-1"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Noob-No-1"},"content":" */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Noob-No-1"},"content":"public class Launcher {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Noob-No-1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Noob-No-1"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Noob-No-1"},"content":"}","lastModifiedDate":"2025-02-09","isFullCredit":false}],"authorContributionMap":{"Noob-No-1":11}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Noob-No-1"},"content":"package duke;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Noob-No-1"},"content":"import duke.Deadlines;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Noob-No-1"},"content":"import duke.Events;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Noob-No-1"},"content":"import duke.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Noob-No-1"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Noob-No-1"},"content":" * Parses user input into an action and details.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Noob-No-1"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Noob-No-1"},"content":"public class Parser {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Noob-No-1"},"content":"     * Parses the user input into an action and details.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Noob-No-1"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Noob-No-1"},"content":"     * @param input The full command entered by the user.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Noob-No-1"},"content":"     * @return A String array containing the action and details.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Noob-No-1"},"content":"    public static String[] parseInput(String input) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Noob-No-1"},"content":"        String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Noob-No-1"},"content":"        String action \u003d parts[0].trim().toLowerCase();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Noob-No-1"},"content":"        String details \u003d parts.length \u003e 1 ? parts[1].trim() : \"\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Noob-No-1"},"content":"        return new String[]{action, details};","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Noob-No-1"},"content":"     * Parses a task from a file line.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Noob-No-1"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Noob-No-1"},"content":"     * @param taskString The string representation of the task from the file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Noob-No-1"},"content":"     * @return The parsed task, or null if the line is invalid.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Noob-No-1"},"content":"    public static Task parseTaskFromFile(String taskString) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Noob-No-1"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Noob-No-1"},"content":"            String[] parts \u003d taskString.split(\" \\\\| \");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Noob-No-1"},"content":"            String type \u003d parts[0];","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Noob-No-1"},"content":"            boolean status \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Noob-No-1"},"content":"            String description \u003d parts[2];","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Noob-No-1"},"content":"            switch (type) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Noob-No-1"},"content":"            case \"T\":","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Noob-No-1"},"content":"                return new ToDos(description, status);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Noob-No-1"},"content":"            case \"E\":","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Noob-No-1"},"content":"                String from \u003d parts[3];","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Noob-No-1"},"content":"                String to \u003d parts[4];","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Noob-No-1"},"content":"                return new Events(description, from, to, status);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Noob-No-1"},"content":"            case \"D\":","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Noob-No-1"},"content":"                String by \u003d parts[3];","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Noob-No-1"},"content":"                return new Deadlines(description, by, status);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Noob-No-1"},"content":"            default:","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Noob-No-1"},"content":"                return null;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Noob-No-1"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Noob-No-1"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Noob-No-1"},"content":"            return null;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Noob-No-1"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Noob-No-1"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"Noob-No-1":54}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Noob-No-1"},"content":"package duke;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Noob-No-1"},"content":"import duke.BrainrotException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Noob-No-1"},"content":"import duke.Parser;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Noob-No-1"},"content":"import duke.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Noob-No-1"},"content":"import java.io.File;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Noob-No-1"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Noob-No-1"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Noob-No-1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Noob-No-1"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Noob-No-1"},"content":"public class Storage {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Noob-No-1"},"content":"    private String filePath;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Noob-No-1"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Noob-No-1"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Noob-No-1"},"content":"     * Loads in tasks saved in file to the chatbot","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Noob-No-1"},"content":"     * @return a tasklist","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Noob-No-1"},"content":"     * @throws BrainrotException skibidi error","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Noob-No-1"},"content":"    public ArrayList\u003cTask\u003e load() throws BrainrotException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Noob-No-1"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Noob-No-1"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Noob-No-1"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Noob-No-1"},"content":"            throw new BrainrotException(\"File not found: \" + filePath);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Noob-No-1"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Noob-No-1"},"content":"        try (Scanner scanner \u003d new Scanner(file)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Noob-No-1"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Noob-No-1"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Noob-No-1"},"content":"                Task task \u003d Parser.parseTaskFromFile(line);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Noob-No-1"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Noob-No-1"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Noob-No-1"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Noob-No-1"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Noob-No-1"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Noob-No-1"},"content":"            throw new BrainrotException(\"Error loading tasks from file.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Noob-No-1"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Noob-No-1"},"content":"        return tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Noob-No-1"},"content":"     * Saves task list into the specified file (filepath)","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Noob-No-1"},"content":"     * @param tasks the task list","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Noob-No-1"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Noob-No-1"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Noob-No-1"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Noob-No-1"},"content":"            PrintWriter writer \u003d new PrintWriter(file);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Noob-No-1"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Noob-No-1"},"content":"                writer.println(task.toFileFormat());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Noob-No-1"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Noob-No-1"},"content":"            writer.close();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Noob-No-1"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Noob-No-1"},"content":"            System.out.println(\"Error saving tasks to file.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Noob-No-1"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Noob-No-1"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"Noob-No-1":62}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Noob-No-1"},"content":"package duke;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Noob-No-1"},"content":"abstract class Task {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Noob-No-1"},"content":"    protected String description;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Noob-No-1"},"content":"    public boolean isDone;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Noob-No-1"},"content":"    public Task(String description, boolean status) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Noob-No-1"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Noob-No-1"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Noob-No-1"},"content":"    public abstract String toFileFormat();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Noob-No-1"},"content":"     * Checks the status of the Task object","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Noob-No-1"},"content":"     * @return a String indicating whether it is done or not","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Noob-No-1"},"content":"    public String getStatus() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Noob-No-1"},"content":"        return (isDone ?\"X\" :\" \");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Noob-No-1"},"content":"     * Marks a task as done","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Noob-No-1"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Noob-No-1"},"content":"        setDone(true);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Noob-No-1"},"content":"     * Unmarks a task","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Noob-No-1"},"content":"    public void markAsUndone() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Noob-No-1"},"content":"        setDone(false);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Noob-No-1"},"content":"     * Gets the description of the task","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Noob-No-1"},"content":"     * @return a String of the description of the task","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Noob-No-1"},"content":"    public String getDescription() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Noob-No-1"},"content":"        return description;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Noob-No-1"},"content":"     * Sets status to specified state","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Noob-No-1"},"content":"     * @param isDone a boolean indicating the status","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Noob-No-1"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Noob-No-1"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Noob-No-1"},"content":"     * Converts task object into standard string format","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Noob-No-1"},"content":"     * @return a String representation of the task","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Noob-No-1"},"content":"    @Override","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Noob-No-1"},"content":"    public String toString() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Noob-No-1"},"content":"        return \"[\" + getStatus() + \"] \" + description;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Noob-No-1"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"Noob-No-1":60}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Noob-No-1"},"content":"package duke;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Noob-No-1"},"content":"import duke.BrainrotException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Noob-No-1"},"content":"import duke.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Noob-No-1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Noob-No-1"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Noob-No-1"},"content":" * Manages the list of tasks and provides operations to add, delete, and retrieve tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Noob-No-1"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Noob-No-1"},"content":"public class TaskList {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Noob-No-1"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Noob-No-1"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Noob-No-1"},"content":"    public TaskList() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Noob-No-1"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Noob-No-1"},"content":"     * Constructs a TaskList with the specified tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Noob-No-1"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Noob-No-1"},"content":"     * @param tasks The list of tasks to initialize the TaskList.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Noob-No-1"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Noob-No-1"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Noob-No-1"},"content":"     * Adds a task to the list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Noob-No-1"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Noob-No-1"},"content":"     * @param task The task to be added.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Noob-No-1"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Noob-No-1"},"content":"        tasks.add(task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Noob-No-1"},"content":"     * Deletes a task from the list by its index.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Noob-No-1"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Noob-No-1"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Noob-No-1"},"content":"     * @throws BrainrotException If the index is invalid.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Noob-No-1"},"content":"    public void deleteTask(int index) throws BrainrotException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Noob-No-1"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Noob-No-1"},"content":"            throw new BrainrotException(\"Invalid task index.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Noob-No-1"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Noob-No-1"},"content":"        tasks.remove(index);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Noob-No-1"},"content":"     * Retrieves a task by its index.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Noob-No-1"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Noob-No-1"},"content":"     * @param index The index of the task to be retrieved.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Noob-No-1"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Noob-No-1"},"content":"     * @throws BrainrotException If the index is invalid.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Noob-No-1"},"content":"    public Task getTask(int index) throws BrainrotException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Noob-No-1"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Noob-No-1"},"content":"            throw new BrainrotException(\"Invalid task index.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Noob-No-1"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Noob-No-1"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Noob-No-1"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Noob-No-1"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Noob-No-1"},"content":"     * @return The list of tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Noob-No-1"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Noob-No-1"},"content":"        return tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Noob-No-1"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Noob-No-1"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Noob-No-1"},"content":"     * @return The number of tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Noob-No-1"},"content":"    public int size() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Noob-No-1"},"content":"        return tasks.size();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Noob-No-1"},"content":"     * Returns a string representation of all tasks in the TaskList,","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Noob-No-1"},"content":"     * with each task numbered sequentially.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Noob-No-1"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Noob-No-1"},"content":"     * @return A string containing the list of tasks, each on a new line.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Noob-No-1"},"content":"    public String listTasks() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Noob-No-1"},"content":"        StringBuilder listSummary \u003d new StringBuilder();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Noob-No-1"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Noob-No-1"},"content":"            listSummary.append((i + 1)).append(\". \")","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Noob-No-1"},"content":"                    .append(tasks.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Noob-No-1"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Noob-No-1"},"content":"        return listSummary.toString();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Noob-No-1"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"Noob-No-1":99}},{"path":"src/main/java/duke/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Noob-No-1"},"content":"package duke;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Noob-No-1"},"content":"import duke.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Noob-No-1"},"content":"public class ToDos extends Task {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Noob-No-1"},"content":"    private final String type \u003d \"T\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Noob-No-1"},"content":"    public String description;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Noob-No-1"},"content":"    public ToDos(String description, boolean status) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Noob-No-1"},"content":"        super(description, status);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Noob-No-1"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Noob-No-1"},"content":"     * Converts the ToDos object to string to be written into the data file","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Noob-No-1"},"content":"     * @return a String of the file format of the Deadline object","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Noob-No-1"},"content":"    public String toFileFormat() { //T | 1 | read book","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Noob-No-1"},"content":"        return \"T\" + \" | \" + (super.isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Noob-No-1"},"content":"     * Converts the ToDos object to String format to be printed","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Noob-No-1"},"content":"     * @return  a String format to be printed","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Noob-No-1"},"content":"    @Override","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Noob-No-1"},"content":"    public String toString() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Noob-No-1"},"content":"        return \"[\" + type + \"]\" + super.toString();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Noob-No-1"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"Noob-No-1":29}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Noob-No-1"},"content":"package duke;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Noob-No-1"},"content":"import duke.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Noob-No-1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Noob-No-1"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Noob-No-1"},"content":"public class Ui {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Noob-No-1"},"content":"    private final String separator \u003d \"#########################################################\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Noob-No-1"},"content":"     * Genrates welcome messages when app is started","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Noob-No-1"},"content":"    public void greeting() { //say hello :)","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Noob-No-1"},"content":"        printSeparateBar();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Noob-No-1"},"content":"        System.out.println(\"Ni Hao fine shiz\\n\" + \"What can I do for you?\\n\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Noob-No-1"},"content":"        printSeparateBar();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Noob-No-1"},"content":"     * Generates goodbye message and exit the app","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Noob-No-1"},"content":"    public void bye() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Noob-No-1"},"content":"        printSeparateBar();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Noob-No-1"},"content":"        System.out.println(\"See you fine shiz \u003d_\u003d\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Noob-No-1"},"content":"        printSeparateBar();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Noob-No-1"},"content":"     * Prints current task lists in specified format to user","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Noob-No-1"},"content":"     * @param list a list of the currently saved tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Noob-No-1"},"content":"    public void listTask(ArrayList\u003cTask\u003e list) { //List all added tasks in the list, print it in console","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Noob-No-1"},"content":"        int tasks \u003d list.size();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Noob-No-1"},"content":"        if (tasks \u003d\u003d 0) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Noob-No-1"},"content":"            System.out.println(\"No tasks added yet! Try typing tasks to me, I will add them to list\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Noob-No-1"},"content":"        } else {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Noob-No-1"},"content":"            for (int i \u003d 0; i \u003c tasks; i++) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Noob-No-1"},"content":"                Task task \u003d list.get(i);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Noob-No-1"},"content":"                System.out.println( (i + 1) + \".\" + task.toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Noob-No-1"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Noob-No-1"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Noob-No-1"},"content":"     * Executes the ListCommand by displaying the current tasks in the task list","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Noob-No-1"},"content":"     * to the user. If the task list is empty, returns a String indicating that the list is empty","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Noob-No-1"},"content":"     * is shown. Otherwise, returns a String representing a summary of the tasks.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Noob-No-1"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Noob-No-1"},"content":"     * @param list The TaskList to be displayed.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Noob-No-1"},"content":"     * @return A String showing a list of the tasks.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Noob-No-1"},"content":"    public String listTask(TaskList list) { //List all added tasks in the list, print it in console","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Noob-No-1"},"content":"        int tasks \u003d list.size();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Noob-No-1"},"content":"        if (tasks \u003d\u003d 0) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Noob-No-1"},"content":"            return \"No tasks added yet! Try typing tasks to me, I will add them to list\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Noob-No-1"},"content":"        } else {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Noob-No-1"},"content":"            return  list.listTasks();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Noob-No-1"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Noob-No-1"},"content":"     * Prints loading errors","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Noob-No-1"},"content":"     * @param message error message","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Noob-No-1"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Noob-No-1"},"content":"        System.out.println(\"Error: \" + message);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Noob-No-1"},"content":"     * Prints error when issues occurs when loading task list from local file","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Noob-No-1"},"content":"    public void showLoadingError() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Noob-No-1"},"content":"        System.out.println(\"Error loading tasks from file.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Noob-No-1"},"content":"     * Scans user input lines and return the user input as string","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Noob-No-1"},"content":"     * @return user input","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Noob-No-1"},"content":"    public String readCommand() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Noob-No-1"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Noob-No-1"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Noob-No-1"},"content":"     * Prints add task message when user added a task","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Noob-No-1"},"content":"     * @param task a task that is added","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Noob-No-1"},"content":"     * @param taskCount current number of tasks before adding","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Noob-No-1"},"content":"    public void printAddedTask(Task task, int taskCount) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Noob-No-1"},"content":"        System.out.println(\"Got it, added tasks to the task list:\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Noob-No-1"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Noob-No-1"},"content":"        System.out.println(\"Currently have \" + taskCount + \" tasks in your list\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Noob-No-1"},"content":"    public String printAddedTaskStr (Task task, int taskCount) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Noob-No-1"},"content":"        return \"Got it, added tasks to the task list:\" + \".\\n\\n\" + task.toString() + \"\\n\\n\" +","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Noob-No-1"},"content":"                \"Currently have \" + taskCount + \" tasks in your list\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Noob-No-1"},"content":"     * Prints delete task message when user deleted a task","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Noob-No-1"},"content":"     * @param task a task that is deleted","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Noob-No-1"},"content":"     * @param taskCount current number of tasks before deleting","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Noob-No-1"},"content":"    public void printDeletedTask(Task task, int taskCount) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Noob-No-1"},"content":"        System.out.println(\"Noted. Deleted this task:\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Noob-No-1"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Noob-No-1"},"content":"        System.out.println(\"Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Noob-No-1"},"content":"    public String printDeletedTaskStr(Task task, int taskCount) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Noob-No-1"},"content":"        return \"Got it, deleted tasks to the task list:\" + \".\\n\\n\" + task.toString() + \"\\n\\n\" +","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Noob-No-1"},"content":"                \"Currently have \" + taskCount + \" tasks in your list\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Noob-No-1"},"content":"     * Prints separation line between messages","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Noob-No-1"},"content":"    public void printSeparateBar() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Noob-No-1"},"content":"        System.out.println(separator);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Noob-No-1"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"Noob-No-1":121}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Noob-No-1"},"content":"package duke.gui;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Noob-No-1"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Noob-No-1"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Noob-No-1"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Noob-No-1"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Noob-No-1"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Noob-No-1"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Noob-No-1"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Noob-No-1"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Noob-No-1"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Noob-No-1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Noob-No-1"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Noob-No-1"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Noob-No-1"},"content":"/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Noob-No-1"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Noob-No-1"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Noob-No-1"},"content":" */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Noob-No-1"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Noob-No-1"},"content":"    @FXML","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Noob-No-1"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Noob-No-1"},"content":"    @FXML","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Noob-No-1"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Noob-No-1"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Noob-No-1"},"content":"        try {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Noob-No-1"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/display/DialogBox.fxml\"));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Noob-No-1"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Noob-No-1"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Noob-No-1"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Noob-No-1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Noob-No-1"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Noob-No-1"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Noob-No-1"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Noob-No-1"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Noob-No-1"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Noob-No-1"},"content":"    private void flip() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Noob-No-1"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Noob-No-1"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Noob-No-1"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Noob-No-1"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Noob-No-1"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Noob-No-1"},"content":"     * Creates and returns a DialogBox for the user.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Noob-No-1"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Noob-No-1"},"content":"     * @param text The text to be displayed in the user\u0027s dialog box.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Noob-No-1"},"content":"     * @param img The image to be displayed in the user\u0027s dialog box.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Noob-No-1"},"content":"     * @return A DialogBox object representing the user\u0027s dialog.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Noob-No-1"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Noob-No-1"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Noob-No-1"},"content":"     * Creates and returns a DialogBox for Duke, with the dialog box flipped.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Noob-No-1"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Noob-No-1"},"content":"     * @param text The text to be displayed in Duke\u0027s dialog box.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Noob-No-1"},"content":"     * @param img The image to be displayed in Duke\u0027s dialog box.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Noob-No-1"},"content":"     * @return A DialogBox object representing Duke\u0027s flipped dialog.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Noob-No-1"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Noob-No-1"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Noob-No-1"},"content":"        db.flip();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Noob-No-1"},"content":"        return db;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Noob-No-1"},"content":"}","lastModifiedDate":"2025-02-09","isFullCredit":false}],"authorContributionMap":{"Noob-No-1":75}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Noob-No-1"},"content":"package duke.gui;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Noob-No-1"},"content":"import duke.GreenFloyd;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Noob-No-1"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Noob-No-1"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Noob-No-1"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Noob-No-1"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Noob-No-1"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Noob-No-1"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Noob-No-1"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Noob-No-1"},"content":"    private GreenFloyd bot \u003d new GreenFloyd(\"data/task_history.txt\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Noob-No-1"},"content":"    @Override","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Noob-No-1"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Noob-No-1"},"content":"        try {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Noob-No-1"},"content":"            stage.setMinHeight(220);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Noob-No-1"},"content":"            stage.setMinWidth(417);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Noob-No-1"},"content":"            stage.setTitle(\"TOTALLY Normal Conversation\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Noob-No-1"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/display/MainWindow.fxml\"));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Noob-No-1"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Noob-No-1"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Noob-No-1"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Noob-No-1"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setGreenFloyd(bot);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Noob-No-1"},"content":"            stage.show();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Noob-No-1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Noob-No-1"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Noob-No-1"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Noob-No-1"},"content":"}","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false}],"authorContributionMap":{"Noob-No-1":32}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Noob-No-1"},"content":"package duke.gui;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Noob-No-1"},"content":"import duke.BrainrotException;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Noob-No-1"},"content":"import duke.GreenFloyd;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Noob-No-1"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Noob-No-1"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Noob-No-1"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Noob-No-1"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Noob-No-1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Noob-No-1"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Noob-No-1"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Noob-No-1"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Noob-No-1"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Noob-No-1"},"content":"    @FXML","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Noob-No-1"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Noob-No-1"},"content":"    @FXML","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Noob-No-1"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Noob-No-1"},"content":"    @FXML","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Noob-No-1"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Noob-No-1"},"content":"    @FXML","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Noob-No-1"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Noob-No-1"},"content":"    private GreenFloyd bot;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Noob-No-1"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/nerd_emoji_by_mar34568_dihon0i.png\"));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Noob-No-1"},"content":"    private Image botImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/skibidi_toilet_png_meme_by_kylewithem_dhpztml.png\"));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Noob-No-1"},"content":"    @FXML","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Noob-No-1"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Noob-No-1"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Noob-No-1"},"content":"    /** Injects the Duke instance */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Noob-No-1"},"content":"    public void setGreenFloyd(GreenFloyd g) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Noob-No-1"},"content":"        bot \u003d g;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Noob-No-1"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Noob-No-1"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Noob-No-1"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Noob-No-1"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Noob-No-1"},"content":"    @FXML","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Noob-No-1"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Noob-No-1"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Noob-No-1"},"content":"        try {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Noob-No-1"},"content":"            String response \u003d bot.handleCommand(input);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Noob-No-1"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Noob-No-1"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Noob-No-1"},"content":"                    DialogBox.getDukeDialog(response, botImage)","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Noob-No-1"},"content":"            );","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Noob-No-1"},"content":"            userInput.clear();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Noob-No-1"},"content":"        } catch (BrainrotException e) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Noob-No-1"},"content":"            // Handle known user errors (e.g., invalid format, duplicate task)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Noob-No-1"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Noob-No-1"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Noob-No-1"},"content":"                    DialogBox.getDukeDialog(\"Error: \" + e.getMessage(), botImage)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Noob-No-1"},"content":"            );","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Noob-No-1"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Noob-No-1"},"content":"            // Catch all other unexpected errors","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Noob-No-1"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Noob-No-1"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Noob-No-1"},"content":"                    DialogBox.getDukeDialog(\"Oops, an unknown error occurred...\", botImage)","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Noob-No-1"},"content":"            );","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Noob-No-1"},"content":"            e.printStackTrace(); // Log error details for debugging","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Noob-No-1"},"content":"        } finally {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Noob-No-1"},"content":"            userInput.clear(); // Always clear input after processing","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Noob-No-1"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Noob-No-1"},"content":"}","lastModifiedDate":"2025-02-09","isFullCredit":false}],"authorContributionMap":{"Noob-No-1":73}},{"path":"src/main/resources/display/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Noob-No-1"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Noob-No-1"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Noob-No-1"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Noob-No-1"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Noob-No-1"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Noob-No-1"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Noob-No-1"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Noob-No-1"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Noob-No-1"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Noob-No-1"},"content":"                \u003cInsets left\u003d\"7.0\" right\u003d\"7.0\" /\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Noob-No-1"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Noob-No-1"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Noob-No-1"},"content":"                \u003cInsets bottom\u003d\"6.0\" left\u003d\"6.0\" right\u003d\"6.0\" top\u003d\"6.0\" /\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Noob-No-1"},"content":"            \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Noob-No-1"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Noob-No-1"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Noob-No-1"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Noob-No-1"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Noob-No-1"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Noob-No-1"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false}],"authorContributionMap":{"Noob-No-1":22}},{"path":"src/main/resources/display/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Noob-No-1"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Noob-No-1"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Noob-No-1"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Noob-No-1"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Noob-No-1"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Noob-No-1"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Noob-No-1"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Noob-No-1"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Noob-No-1"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Noob-No-1"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Noob-No-1"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Noob-No-1"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Noob-No-1"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Noob-No-1"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Noob-No-1"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Noob-No-1"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Noob-No-1"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false}],"authorContributionMap":{"Noob-No-1":19}},{"path":"src/test/java/duke/Green_FloydTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Noob-No-1"},"content":"package duke;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Noob-No-1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Noob-No-1"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Noob-No-1"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Noob-No-1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Noob-No-1"},"content":"public class Green_FloydTest {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Noob-No-1"},"content":"    private Green_Floyd greenFloyd;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Noob-No-1"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Noob-No-1"},"content":"    public void setUp() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Noob-No-1"},"content":"        greenFloyd \u003d new Green_Floyd(\"taskHistoryTest\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Noob-No-1"},"content":"    @Test","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Noob-No-1"},"content":"    public void testMarkTaskAsDone_invalidIndex() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Noob-No-1"},"content":"        BrainrotException exception \u003d assertThrows(BrainrotException.class, () -\u003e {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Noob-No-1"},"content":"            greenFloyd.handleCommand(\"mark 100\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Noob-No-1"},"content":"        });","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Noob-No-1"},"content":"        assertEquals(\"Invalid task index.\", exception.getMessage());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Noob-No-1"},"content":"    @Test","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Noob-No-1"},"content":"    public void testMarkTaskAsDone_nonNumericInput() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Noob-No-1"},"content":"        BrainrotException exception \u003d assertThrows(BrainrotException.class, () -\u003e {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Noob-No-1"},"content":"            greenFloyd.handleCommand(\"mark abc\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Noob-No-1"},"content":"        });","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Noob-No-1"},"content":"        assertEquals(\"Please provide a valid task number.\", exception.getMessage());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Noob-No-1"},"content":"    @Test","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Noob-No-1"},"content":"    public void testAddTodo_validDescription() throws BrainrotException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Noob-No-1"},"content":"        greenFloyd.handleCommand(\"todo Test Todo\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Noob-No-1"},"content":"        Task task \u003d greenFloyd.getTasks().getTask(0);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Noob-No-1"},"content":"        assertEquals(\"[T][ ] Test Todo\", task.toString());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"Noob-No-1":42}},{"path":"src/test/java/duke/ToDosTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Noob-No-1"},"content":"package duke;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Noob-No-1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Noob-No-1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Noob-No-1"},"content":"public class ToDosTest {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Noob-No-1"},"content":"    @Test","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Noob-No-1"},"content":"    public void toFileFormatTest() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Noob-No-1"},"content":"        ToDos todo \u003d new ToDos(\"Do nothing\", false);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Noob-No-1"},"content":"        String fileFormat \u003d todo.toFileFormat();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Noob-No-1"},"content":"        String expectedFileFormat \u003d \"T | 0 | Do nothing\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Noob-No-1"},"content":"        assertEquals(fileFormat, expectedFileFormat);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Noob-No-1"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Noob-No-1"},"content":"    @Test","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Noob-No-1"},"content":"    public void toStringTest() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Noob-No-1"},"content":"        ToDos todo \u003d new ToDos(\"Do nothing\", false);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Noob-No-1"},"content":"        String stringFormat \u003d todo.toString();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Noob-No-1"},"content":"        String expectedStringFormat \u003d \"[T][ ] Do nothing\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Noob-No-1"},"content":"        assertEquals(stringFormat, expectedStringFormat);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Noob-No-1"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Noob-No-1"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"Noob-No-1":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Noob-No-1"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Noob-No-1"},"content":"event project meeting /from 2/12/2019 1400 2pm /to 2/12/2019 4pm","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Noob-No-1"},"content":"mark 1","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Noob-No-1"},"content":"unmark 1","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Noob-No-1"},"content":"list","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Noob-No-1"},"content":"mark 2","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Noob-No-1"},"content":"list","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Noob-No-1"},"content":"bye","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"Noob-No-1":8}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Noob-No-1"},"content":"java -classpath ../bin Green_Floyd \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"Noob-No-1":1,"-":37}}]
