[{"path":"src/main/java/Zephyr.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adwinang"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adwinang"},"content":"import commands.AbstractCommand;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adwinang"},"content":"import controllers.Parser;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adwinang"},"content":"import controllers.Storage;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adwinang"},"content":"import controllers.Ui;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adwinang"},"content":"import datastructures.TaskList;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adwinang"},"content":"import exceptions.ZephyrException;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adwinang"},"content":"/**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adwinang"},"content":" * The main class for the Zephyr application.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adwinang"},"content":" * This class is responsible for initializing the user interface, storage, parser,","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adwinang"},"content":" * and task list, as well as running the main application loop.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adwinang"},"content":" */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adwinang"},"content":"public class Zephyr {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adwinang"},"content":"    private final Ui ui;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adwinang"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adwinang"},"content":"    private final Storage storage;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adwinang"},"content":"    private final Parser parser;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adwinang"},"content":"     * Constructs a Zephyr application with the specified file path for task storage.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adwinang"},"content":"     * @param filePath the file path where tasks are stored in markdown format","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adwinang"},"content":"    public Zephyr(String filePath) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adwinang"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adwinang"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adwinang"},"content":"        parser \u003d new Parser(storage, ui);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adwinang"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adwinang"},"content":"            tasks \u003d new TaskList(storage.loadFile());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adwinang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adwinang"},"content":"            ui.printLoadingError();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adwinang"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adwinang"},"content":"     * Runs the main application loop.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adwinang"},"content":"     * This method prints the welcome message, then enters a loop to read user commands,","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adwinang"},"content":"     * execute them, and check for an exit command. When an exit command is received,","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adwinang"},"content":"     * the loop terminates and the tasks are saved to storage.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adwinang"},"content":"    public void run() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adwinang"},"content":"        ui.printWelcome();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adwinang"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adwinang"},"content":"        while (!isExit) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adwinang"},"content":"            try {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adwinang"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adwinang"},"content":"                AbstractCommand c \u003d parser.parse(fullCommand);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adwinang"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adwinang"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adwinang"},"content":"            } catch (ZephyrException e) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adwinang"},"content":"                ui.println(e.getMessage());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adwinang"},"content":"            }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adwinang"},"content":"        try {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adwinang"},"content":"            storage.saveFile(tasks.getTasks());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adwinang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adwinang"},"content":"            ui.printSavingError();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"adwinang"},"content":"     * The main entry point of the Zephyr application.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"adwinang"},"content":"     * @param args command-line arguments (not used)","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"adwinang"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"adwinang"},"content":"        new Zephyr(\"data/tasks.md\").run();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"adwinang"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"adwinang":73}},{"path":"src/main/java/commands/AbstractCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adwinang"},"content":"package commands;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adwinang"},"content":"import controllers.Storage;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adwinang"},"content":"import controllers.Ui;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adwinang"},"content":"import datastructures.TaskList;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adwinang"},"content":"import exceptions.ZephyrException;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adwinang"},"content":"/**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adwinang"},"content":" * Abstract class for all commands","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adwinang"},"content":" */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adwinang"},"content":"public abstract class AbstractCommand {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adwinang"},"content":"     * Arguments of the command, excludes the command itself","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adwinang"},"content":"    private String arguments;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adwinang"},"content":"    private String[] words;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adwinang"},"content":"     * Constructor for AbstractCommand","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adwinang"},"content":"     * Words array is populated with the arguments split by spaces","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adwinang"},"content":"     * @param arguments Arguments of the command","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adwinang"},"content":"    AbstractCommand(String arguments) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adwinang"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adwinang"},"content":"        this.words \u003d this.arguments.split(\" \");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adwinang"},"content":"     * Executes the command","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adwinang"},"content":"     * @param tasks The TaskList object","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adwinang"},"content":"     * @param ui The Ui object","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adwinang"},"content":"     * @param storage Storage object","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adwinang"},"content":"     * @throws ZephyrException if the command is invalid","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adwinang"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws ZephyrException;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adwinang"},"content":"     * Checks if the command is an exit command","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adwinang"},"content":"     * @return true if the command is an exit type command, false otherwise","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adwinang"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adwinang"},"content":"        return false;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adwinang"},"content":"     * Checks if remaining arguments are valid","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adwinang"},"content":"     * It is not context aware, meaning it does not check if","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adwinang"},"content":"     * the arguments are valid for TaskList, Ui or Storage","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adwinang"},"content":"     * @throws ZephyrException if the command is invalid","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adwinang"},"content":"    public abstract void isValidCommand() throws ZephyrException;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adwinang"},"content":"    public String getArguments() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adwinang"},"content":"        return arguments;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adwinang"},"content":"    public String[] getWords() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adwinang"},"content":"        return words;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adwinang"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"adwinang":63}},{"path":"src/main/java/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adwinang"},"content":"package commands;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adwinang"},"content":"import controllers.Storage;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adwinang"},"content":"import controllers.Ui;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adwinang"},"content":"import datastructures.TaskList;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adwinang"},"content":"/**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adwinang"},"content":" * Represents the command to terminate the application.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adwinang"},"content":" * The {@code ByeCommand} class handles the termination process by","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adwinang"},"content":" * displaying a goodbye message through the UI. When executed, it ensures","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adwinang"},"content":" * that the command is valid and then signals the program to exit.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adwinang"},"content":" */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adwinang"},"content":"public class ByeCommand extends AbstractCommand {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adwinang"},"content":"     * Constructs a ByeCommand instance.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adwinang"},"content":"     * This command does not require any arguments but follows the standard command format.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adwinang"},"content":"     * @param arguments The arguments passed to the command (expected to be empty).","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adwinang"},"content":"    public ByeCommand(String arguments) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adwinang"},"content":"        super(arguments);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adwinang"},"content":"     * Executes the Bye command.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adwinang"},"content":"     * This method verifies that the command is valid and then","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adwinang"},"content":"     * calls the UI to display the goodbye message.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adwinang"},"content":"     * @param tasks   The TaskList object (not used in this command).","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adwinang"},"content":"     * @param ui      The Ui object to handle user interaction.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adwinang"},"content":"     * @param storage The Storage object (not used in this command).","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adwinang"},"content":"    @Override","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adwinang"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adwinang"},"content":"        isValidCommand();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adwinang"},"content":"        ui.printGoodbye();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adwinang"},"content":"     * Indicates that this command is an exit command.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adwinang"},"content":"     * @return true, since this command terminates the application.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adwinang"},"content":"    @Override","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adwinang"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adwinang"},"content":"        return true;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adwinang"},"content":"     * Validates the Bye command.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adwinang"},"content":"     * Since this command does not require any arguments, no additional validation is necessary.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adwinang"},"content":"    @Override","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adwinang"},"content":"    public void isValidCommand() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adwinang"},"content":"        // No validation needed for the Bye command.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adwinang"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"adwinang":58}},{"path":"src/main/java/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adwinang"},"content":"package commands;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adwinang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adwinang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adwinang"},"content":"import controllers.Storage;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adwinang"},"content":"import controllers.Ui;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adwinang"},"content":"import datastructures.TaskList;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adwinang"},"content":"import exceptions.ZephyrException;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adwinang"},"content":"import tasks.DeadlineTask;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adwinang"},"content":"/**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adwinang"},"content":" * Represents a command to add a DeadlineTask to the task list.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adwinang"},"content":" * The DeadlineCommand processes a command that includes a task description","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adwinang"},"content":" * and a deadline date, which is expected to be provided in the format \u003ccode\u003edd MMM yyyy\u003c/code\u003e.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adwinang"},"content":" * If the input is invalid, an exception is thrown.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adwinang"},"content":" */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adwinang"},"content":"public class DeadlineCommand extends AbstractCommand {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adwinang"},"content":"     * Constructs a DeadlineCommand instance.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adwinang"},"content":"     * The command expects arguments in the format","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adwinang"},"content":"     * \u003ctask description\u003e /by \u003cdeadline date\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adwinang"},"content":"     * @param arguments The raw arguments passed with the command.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adwinang"},"content":"    public DeadlineCommand(String arguments) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adwinang"},"content":"        super(arguments);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adwinang"},"content":"     * Executes the deadline command by creating a DeadlineTask","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adwinang"},"content":"     * and adding it to the task list.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adwinang"},"content":"     * The method parses the user input to extract the task description","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adwinang"},"content":"     * and deadline date. If the date is invalid, an exception is thrown.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adwinang"},"content":"     * @param tasks   The TaskList where the new task will be added.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adwinang"},"content":"     * @param ui      The Ui object responsible for user interaction.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adwinang"},"content":"     * @param storage The Storage object (not used in this command).","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adwinang"},"content":"     * @throws ZephyrException if the command is invalid or the date format is incorrect.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adwinang"},"content":"    @Override","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adwinang"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adwinang"},"content":"        isValidCommand();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adwinang"},"content":"        String[] tokens \u003d this.getArguments().split(\" /by \", 2);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adwinang"},"content":"        String description \u003d tokens[0];","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adwinang"},"content":"        String by \u003d tokens[1];","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adwinang"},"content":"        try {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adwinang"},"content":"            LocalDate byDate \u003d ui.parseDate(by);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adwinang"},"content":"            DeadlineTask task \u003d new DeadlineTask(description, byDate);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adwinang"},"content":"            tasks.addTask(task);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adwinang"},"content":"            ui.printTaskAdded(task);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adwinang"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adwinang"},"content":"            throw new ZephyrException(\"Please enter a valid date in the format \u0027dd MMM yyyy\u0027.\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adwinang"},"content":"     * Validates the DeadlineCommand arguments.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adwinang"},"content":"     * This method ensures that the command contains a valid task description","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adwinang"},"content":"     * and the \"/by\" keyword separating the task description from the deadline.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"adwinang"},"content":"     * @throws ZephyrException if the description is empty, the \"/by\" keyword is missing,","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"adwinang"},"content":"     *                         or the deadline date is not provided.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"adwinang"},"content":"    @Override","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"adwinang"},"content":"    public void isValidCommand() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"adwinang"},"content":"        if (this.getArguments().isBlank()) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"adwinang"},"content":"            throw new ZephyrException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"adwinang"},"content":"        if (!this.getArguments().contains(\"/by\")) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"adwinang"},"content":"            throw new ZephyrException(\"The deadline command must contain a \u0027/by\u0027 keyword.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"adwinang"},"content":"        String[] tokens \u003d this.getArguments().split(\" /by \", 2);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"adwinang"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"adwinang"},"content":"            throw new ZephyrException(\"The deadline command must contain a deadline.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"adwinang"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"adwinang":81}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adwinang"},"content":"package commands;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adwinang"},"content":"import controllers.Storage;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adwinang"},"content":"import controllers.Ui;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adwinang"},"content":"import datastructures.TaskList;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adwinang"},"content":"import exceptions.ZephyrException;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adwinang"},"content":"/**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adwinang"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adwinang"},"content":" * The DeleteCommand removes a task based on its index","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adwinang"},"content":" * in the task list. The command expects a valid task number as input.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adwinang"},"content":" * If the input is invalid or out of range, an exception is thrown.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adwinang"},"content":" */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adwinang"},"content":"public class DeleteCommand extends AbstractCommand {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adwinang"},"content":"     * Constructs a DeleteCommand instance.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adwinang"},"content":"     * The command requires an integer argument representing the task index (1-based).","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adwinang"},"content":"     * @param arguments The task number to delete.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adwinang"},"content":"    public DeleteCommand(String arguments) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adwinang"},"content":"        super(arguments);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adwinang"},"content":"     * Executes the delete command by removing a task from the task list.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adwinang"},"content":"     * This method validates the input, parses the task number, and removes","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adwinang"},"content":"     * the corresponding task. If the task number is invalid or out of range,","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adwinang"},"content":"     * an exception is thrown.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adwinang"},"content":"     * @param tasks   The TaskList from which the task will be deleted.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adwinang"},"content":"     * @param ui      The Ui object responsible for user interaction.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adwinang"},"content":"     * @param storage The Storage object (not used in this command).","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adwinang"},"content":"     * @throws ZephyrException if the task number is invalid or out of range.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adwinang"},"content":"    @Override","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adwinang"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adwinang"},"content":"        isValidCommand();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adwinang"},"content":"        int taskIndex \u003d Integer.parseInt(this.getArguments()) - 1;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adwinang"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.getSize()) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adwinang"},"content":"            throw new ZephyrException(\"Task number out of range.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adwinang"},"content":"        tasks.deleteTask(taskIndex);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adwinang"},"content":"        ui.printTaskDeleted(tasks.getTask(taskIndex), tasks.getSize());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adwinang"},"content":"     * Validates the DeleteCommand arguments.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adwinang"},"content":"     * This method ensures that the command contains a valid task number.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adwinang"},"content":"     * It checks whether the input is empty or contains non-numeric characters.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adwinang"},"content":"     * @throws ZephyrException if the input is empty or not a valid integer.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adwinang"},"content":"    @Override","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adwinang"},"content":"    public void isValidCommand() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adwinang"},"content":"        if (this.getArguments().isEmpty()) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adwinang"},"content":"            throw new ZephyrException(\"The description of a delete command cannot be empty.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adwinang"},"content":"        try {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adwinang"},"content":"            Integer.parseInt(this.getArguments());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adwinang"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"adwinang"},"content":"            throw new ZephyrException(\"Please enter a valid task number to delete.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"adwinang"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"adwinang":67}},{"path":"src/main/java/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adwinang"},"content":"package commands;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adwinang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adwinang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adwinang"},"content":"import controllers.Storage;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adwinang"},"content":"import controllers.Ui;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adwinang"},"content":"import datastructures.TaskList;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adwinang"},"content":"import exceptions.ZephyrException;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adwinang"},"content":"import tasks.EventTask;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adwinang"},"content":"/**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adwinang"},"content":" * Represents a command to add an EventTask to the task list.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adwinang"},"content":" * The {@code EventCommand} parses the command arguments to extract the event\u0027s description,","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adwinang"},"content":" * start date (indicated by the \"/from\" keyword), and end date (indicated by the \"/at\" keyword).","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adwinang"},"content":" * The expected format for the command arguments is:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adwinang"},"content":" * \"\u003cdescription\u003e /from \u003cstart date\u003e /at \u003cend date\u003e\"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adwinang"},"content":" */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adwinang"},"content":"public class EventCommand extends AbstractCommand {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adwinang"},"content":"     * Constructs an EventCommand instance with the specified arguments.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adwinang"},"content":"     * @param arguments the raw command arguments in the format","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adwinang"},"content":"     * \u003cdescription\u003e /from \u003cstart date\u003e /at \u003cend date\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adwinang"},"content":"    public EventCommand(String arguments) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adwinang"},"content":"        super(arguments);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adwinang"},"content":"     * Executes the event command by creating an EventTask and adding it to the task list.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adwinang"},"content":"     * The method first validates the command arguments. It then splits the input into the event","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adwinang"},"content":"     * description and the date components using the \"/from\" and \"/at\" keywords. The dates are parsed","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adwinang"},"content":"     * using the Ui.parseDate method. If parsing is successful, an EventTask is created,","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adwinang"},"content":"     * added to the task list, and a confirmation is displayed via the Ui. If a date cannot be parsed,","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adwinang"},"content":"     * a ZephyrException is thrown.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adwinang"},"content":"     * @param tasks   the TaskList to which the new event task is added.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adwinang"},"content":"     * @param ui      the Ui used for interacting with the user and parsing dates.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adwinang"},"content":"     * @param storage the Storage (not used in this command).","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adwinang"},"content":"     * @throws ZephyrException if the command is invalid or the date format is incorrect.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adwinang"},"content":"    @Override","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adwinang"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adwinang"},"content":"        isValidCommand();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adwinang"},"content":"        String[] tokens \u003d getArguments().split(\" /from \", 2);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adwinang"},"content":"        String description \u003d tokens[0];","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adwinang"},"content":"        String[] fromAndAt \u003d tokens[1].split(\" /at \", 2);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adwinang"},"content":"        try {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adwinang"},"content":"            LocalDate fromDate \u003d ui.parseDate(fromAndAt[0]);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adwinang"},"content":"            LocalDate atDate \u003d ui.parseDate(fromAndAt[1]);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adwinang"},"content":"            EventTask event \u003d new EventTask(description, fromDate, atDate);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adwinang"},"content":"            tasks.addTask(event);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adwinang"},"content":"            ui.printTaskAdded(event);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adwinang"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adwinang"},"content":"            throw new ZephyrException(\"Please enter a valid date in the format \u0027dd MMM YYYY\u0027.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adwinang"},"content":"     * Validates the EventCommand arguments.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adwinang"},"content":"     * This method checks that the command arguments are not blank and that they contain the required","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"adwinang"},"content":"     * \"/from\" and \"/at\" keywords to separate the event description from the date values.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"adwinang"},"content":"     * It also ensures that after splitting the arguments, both the start date and end date are provided.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"adwinang"},"content":"     * @throws ZephyrException if the command arguments are blank, or if they do not contain the required","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"adwinang"},"content":"     *                         keywords, or if the date components are missing.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"adwinang"},"content":"    @Override","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"adwinang"},"content":"    public void isValidCommand() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"adwinang"},"content":"        if (getArguments().isBlank()) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"adwinang"},"content":"            throw new ZephyrException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"adwinang"},"content":"        if (!getArguments().contains(\"/from\")) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"adwinang"},"content":"            throw new ZephyrException(\"The event command must contain \u0027/from\u0027.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"adwinang"},"content":"        if (!getArguments().contains(\"/at\")) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"adwinang"},"content":"            throw new ZephyrException(\"The event command must contain \u0027/at\u0027.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"adwinang"},"content":"        String[] tokens \u003d getArguments().split(\" /from \", 2);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"adwinang"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"adwinang"},"content":"            throw new ZephyrException(\"The event command must contain a date.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"adwinang"},"content":"        String[] fromAndAt \u003d tokens[1].split(\" /at \", 2);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"adwinang"},"content":"        if (fromAndAt.length \u003c 2) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"adwinang"},"content":"            throw new ZephyrException(\"The event command must contain an at date.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"adwinang"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"adwinang":92}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adwinang"},"content":"package commands;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adwinang"},"content":"import java.util.List;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adwinang"},"content":"import controllers.Storage;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adwinang"},"content":"import controllers.Ui;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adwinang"},"content":"import datastructures.TaskList;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adwinang"},"content":"import exceptions.ZephyrException;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adwinang"},"content":"import tasks.AbstractTask;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adwinang"},"content":"/**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adwinang"},"content":" * Represents a command to search for tasks based on a provided query.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adwinang"},"content":" * The command filters the tasks in the TaskList whose descriptions contain","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adwinang"},"content":" * the search query and prints the matching tasks.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adwinang"},"content":" */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adwinang"},"content":"public class FindCommand extends AbstractCommand {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adwinang"},"content":"     * Constructs a FindCommand with the specified search query.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adwinang"},"content":"     * @param arguments the search query used to filter tasks","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adwinang"},"content":"    public FindCommand(String arguments) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adwinang"},"content":"        super(arguments);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adwinang"},"content":"     * Executes the find command by searching for tasks that match the query.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adwinang"},"content":"     * This method retrieves tasks from the TaskList whose descriptions contain","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adwinang"},"content":"     * the search query and then prints the found tasks using the Ui object.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adwinang"},"content":"     * @param tasks   the TaskList to search within","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adwinang"},"content":"     * @param ui      the Ui used to display the search results","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adwinang"},"content":"     * @param storage the Storage object (not used in this command)","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adwinang"},"content":"     * @throws ZephyrException if an error occurs during the search execution","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adwinang"},"content":"    @Override","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adwinang"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws ZephyrException {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adwinang"},"content":"        List\u003cAbstractTask\u003e foundTasks \u003d tasks.findTasks(this.getArguments());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adwinang"},"content":"        ui.printTaskList(foundTasks);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adwinang"},"content":"     * Validates the find command arguments.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adwinang"},"content":"     * This method ensures that a non-empty search query is provided.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adwinang"},"content":"     * @throws ZephyrException if the search query is empty","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adwinang"},"content":"    @Override","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adwinang"},"content":"    public void isValidCommand() throws ZephyrException {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adwinang"},"content":"        if (this.getArguments().isEmpty()) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adwinang"},"content":"            throw new ZephyrException(\"The description of a find command cannot be empty.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adwinang"},"content":"}","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"adwinang":55}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adwinang"},"content":"package commands;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adwinang"},"content":"import controllers.Storage;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adwinang"},"content":"import controllers.Ui;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adwinang"},"content":"import datastructures.TaskList;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adwinang"},"content":"/**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adwinang"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adwinang"},"content":" * The ListCommand displays all tasks to the user. It does not require any","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adwinang"},"content":" * additional arguments and simply delegates to the UI to show the tasks.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adwinang"},"content":" */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adwinang"},"content":"public class ListCommand extends AbstractCommand {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adwinang"},"content":"     * Constructs a ListCommand instance.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adwinang"},"content":"     * This command does not require any additional arguments.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adwinang"},"content":"     * @param arguments the arguments passed with the command (expected to be empty).","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adwinang"},"content":"    public ListCommand(String arguments) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adwinang"},"content":"        super(arguments);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adwinang"},"content":"     * Executes the list command by displaying all tasks in the task list.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adwinang"},"content":"     * This method validates the command (although no validation is needed for listing)","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adwinang"},"content":"     * and then calls the Ui.showAllTasks(TaskList) method to display the tasks.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adwinang"},"content":"     * @param tasks   the TaskList containing the tasks to be listed.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adwinang"},"content":"     * @param ui      the Ui object responsible for user interaction.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adwinang"},"content":"     * @param storage the Storage object (not used in this command).","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adwinang"},"content":"    @Override","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adwinang"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adwinang"},"content":"        isValidCommand();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adwinang"},"content":"        ui.showAllTasks(tasks);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adwinang"},"content":"     * Validates the ListCommand arguments.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adwinang"},"content":"     * Since the list command does not require any arguments, no validation is performed.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adwinang"},"content":"    @Override","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adwinang"},"content":"    public void isValidCommand() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adwinang"},"content":"        // No validation needed for ListCommand as it does not require any arguments.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adwinang"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"adwinang":47}},{"path":"src/main/java/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adwinang"},"content":"package commands;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adwinang"},"content":"import controllers.Storage;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adwinang"},"content":"import controllers.Ui;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adwinang"},"content":"import datastructures.TaskList;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adwinang"},"content":"import exceptions.ZephyrException;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adwinang"},"content":"import tasks.AbstractTask;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adwinang"},"content":"/**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adwinang"},"content":" * Represents a command to mark a task as done in the task list.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adwinang"},"content":" * This command expects a single argument representing the task number.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adwinang"},"content":" * It marks the corresponding task as completed and notifies the user.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adwinang"},"content":" */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adwinang"},"content":"public class MarkCommand extends AbstractCommand {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adwinang"},"content":"     * Constructs a MarkCommand instance with the specified arguments.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adwinang"},"content":"     * @param arguments the arguments passed to the command (should be a single task number)","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adwinang"},"content":"    public MarkCommand(String arguments) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adwinang"},"content":"        super(arguments);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adwinang"},"content":"     * Executes the mark command by marking the specified task as done.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adwinang"},"content":"     * This method validates the command arguments, parses the task number, marks the task as done,","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adwinang"},"content":"     * and uses the UI to print a confirmation message.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adwinang"},"content":"     * @param tasks   the TaskList containing the tasks","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adwinang"},"content":"     * @param ui      the Ui object used to interact with the user","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adwinang"},"content":"     * @param storage the Storage object (not used in this command)","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adwinang"},"content":"     * @throws ZephyrException if the command is invalid or the task number is not valid","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adwinang"},"content":"    @Override","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adwinang"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws ZephyrException {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adwinang"},"content":"        isValidCommand();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adwinang"},"content":"        int index \u003d Integer.parseInt(this.getWords()[0]);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adwinang"},"content":"        AbstractTask task \u003d tasks.getTask(index - 1);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adwinang"},"content":"        task.markAsDone();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adwinang"},"content":"        ui.printTaskDone(task);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adwinang"},"content":"     * Validates the MarkCommand arguments.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adwinang"},"content":"     * This method checks that the arguments are not empty, that exactly one argument is provided,","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adwinang"},"content":"     * and that the provided argument can be parsed as an integer.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adwinang"},"content":"     * @throws ZephyrException if no more or less than a word and the word has to be an integer","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adwinang"},"content":"    @Override","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adwinang"},"content":"    public void isValidCommand() throws ZephyrException {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adwinang"},"content":"        if (this.getArguments().isEmpty()) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adwinang"},"content":"            throw new ZephyrException(\"Please enter a task number to mark as done.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adwinang"},"content":"        if (this.getWords().length !\u003d 1) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adwinang"},"content":"            throw new ZephyrException(\"There are more arguments than expected.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adwinang"},"content":"        try {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adwinang"},"content":"            Integer.parseInt(this.getWords()[0]);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adwinang"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adwinang"},"content":"            throw new ZephyrException(\"Please enter a valid task number to mark as done.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"adwinang"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"adwinang":66}},{"path":"src/main/java/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adwinang"},"content":"package commands;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adwinang"},"content":"import controllers.Storage;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adwinang"},"content":"import controllers.Ui;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adwinang"},"content":"import datastructures.TaskList;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adwinang"},"content":"import exceptions.ZephyrException;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adwinang"},"content":"import tasks.AbstractTask;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adwinang"},"content":"import tasks.TodoTask;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adwinang"},"content":"/**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adwinang"},"content":" * Represents a command to add a TodoTask to the task list.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adwinang"},"content":" * This command creates a new TodoTask using the provided description,","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adwinang"},"content":" * adds it to the task list, and prints a confirmation message to the user.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adwinang"},"content":" */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adwinang"},"content":"public class TodoCommand extends AbstractCommand {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adwinang"},"content":"     * Constructs a TodoCommand with the specified arguments.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adwinang"},"content":"     * @param arguments the description of the todo task","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adwinang"},"content":"    public TodoCommand(String arguments) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adwinang"},"content":"        super(arguments);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adwinang"},"content":"     * Executes the todo command.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adwinang"},"content":"     * This method validates the command arguments, creates a new TodoTask,","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adwinang"},"content":"     * adds it to the task list, and prints a confirmation message.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adwinang"},"content":"     * @param tasks   the TaskList where the new task will be added","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adwinang"},"content":"     * @param ui      the Ui used for user interaction","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adwinang"},"content":"     * @param storage the Storage (not used in this command)","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adwinang"},"content":"     * @throws ZephyrException if the command arguments are invalid","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adwinang"},"content":"    @Override","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adwinang"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws ZephyrException {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adwinang"},"content":"        isValidCommand();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adwinang"},"content":"        AbstractTask newTask \u003d new TodoTask(this.getArguments());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adwinang"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adwinang"},"content":"        ui.printTaskAdded(newTask);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adwinang"},"content":"     * Validates the TodoCommand arguments.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adwinang"},"content":"     * Checks that the description provided for the todo task is not empty.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adwinang"},"content":"     * @throws ZephyrException if the description is empty","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adwinang"},"content":"    @Override","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adwinang"},"content":"    public void isValidCommand() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adwinang"},"content":"        if (this.getArguments().isEmpty()) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adwinang"},"content":"            throw new ZephyrException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adwinang"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"adwinang":56}},{"path":"src/main/java/commands/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adwinang"},"content":"package commands;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adwinang"},"content":"import controllers.Storage;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adwinang"},"content":"import controllers.Ui;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adwinang"},"content":"import datastructures.TaskList;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adwinang"},"content":"import exceptions.ZephyrException;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adwinang"},"content":"/**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adwinang"},"content":" * Represents an unknown command.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adwinang"},"content":" * This command is used when the user input does not match any known command.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adwinang"},"content":" * Executing this command results in printing an unknown command message.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adwinang"},"content":" */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adwinang"},"content":"public class UnknownCommand extends AbstractCommand {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adwinang"},"content":"     * Constructs an UnknownCommand with the specified arguments.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adwinang"},"content":"     * @param arguments the command arguments","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adwinang"},"content":"    public UnknownCommand(String arguments) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adwinang"},"content":"        super(arguments);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adwinang"},"content":"     * Executes the unknown command.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adwinang"},"content":"     * Calls the UI to print an unknown command message.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adwinang"},"content":"     * @param tasks   the TaskList (not used in this command)","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adwinang"},"content":"     * @param ui      the UI used for user interaction","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adwinang"},"content":"     * @param storage the Storage (not used in this command)","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adwinang"},"content":"    @Override","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adwinang"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adwinang"},"content":"        ui.printUnknown();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adwinang"},"content":"     * Validates the unknown command.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adwinang"},"content":"     * Always throws a ZephyrException to indicate that the command is unknown.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adwinang"},"content":"     * @throws ZephyrException always thrown to indicate the command is unknown","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adwinang"},"content":"    @Override","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adwinang"},"content":"    public void isValidCommand() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adwinang"},"content":"        throw new ZephyrException(\"Unknown command.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adwinang"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"adwinang":47}},{"path":"src/main/java/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adwinang"},"content":"package commands;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adwinang"},"content":"import controllers.Storage;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adwinang"},"content":"import controllers.Ui;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adwinang"},"content":"import datastructures.TaskList;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adwinang"},"content":"import exceptions.ZephyrException;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adwinang"},"content":"import tasks.AbstractTask;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adwinang"},"content":"/**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adwinang"},"content":" * Represents a command to mark a task as not done in the task list.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adwinang"},"content":" * This command expects a single argument representing the task number.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adwinang"},"content":" * It marks the corresponding task as undone and prints a confirmation message.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adwinang"},"content":" */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adwinang"},"content":"public class UnmarkCommand extends AbstractCommand {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adwinang"},"content":"     * Constructs an UnmarkCommand with the specified arguments.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adwinang"},"content":"     * @param arguments the task number to unmark","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adwinang"},"content":"    public UnmarkCommand(String arguments) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adwinang"},"content":"        super(arguments);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adwinang"},"content":"     * Executes the unmark command by marking the specified task as undone.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adwinang"},"content":"     * This method validates the command arguments, parses the task number,","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adwinang"},"content":"     * marks the task as undone, and prints a confirmation message.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adwinang"},"content":"     * If the task number is out of range, a ZephyrException is thrown.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adwinang"},"content":"     * @param tasks   the TaskList containing the tasks","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adwinang"},"content":"     * @param ui      the UI used for user interaction","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adwinang"},"content":"     * @param storage the Storage (not used in this command)","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adwinang"},"content":"     * @throws ZephyrException if the task number is invalid or out of range","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adwinang"},"content":"    @Override","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adwinang"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adwinang"},"content":"        try {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adwinang"},"content":"            isValidCommand();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adwinang"},"content":"            int index \u003d Integer.parseInt(this.getWords()[0]);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adwinang"},"content":"            AbstractTask task \u003d tasks.getTask(index - 1);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adwinang"},"content":"            task.markAsUndone();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adwinang"},"content":"            ui.printTaskUndone(task);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adwinang"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adwinang"},"content":"            throw new ZephyrException(\"Task number out of range.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adwinang"},"content":"     * Validates the UnmarkCommand arguments.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adwinang"},"content":"     * This method checks that the arguments are not empty,","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adwinang"},"content":"     * that exactly one argument is provided, and that the argument is a valid integer.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adwinang"},"content":"     * @throws ZephyrException if there is more or less than a word and the word has to be an integer","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adwinang"},"content":"    @Override","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adwinang"},"content":"    public void isValidCommand() throws ZephyrException {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adwinang"},"content":"        if (this.getArguments().isEmpty()) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adwinang"},"content":"            throw new ZephyrException(\"Please enter a task number to unmark.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adwinang"},"content":"        if (this.getWords().length !\u003d 1) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adwinang"},"content":"            throw new ZephyrException(\"There are more arguments than expected.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"adwinang"},"content":"        try {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"adwinang"},"content":"            Integer.parseInt(this.getWords()[0]);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"adwinang"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"adwinang"},"content":"            throw new ZephyrException(\"Please enter a valid task number to unmark.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"adwinang"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"adwinang":70}},{"path":"src/main/java/commands/UpcomingCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adwinang"},"content":"package commands;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adwinang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adwinang"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adwinang"},"content":"import controllers.Storage;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adwinang"},"content":"import controllers.Ui;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adwinang"},"content":"import datastructures.TaskList;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adwinang"},"content":"import exceptions.ZephyrException;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adwinang"},"content":"import tasks.AbstractTask;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adwinang"},"content":"import tasks.DeadlineTask;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adwinang"},"content":"import tasks.EventTask;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adwinang"},"content":"/**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adwinang"},"content":" * Represents a command to display upcoming tasks within a specified number of days.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adwinang"},"content":" * This command expects two arguments: the task type (either \"deadline\" or \"event\")","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adwinang"},"content":" * and the number of days. It filters tasks of the specified type that have dates","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adwinang"},"content":" * within the next given number of days from the current date and displays them.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adwinang"},"content":" */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adwinang"},"content":"public class UpcomingCommand extends AbstractCommand {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adwinang"},"content":"     * Constructs an UpcomingCommand with the specified arguments.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adwinang"},"content":"     * @param arguments the arguments in the format \"taskType days\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adwinang"},"content":"    public UpcomingCommand(String arguments) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adwinang"},"content":"        super(arguments);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adwinang"},"content":"     * Executes the upcoming command by filtering and displaying tasks.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adwinang"},"content":"     * This method validates the command arguments, parses the task type and the number of days,","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adwinang"},"content":"     * and then iterates over all tasks in the TaskList. For tasks matching the specified type,","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adwinang"},"content":"     * if their date is after the current date and before the current date plus the specified days,","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adwinang"},"content":"     * they are considered upcoming. The command then prints the list of upcoming tasks along with","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adwinang"},"content":"     * the number of days remaining until each task\u0027s deadline or start date.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adwinang"},"content":"     * @param tasks   the TaskList containing the tasks","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adwinang"},"content":"     * @param ui      the UI used for user interaction","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adwinang"},"content":"     * @param storage the Storage (not used in this command)","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adwinang"},"content":"     * @throws ZephyrException if the command arguments are invalid","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adwinang"},"content":"    @Override","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adwinang"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adwinang"},"content":"        isValidCommand();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adwinang"},"content":"        String taskType \u003d this.getWords()[0];","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adwinang"},"content":"        int days \u003d Integer.parseInt(this.getWords()[1]);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adwinang"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adwinang"},"content":"        AbstractTask[] upcomingTasks \u003d new AbstractTask[tasks.getSize()];","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adwinang"},"content":"        int i \u003d 0;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adwinang"},"content":"        for (AbstractTask task : tasks.getTasks()) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adwinang"},"content":"            if (taskType.equalsIgnoreCase(task.getTaskType()) \u0026\u0026 task instanceof DeadlineTask deadlineTask) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adwinang"},"content":"                LocalDate deadlineDate \u003d deadlineTask.getBy();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adwinang"},"content":"                if (deadlineDate.isAfter(currentDate) \u0026\u0026 deadlineDate.isBefore(currentDate.plusDays(days))) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adwinang"},"content":"                    upcomingTasks[i] \u003d task;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adwinang"},"content":"                    i++;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adwinang"},"content":"                }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adwinang"},"content":"            } else if (taskType.equalsIgnoreCase(task.getTaskType()) \u0026\u0026 task instanceof EventTask eventTask) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adwinang"},"content":"                LocalDate eventDate \u003d eventTask.getFrom();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adwinang"},"content":"                if (eventDate.isAfter(currentDate) \u0026\u0026 eventDate.isBefore(currentDate.plusDays(days))) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adwinang"},"content":"                    upcomingTasks[i] \u003d task;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"adwinang"},"content":"                    i++;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"adwinang"},"content":"                }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"adwinang"},"content":"            }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"adwinang"},"content":"        if (i \u003d\u003d 0) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"adwinang"},"content":"            ui.printBreak();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"adwinang"},"content":"            ui.println(\"Thou have no upcoming \" + taskType + \" tasks within the next \" + days + \" days.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"adwinang"},"content":"            ui.printBreak();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"adwinang"},"content":"            return;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"adwinang"},"content":"        ui.printBreak();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"adwinang"},"content":"        ui.println(\"Thou have \" + i + \" upcoming \" + taskType + \" tasks within the next \" + days + \" days.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"adwinang"},"content":"        for (int j \u003d 0; j \u003c i; j++) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"adwinang"},"content":"            AbstractTask task \u003d upcomingTasks[j];","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"adwinang"},"content":"            if (taskType.equalsIgnoreCase(task.getTaskType()) \u0026\u0026 task instanceof DeadlineTask deadlineTask) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"adwinang"},"content":"                long daysUntilDeadline \u003d ChronoUnit.DAYS.between(currentDate, deadlineTask.getBy());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"adwinang"},"content":"                ui.println((j + 1) + \". \" + deadlineTask);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"adwinang"},"content":"                ui.println(\"    \" + daysUntilDeadline + \" days until deadline.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"adwinang"},"content":"            } else if (taskType.equalsIgnoreCase(task.getTaskType()) \u0026\u0026 task instanceof EventTask eventTask) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"adwinang"},"content":"                long daysUntilEvent \u003d ChronoUnit.DAYS.between(currentDate, eventTask.getFrom());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"adwinang"},"content":"                ui.println((j + 1) + \". \" + eventTask);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"adwinang"},"content":"                ui.println(\"    \" + daysUntilEvent + \" days until event.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"adwinang"},"content":"            }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"adwinang"},"content":"        ui.printBreak();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"adwinang"},"content":"     * Validates the UpcomingCommand arguments.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"adwinang"},"content":"     * This method checks that exactly two arguments are provided, that the first argument is","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"adwinang"},"content":"     * a valid task type (\"deadline\" or \"event\"), and that the second argument is a valid integer","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"adwinang"},"content":"     * representing the number of days.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"adwinang"},"content":"     * @throws ZephyrException if there more or less than two words and if the first word is not a task type","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"adwinang"},"content":"    @Override","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"adwinang"},"content":"    public void isValidCommand() throws ZephyrException {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"adwinang"},"content":"        if (this.getWords().length !\u003d 2) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"adwinang"},"content":"            throw new ZephyrException(\"There should be only 2 arguments for the upcoming command.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"adwinang"},"content":"        String taskType \u003d this.getWords()[0];","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"adwinang"},"content":"        if (!taskType.equals(\"deadline\") \u0026\u0026 !taskType.equals(\"event\")) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"adwinang"},"content":"            throw new ZephyrException(\"Please enter a valid task type (deadline or event).\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"adwinang"},"content":"        try {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"adwinang"},"content":"            Integer.parseInt(this.getWords()[1]);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"adwinang"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"adwinang"},"content":"            throw new ZephyrException(\"Thou must input a valid number of days.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"adwinang"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"adwinang":116}},{"path":"src/main/java/controllers/FastScanner.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adwinang"},"content":"package controllers;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adwinang"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adwinang"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adwinang"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adwinang"},"content":"import java.util.StringTokenizer;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adwinang"},"content":"/**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adwinang"},"content":" * A fast input reader that uses BufferedReader and StringTokenizer","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adwinang"},"content":" * to efficiently read tokens, lines, and primitive data types from the standard input.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adwinang"},"content":" */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adwinang"},"content":"public class FastScanner {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adwinang"},"content":"    private BufferedReader reader;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adwinang"},"content":"    private StringTokenizer tokenizer;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adwinang"},"content":"     * Constructs a new FastScanner that reads from standard input.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adwinang"},"content":"    public FastScanner() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adwinang"},"content":"        this.reader \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adwinang"},"content":"     * Returns the next token from the input.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adwinang"},"content":"     * @return the next token as a String","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adwinang"},"content":"    String nextString() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adwinang"},"content":"        while (tokenizer \u003d\u003d null || !tokenizer.hasMoreElements()) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adwinang"},"content":"            try {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adwinang"},"content":"                tokenizer \u003d new StringTokenizer(reader.readLine());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adwinang"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adwinang"},"content":"                e.printStackTrace();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adwinang"},"content":"            }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adwinang"},"content":"        return tokenizer.nextToken();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adwinang"},"content":"     * Returns the next line of input.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adwinang"},"content":"     * @return the next line as a String, or an empty string if an error occurs","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adwinang"},"content":"    String nextLine() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adwinang"},"content":"        try {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adwinang"},"content":"            return reader.readLine();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adwinang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adwinang"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adwinang"},"content":"        return \"\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adwinang"},"content":"     * Reads tokens until a token ending with the specified delimiter is found.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adwinang"},"content":"     * @param delimiter the delimiter string that indicates when to stop reading","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adwinang"},"content":"     * @return the concatenated tokens read until the delimiter, or an empty string if no tokens are available","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adwinang"},"content":"    String nextUntil(String delimiter) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adwinang"},"content":"        if (tokenizer \u003d\u003d null || !tokenizer.hasMoreElements()) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adwinang"},"content":"            return \"\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adwinang"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"adwinang"},"content":"        boolean delimiterFound \u003d false;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"adwinang"},"content":"        while (tokenizer.hasMoreElements()) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"adwinang"},"content":"            String token \u003d tokenizer.nextToken();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"adwinang"},"content":"            if (token.endsWith(delimiter)) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"adwinang"},"content":"                sb.append(token, 0, token.length() - delimiter.length());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"adwinang"},"content":"                delimiterFound \u003d true;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"adwinang"},"content":"                break;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"adwinang"},"content":"            }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"adwinang"},"content":"            sb.append(token).append(\" \");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"adwinang"},"content":"        return delimiterFound ? sb.toString().trim() : \"\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"adwinang"},"content":"     * Returns the remaining tokens on the current line.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"adwinang"},"content":"     * @return a String containing the remaining tokens, or an empty string if none remain","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"adwinang"},"content":"    String remainingLine() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"adwinang"},"content":"        if (tokenizer \u003d\u003d null || !tokenizer.hasMoreElements()) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"adwinang"},"content":"            return \"\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"adwinang"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"adwinang"},"content":"        while (tokenizer.hasMoreElements()) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"adwinang"},"content":"            sb.append(tokenizer.nextToken()).append(\" \");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"adwinang"},"content":"        return sb.toString().trim();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"adwinang"},"content":"     * Returns the next integer from the input.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"adwinang"},"content":"     * @return the next integer value","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"adwinang"},"content":"    int nextInt() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"adwinang"},"content":"        return Integer.parseInt(nextString());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"adwinang"},"content":"     * Returns the next long integer from the input.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"adwinang"},"content":"     * @return the next long value","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"adwinang"},"content":"    long nextLong() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"adwinang"},"content":"        return Long.parseLong(nextString());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"adwinang"},"content":"     * Reads an array of integers from the input.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"adwinang"},"content":"     * @param n the number of integers to read","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"adwinang"},"content":"     * @return an array of n integers","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"adwinang"},"content":"    int[] readArray(int n) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"adwinang"},"content":"        int[] a \u003d new int[n];","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"adwinang"},"content":"        for (int i \u003d 0; i \u003c n; i++) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"adwinang"},"content":"            a[i] \u003d nextInt();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"adwinang"},"content":"        return a;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"adwinang"},"content":"     * Closes the input reader.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"adwinang"},"content":"    void close() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"adwinang"},"content":"        try {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"adwinang"},"content":"            reader.close();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"adwinang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"adwinang"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"adwinang"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"adwinang":135}},{"path":"src/main/java/controllers/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adwinang"},"content":"package controllers;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adwinang"},"content":"import commands.AbstractCommand;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adwinang"},"content":"import commands.ByeCommand;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adwinang"},"content":"import commands.DeadlineCommand;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adwinang"},"content":"import commands.DeleteCommand;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adwinang"},"content":"import commands.EventCommand;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adwinang"},"content":"import commands.FindCommand;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adwinang"},"content":"import commands.ListCommand;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adwinang"},"content":"import commands.MarkCommand;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adwinang"},"content":"import commands.TodoCommand;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adwinang"},"content":"import commands.UnknownCommand;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adwinang"},"content":"import commands.UnmarkCommand;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adwinang"},"content":"import commands.UpcomingCommand;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adwinang"},"content":"import enums.CommandTypes;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adwinang"},"content":"/**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adwinang"},"content":" * A parser that converts user input into corresponding command objects.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adwinang"},"content":" */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adwinang"},"content":"public class Parser {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adwinang"},"content":"    private final Ui ui;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adwinang"},"content":"    private final Storage storage;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adwinang"},"content":"     * Constructs a new Parser with the given storage and user interface.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adwinang"},"content":"     * @param storage the Storage object used for file operations","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adwinang"},"content":"     * @param ui      the Ui object used for user interaction","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adwinang"},"content":"    public Parser(Storage storage, Ui ui) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adwinang"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adwinang"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adwinang"},"content":"     * Parses the given user input string into an appropriate command.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adwinang"},"content":"     * @param input the user input","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adwinang"},"content":"     * @return an AbstractCommand corresponding to the input","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adwinang"},"content":"    public AbstractCommand parse(String input) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adwinang"},"content":"        String[] tokens \u003d input.split(\" \", 2);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adwinang"},"content":"        String command \u003d tokens[0];","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adwinang"},"content":"        String arguments \u003d tokens.length \u003e 1 ? tokens[1] : \"\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adwinang"},"content":"        return switch (CommandTypes.fromValue(command)) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adwinang"},"content":"        case LIST -\u003e new ListCommand(arguments);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adwinang"},"content":"        case MARK -\u003e new MarkCommand(arguments);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adwinang"},"content":"        case UNMARK -\u003e new UnmarkCommand(arguments);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adwinang"},"content":"        case TODO -\u003e new TodoCommand(arguments);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adwinang"},"content":"        case DEADLINE -\u003e new DeadlineCommand(arguments);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adwinang"},"content":"        case EVENT -\u003e new EventCommand(arguments);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adwinang"},"content":"        case DELETE -\u003e new DeleteCommand(arguments);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adwinang"},"content":"        case UPCOMING -\u003e new UpcomingCommand(arguments);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adwinang"},"content":"        case FIND -\u003e new FindCommand(arguments);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adwinang"},"content":"        case BYE -\u003e new ByeCommand(arguments);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adwinang"},"content":"        default -\u003e new UnknownCommand(arguments);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adwinang"},"content":"        };","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adwinang"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"adwinang":61}},{"path":"src/main/java/controllers/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adwinang"},"content":"package controllers;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adwinang"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adwinang"},"content":"import java.io.File;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adwinang"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adwinang"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adwinang"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adwinang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adwinang"},"content":"import java.util.List;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adwinang"},"content":"import tasks.AbstractTask;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adwinang"},"content":"import tasks.DeadlineTask;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adwinang"},"content":"import tasks.EventTask;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adwinang"},"content":"import tasks.TodoTask;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adwinang"},"content":"/**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adwinang"},"content":" * Handles storage operations such as loading and saving tasks to a file.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adwinang"},"content":" */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adwinang"},"content":"public class Storage {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adwinang"},"content":"    private File file;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adwinang"},"content":"     * Constructs a new Storage object with the given file path.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adwinang"},"content":"     * @param filePath the path to the file used for storage","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adwinang"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adwinang"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adwinang"},"content":"     * Creates the parent directory if it does not exist.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adwinang"},"content":"    private void createIfDirectoryNotFound() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adwinang"},"content":"        File parentDir \u003d file.getParentFile();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adwinang"},"content":"        if (parentDir !\u003d null \u0026\u0026 !parentDir.exists()) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adwinang"},"content":"            parentDir.mkdirs();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adwinang"},"content":"     * Loads tasks from the storage file.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adwinang"},"content":"     * @return a list of AbstractTask objects loaded from the file","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adwinang"},"content":"     * @throws IOException if an I/O error occurs while reading the file","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adwinang"},"content":"    public List\u003cAbstractTask\u003e loadFile() throws IOException {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adwinang"},"content":"        List\u003cAbstractTask\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adwinang"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adwinang"},"content":"            return lines;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adwinang"},"content":"        BufferedReader reader \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adwinang"},"content":"        String line;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adwinang"},"content":"        while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adwinang"},"content":"            lines.add(parseLine(line));","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adwinang"},"content":"        reader.close();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adwinang"},"content":"        return lines;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adwinang"},"content":"     * Saves the given list of tasks to the storage file.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"adwinang"},"content":"     * @param tasks the list of tasks to save","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"adwinang"},"content":"     * @throws IOException if an I/O error occurs while writing to the file","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"adwinang"},"content":"    public void saveFile(List\u003cAbstractTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"adwinang"},"content":"        createIfDirectoryNotFound();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"adwinang"},"content":"        FileWriter fileWriter \u003d new FileWriter(file);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"adwinang"},"content":"        for (AbstractTask task : tasks) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"adwinang"},"content":"            fileWriter.write(task.toMarkdownString() + \"\\n\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"adwinang"},"content":"        fileWriter.close();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"adwinang"},"content":"     * Overwrites the storage file with the given content.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"adwinang"},"content":"     * @param content the new content to write to the file","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"adwinang"},"content":"     * @throws IOException if an I/O error occurs while writing to the file","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"adwinang"},"content":"    public void overwriteFile(String content) throws IOException {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"adwinang"},"content":"        createIfDirectoryNotFound();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"adwinang"},"content":"        FileWriter fileWriter \u003d new FileWriter(file, false);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"adwinang"},"content":"        fileWriter.write(content);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"adwinang"},"content":"        fileWriter.close();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"adwinang"},"content":"     * Appends the given content to the storage file.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"adwinang"},"content":"     * @param content the content to append","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"adwinang"},"content":"     * @throws IOException if an I/O error occurs while writing to the file","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"adwinang"},"content":"    public void appendToFile(String content) throws IOException {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"adwinang"},"content":"        createIfDirectoryNotFound();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"adwinang"},"content":"        FileWriter fileWriter \u003d new FileWriter(file, true);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"adwinang"},"content":"        fileWriter.write(content);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"adwinang"},"content":"        fileWriter.close();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"adwinang"},"content":"     * Parses a line of text from the storage file into an AbstractTask.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"adwinang"},"content":"     * @param line the line of text to parse","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"adwinang"},"content":"     * @return an AbstractTask corresponding to the line, or null if parsing fails","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"adwinang"},"content":"    AbstractTask parseLine(String line) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"adwinang"},"content":"        // Basic length check to avoid StringIndexOutOfBounds; minimum valid format is 9 characters.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"adwinang"},"content":"        if (line \u003d\u003d null || line.length() \u003c 8) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"adwinang"},"content":"            return null;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"adwinang"},"content":"        // The line must start with \"- [\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"adwinang"},"content":"        if (!line.startsWith(\"- [\")) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"adwinang"},"content":"            return null;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"adwinang"},"content":"        // Check the check mark at index 3; must be \u0027X\u0027 or a space.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"adwinang"},"content":"        char checkMark \u003d line.charAt(3);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"adwinang"},"content":"        if (checkMark !\u003d \u0027X\u0027 \u0026\u0026 checkMark !\u003d \u0027 \u0027) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"adwinang"},"content":"            return null;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"adwinang"},"content":"        // Verify the closing bracket and following space.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"adwinang"},"content":"        if (line.charAt(4) !\u003d \u0027 \u0027 || line.charAt(5) !\u003d \u0027 \u0027) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"adwinang"},"content":"            return null;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"adwinang"},"content":"        // The next character should be a single-letter code representing the task type.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"adwinang"},"content":"        char letter \u003d line.charAt(6);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"adwinang"},"content":"        if (!Character.isLetter(letter)) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"adwinang"},"content":"            return null;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"adwinang"},"content":"        // Check for a colon and a space after the letter.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"adwinang"},"content":"        if (line.charAt(7) !\u003d \u0027:\u0027 || line.charAt(8) !\u003d \u0027 \u0027) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"adwinang"},"content":"            return null;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"adwinang"},"content":"        // The remainder of the line is the task content.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"adwinang"},"content":"        String content \u003d line.substring(9).trim();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"adwinang"},"content":"        boolean isDone \u003d (checkMark \u003d\u003d \u0027X\u0027);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"adwinang"},"content":"        AbstractTask task;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"adwinang"},"content":"        task \u003d switch (letter) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"adwinang"},"content":"        case \u0027T\u0027 -\u003e TodoTask.parseString(content);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"adwinang"},"content":"        case \u0027D\u0027 -\u003e DeadlineTask.parseString(content);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"adwinang"},"content":"        case \u0027E\u0027 -\u003e EventTask.parseString(content);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"adwinang"},"content":"        default -\u003e null;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"adwinang"},"content":"        };","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"adwinang"},"content":"        if (task !\u003d null \u0026\u0026 isDone) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"adwinang"},"content":"            task.markAsDone();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"adwinang"},"content":"        return task;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"adwinang"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"adwinang":150}},{"path":"src/main/java/controllers/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adwinang"},"content":"package controllers;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adwinang"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adwinang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adwinang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adwinang"},"content":"import java.util.List;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adwinang"},"content":"import datastructures.TaskList;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adwinang"},"content":"import tasks.AbstractTask;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adwinang"},"content":"/**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adwinang"},"content":" * Handles user interaction by printing messages, reading user input,","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adwinang"},"content":" * and formatting dates for display.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adwinang"},"content":" */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adwinang"},"content":"public class Ui {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adwinang"},"content":"    // CHECKSTYLE:OFF: AbbreviationAsWordInName","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adwinang"},"content":"    private final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adwinang"},"content":"    // CHECKSTYLE:ON: AbbreviationAsWordInName","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adwinang"},"content":"    private final FastScanner scanner;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adwinang"},"content":"    private final PrintStream output;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adwinang"},"content":"    // CHECKSTYLE:OFF: AbbreviationAsWordInName","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adwinang"},"content":"    private final String LINE_BREAK \u003d \"____________________________________________________________\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adwinang"},"content":"    // CHECKSTYLE:ON: AbbreviationAsWordInName","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adwinang"},"content":"     * Constructs a new Ui object using standard input and output.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adwinang"},"content":"    public Ui() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adwinang"},"content":"        this.scanner \u003d new FastScanner();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adwinang"},"content":"        this.output \u003d System.out;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adwinang"},"content":"     * Prints a message to the user.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adwinang"},"content":"     * @param message the message to print","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adwinang"},"content":"    public void println(String message) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adwinang"},"content":"        this.output.println(message);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adwinang"},"content":"     * Prints an object\u0027s string representation to the user.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adwinang"},"content":"     * @param message the object whose string representation is printed","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adwinang"},"content":"    public void println(Object message) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adwinang"},"content":"        // String.valueOf() is used to handle null parameters","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adwinang"},"content":"        // https://stackoverflow.com/questions/27465731/string-valueof-vs-object-tostring","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adwinang"},"content":"        String strMessage \u003d String.valueOf(message);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adwinang"},"content":"        println(strMessage);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adwinang"},"content":"     * Starts the user interface by printing the welcome message.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adwinang"},"content":"    public void start() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adwinang"},"content":"        printWelcome();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adwinang"},"content":"     * Prints the welcome message when the program starts.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"adwinang"},"content":"    public void printWelcome() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"adwinang"},"content":"        printBreak();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"adwinang"},"content":"        println(\"Hello! I\u0027m Zephyr\\nWhat can I do for thou?\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"adwinang"},"content":"        printBreak();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"adwinang"},"content":"     * Prints the goodbye message when the program ends.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"adwinang"},"content":"    public void printGoodbye() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"adwinang"},"content":"        printBreak();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"adwinang"},"content":"        println(\"Goodbye! May thou have a safe journey ahead.\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"adwinang"},"content":"        printBreak();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"adwinang"},"content":"     * Prints a line break.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"adwinang"},"content":"    public void printBreak() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"adwinang"},"content":"        println(LINE_BREAK);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"adwinang"},"content":"     * Prints a message indicating that the command is unknown.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"adwinang"},"content":"    public void printUnknown() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"adwinang"},"content":"        printBreak();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"adwinang"},"content":"        println(\"\"\"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"adwinang"},"content":"                I do not understand what thou art saying.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"adwinang"},"content":"                Please enter a valid command using the follow:","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"adwinang"},"content":"                1. list","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"adwinang"},"content":"                2. find \u003ckeyword\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"adwinang"},"content":"                3. mark \u003ctask number\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"adwinang"},"content":"                4. unmark \u003ctask number\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"adwinang"},"content":"                5. todo \u003ctask description\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"adwinang"},"content":"                6. deadlineTask \u003ctask description\u003e /by \u003cdeadlineTask\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"adwinang"},"content":"                7. eventTask \u003ctask description\u003e /from \u003cstart time\u003e /to \u003cend time\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"adwinang"},"content":"                8. upcoming \u003ctask type\u003e \u003cdays\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"adwinang"},"content":"                9. delete \u003ctask number\u003e","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"adwinang"},"content":"                10. bye - To exit the programme\"\"\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"adwinang"},"content":"        printBreak();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"adwinang"},"content":"     * Prints an error message indicating a problem occurred while loading a file.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"adwinang"},"content":"    public void printLoadingError() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"adwinang"},"content":"        println(\"Error loading file. Creating new file.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"adwinang"},"content":"     * Prints an error message indicating a problem occurred while saving a file.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"adwinang"},"content":"    public void printSavingError() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"adwinang"},"content":"        println(\"Error saving file.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"adwinang"},"content":"     * Prints a message indicating that a task has been added.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"adwinang"},"content":"     * @param task the task that was added","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"adwinang"},"content":"    public void printTaskAdded(AbstractTask task) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"adwinang"},"content":"        printBreak();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"adwinang"},"content":"        println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"adwinang"},"content":"        println(task.toString());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"adwinang"},"content":"        printBreak();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"adwinang"},"content":"     * Prints a message indicating that a task has been marked as done.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"adwinang"},"content":"     * @param task the task that was marked as done","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"adwinang"},"content":"    public void printTaskDone(AbstractTask task) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"adwinang"},"content":"        printBreak();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"adwinang"},"content":"        println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"adwinang"},"content":"        println(task.toString());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"adwinang"},"content":"        printBreak();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"adwinang"},"content":"     * Prints a message indicating that a task has been deleted.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"adwinang"},"content":"     * @param task the task that was deleted","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"adwinang"},"content":"     * @param size the number of tasks remaining in the list","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"adwinang"},"content":"    public void printTaskDeleted(AbstractTask task, int size) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"adwinang"},"content":"        printBreak();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"adwinang"},"content":"        println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"adwinang"},"content":"        println(task.toString());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"adwinang"},"content":"        println(\"Now thou have \" + size + \" tasks in the list.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"adwinang"},"content":"        printBreak();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"adwinang"},"content":"     * Prints a message indicating that a task has been unmarked.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"adwinang"},"content":"     * @param task the task that was unmarked","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"adwinang"},"content":"    public void printTaskUndone(AbstractTask task) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"adwinang"},"content":"        printBreak();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"adwinang"},"content":"        println(\"Pity! I\u0027ve unmarked this task as done:\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"adwinang"},"content":"        println(task.toString());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"adwinang"},"content":"        printBreak();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"adwinang"},"content":"     * Parses a date string into a LocalDate using the defined date format.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"adwinang"},"content":"     * @param date the date string to parse","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"adwinang"},"content":"     * @return the LocalDate corresponding to the date string","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"adwinang"},"content":"    public LocalDate parseDate(String date) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"adwinang"},"content":"        return LocalDate.parse(date, FORMATTER);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"adwinang"},"content":"     * Reads a command from the user input.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"adwinang"},"content":"     * @return the command entered by the user","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"adwinang"},"content":"    public String readCommand() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"adwinang"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"adwinang"},"content":"     * Prints a message indicating that the task list is empty.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"adwinang"},"content":"     * @param tasks the TaskList","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"adwinang"},"content":"    public void printTaskList(List\u003cAbstractTask\u003e tasks) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"adwinang"},"content":"        printBreak();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"adwinang"},"content":"        println(\"Here are thine search results:\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"adwinang"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"adwinang"},"content":"            println(i + 1 + \". \" + tasks.get(i) + \"\\n\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"adwinang"},"content":"        printBreak();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"adwinang"},"content":"     * Displays all tasks in the provided TaskList.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"adwinang"},"content":"     * @param tasks the TaskList containing the tasks to display","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"adwinang"},"content":"    public void showAllTasks(TaskList tasks) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"adwinang"},"content":"        if (tasks.getSize() \u003d\u003d 0) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"adwinang"},"content":"            printBreak();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"adwinang"},"content":"            println(\"There are no tasks in thine list.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"adwinang"},"content":"            printBreak();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"adwinang"},"content":"            return;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"adwinang"},"content":"        println(LINE_BREAK);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"adwinang"},"content":"        println(\"Here are the tasks in thine list:\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"adwinang"},"content":"        println(tasks.toString());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"adwinang"},"content":"        println(LINE_BREAK);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"adwinang"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"adwinang":221}},{"path":"src/main/java/datastructures/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adwinang"},"content":"package datastructures;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adwinang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adwinang"},"content":"import java.util.List;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adwinang"},"content":"import tasks.AbstractTask;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adwinang"},"content":"/**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adwinang"},"content":" * Represents a list of tasks.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adwinang"},"content":" * This class manages a collection of AbstractTask objects.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adwinang"},"content":" */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adwinang"},"content":"public class TaskList {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adwinang"},"content":"    private final List\u003cAbstractTask\u003e tasks;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adwinang"},"content":"     * Constructs a TaskList with the given list of tasks.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adwinang"},"content":"     * @param tasks a List of AbstractTask objects to initialize the TaskList","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adwinang"},"content":"    public TaskList(List\u003cAbstractTask\u003e tasks) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adwinang"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adwinang"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adwinang"},"content":"    public TaskList() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adwinang"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adwinang"},"content":"     * Constructs a TaskList with the given ArrayList of tasks.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adwinang"},"content":"     * @param tasks an ArrayList of AbstractTask objects to initialize the TaskList","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adwinang"},"content":"    public TaskList(ArrayList\u003cAbstractTask\u003e tasks) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adwinang"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adwinang"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adwinang"},"content":"     * @param task the AbstractTask to add","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adwinang"},"content":"    public void addTask(AbstractTask task) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adwinang"},"content":"        tasks.add(task);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adwinang"},"content":"     * Deletes a task from the TaskList at the specified index.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adwinang"},"content":"     * @param index the index of the task to remove","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adwinang"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adwinang"},"content":"        tasks.remove(index);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adwinang"},"content":"     * Retrieves the task at the specified index.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adwinang"},"content":"     * @param index the index of the task to retrieve","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adwinang"},"content":"     * @return the AbstractTask at the given index","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"adwinang"},"content":"    public AbstractTask getTask(int index) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"adwinang"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"adwinang"},"content":"     * Returns the number of tasks in the TaskList.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"adwinang"},"content":"     * @return the size of the TaskList","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"adwinang"},"content":"    public int getSize() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"adwinang"},"content":"        return tasks.size();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"adwinang"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"adwinang"},"content":"     * @return a List of AbstractTask objects","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"adwinang"},"content":"    public List\u003cAbstractTask\u003e getTasks() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"adwinang"},"content":"        return tasks;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"adwinang"},"content":"     * Finds tasks that contain the specified keyword in their descriptions.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"adwinang"},"content":"     * @param keyword The keyword to search for in the task descriptions","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"adwinang"},"content":"     * @return A list of tasks that contain the keyword in their descriptions","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"adwinang"},"content":"    public List\u003cAbstractTask\u003e findTasks(String keyword) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"adwinang"},"content":"        List\u003cAbstractTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"adwinang"},"content":"        for (AbstractTask task : tasks) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"adwinang"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"adwinang"},"content":"                foundTasks.add(task);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"adwinang"},"content":"            }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"adwinang"},"content":"        return foundTasks;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"adwinang"},"content":"     * Returns a string representation of the TaskList.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"adwinang"},"content":"     * Each task is prefixed with its number in the list.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"adwinang"},"content":"     * @return a formatted String listing all tasks","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"adwinang"},"content":"    @Override","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"adwinang"},"content":"    public String toString() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"adwinang"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"adwinang"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"adwinang"},"content":"            output.append(i + 1).append(\". \").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"adwinang"},"content":"        return output.toString();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"adwinang"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"adwinang":115}},{"path":"src/main/java/enums/CommandTypes.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adwinang"},"content":"package enums;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adwinang"},"content":"/**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adwinang"},"content":" * Represents the available command types for the application.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adwinang"},"content":" * Each command type is associated with a string value.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adwinang"},"content":" */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adwinang"},"content":"public enum CommandTypes {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adwinang"},"content":"    LIST(\"list\"),","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adwinang"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adwinang"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adwinang"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adwinang"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adwinang"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adwinang"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adwinang"},"content":"    UPCOMING(\"upcoming\"),","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adwinang"},"content":"    FIND(\"find\"),","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adwinang"},"content":"    BYE(\"bye\"),","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adwinang"},"content":"    UNKNOWN(\"unknown\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adwinang"},"content":"    private final String value;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adwinang"},"content":"     * Constructs a CommandTypes enum with the specified string value.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adwinang"},"content":"     * @param value the string representation of the command type","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adwinang"},"content":"    CommandTypes(String value) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adwinang"},"content":"        this.value \u003d value;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adwinang"},"content":"     * Returns the CommandTypes enum that matches the given string value.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adwinang"},"content":"     * The comparison is case-insensitive.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adwinang"},"content":"     * @param value the string representation of the command type","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adwinang"},"content":"     * @return the matching CommandTypes enum, or UNKNOWN if no match is found","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adwinang"},"content":"    public static CommandTypes fromValue(String value) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adwinang"},"content":"        for (CommandTypes command : CommandTypes.values()) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adwinang"},"content":"            if (command.value.equalsIgnoreCase(value)) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adwinang"},"content":"                return command;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adwinang"},"content":"            }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adwinang"},"content":"        return UNKNOWN;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adwinang"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"adwinang":46}},{"path":"src/main/java/exceptions/ZephyrException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adwinang"},"content":"package exceptions;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adwinang"},"content":"/**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adwinang"},"content":" * A custom runtime exception for handling errors in the Zephyr application.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adwinang"},"content":" */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adwinang"},"content":"public class ZephyrException extends RuntimeException {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adwinang"},"content":"     * Constructs a new ZephyrException with the specified detail message.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adwinang"},"content":"     * @param message the detail message","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adwinang"},"content":"    public ZephyrException(String message) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adwinang"},"content":"        super(message);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adwinang"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"adwinang":15}},{"path":"src/main/java/tasks/AbstractTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adwinang"},"content":"package tasks;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adwinang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adwinang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adwinang"},"content":"/**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adwinang"},"content":" * An abstract representation of a task.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adwinang"},"content":" * This class holds a description and a completion status.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adwinang"},"content":" * Subclasses must implement methods to provide task-specific details.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adwinang"},"content":" */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adwinang"},"content":"public abstract class AbstractTask {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adwinang"},"content":"    protected String description;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adwinang"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adwinang"},"content":"     * Constructs an AbstractTask with the given description.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adwinang"},"content":"     * @param description the description of the task","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adwinang"},"content":"    public AbstractTask(String description) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adwinang"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adwinang"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adwinang"},"content":"     * Returns the type of the task.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adwinang"},"content":"     * @return a String representing the task type","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adwinang"},"content":"    public abstract String getTaskType();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adwinang"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adwinang"},"content":"     * \"X\" indicates that the task is done; otherwise, a blank space is returned.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adwinang"},"content":"     * @return the status icon as a String","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adwinang"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adwinang"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adwinang"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adwinang"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adwinang"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adwinang"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adwinang"},"content":"    public void markAsUndone() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adwinang"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adwinang"},"content":"     * Returns the DateTimeFormatter used for parsing and formatting dates.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adwinang"},"content":"     * @return the DateTimeFormatter with the pattern \"MMMM dd yyyy\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adwinang"},"content":"    public static DateTimeFormatter getFormatter() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adwinang"},"content":"        return DateTimeFormatter.ofPattern(\"MMMM dd yyyy\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"adwinang"},"content":"     * Formats the given LocalDate using the defined formatter.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"adwinang"},"content":"     * @param date the LocalDate to format","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"adwinang"},"content":"     * @return a String representing the formatted date","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"adwinang"},"content":"    public static String parseDate(LocalDate date) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"adwinang"},"content":"        return date.format(AbstractTask.getFormatter());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"adwinang"},"content":"     * Returns the description of the task.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"adwinang"},"content":"     * @return the task description","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"adwinang"},"content":"    public String getDescription() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"adwinang"},"content":"        return this.description;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"adwinang"},"content":"     * Returns a String representation of the task.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"adwinang"},"content":"     * The format includes the status icon and the description.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"adwinang"},"content":"     * @return the String representation of the task","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"adwinang"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"adwinang"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"adwinang"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"adwinang"},"content":"     * Converts the task to a markdown-formatted string.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"adwinang"},"content":"     * @param details the details to include in the markdown string","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"adwinang"},"content":"     * @return the markdown string representation of the task","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"adwinang"},"content":"    protected String toMarkdownStringInternal(String details) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"adwinang"},"content":"        return \"- [\" + this.getStatusIcon() + \"] \" + details;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"adwinang"},"content":"     * Converts the task to a markdown-formatted string.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"adwinang"},"content":"     * @return the markdown string representation of the task","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"adwinang"},"content":"    public abstract String toMarkdownString();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"adwinang"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"adwinang":111}},{"path":"src/main/java/tasks/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adwinang"},"content":"package tasks;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adwinang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adwinang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adwinang"},"content":"/**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adwinang"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adwinang"},"content":" * The deadline is specified by a date.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adwinang"},"content":" */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adwinang"},"content":"public class DeadlineTask extends AbstractTask {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adwinang"},"content":"    protected LocalDate by;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adwinang"},"content":"     * Constructs a DeadlineTask with the given description and deadline.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adwinang"},"content":"     * @param description the description of the task","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adwinang"},"content":"     * @param by          the deadline date for the task","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adwinang"},"content":"    public DeadlineTask(String description, LocalDate by) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adwinang"},"content":"        super(description);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adwinang"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adwinang"},"content":"     * Returns a String representation of the deadline task.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adwinang"},"content":"     * The format includes the task type indicator, status, description, and deadline.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adwinang"},"content":"     * @return the String representation of the deadline task","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adwinang"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adwinang"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adwinang"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.getBy() + \")\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adwinang"},"content":"     * Returns the deadline date of the task.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adwinang"},"content":"     * @return the deadline as a LocalDate","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adwinang"},"content":"    public LocalDate getBy() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adwinang"},"content":"        return this.by;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adwinang"},"content":"     * Returns the type of the task.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adwinang"},"content":"     * @return the String \"deadline\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adwinang"},"content":"    @Override","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adwinang"},"content":"    public String getTaskType() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adwinang"},"content":"        return \"deadline\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adwinang"},"content":"     * Converts the task to a markdown-formatted string with deadline details.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adwinang"},"content":"     * @param details the details to include in the markdown string","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adwinang"},"content":"     * @return the markdown string representation of the deadline task","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adwinang"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adwinang"},"content":"    protected String toMarkdownStringInternal(String details) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adwinang"},"content":"        return super.toMarkdownStringInternal(\"D: \" + details);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"adwinang"},"content":"     * Converts the task to a markdown-formatted string.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"adwinang"},"content":"     * @return the markdown string representation of the deadline task","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"adwinang"},"content":"    public String toMarkdownString() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"adwinang"},"content":"        return this.toMarkdownStringInternal(this.description + \" (by: \" + this.getBy() + \")\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"adwinang"},"content":"     * Parses a markdown string into a DeadlineTask object.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"adwinang"},"content":"     * @param partialString the markdown string after the \"- [ ] D: \" part","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"adwinang"},"content":"     * @return a DeadlineTask object if parsing is successful, or null if the string is not valid","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"adwinang"},"content":"    public static DeadlineTask parseString(String partialString) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"adwinang"},"content":"        String[] details \u003d partialString.split(\" \\\\(by: \", 2);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"adwinang"},"content":"        if (details.length \u003c 2) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"adwinang"},"content":"            return null;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"adwinang"},"content":"        String description \u003d details[0];","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"adwinang"},"content":"        String by \u003d details[1].substring(0, details[1].length() - 1);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"adwinang"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"adwinang"},"content":"            LocalDate byDate \u003d LocalDate.parse(by, AbstractTask.getFormatter());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"adwinang"},"content":"            return new DeadlineTask(description, byDate);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"adwinang"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"adwinang"},"content":"            return null;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"adwinang"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"adwinang":94}},{"path":"src/main/java/tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adwinang"},"content":"package tasks;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adwinang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adwinang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adwinang"},"content":"/**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adwinang"},"content":" * Represents an event task with a start and end date.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adwinang"},"content":" */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adwinang"},"content":"public class EventTask extends AbstractTask {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adwinang"},"content":"    protected LocalDate from;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adwinang"},"content":"    protected LocalDate to;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adwinang"},"content":"     * Constructs an EventTask with the given description, start date, and end date.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adwinang"},"content":"     * @param description the description of the event","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adwinang"},"content":"     * @param from        the start date of the event","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adwinang"},"content":"     * @param to          the end date of the event","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adwinang"},"content":"    public EventTask(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adwinang"},"content":"        super(description);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adwinang"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adwinang"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adwinang"},"content":"     * Returns a String representation of the event task.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adwinang"},"content":"     * The format includes the task type indicator, status, description, start, and end dates.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adwinang"},"content":"     * @return the String representation of the event task","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adwinang"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adwinang"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adwinang"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.getFrom() + \" at: \" + this.getTo() + \")\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adwinang"},"content":"     * Returns the type of the task.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adwinang"},"content":"     * @return the String \"event\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adwinang"},"content":"    @Override","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adwinang"},"content":"    public String getTaskType() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adwinang"},"content":"        return \"event\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adwinang"},"content":"     * Returns the start date of the event.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adwinang"},"content":"     * @return the start date as a LocalDate","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adwinang"},"content":"    public LocalDate getFrom() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adwinang"},"content":"        return this.from;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adwinang"},"content":"     * Returns the end date of the event.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adwinang"},"content":"     * @return the end date as a LocalDate","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adwinang"},"content":"    public LocalDate getTo() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adwinang"},"content":"        return this.to;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"adwinang"},"content":"     * Converts the task to a markdown-formatted string with event details.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"adwinang"},"content":"     * @param details the details to include in the markdown string","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"adwinang"},"content":"     * @return the markdown string representation of the event task","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"adwinang"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"adwinang"},"content":"    protected String toMarkdownStringInternal(String details) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"adwinang"},"content":"        return super.toMarkdownStringInternal(\"E: \" + details);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"adwinang"},"content":"     * Converts the task to a markdown-formatted string.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"adwinang"},"content":"     * @return the markdown string representation of the event task","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"adwinang"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"adwinang"},"content":"    public String toMarkdownString() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"adwinang"},"content":"        return this.toMarkdownStringInternal(this.description","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"adwinang"},"content":"                + \" (from: \" + this.getFrom() + \" at: \" + this.getTo() + \")\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"adwinang"},"content":"     * Parses a markdown string into an EventTask object.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"adwinang"},"content":"     * Returns null if the string is not a valid event.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"adwinang"},"content":"     * @param partialString the markdown string after the \"- [ ] E: \" part","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"adwinang"},"content":"     * @return an EventTask object if parsing is successful, or null if parsing fails","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"adwinang"},"content":"    public static EventTask parseString(String partialString) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"adwinang"},"content":"        String[] details \u003d partialString.split(\" \\\\(from: \", 2);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"adwinang"},"content":"        if (details.length \u003c 2) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"adwinang"},"content":"            return null;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"adwinang"},"content":"        String description \u003d details[0];","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"adwinang"},"content":"        String[] fromTo \u003d details[1].split(\" at: \", 2);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"adwinang"},"content":"        if (fromTo.length \u003c 2) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"adwinang"},"content":"            return null;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"adwinang"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"adwinang"},"content":"            String from \u003d fromTo[0];","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"adwinang"},"content":"            if (!fromTo[1].endsWith(\")\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"adwinang"},"content":"                return null;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"adwinang"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"adwinang"},"content":"            LocalDate fromDate \u003d LocalDate.parse(from, AbstractTask.getFormatter());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"adwinang"},"content":"            String to \u003d fromTo[1].substring(0, fromTo[1].length() - 1);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"adwinang"},"content":"            LocalDate toDate \u003d LocalDate.parse(to, AbstractTask.getFormatter());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"adwinang"},"content":"            return new EventTask(description, fromDate, toDate);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"adwinang"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"adwinang"},"content":"            return null;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"adwinang"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"adwinang"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"adwinang":117}},{"path":"src/main/java/tasks/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adwinang"},"content":"package tasks;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adwinang"},"content":"/**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adwinang"},"content":" * Represents a todo task.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adwinang"},"content":" */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adwinang"},"content":"public class TodoTask extends AbstractTask {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adwinang"},"content":"     * Constructs a TodoTask with the given description.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adwinang"},"content":"     * @param description the description of the todo task","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adwinang"},"content":"    public TodoTask(String description) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adwinang"},"content":"        super(description);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adwinang"},"content":"     * Returns a String representation of the todo task.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adwinang"},"content":"     * The format includes the task type indicator and the task details.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adwinang"},"content":"     * @return the String representation of the todo task","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adwinang"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adwinang"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adwinang"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adwinang"},"content":"     * Returns the type of the task.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adwinang"},"content":"     * @return the String \"todo\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adwinang"},"content":"    @Override","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adwinang"},"content":"    public String getTaskType() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adwinang"},"content":"        return \"todo\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adwinang"},"content":"     * Converts the task to a markdown-formatted string with todo details.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adwinang"},"content":"     * @param details the details to include in the markdown string","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adwinang"},"content":"     * @return the markdown string representation of the todo task","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adwinang"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adwinang"},"content":"    protected String toMarkdownStringInternal(String details) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adwinang"},"content":"        return super.toMarkdownStringInternal(\"T: \" + details);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adwinang"},"content":"     * Converts the task to a markdown-formatted string.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adwinang"},"content":"     * @return the markdown string representation of the todo task","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adwinang"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adwinang"},"content":"    public String toMarkdownString() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adwinang"},"content":"        return this.toMarkdownStringInternal(this.description);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adwinang"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adwinang"},"content":"     * Parses a markdown string into a TodoTask object.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adwinang"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adwinang"},"content":"     * @param partialString the markdown string after the \"- [ ] T: \" part","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adwinang"},"content":"     * @return a TodoTask object created from the given markdown string","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adwinang"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"adwinang"},"content":"    public static TodoTask parseString(String partialString) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"adwinang"},"content":"        return new TodoTask(partialString);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"adwinang"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"adwinang":67}},{"path":"src/test/java/tasks/DeadlineTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adwinang"},"content":"package tasks;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adwinang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adwinang"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adwinang"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adwinang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adwinang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adwinang"},"content":"public class DeadlineTaskTest {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adwinang"},"content":"    @Test","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adwinang"},"content":"    public void testConstructorAndGetters() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adwinang"},"content":"        LocalDate date \u003d LocalDate.of(2025, 2, 17);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adwinang"},"content":"        DeadlineTask task \u003d new DeadlineTask(\"Submit report\", date);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adwinang"},"content":"        assertEquals(\"Submit report\", task.getDescription());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adwinang"},"content":"        assertEquals(date, task.getBy());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adwinang"},"content":"        assertEquals(\"deadline\", task.getTaskType());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adwinang"},"content":"    @Test","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adwinang"},"content":"    public void testToString() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adwinang"},"content":"        LocalDate date \u003d LocalDate.of(2025, 2, 17);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adwinang"},"content":"        DeadlineTask task \u003d new DeadlineTask(\"Finish project\", date);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adwinang"},"content":"        String expected \u003d \"[D][ ] Finish project (by: \" + date + \")\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adwinang"},"content":"        assertEquals(expected, task.toString());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adwinang"},"content":"    @Test","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adwinang"},"content":"    public void testToMarkdownString() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adwinang"},"content":"        LocalDate date \u003d LocalDate.of(2025, 2, 17);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adwinang"},"content":"        DeadlineTask task \u003d new DeadlineTask(\"Complete documentation\", date);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adwinang"},"content":"        String expected \u003d \"- [ ] D: Complete documentation (by: \" + date + \")\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adwinang"},"content":"        assertEquals(expected, task.toMarkdownString());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adwinang"},"content":"    @Test","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adwinang"},"content":"    public void testParseString_valid() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adwinang"},"content":"        LocalDate date \u003d LocalDate.of(2025, 2, 17);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adwinang"},"content":"        String input \u003d \"Write blog post (by: \" + DeadlineTask.parseDate(date) + \")\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adwinang"},"content":"        DeadlineTask parsedTask \u003d DeadlineTask.parseString(input);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adwinang"},"content":"        assertNotNull(parsedTask);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adwinang"},"content":"        assertEquals(\"Write blog post\", parsedTask.getDescription());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adwinang"},"content":"        assertEquals(date, parsedTask.getBy());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adwinang"},"content":"    @Test","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adwinang"},"content":"    public void testParseString_invalidFormat() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adwinang"},"content":"        String input \u003d \"Invalid format string\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adwinang"},"content":"        assertNull(DeadlineTask.parseString(input));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adwinang"},"content":"    @Test","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adwinang"},"content":"    public void testParseString_invalidDate() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adwinang"},"content":"        String input \u003d \"Write blog post (by: invalid-date)\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adwinang"},"content":"        assertNull(DeadlineTask.parseString(input));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"adwinang"},"content":"}","lastModifiedDate":"2025-02-17","isFullCredit":false}],"authorContributionMap":{"adwinang":65}},{"path":"src/test/java/tasks/EventTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adwinang"},"content":"package tasks;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adwinang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adwinang"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adwinang"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adwinang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adwinang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adwinang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adwinang"},"content":"public class EventTaskTest {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adwinang"},"content":"    private static final DateTimeFormatter FORMATTER \u003d AbstractTask.getFormatter();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adwinang"},"content":"    @Test","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adwinang"},"content":"    public void testConstructorAndGetters() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adwinang"},"content":"        LocalDate from \u003d LocalDate.of(2025, 3, 1);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adwinang"},"content":"        LocalDate to \u003d LocalDate.of(2025, 3, 5);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adwinang"},"content":"        EventTask task \u003d new EventTask(\"Attend Conference\", from, to);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adwinang"},"content":"        assertEquals(\"Attend Conference\", task.getDescription());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adwinang"},"content":"        assertEquals(from, task.getFrom());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adwinang"},"content":"        assertEquals(to, task.getTo());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adwinang"},"content":"        assertEquals(\"event\", task.getTaskType());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adwinang"},"content":"    @Test","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adwinang"},"content":"    public void testToString() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adwinang"},"content":"        LocalDate from \u003d LocalDate.of(2025, 4, 10);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adwinang"},"content":"        LocalDate to \u003d LocalDate.of(2025, 4, 12);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adwinang"},"content":"        EventTask task \u003d new EventTask(\"Team Building Retreat\", from, to);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adwinang"},"content":"        String expected \u003d \"[E][ ] Team Building Retreat (from: \" + from + \" at: \" + to + \")\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adwinang"},"content":"        assertEquals(expected, task.toString());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adwinang"},"content":"    @Test","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adwinang"},"content":"    public void testToMarkdownString() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adwinang"},"content":"        LocalDate from \u003d LocalDate.of(2025, 5, 15);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adwinang"},"content":"        LocalDate to \u003d LocalDate.of(2025, 5, 18);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adwinang"},"content":"        EventTask task \u003d new EventTask(\"Annual Company Meeting\", from, to);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adwinang"},"content":"        String expected \u003d \"- [ ] E: Annual Company Meeting (from: \" + from + \" at: \" + to + \")\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adwinang"},"content":"        assertEquals(expected, task.toMarkdownString());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adwinang"},"content":"    @Test","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adwinang"},"content":"    public void testParseString_valid() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adwinang"},"content":"        LocalDate from \u003d LocalDate.of(2025, 6, 20);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adwinang"},"content":"        LocalDate to \u003d LocalDate.of(2025, 6, 25);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adwinang"},"content":"        String formattedFrom \u003d from.format(FORMATTER);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adwinang"},"content":"        String formattedTo \u003d to.format(FORMATTER);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adwinang"},"content":"        String input \u003d \"Workshop Session (from: \" + formattedFrom + \" at: \" + formattedTo + \")\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adwinang"},"content":"        EventTask parsedTask \u003d EventTask.parseString(input);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adwinang"},"content":"        assertNotNull(parsedTask, \"parseString() returned null, check parsing logic.\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adwinang"},"content":"        assertEquals(\"Workshop Session\", parsedTask.getDescription());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adwinang"},"content":"        assertEquals(from, parsedTask.getFrom());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adwinang"},"content":"        assertEquals(to, parsedTask.getTo());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"adwinang"},"content":"    @Test","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"adwinang"},"content":"    public void testParseString_invalidFormat() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"adwinang"},"content":"        String input \u003d \"Invalid event format string\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"adwinang"},"content":"        assertNull(EventTask.parseString(input), \"parseString() should return null for invalid format.\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"adwinang"},"content":"    @Test","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"adwinang"},"content":"    public void testParseString_invalidDate() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"adwinang"},"content":"        String input \u003d \"Some Event (from: invalid-date at: 2025-06-25)\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"adwinang"},"content":"        assertNull(EventTask.parseString(input), \"parseString() should return null for invalid date.\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"adwinang"},"content":"        input \u003d \"Some Event (from: 2025-06-20 at: invalid-date)\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"adwinang"},"content":"        assertNull(EventTask.parseString(input), \"parseString() should return null for invalid date.\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"adwinang"},"content":"    @Test","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"adwinang"},"content":"    public void testParseString_missingToDate() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"adwinang"},"content":"        String input \u003d \"Networking Event (from: 2025-06-20)\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"adwinang"},"content":"        assertNull(EventTask.parseString(input), \"parseString() should return null for missing \u0027at:\u0027 part.\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"adwinang"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"adwinang"},"content":"    @Test","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"adwinang"},"content":"    public void testParseString_missingParenthesis() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"adwinang"},"content":"        String input \u003d \"Meeting (from: 2025-06-20 at: 2025-06-22\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"adwinang"},"content":"        assertNull(EventTask.parseString(input), \"parseString() should return null if missing closing parenthesis.\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"adwinang"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"adwinang"},"content":"}","lastModifiedDate":"2025-02-17","isFullCredit":false}],"authorContributionMap":{"adwinang":91}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"adwinang"},"content":"todo homework","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adwinang"},"content":"deadline","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adwinang"},"content":"deadline Assignnment 1 /by Sunday","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adwinang"},"content":"deadline Assignnment 1","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adwinang"},"content":"event Convention /from Monday morning /to Sunday night","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adwinang"},"content":"event","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adwinang"},"content":"event Convention /from Monday morning","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adwinang"},"content":"mark 1","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adwinang"},"content":"mark 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adwinang"},"content":"unmark 1","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adwinang"},"content":"unmark 3","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adwinang"},"content":"default behaviour is to simply just add as a simple task","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adwinang"},"content":"bye","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"adwinang":13}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adwinang"},"content":"java -classpath ../bin Zephyr \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":37,"adwinang":1}}]
