[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ambertan77"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ambertan77"},"content":"checkstyle {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ambertan77"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ambertan77"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ambertan77"},"content":"repositories {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ambertan77"},"content":"    mavenCentral()","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ambertan77"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ambertan77"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ambertan77"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ambertan77"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ambertan77"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ambertan77"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ambertan77"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ambertan77"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ambertan77"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ambertan77"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ambertan77"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ambertan77"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ambertan77"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ambertan77"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ambertan77"},"content":"    mainClass.set(\"bob.gui.Launcher\")","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ambertan77"},"content":"    archiveBaseName \u003d \"bob\"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ambertan77"},"content":"    archiveFileName \u003d \u0027bob.jar\u0027","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"ambertan77":28,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ambertan77"},"content":"# Bob User Guide","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ambertan77"},"content":"\u003cimg src\u003d\"Ui.png\" alt\u003d\"Screenshot of an example chat with Bob!\" width\u003d\"400\"/\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ambertan77"},"content":"Do you have way too many tasks to complete? Are you finding it difficult to keep track of all of them?","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ambertan77"},"content":"Introducing... Bob! :partying_face: Bob is an easy-to-use chatbot that keeps track of your to-do list for you!","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ambertan77"},"content":"Table of Contents","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ambertan77"},"content":"+ [Quick Start](#quick-start)","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ambertan77"},"content":"+ [Features](#features)","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ambertan77"},"content":"  + [Adding todo tasks](#adding-tasks-with-no-deadlines)","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ambertan77"},"content":"  + [Adding tasks with deadlines](#adding-tasks-with-a-deadline)","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ambertan77"},"content":"  + [Adding events](#adding-events)","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ambertan77"},"content":"  + [List](#list-all-tasks)","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ambertan77"},"content":"  + [Find](#find-tasks-using-search-key)","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ambertan77"},"content":"  + [Mark as completed](#mark-task-as-completed)","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ambertan77"},"content":"  + [Mark as uncompleted](#mark-task-as-uncompleted)","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ambertan77"},"content":"  + [Delete](#delete-a-specific-task)","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ambertan77"},"content":"  + [Check for duplicates](#check-for-duplicates)","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ambertan77"},"content":"  + [Remove duplicates](#remove-duplicates)","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ambertan77"},"content":"  + [Closing the program](#closing-the-program)","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ambertan77"},"content":"+ [Data File in Hard Disk](#data-file-in-hard-disk)","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ambertan77"},"content":"  + [Format used to save tasks](#format-in-which-tasks-are-saved)","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ambertan77"},"content":"  + [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ambertan77"},"content":"+ [Command Summary](#command-summary)","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ambertan77"},"content":"## Quick Start","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ambertan77"},"content":"1. Install `Java 17` or above on your computer. **For Mac users**, please use precise JDK specified","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ambertan77"},"content":"   [here](https://se-education.org/guides/tutorials/javaInstallationMac.html).","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ambertan77"},"content":"2. Download the latest `bob.jar` file [here](https://github.com/ambertan77/ip/releases).","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ambertan77"},"content":"3. Copy the file to the folder you want to use as the home folder for Bob.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ambertan77"},"content":"4. Open a command terminal and `cd` into the folder that the jar file is in.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ambertan77"},"content":"5. Use the `java -jar bob.jar` command to run the application. ","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ambertan77"},"content":"6. A GUI similar to the product screenshot above will appear after a few seconds. A sub-folder called \"data\" should be ","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ambertan77"},"content":"   created in the home folder containing the jar file. Inside this sub-folder, there should be a tasks.txt file.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ambertan77"},"content":"7. Type the command you want to execute in the text bar at the bottom of the application. ","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ambertan77"},"content":"   Press the **SEND** button or press the Enter key to execute it.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ambertan77"},"content":"8. Refer to the Feature list below for all the commands that Bob currently supports.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ambertan77"},"content":"## Features","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ambertan77"},"content":"This section details the list of commands that Bob is currently able to execute. ","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ambertan77"},"content":"If any error has occurred due to wrong input format, Bob will return a message detailing what has gone wrong.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ambertan77"},"content":"The command that you have input will not be executed.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ambertan77"},"content":"\u003e[!NOTE]","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ambertan77"},"content":"\u003e Note about the command format:","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ambertan77"},"content":"\u003e ","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ambertan77"},"content":"\u003e Words in `UPPER_CASE` are the parameters supplied by you. For example, if the command format is `todo DESCRIPTION`, ","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ambertan77"},"content":"\u003e then `DESCRIPTION` should be replaced by whatever the description of your task is, such as `todo exercise`.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ambertan77"},"content":"### Adding tasks with no deadlines","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ambertan77"},"content":"Adds tasks which are not time-sensitive.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ambertan77"},"content":"Format: `todo DESCRIPTION`","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ambertan77"},"content":"Examples: ","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ambertan77"},"content":"+ `todo exercise`","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ambertan77"},"content":"+ `todo read book`","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ambertan77"},"content":"If executed successfully, Bob will return a output","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ambertan77"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ambertan77"},"content":"[T][ ] DESCRIPTION","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ambertan77"},"content":"Now you have NUMBER_OF_TASKS in the list.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ambertan77"},"content":"```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ambertan77"},"content":"where the `NUMBER_OF_TASKS` is the integer showing the number of tasks currently in your list.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ambertan77"},"content":"### Adding tasks with a deadline","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ambertan77"},"content":"Adds tasks which have to be completed by a specific deadline.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ambertan77"},"content":"Format: `deadline DESCRIPTION /by DD-MM-YYYY HH:MM`","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ambertan77"},"content":"+ The date and time must be in the format specified above.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ambertan77"},"content":"+ The time should be in the 24-hour clock format.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ambertan77"},"content":"Examples:","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ambertan77"},"content":"+ `deadline assignment 1 /by 21-02-2025 23:59`","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ambertan77"},"content":"+ `deadline submit quiz /by 17-03-2025 16:00`","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ambertan77"},"content":"If executed successfully, Bob will return a output","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ambertan77"},"content":"```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ambertan77"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ambertan77"},"content":"[D][ ] DESCRIPTION (by: DD-MM-YYYY HH:MM)","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ambertan77"},"content":"Now you have NUMBER_OF_TASKS in the list.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ambertan77"},"content":"```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ambertan77"},"content":"where the `NUMBER_OF_TASKS` is the integer showing the number of tasks currently in your list.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ambertan77"},"content":"### Adding events","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ambertan77"},"content":"Adds events, which have a specific start and end time.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ambertan77"},"content":"Format: `event DESCRIPTION /from DD-MM-YYYY HH:MM /to DD-MM-YYYY HH:MM`","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ambertan77"},"content":"+ All dates and times must be in the format specified above.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ambertan77"},"content":"+ The time should be in the 24-hour clock format.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ambertan77"},"content":"Examples:","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ambertan77"},"content":"+ `event consult /from 23-02-2025 15:30 /to 23-02-2025 17:00`","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ambertan77"},"content":"+ `event student camp /from 01-06-2025 08:00 /to 03-06-2025 20:00`","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ambertan77"},"content":"If executed successfully, Bob will return a output","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ambertan77"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ambertan77"},"content":"[E][ ] DESCRIPTION (from DD-MM-YYYY HH:MM to DD-MM-YYYY HH:MM)","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ambertan77"},"content":"Now you have NUMBER_OF_TASKS in the list.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ambertan77"},"content":"```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ambertan77"},"content":"where the `NUMBER_OF_TASKS` is the integer showing the number of tasks currently in your list.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ambertan77"},"content":"### List all tasks","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ambertan77"},"content":"Lists all tasks, deadlines and events that have been added into the task list.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ambertan77"},"content":"Format: `list`","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ambertan77"},"content":"### Find tasks using search key","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ambertan77"},"content":"Finds all the tasks that partially or fully matches the search key provided.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ambertan77"},"content":"Format: `find SEARCH_KEY`","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ambertan77"},"content":"Examples:","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ambertan77"},"content":"+ `find assignment`","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ambertan77"},"content":"+ `find submit quiz`","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ambertan77"},"content":"The expected output is a list of all items in the task list that contains the search key.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ambertan77"},"content":"### Mark task as completed","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ambertan77"},"content":"Marks a task as completed.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ambertan77"},"content":"Format: `mark INDEX`","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ambertan77"},"content":"+ Marks the task at specified `INDEX` as done.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ambertan77"},"content":"+ `INDEX` refers to the index number shown in the displayed task list.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ambertan77"},"content":"+ `INDEX` must be a positive integer, with a value less than the number of items in the task list.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ambertan77"},"content":"+ Marking an `INDEX` that is already a completed task will not give an error.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ambertan77"},"content":"Example:","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ambertan77"},"content":"+ `list` followed by `mark 2` will mark the 2nd task on the list as completed.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ambertan77"},"content":"If executed successfully, Bob will return an output with `[X]` as the second square bracket ","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ambertan77"},"content":"(just before the description of the task).","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ambertan77"},"content":"### Mark task as uncompleted","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ambertan77"},"content":"Marks a task as uncompleted.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ambertan77"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ambertan77"},"content":"+ Marks the task at specified `INDEX` as undone.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ambertan77"},"content":"+ `INDEX` refers to the index number shown in the displayed task list.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ambertan77"},"content":"+ `INDEX` must be a positive integer, with a value less than the number of items in the task list.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ambertan77"},"content":"+ Marking an `INDEX` that is already a uncompleted task will not give an error.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ambertan77"},"content":"Example:","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ambertan77"},"content":"+ `list` followed by `unmark 2` will mark the 2nd task on the list as not completed.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"ambertan77"},"content":"If executed successfully, Bob will return an output with `[ ]` as the second square bracket","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"ambertan77"},"content":"(just before the description of the task).","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ambertan77"},"content":"### Delete a specific task","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"ambertan77"},"content":"Deletes a task in the task list.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ambertan77"},"content":"Format: `delete INDEX`","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ambertan77"},"content":"+ Deletes the task at specified `INDEX`.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"ambertan77"},"content":"+ `INDEX` refers to the index number shown in the displayed task list.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"ambertan77"},"content":"+ `INDEX` must be a positive integer, with a value less than the number of items in the task list. ","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"ambertan77"},"content":"Example:","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"ambertan77"},"content":"+ `list` followed by `delete 2` will delete the 2nd task on the list.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"ambertan77"},"content":"If executed successfully, commanding `list` again will show the updated task list, which should no longer shows the ","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"ambertan77"},"content":"deleted task. The number of tasks in the task list will also decrease by one.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"ambertan77"},"content":"### Check for duplicates","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"ambertan77"},"content":"Checks for any duplicates in the task list. ","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"ambertan77"},"content":"Format: `check duplicates`","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"ambertan77"},"content":"For two tasks to be considered duplicates, the following must be the same:","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"ambertan77"},"content":"+ task description","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"ambertan77"},"content":"+ deadline (if any)","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"ambertan77"},"content":"+ start date and time (if any)","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"ambertan77"},"content":"+ end date and time (if any)","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"ambertan77"},"content":"+ type of task (todo/deadline/event)","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"ambertan77"},"content":"+ whether the task has been completed","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"ambertan77"},"content":"If executed successfully and no duplicates have been found, Bob will output: `No duplicates in list! :)`","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"ambertan77"},"content":"If executed successfully and duplicated have been found, Bob will output: `Duplicates exist. Type \u0027remove duplicates\u0027 ","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"ambertan77"},"content":"to remove all duplicates in list.`","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"ambertan77"},"content":"### Remove duplicates","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"ambertan77"},"content":"Removes duplicated tasks in the list, so that every item is unique. ","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"ambertan77"},"content":"Format: `remove duplicates`","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"ambertan77"},"content":"If this command is executed successfully when there are no duplicates found, Bob will output: `No duplicates found.`","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"ambertan77"},"content":"If this command is executed successfully when there are duplicates in the task list, Bob will output: `All duplicates ","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"ambertan77"},"content":"have been removed.` Commanding `list` again will show the updated list of tasks, which only contains unique tasks.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"ambertan77"},"content":"### Closing the program","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"ambertan77"},"content":"Closes the running application. ","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"ambertan77"},"content":"You can close the application by clicking on the :x: button at the top of the application, just like how you would ","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"ambertan77"},"content":"close any other application. To get the exit message from Bob, command `bye`.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"ambertan77"},"content":"+ Note that the `bye` command does not automatically close the application.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"ambertan77"},"content":"## Data file in hard disk","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"ambertan77"},"content":"The task list will be saved inside a file on your hard disk. In the folder containing the `bob.jar` file, a sub-folder ","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"ambertan77"},"content":"called `data` will be created and will contain a `tasks.txt` file. The most updated task list will be saved here. ","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"ambertan77"},"content":"When you re-run the `bob.jar` file and command `list`, Bob will output the all the tasks in the `tasks.txt` file.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"ambertan77"},"content":"### Format in which tasks are saved","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"ambertan77"},"content":"One line represents information about one specific task. The different attributes of the task are separated by a slash.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"ambertan77"},"content":"Attributes are saved in the order of:","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"ambertan77"},"content":"1. Type of task, denoted by a `D` (for deadline), `T` (for todo) or `E` (for event).","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"ambertan77"},"content":"2. Whether the task is completed, denoted by `1` (for completed) or `0` (for uncompleted).","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"ambertan77"},"content":"3. Description of the task.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"ambertan77"},"content":"4. Deadline of the task (for tasks with deadline only) OR Start time of the event (for events only).","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"ambertan77"},"content":"5. End time of the event (for events only).","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"ambertan77"},"content":"All dates and times are saved in the format: `DD/MM/YYYY, HH:MM`","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"ambertan77"},"content":"Example: ","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"ambertan77"},"content":"```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"ambertan77"},"content":"D / 1 / assignment 1 / 14/02/2025, 13:00","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"ambertan77"},"content":"T / 0 / return book","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"ambertan77"},"content":"E / consult / 17-03-2025, 09:00 / 18/03/2025, 10:00","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"ambertan77"},"content":"```","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"ambertan77"},"content":"### Editing the data file","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"ambertan77"},"content":"Using a text editor, open and edit the `tasks.txt` file. ","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"ambertan77"},"content":"Use the format specified above if you are editing or adding new tasks. ","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"ambertan77"},"content":"## Command Summary","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"ambertan77"},"content":"| Command                | Format                                                          |","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"ambertan77"},"content":"|------------------------|-----------------------------------------------------------------|","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"ambertan77"},"content":"| Add todo task          | `todo DESCRIPTION`                                              |","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"ambertan77"},"content":"| Add task with deadline | `deadline DESCRIPTION /by DD-MM-YYYY HH:MM`                     |","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"ambertan77"},"content":"| Add event              | `event DESCRIPTION /from DD-MM-YYYY HH:MM /to DD-MM-YYYY HH:MM` |","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"ambertan77"},"content":"| List                   | `list`                                                          |","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"ambertan77"},"content":"| Find                   | `find SEARCH_KEY`                                               |","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"ambertan77"},"content":"| Mark as completed      | `mark INDEX`                                                    |","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"ambertan77"},"content":"| Mark as uncompleted    | `unmark INDEX`                                                  |","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"ambertan77"},"content":"| Delete                 | `delete INDEX`                                                  |","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"ambertan77"},"content":"| Check for duplicates   | `check duplicates`                                              |","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"ambertan77"},"content":"| Remove duplicates      | `remove duplicates`                                             |","lastModifiedDate":"2025-02-19","isFullCredit":false}],"authorContributionMap":{"ambertan77":237,"-":16}},{"path":"src/main/java/bob/Bob.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ambertan77"},"content":"package bob;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ambertan77"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ambertan77"},"content":"import bob.task.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ambertan77"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ambertan77"},"content":" * Represents the chatbot, Bob, that the user is interacting with.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ambertan77"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ambertan77"},"content":"public class Bob {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ambertan77"},"content":"    private String filePath;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ambertan77"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ambertan77"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ambertan77"},"content":"    private Parser parser;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ambertan77"},"content":"    private Ui ui;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ambertan77"},"content":"     * Creates a new instance of Bob. Loads the file containing data in the hard disk.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ambertan77"},"content":"     * @param filePath File path of the file in hard disk containing previous data.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ambertan77"},"content":"    public Bob(String filePath) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ambertan77"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ambertan77"},"content":"        this.tasks \u003d new TaskList(new ArrayList\u003cTask\u003e(100));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ambertan77"},"content":"        this.storage \u003d new Storage(this.tasks);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ambertan77"},"content":"        this.parser \u003d new Parser(this.tasks, this.storage, this);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ambertan77"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ambertan77"},"content":"     * Loads the file in the specified file path.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ambertan77"},"content":"     * This method kick-starts all interactions between the chatbot and the user.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ambertan77"},"content":"     * @return A string containing the greeting message, or error message if an error has occurred.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ambertan77"},"content":"    public String run() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ambertan77"},"content":"        assert this.storage !\u003d null : \"Bob\u0027s storage should be initialised before it is ran\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ambertan77"},"content":"        assert this.ui !\u003d null : \"Bob\u0027s UI should be initialised before it is ran\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ambertan77"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ambertan77"},"content":"            this.storage.loadFile(filePath);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ambertan77"},"content":"        } catch (BobException e) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ambertan77"},"content":"            return e.getMessage();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ambertan77"},"content":"        return this.ui.greet();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ambertan77"},"content":"    // JavaDoc comments adapted from:","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ambertan77"},"content":"    // https://stackoverflow.com/questions/27696538/how-should-the-parameter-of-the-main-method-be-documented","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ambertan77"},"content":"     * The main method. This is the entry point for all","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ambertan77"},"content":"     * interactions between the user and the chatbot.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ambertan77"},"content":"     * @param args The command line arguments.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ambertan77"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ambertan77"},"content":"        new Bob(\"./data/tasks.txt\").run();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ambertan77"},"content":"     * Generates a response for the user\u0027s chat message.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ambertan77"},"content":"     * @return Bob\u0027s response to the user\u0027s command.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ambertan77"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ambertan77"},"content":"        assert this.ui !\u003d null : \"Bob\u0027s UI should be initialised before it is ran\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ambertan77"},"content":"        assert this.parser !\u003d null : \"Bob\u0027s parser should be initialised before it is ran\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ambertan77"},"content":"        return this.ui.interactWithErrorsHandled(this.parser, input);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ambertan77"},"content":"     * Returns the file path of the file containing the data of items in the task list.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ambertan77"},"content":"     * @return The file path for the file stored in the hard disk.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ambertan77"},"content":"    public String getFilePath() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ambertan77"},"content":"        return this.filePath;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ambertan77"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"ambertan77":78}},{"path":"src/main/java/bob/BobException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ambertan77"},"content":"package bob;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ambertan77"},"content":"// code adapted from https://www.baeldung.com/java-new-custom-exception","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ambertan77"},"content":"// header comments adapted from:","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ambertan77"},"content":"// https://github.com/juneha1120/ip/blob/master/src/main/java/chillguy/exceptions/ChillGuyException.java","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ambertan77"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ambertan77"},"content":" * Represents the custom exception class created for Bob. If a BobException is thrown,","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ambertan77"},"content":" * an error, with details specified in the error message, has occurred when running Bob.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ambertan77"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ambertan77"},"content":"public class BobException extends Exception {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ambertan77"},"content":"     * Constructs a new instance of BobException with a custom error message.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ambertan77"},"content":"     * @param message A String containing details of the error that has occurred.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ambertan77"},"content":"    public BobException(String message) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ambertan77"},"content":"        super(message);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ambertan77"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"ambertan77":20}},{"path":"src/main/java/bob/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ambertan77"},"content":"package bob;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ambertan77"},"content":"import bob.commands.CheckDuplicatesCommand;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ambertan77"},"content":"import bob.commands.CreateCommand;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ambertan77"},"content":"import bob.commands.DeleteCommand;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ambertan77"},"content":"import bob.commands.FindCommand;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ambertan77"},"content":"import bob.commands.ListCommand;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ambertan77"},"content":"import bob.commands.MarkCommand;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ambertan77"},"content":"import bob.commands.RemoveDuplicatesCommand;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ambertan77"},"content":"import bob.commands.UnmarkCommand;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ambertan77"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ambertan77"},"content":" * Represents the Parser that reads and executes the user\u0027s commands.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ambertan77"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ambertan77"},"content":"public class Parser {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ambertan77"},"content":"    // all supported commands","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ambertan77"},"content":"     * Lists the different user commands supported.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ambertan77"},"content":"    public enum Command {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ambertan77"},"content":"        LIST, MARK, UNMARK, DELETE, CREATE, FIND, CHECK_DUPLICATES, REMOVE_DUPLICATES","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ambertan77"},"content":"    private Bob bob;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ambertan77"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ambertan77"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ambertan77"},"content":"     * Creates a new instance of a Parser.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ambertan77"},"content":"     * @param tasks List of tasks the user has input.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ambertan77"},"content":"     * @param storage Where tasks created in all instances of the bot are stored.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ambertan77"},"content":"    public Parser(TaskList tasks, Storage storage, Bob bob) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ambertan77"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ambertan77"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ambertan77"},"content":"        this.bob \u003d bob;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ambertan77"},"content":"     * Checks the action that the user wants the bot to take and executes it.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ambertan77"},"content":"     * If the user\u0027s input is formatted wrongly, an exception is thrown.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ambertan77"},"content":"     * @param command The type of action that the user wants to take.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ambertan77"},"content":"     * @param input The line input by the user.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ambertan77"},"content":"     * @return The message detailing the command executed.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ambertan77"},"content":"     * @throws BobException If user input is in the wrong format.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ambertan77"},"content":"    public String execute(Command command, String input) throws BobException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ambertan77"},"content":"        switch (command) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ambertan77"},"content":"        case LIST:","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ambertan77"},"content":"            ListCommand listCommand \u003d new ListCommand(this.tasks);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ambertan77"},"content":"            return listCommand.execute();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ambertan77"},"content":"        case MARK:","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ambertan77"},"content":"            MarkCommand markCommand \u003d new MarkCommand(this.tasks, this.storage, this.bob.getFilePath());","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ambertan77"},"content":"            return markCommand.execute(input);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ambertan77"},"content":"        case UNMARK:","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ambertan77"},"content":"            UnmarkCommand unmarkCommand \u003d new UnmarkCommand(this.tasks, this.storage, this.bob.getFilePath());","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ambertan77"},"content":"            return unmarkCommand.execute(input);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ambertan77"},"content":"        case DELETE:","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ambertan77"},"content":"            DeleteCommand deleteCommand \u003d new DeleteCommand(tasks, storage, this.bob.getFilePath());","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ambertan77"},"content":"            return deleteCommand.execute(input);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ambertan77"},"content":"        case CREATE:","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ambertan77"},"content":"            CreateCommand createCommand \u003d new CreateCommand(tasks, storage, this.bob.getFilePath());","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ambertan77"},"content":"            return createCommand.execute(input);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ambertan77"},"content":"        case FIND:","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ambertan77"},"content":"            FindCommand findCommand \u003d new FindCommand(tasks);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ambertan77"},"content":"            return findCommand.execute(input);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ambertan77"},"content":"        case CHECK_DUPLICATES:","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ambertan77"},"content":"            CheckDuplicatesCommand checkDuplicatesCommand \u003d new CheckDuplicatesCommand(tasks);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ambertan77"},"content":"            return checkDuplicatesCommand.execute();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ambertan77"},"content":"        case REMOVE_DUPLICATES:","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ambertan77"},"content":"            RemoveDuplicatesCommand removeDuplicatesCommand \u003d new RemoveDuplicatesCommand(tasks, storage, this.bob);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ambertan77"},"content":"            return removeDuplicatesCommand.execute();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ambertan77"},"content":"        default:","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ambertan77"},"content":"            throw new BobException(\"The command you have entered is currently not supported by Bob :(\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ambertan77"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"ambertan77":80}},{"path":"src/main/java/bob/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ambertan77"},"content":"package bob;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ambertan77"},"content":"import java.io.File;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ambertan77"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ambertan77"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ambertan77"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ambertan77"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ambertan77"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ambertan77"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ambertan77"},"content":"import bob.task.Deadline;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ambertan77"},"content":"import bob.task.Event;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ambertan77"},"content":"import bob.task.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ambertan77"},"content":"import bob.task.Todos;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ambertan77"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ambertan77"},"content":" * Represents the Storage component that stores all the tasks created","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ambertan77"},"content":" * in all instances of the bot.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ambertan77"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ambertan77"},"content":"public class Storage {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ambertan77"},"content":"    protected boolean isNewFile \u003d false;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ambertan77"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ambertan77"},"content":"     * Creates a new instance of Storage.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ambertan77"},"content":"     * @param tasks List of tasks the user has input.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ambertan77"},"content":"    public Storage(TaskList tasks) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ambertan77"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ambertan77"},"content":"     * Creates a directory and a new file if they do not exist yet.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ambertan77"},"content":"     * Adds the file contents to the task list in this instance of the bot.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ambertan77"},"content":"     * If text in the file at the specified file path is not formatted accurately, an exception is thrown.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ambertan77"},"content":"     * @param filePath The file path of the file storing data.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ambertan77"},"content":"     * @throws BobException If text in the file is not formatted correctly.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ambertan77"},"content":"    public void loadFile(String filePath) throws BobException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ambertan77"},"content":"        // create file to store the list of tasks","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ambertan77"},"content":"        // code adapted from:","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ambertan77"},"content":"        // https://stackoverflow.com/questions/64401340/java-create-directory-and-subdirectory-if-not-exist","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ambertan77"},"content":"        File data \u003d new File(filePath);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ambertan77"},"content":"        File directory \u003d data.getParentFile();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ambertan77"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ambertan77"},"content":"            directory.mkdir();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ambertan77"},"content":"        if (!data.exists()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ambertan77"},"content":"            try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ambertan77"},"content":"                data.createNewFile();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ambertan77"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ambertan77"},"content":"                throw new BobException(\"Unable to create new file: data.txt\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ambertan77"},"content":"            }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ambertan77"},"content":"            isNewFile \u003d true;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ambertan77"},"content":"        } else {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ambertan77"},"content":"            try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ambertan77"},"content":"                addFileContents();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ambertan77"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ambertan77"},"content":"                throw new BobException(\"Unable to add file contents into data.txt.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ambertan77"},"content":"            }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ambertan77"},"content":"    // create a method to write over text","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ambertan77"},"content":"    // method adapted from course website, under W3.4","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ambertan77"},"content":"    // downcasting code adapted from https://www.geeksforgeeks.org/rules-of-downcasting-objects-in-java/","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ambertan77"},"content":"     * Stores the string representation of the task passed into the method by","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ambertan77"},"content":"     * writing over the current items in the file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ambertan77"},"content":"     * @param filePath The file path of the file storing data.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ambertan77"},"content":"     * @param task The task to be stored into the file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ambertan77"},"content":"     * @throws BobException If the file cannot be read.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ambertan77"},"content":"    public void writeToFile(String filePath, Task task) throws BobException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ambertan77"},"content":"        assert (new File(filePath)).exists() : \"file in hard disk should be loaded\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ambertan77"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ambertan77"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ambertan77"},"content":"            String text \u003d \"\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ambertan77"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ambertan77"},"content":"                Deadline deadlineTask \u003d (Deadline) task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ambertan77"},"content":"                text \u003d \"D / \" + deadlineTask.getStatus() + \" / \" + deadlineTask.getDescription()","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ambertan77"},"content":"                        + \" / \" + deadlineTask.getDeadline();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ambertan77"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ambertan77"},"content":"                Event event \u003d (Event) task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ambertan77"},"content":"                text \u003d \"E / \" + event.getStatus() + \" / \" + event.getDescription()","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ambertan77"},"content":"                        + \" / \" + event.getFrom() + \" / \" + event.getTo();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ambertan77"},"content":"            } else if (task instanceof Todos) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ambertan77"},"content":"                Todos todo \u003d (Todos) task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ambertan77"},"content":"                text \u003d \"T / \" + todo.getStatus() + \" / \" + todo.getDescription();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ambertan77"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ambertan77"},"content":"            fw.write(text);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ambertan77"},"content":"            fw.close();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ambertan77"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ambertan77"},"content":"            throw new BobException(\"Unable to write to file: \" + e.getMessage());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ambertan77"},"content":"    // create a method to append text to file instead of write over","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ambertan77"},"content":"    // method adapted from course website, under W3.4","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ambertan77"},"content":"    // downcasting code adapted from https://www.geeksforgeeks.org/rules-of-downcasting-objects-in-java/","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ambertan77"},"content":"     * Stores the string representation of the task passed into the method by","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ambertan77"},"content":"     * appending to the current items in the file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ambertan77"},"content":"     * @param filePath The file path of the file storing data.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ambertan77"},"content":"     * @param task The task to be stored into the file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ambertan77"},"content":"     * @throws BobException If the file cannot be read.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ambertan77"},"content":"    public void appendToFile(String filePath, Task task) throws BobException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ambertan77"},"content":"        assert (new File(filePath)).exists() : \"file in hard disk should be loaded\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ambertan77"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ambertan77"},"content":"            FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ambertan77"},"content":"            String text \u003d \"\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ambertan77"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ambertan77"},"content":"                Deadline deadlineTask \u003d (Deadline) task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ambertan77"},"content":"                text \u003d System.lineSeparator() + \"D / \" + deadlineTask.getStatus() + \" / \"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ambertan77"},"content":"                        + deadlineTask.getDescription() + \" / \" + deadlineTask.getDeadline();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ambertan77"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ambertan77"},"content":"                Event event \u003d (Event) task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ambertan77"},"content":"                text \u003d System.lineSeparator() + \"E / \" + event.getStatus() + \" / \" + event.getDescription()","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ambertan77"},"content":"                        + \" / \" + event.getFrom() + \" / \" + event.getTo();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ambertan77"},"content":"            } else if (task instanceof Todos) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ambertan77"},"content":"                Todos todo \u003d (Todos) task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ambertan77"},"content":"                text \u003d System.lineSeparator() + \"T / \" + todo.getStatus() + \" / \" + todo.getDescription();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ambertan77"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ambertan77"},"content":"            fw.write(text);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ambertan77"},"content":"            fw.close();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ambertan77"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ambertan77"},"content":"            throw new BobException(\"Unable to append to file: \" + e.getMessage());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ambertan77"},"content":"     * Returns a newly created Deadline task with details as specified in the stored data.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ambertan77"},"content":"     * @param splitInput An array of strings created from the user\u0027s input.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ambertan77"},"content":"     * @return The newly created task of type deadline.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ambertan77"},"content":"     * @throws BobException If the file cannot be read or if the data is formatted wrongly.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ambertan77"},"content":"    public Deadline createDeadlineTaskFromFile(String[] splitInput) throws BobException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ambertan77"},"content":"        // code adapted from https://www.geeksforgeeks.org/java-time-localdatetime-class-in-java/ (Example 3)","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ambertan77"},"content":"        // and https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ambertan77"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ambertan77"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy, HH:mm\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ambertan77"},"content":"            LocalDateTime deadline \u003d LocalDateTime.parse(splitInput[3], formatter);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ambertan77"},"content":"            return new Deadline(splitInput[2], deadline);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ambertan77"},"content":"        } catch (ArrayIndexOutOfBoundsException e1) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ambertan77"},"content":"            throw new BobException(\"Ensure that the tasks in file are in the correct format.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ambertan77"},"content":"        } catch (DateTimeParseException e2) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"ambertan77"},"content":"            throw new BobException(\"Ensure that the deadline is given in the correct format.\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"ambertan77"},"content":"     * Returns a newly created Event task with details as specified in the stored data.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ambertan77"},"content":"     * @param splitInput An array of strings created from the user\u0027s input.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ambertan77"},"content":"     * @return The newly created task of type event.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"ambertan77"},"content":"     * @throws BobException If the file cannot be read or if the data is formatted wrongly.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"ambertan77"},"content":"    public Event createEventTaskFromFile(String[] splitInput) throws BobException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"ambertan77"},"content":"        // code adapted from https://www.geeksforgeeks.org/java-time-localdatetime-class-in-java/ (Example 3)","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"ambertan77"},"content":"        // and https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"ambertan77"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"ambertan77"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy, HH:mm\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"ambertan77"},"content":"            LocalDateTime from \u003d LocalDateTime.parse(splitInput[3], formatter);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"ambertan77"},"content":"            LocalDateTime to \u003d LocalDateTime.parse(splitInput[4], formatter);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"ambertan77"},"content":"            return new Event(splitInput[2], from, to);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"ambertan77"},"content":"        } catch (ArrayIndexOutOfBoundsException e1) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"ambertan77"},"content":"            throw new BobException(\"Ensure that the tasks in file are in the correct format.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"ambertan77"},"content":"        } catch (DateTimeParseException e2) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"ambertan77"},"content":"            throw new BobException(\"Ensure that the from and to fields are given in the correct format.\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"ambertan77"},"content":"     * Returns a newly created Todo task with details as specified in the stored data.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"ambertan77"},"content":"     * @param splitInput An array of strings created from the user\u0027s input.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"ambertan77"},"content":"     * @return The newly created task of type todo.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"ambertan77"},"content":"     * @throws BobException If the file cannot be read or if the data is formatted wrongly.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"ambertan77"},"content":"    public Todos createTodoTaskFromFile(String[] splitInput) throws BobException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"ambertan77"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"ambertan77"},"content":"            return new Todos(splitInput[2]);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"ambertan77"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"ambertan77"},"content":"            throw new BobException(\"Ensure that the tasks in file are in the correct format.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"ambertan77"},"content":"     * Returns a newly created task with details as specified in the stored data.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"ambertan77"},"content":"     * @param storedInput A line of text stored in the file of data.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"ambertan77"},"content":"     * @return The newly created task.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"ambertan77"},"content":"     * @throws BobException If the file cannot be read or if the data is formatted wrongly.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"ambertan77"},"content":"    public Task createTaskFromFile(String storedInput) throws BobException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"ambertan77"},"content":"        assert storedInput !\u003d null : \"storedInput in file should not be null\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"ambertan77"},"content":"        Task output \u003d null;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"ambertan77"},"content":"        String[] split \u003d storedInput.split(\" / \");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"ambertan77"},"content":"        if (storedInput.startsWith(\"D\")) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"ambertan77"},"content":"            output \u003d createDeadlineTaskFromFile(split);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"ambertan77"},"content":"        } else if (storedInput.startsWith(\"E\")) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"ambertan77"},"content":"            output \u003d createEventTaskFromFile(split);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"ambertan77"},"content":"        } else if (storedInput.startsWith(\"T\")) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"ambertan77"},"content":"            output \u003d createTodoTaskFromFile(split);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"ambertan77"},"content":"        } else {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"ambertan77"},"content":"            throw new BobException(\"Ensure that the tasks in file are \"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"ambertan77"},"content":"                    + \"either a Deadline task, Event task or Todo task.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"ambertan77"},"content":"        if (storedInput.charAt(4) \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"ambertan77"},"content":"            output.markAsDone();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"ambertan77"},"content":"        return output;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"ambertan77"},"content":"    // code adapted from course website, W3.4c","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"ambertan77"},"content":"     * Adds the tasks stored in the data file into the current task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"ambertan77"},"content":"     * @throws BobException If the file cannot be read or if the data is formatted wrongly.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"ambertan77"},"content":"    public void addFileContents() throws BobException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"ambertan77"},"content":"        assert (new File(\"./data/tasks.txt\")).exists() : \"file in hard disk should be loaded\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"ambertan77"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"ambertan77"},"content":"            File f \u003d new File(\"./data/tasks.txt\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"ambertan77"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"ambertan77"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"ambertan77"},"content":"                String storedInput \u003d s.nextLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"ambertan77"},"content":"                Task storedTask \u003d createTaskFromFile(storedInput);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"ambertan77"},"content":"                tasks.add(storedTask);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"ambertan77"},"content":"                tasks.count++;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"ambertan77"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"ambertan77"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"ambertan77"},"content":"            throw new BobException(\"Unable to add file contents: \" + e.getMessage());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"ambertan77"},"content":"     * Returns a boolean indicating whether the file in hard disk is newly created.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"ambertan77"},"content":"     * @return A boolean indicating if the file in hard disk is new.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"ambertan77"},"content":"    public boolean getIsNewFile() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"ambertan77"},"content":"        return this.isNewFile;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"ambertan77"},"content":"     * Sets the isNewFile attribute to be the parameter passed.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"ambertan77"},"content":"     * @param indicator A boolean indicating if the file in hard disk is new.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"ambertan77"},"content":"    public void setIsNewFile(boolean indicator) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"ambertan77"},"content":"        this.isNewFile \u003d indicator;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"ambertan77"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"ambertan77":265}},{"path":"src/main/java/bob/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ambertan77"},"content":"package bob;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ambertan77"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ambertan77"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ambertan77"},"content":"import bob.task.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ambertan77"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ambertan77"},"content":" * Represents the list of Tasks that have been added by the user before.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ambertan77"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ambertan77"},"content":"public class TaskList {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ambertan77"},"content":"    // store the current count of tasks in the list","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ambertan77"},"content":"    protected int count \u003d 0;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ambertan77"},"content":"    // store the list of tasks","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ambertan77"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ambertan77"},"content":"    protected HashMap\u003cTask, ArrayList\u003cTask\u003e\u003e duplicates \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ambertan77"},"content":"     * Creates a new instance of a TaskList.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ambertan77"},"content":"     * @param tasks List of tasks the user has input.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ambertan77"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ambertan77"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ambertan77"},"content":"     * Returns a Task at the specified index of the array list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ambertan77"},"content":"     * @param index Index of the task that should be returned.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ambertan77"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ambertan77"},"content":"    public Task get(int index) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ambertan77"},"content":"        assert index \u003c tasks.size() : \"index should be an integer less than the size of the task list\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ambertan77"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ambertan77"},"content":"     * Removes the specified task in the array list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ambertan77"},"content":"     * @param index The task that should be removed.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ambertan77"},"content":"    public void remove(Task index) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ambertan77"},"content":"        tasks.remove(index);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ambertan77"},"content":"     * Adds the specified task to the back of the array list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ambertan77"},"content":"     * @param newTask The task that should be added.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ambertan77"},"content":"    public void add(Task newTask) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ambertan77"},"content":"        tasks.add(newTask);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ambertan77"},"content":"     * Finds all the tasks that match the keyword used.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ambertan77"},"content":"     * @param key The keyword used to search.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ambertan77"},"content":"    public ArrayList\u003cTask\u003e find(String key) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ambertan77"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ambertan77"},"content":"        tasks.stream()","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ambertan77"},"content":"                .filter((task) -\u003e task.toString().contains(key))","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ambertan77"},"content":"                .forEach((task) -\u003e result.add(task));","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ambertan77"},"content":"        return result;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ambertan77"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ambertan77"},"content":"     * @return Number of tasks in the task list.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ambertan77"},"content":"    public int getCount() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ambertan77"},"content":"        return this.count;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ambertan77"},"content":"     * Increases the number of tasks in the task list by 1.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ambertan77"},"content":"    public void incrementCount() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ambertan77"},"content":"        this.count++;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ambertan77"},"content":"     * Decreases the number of tasks in the task list by 1.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ambertan77"},"content":"    public void decrementCount() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ambertan77"},"content":"        this.count--;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ambertan77"},"content":"     * Tracks which tasks have duplicates by using a HashMap.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ambertan77"},"content":"    public void trackDuplicate(Task key, Task duplicateTask) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ambertan77"},"content":"        if (duplicates.containsKey(key)) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ambertan77"},"content":"            ArrayList\u003cTask\u003e list \u003d duplicates.get(key);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ambertan77"},"content":"            list.add(duplicateTask);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ambertan77"},"content":"            duplicates.put(key, list);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ambertan77"},"content":"        } else {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ambertan77"},"content":"            ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ambertan77"},"content":"            list.add(duplicateTask);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ambertan77"},"content":"            duplicates.put(key, list);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ambertan77"},"content":"     * Checks if the current task list has dupplicated tasks.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ambertan77"},"content":"     * @return Whether duplicates exist in the task list.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ambertan77"},"content":"    public boolean detectDuplicates() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ambertan77"},"content":"        boolean hasDuplicates \u003d false;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ambertan77"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ambertan77"},"content":"            for (int j \u003d i + 1; j \u003c tasks.size(); j++) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ambertan77"},"content":"                if (tasks.get(i).toString().equals(tasks.get(j).toString())) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ambertan77"},"content":"                    hasDuplicates \u003d true;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ambertan77"},"content":"                    trackDuplicate(tasks.get(i), tasks.get(j));","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ambertan77"},"content":"                }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ambertan77"},"content":"            }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ambertan77"},"content":"        return hasDuplicates;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ambertan77"},"content":"     * Empties the HashMap containing duplicates.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ambertan77"},"content":"    public void resetDuplicates() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ambertan77"},"content":"        duplicates \u003d new HashMap\u003cTask, ArrayList\u003cTask\u003e\u003e();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ambertan77"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"ambertan77":133}},{"path":"src/main/java/bob/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ambertan77"},"content":"package bob;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ambertan77"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ambertan77"},"content":" * Represents the component dealing with user interactions. If the chatbot is unable to","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ambertan77"},"content":" * continue responding to the user due to errors in file path or inputs, an exception is thrown.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ambertan77"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ambertan77"},"content":"public class Ui {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ambertan77"},"content":"     * Greets the user when the chatbot is first opened.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ambertan77"},"content":"     * @return A string containing the greeting message.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ambertan77"},"content":"    public String greet() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ambertan77"},"content":"        return \"Hello, I\u0027m Bob! What can I do for you today? :)\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ambertan77"},"content":"     * Returns the exit message when the user says \"bye\".","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ambertan77"},"content":"     * @return A string containing the exit message.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ambertan77"},"content":"    public String exit() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ambertan77"},"content":"        return \"Goodbye, hope to see you again soon!\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ambertan77"},"content":"     * Responds to the user\u0027s commands through printing messages.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ambertan77"},"content":"     * @param parser The parser reading and executing the user\u0027s commands.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ambertan77"},"content":"     * @param input The text input by the user in the GUI.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ambertan77"},"content":"     * @return A String containing the response of the chatbot.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ambertan77"},"content":"     * @throws BobException If the chatbot is unable to execute commands.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ambertan77"},"content":"    public String interact(Parser parser, String input) throws BobException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ambertan77"},"content":"        String output;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ambertan77"},"content":"        boolean isCreateCommand \u003d (input.startsWith(\"todo \") || input.startsWith(\"deadline \"))","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ambertan77"},"content":"                || input.startsWith(\"event \");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ambertan77"},"content":"        if (input.equals(\"list\")) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ambertan77"},"content":"            output \u003d parser.execute(Parser.Command.LIST, input);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ambertan77"},"content":"        } else if (input.startsWith(\"mark \")) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ambertan77"},"content":"            output \u003d parser.execute(Parser.Command.MARK, input);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ambertan77"},"content":"        } else if (input.startsWith(\"unmark \")) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ambertan77"},"content":"            output \u003d parser.execute(Parser.Command.UNMARK, input);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ambertan77"},"content":"        } else if (input.startsWith(\"delete \")) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ambertan77"},"content":"            output \u003d parser.execute(Parser.Command.DELETE, input);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ambertan77"},"content":"        } else if (input.startsWith(\"find \")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ambertan77"},"content":"            output \u003d parser.execute(Parser.Command.FIND, input);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ambertan77"},"content":"        } else if (input.equals(\"bye\")) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ambertan77"},"content":"            output \u003d this.exit();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ambertan77"},"content":"        } else if (input.equals(\"check duplicates\")) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ambertan77"},"content":"            output \u003d parser.execute(Parser.Command.CHECK_DUPLICATES, input);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ambertan77"},"content":"        } else if (input.equals(\"remove duplicates\")) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ambertan77"},"content":"            output \u003d parser.execute(Parser.Command.REMOVE_DUPLICATES, input);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ambertan77"},"content":"        } else if (isCreateCommand) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ambertan77"},"content":"            output \u003d parser.execute(Parser.Command.CREATE, input);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ambertan77"},"content":"        } else {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ambertan77"},"content":"            throw new BobException(\"This command is currently not supported by Bob :(\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ambertan77"},"content":"        return output;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ambertan77"},"content":"     * Responds to the user\u0027s commands through printing messages, with all errors handled.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ambertan77"},"content":"     * @param parser The parser reading and executing the user\u0027s commands.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ambertan77"},"content":"     * @param input The text input by the user in the GUI.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ambertan77"},"content":"     * @return A String containing the response of the chatbot, or details of the error that occurred.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ambertan77"},"content":"    public String interactWithErrorsHandled(Parser parser, String input) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ambertan77"},"content":"        try {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ambertan77"},"content":"            return interact(parser, input);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ambertan77"},"content":"        } catch (BobException e) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ambertan77"},"content":"            return e.getMessage();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ambertan77"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"ambertan77":80}},{"path":"src/main/java/bob/commands/CheckDuplicatesCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ambertan77"},"content":"package bob.commands;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ambertan77"},"content":"import bob.TaskList;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ambertan77"},"content":"/**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ambertan77"},"content":" * Represents a CheckDuplicateCommand that has been called by the user.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ambertan77"},"content":" */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ambertan77"},"content":"public class CheckDuplicatesCommand {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ambertan77"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ambertan77"},"content":"     * Creates a new instance of a \"check duplicates\" command.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ambertan77"},"content":"     * @param tasks List of tasks the user has input.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ambertan77"},"content":"    public CheckDuplicatesCommand(TaskList tasks) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ambertan77"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ambertan77"},"content":"     * Executes the \"check duplicates\" command.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ambertan77"},"content":"     * @return A string notifying the user whether there are duplicates.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ambertan77"},"content":"    public String execute() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ambertan77"},"content":"        if (tasks.detectDuplicates()) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ambertan77"},"content":"            return \"Duplicates exist. Type \u0027remove duplicates\u0027 to remove all duplicates in list.\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ambertan77"},"content":"        } else {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ambertan77"},"content":"            return \"No duplicates in list! :)\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ambertan77"},"content":"}","lastModifiedDate":"2025-02-14","isFullCredit":false}],"authorContributionMap":{"ambertan77":33}},{"path":"src/main/java/bob/commands/CreateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ambertan77"},"content":"package bob.commands;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ambertan77"},"content":"// This class is adapted from the package structure in:","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ambertan77"},"content":"// https://github.com/juneha1120/ip/tree/master/src/main/java/chillguy/commands.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ambertan77"},"content":"// The package structure and the OOP logic (related to commands in Parser.java) are inspired by the above repository,","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ambertan77"},"content":"// but the methods and logic within this class were created independently.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ambertan77"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ambertan77"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ambertan77"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ambertan77"},"content":"import bob.BobException;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ambertan77"},"content":"import bob.Storage;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ambertan77"},"content":"import bob.TaskList;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ambertan77"},"content":"import bob.task.Deadline;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ambertan77"},"content":"import bob.task.Event;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ambertan77"},"content":"import bob.task.Task;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ambertan77"},"content":"import bob.task.Todos;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ambertan77"},"content":"/**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ambertan77"},"content":" * Represents a CreateCommand that has been called by the user.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ambertan77"},"content":" */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ambertan77"},"content":"public class CreateCommand {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ambertan77"},"content":"     * An immutable string containing the header to be printed when the create command is used.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ambertan77"},"content":"    public static final String CREATE_HEADER \u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ambertan77"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ambertan77"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ambertan77"},"content":"    private String filePath;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ambertan77"},"content":"     * Creates a new instance of a \"create\" command.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ambertan77"},"content":"     * @param tasks List of tasks the user has input.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ambertan77"},"content":"     * @param storage Where tasks created in all instances of the bot are stored.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ambertan77"},"content":"     * @param filePath File path of the file containing information about the task list.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ambertan77"},"content":"    public CreateCommand(TaskList tasks, Storage storage, String filePath) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ambertan77"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ambertan77"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ambertan77"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ambertan77"},"content":"     * Returns the new Todo task created.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ambertan77"},"content":"     * If no description is entered, an exception is thrown.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ambertan77"},"content":"     * @param input The line input by the user.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ambertan77"},"content":"     * @return New todo task with properties specified by the input.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ambertan77"},"content":"     * @throws BobException If user input has no description.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ambertan77"},"content":"    public Todos createTodoTask(String input) throws BobException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ambertan77"},"content":"        String desc \u003d input.substring(4);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ambertan77"},"content":"        if (desc.equals(\"\")) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ambertan77"},"content":"            // throw exception since description is empty","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ambertan77"},"content":"            throw new BobException(\"I can\u0027t create tasks with no descriptions :(\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ambertan77"},"content":"        return new Todos(desc.substring(1));","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ambertan77"},"content":"     * Returns the new Deadline task created.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ambertan77"},"content":"     * If no description, no deadline or the wrong format is entered, an exception is thrown.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ambertan77"},"content":"     * @param input The line input by the user.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ambertan77"},"content":"     * @return New deadline task with properties specified by the input.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ambertan77"},"content":"     * @throws BobException If user input is in the wrong format.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ambertan77"},"content":"    public Deadline createDeadlineTask(String input) throws BobException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ambertan77"},"content":"        if (input.substring(8).equals(\"\")) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ambertan77"},"content":"            // throw exception since description is empty","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ambertan77"},"content":"            throw new BobException(\"I can\u0027t create tasks with no descriptions :(\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ambertan77"},"content":"        String[] split \u003d input.split(\" /\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ambertan77"},"content":"        String desc \u003d split[0].substring(9);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ambertan77"},"content":"        if (desc.equals(\"\")) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ambertan77"},"content":"            // throw exception since description is empty","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ambertan77"},"content":"            throw new BobException(\"I can\u0027t create tasks with no descriptions :(\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ambertan77"},"content":"        try {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ambertan77"},"content":"            String deadline \u003d split[1].substring(3);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ambertan77"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ambertan77"},"content":"            // throw exception since user did not add deadline","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ambertan77"},"content":"            throw new BobException(\"Please add a deadline in the format: [description] /by [dd-mm-yyyy hh:mm]!\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ambertan77"},"content":"        String deadline \u003d split[1].substring(3);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ambertan77"},"content":"        if (deadline.equals(\"\")) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ambertan77"},"content":"            // throw exception since user did not add a deadline","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ambertan77"},"content":"            throw new BobException(\"Please add a deadline in the format: [description] /by [dd-mm-yyyy hh:mm]!\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ambertan77"},"content":"        try {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ambertan77"},"content":"            // code adapted from https://www.geeksforgeeks.org/java-time-localdatetime-class-in-java/ (Example 3)","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ambertan77"},"content":"            // and https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ambertan77"},"content":"            DateTimeFormatter inputDateTimeFormat \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ambertan77"},"content":"            return new Deadline(desc, LocalDateTime.parse(deadline, inputDateTimeFormat));","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ambertan77"},"content":"        } catch (DateTimeParseException e1) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ambertan77"},"content":"            throw new BobException(\"Please ensure that the date and time are valid and\"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ambertan77"},"content":"                    + \" are added in the format \u0027dd-mm-yyyy hh:mm!\u0027\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ambertan77"},"content":"     * Returns the new Event task created. If no description,","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ambertan77"},"content":"     * no start or end time, or the wrong format is entered, an exception is thrown.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ambertan77"},"content":"     * @param input The line input by the user.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ambertan77"},"content":"     * @return New event task with properties specified by the input.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ambertan77"},"content":"     * @throws BobException If user input is in the wrong format.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ambertan77"},"content":"    public Event createEventTask(String input) throws BobException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ambertan77"},"content":"        if (input.substring(5).equals(\"\")) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ambertan77"},"content":"            // throw exception since description is empty","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ambertan77"},"content":"            throw new BobException(\"I can\u0027t create tasks with no descriptions :(\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ambertan77"},"content":"        String[] split \u003d input.split(\" /\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ambertan77"},"content":"        try {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ambertan77"},"content":"            String desc \u003d split[0].substring(6);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ambertan77"},"content":"        } catch (StringIndexOutOfBoundsException e1) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ambertan77"},"content":"            // throw exception since description is empty","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ambertan77"},"content":"            throw new BobException(\"I can\u0027t create tasks with no descriptions :(\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ambertan77"},"content":"        String desc \u003d split[0].substring(6);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ambertan77"},"content":"        if (desc.equals(\"\")) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ambertan77"},"content":"            // throw exception since description is empty","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ambertan77"},"content":"            throw new BobException(\"I can\u0027t create tasks with no descriptions :(\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ambertan77"},"content":"        try {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ambertan77"},"content":"            String from \u003d split[1].substring(5);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ambertan77"},"content":"            String to \u003d split[2].substring(3);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ambertan77"},"content":"        } catch (StringIndexOutOfBoundsException e1) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ambertan77"},"content":"            // throw exception since there are empty \"from\" or \"to fields","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ambertan77"},"content":"            String errorMessage \u003d \"Please add both the starting and ending date/time! \"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ambertan77"},"content":"                    + \"Add an event in the format: [description] /from [dd-mm-yyyy hh:mm] /to [dd-mm-yyyy hh:mm]\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ambertan77"},"content":"            throw new BobException(errorMessage);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ambertan77"},"content":"        } catch (ArrayIndexOutOfBoundsException e2) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ambertan77"},"content":"            // throw exception since there are empty \"from\" or \"to fields","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ambertan77"},"content":"            String errorMessage \u003d \"Please add both the starting and ending date/time! \"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ambertan77"},"content":"                    + \"Add an event in the format: [description] /from [dd-mm-yyyy hh:mm] /to [dd-mm-yyyy hh:mm]\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ambertan77"},"content":"            throw new BobException(errorMessage);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"ambertan77"},"content":"        String from \u003d split[1].substring(5);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"ambertan77"},"content":"        String to \u003d split[2].substring(3);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"ambertan77"},"content":"        if (from.equals(\"\") || to.equals(\"\")) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ambertan77"},"content":"            // throw exception since there are empty \"from\" or \"to fields","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"ambertan77"},"content":"            String errorMessage \u003d \"Please add both the starting and ending date/time! \"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"ambertan77"},"content":"                    + \"Add an event in the format: [description] /from [dd-mm-yyyy hh:mm] /to [dd-mm-yyyy hh:mm]\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ambertan77"},"content":"            throw new BobException(errorMessage);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"ambertan77"},"content":"        try {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"ambertan77"},"content":"            // code adapted from https://www.geeksforgeeks.org/java-time-localdatetime-class-in-java/ (Example 3)","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"ambertan77"},"content":"            // and https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"ambertan77"},"content":"            DateTimeFormatter inputDateTimeFormat \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"ambertan77"},"content":"            return new Event(desc, LocalDateTime.parse(from, inputDateTimeFormat),","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"ambertan77"},"content":"                    LocalDateTime.parse(to, inputDateTimeFormat));","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"ambertan77"},"content":"        } catch (DateTimeParseException e1) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"ambertan77"},"content":"            throw new BobException(\"Please ensure that the date and time are valid and\"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"ambertan77"},"content":"                    + \" are added in the format \u0027dd-mm-yyyy hh:mm!\u0027\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"ambertan77"},"content":"     * Checks the type of task to be created and returns the new Task created.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"ambertan77"},"content":"     * If the input is formatted wrongly, an exception is thrown.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"ambertan77"},"content":"     * @param input The line input by the user.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"ambertan77"},"content":"     * @return New task with properties and type specified by the input.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"ambertan77"},"content":"     * @throws BobException If user input is in the wrong format.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"ambertan77"},"content":"    public Task createTask(String input) throws BobException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"ambertan77"},"content":"        if (input.startsWith(\"todo\")) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"ambertan77"},"content":"            return createTodoTask(input);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"ambertan77"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"ambertan77"},"content":"            return createDeadlineTask(input);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"ambertan77"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"ambertan77"},"content":"            return createEventTask(input);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"ambertan77"},"content":"        // throw exception since user has input an unsupported command","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"ambertan77"},"content":"        throw new BobException(\"Please choose between creating a todo, deadline or event!\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"ambertan77"},"content":"     * Executes the \"create\" command.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"ambertan77"},"content":"     * @return A string containing the information of the newly created task.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"ambertan77"},"content":"    public String execute(String input) throws BobException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"ambertan77"},"content":"        Task task \u003d createTask(input); // call helper method to create the task","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"ambertan77"},"content":"        tasks.add(task);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"ambertan77"},"content":"        try {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"ambertan77"},"content":"            this.storage.appendToFile(filePath, task);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"ambertan77"},"content":"        } catch (BobException e) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"ambertan77"},"content":"            return \"Unable to write to file: \" + e.getMessage();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"ambertan77"},"content":"        String outputForCreate \u003d \"\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"ambertan77"},"content":"        outputForCreate \u003d outputForCreate + tasks.get(tasks.getCount()).toString();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"ambertan77"},"content":"        tasks.incrementCount();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"ambertan77"},"content":"        outputForCreate \u003d outputForCreate + \"\\nNow you have \" + tasks.getCount() + \" tasks in the list.\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"ambertan77"},"content":"        return CREATE_HEADER + outputForCreate;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"ambertan77"},"content":"}","lastModifiedDate":"2025-02-14","isFullCredit":false}],"authorContributionMap":{"ambertan77":219}},{"path":"src/main/java/bob/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ambertan77"},"content":"package bob.commands;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ambertan77"},"content":"// This class is adapted from the package structure in:","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ambertan77"},"content":"// https://github.com/juneha1120/ip/tree/master/src/main/java/chillguy/commands.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ambertan77"},"content":"// The package structure and the OOP logic (related to commands in Parser.java) are inspired by the above repository,","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ambertan77"},"content":"// but the methods and logic within this class were created independently.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ambertan77"},"content":"import bob.BobException;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ambertan77"},"content":"import bob.Storage;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ambertan77"},"content":"import bob.TaskList;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ambertan77"},"content":"import bob.task.Task;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ambertan77"},"content":"/**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ambertan77"},"content":" * Represents a DeleteCommand that has been called by the user.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ambertan77"},"content":" */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ambertan77"},"content":"public class DeleteCommand {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ambertan77"},"content":"     * An immutable string containing the header to be printed when the delete command is used.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ambertan77"},"content":"    public static final String DELETE_HEADER \u003d \"Noted! I have deleted this task:\\n\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ambertan77"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ambertan77"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ambertan77"},"content":"    private String filePath;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ambertan77"},"content":"     * Creates a new instance of a \"delete\" command.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ambertan77"},"content":"     * @param tasks List of tasks the user has input.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ambertan77"},"content":"     * @param storage Where tasks created in all instances of the bot are stored.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ambertan77"},"content":"     * @param filePath File path of the file containing information about the task list.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ambertan77"},"content":"    public DeleteCommand(TaskList tasks, Storage storage, String filePath) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ambertan77"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ambertan77"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ambertan77"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ambertan77"},"content":"     * Executes the \"delete\" command.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ambertan77"},"content":"     * @return A string containing the information of the deleted task.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ambertan77"},"content":"    public String execute(String input) throws BobException {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ambertan77"},"content":"        String outputForDelete \u003d DELETE_HEADER;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ambertan77"},"content":"        int indexToDelete \u003d Integer.valueOf(input.substring(7));","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ambertan77"},"content":"        indexToDelete--;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ambertan77"},"content":"        try {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ambertan77"},"content":"            Task taskToDelete \u003d tasks.get(indexToDelete);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ambertan77"},"content":"            outputForDelete \u003d outputForDelete + taskToDelete.toString() + \"\\n\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ambertan77"},"content":"            tasks.remove(taskToDelete);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ambertan77"},"content":"            tasks.decrementCount();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ambertan77"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ambertan77"},"content":"            throw new BobException(\"Please provide a number that is smaller than the number of items in the list.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ambertan77"},"content":"        try {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ambertan77"},"content":"            Task firstTask \u003d tasks.get(0);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ambertan77"},"content":"            storage.writeToFile(filePath, firstTask);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ambertan77"},"content":"            for (int i \u003d 1; i \u003c tasks.getCount(); i++) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ambertan77"},"content":"                Task task \u003d tasks.get(i);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ambertan77"},"content":"                if (storage.getIsNewFile()) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ambertan77"},"content":"                    storage.writeToFile(filePath, task);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ambertan77"},"content":"                    storage.setIsNewFile(false);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ambertan77"},"content":"                } else {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ambertan77"},"content":"                    storage.appendToFile(filePath, task);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ambertan77"},"content":"                }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ambertan77"},"content":"            }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ambertan77"},"content":"        } catch (BobException e) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ambertan77"},"content":"            return \"Unable to write to file.\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ambertan77"},"content":"        return outputForDelete + \"Now you have \" + tasks.getCount() + \" tasks in the list.\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ambertan77"},"content":"}","lastModifiedDate":"2025-02-14","isFullCredit":false}],"authorContributionMap":{"ambertan77":77}},{"path":"src/main/java/bob/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ambertan77"},"content":"package bob.commands;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ambertan77"},"content":"// This class is adapted from the package structure in:","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ambertan77"},"content":"// https://github.com/juneha1120/ip/tree/master/src/main/java/chillguy/commands.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ambertan77"},"content":"// The package structure and the OOP logic (related to commands in Parser.java) are inspired by the above repository,","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ambertan77"},"content":"// but the methods and logic within this class were created independently.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ambertan77"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ambertan77"},"content":"import bob.TaskList;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ambertan77"},"content":"import bob.task.Task;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ambertan77"},"content":"/**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ambertan77"},"content":" * Represents a FindCommand that has been called by the user.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ambertan77"},"content":" */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ambertan77"},"content":"public class FindCommand {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ambertan77"},"content":"     * An immutable string containing the header to be printed when the find command is used.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ambertan77"},"content":"    public static final String FIND_HEADER \u003d \"Here are the tasks that match your search key:\\n\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ambertan77"},"content":"     * An immutable string containing the message to user that there have been no matches found.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ambertan77"},"content":"    public static final String NO_MATCHES_FOUND \u003d \"No matches to your search key.\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ambertan77"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ambertan77"},"content":"     * Creates a new instance of a \"find\" command.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ambertan77"},"content":"     * @param tasks List of tasks the user has input.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ambertan77"},"content":"    public FindCommand(TaskList tasks) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ambertan77"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ambertan77"},"content":"     * Executes the \"find\" command.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ambertan77"},"content":"     * @return A string containing the search key.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ambertan77"},"content":"    public String execute(String input) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ambertan77"},"content":"        String key \u003d input.substring(5);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ambertan77"},"content":"        ArrayList\u003cTask\u003e matches \u003d tasks.find(key);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ambertan77"},"content":"        if (matches.isEmpty()) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ambertan77"},"content":"            return NO_MATCHES_FOUND;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ambertan77"},"content":"        } else {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ambertan77"},"content":"            // print tasks","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ambertan77"},"content":"            String outputForFind \u003d \"\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ambertan77"},"content":"            for (int j \u003d 0; j \u003c matches.size(); j++) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ambertan77"},"content":"                int index \u003d j + 1;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ambertan77"},"content":"                if (j \u003d\u003d matches.size() - 1) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ambertan77"},"content":"                    outputForFind \u003d outputForFind + index + \". \" + matches.get(j).toString();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ambertan77"},"content":"                } else {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ambertan77"},"content":"                    outputForFind \u003d outputForFind + index + \". \" + matches.get(j).toString() + \"\\n\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ambertan77"},"content":"                }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ambertan77"},"content":"            }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ambertan77"},"content":"            return FIND_HEADER + outputForFind;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ambertan77"},"content":"}","lastModifiedDate":"2025-02-14","isFullCredit":false}],"authorContributionMap":{"ambertan77":64}},{"path":"src/main/java/bob/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ambertan77"},"content":"package bob.commands;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ambertan77"},"content":"// This class is adapted from the package structure in:","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ambertan77"},"content":"// https://github.com/juneha1120/ip/tree/master/src/main/java/chillguy/commands.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ambertan77"},"content":"// The package structure and the OOP logic (related to commands in Parser.java) are inspired by the above repository,","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ambertan77"},"content":"// but the methods and logic within this class were created independently.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ambertan77"},"content":"import bob.TaskList;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ambertan77"},"content":"/**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ambertan77"},"content":" * Represents a ListCommand that has been called by the user.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ambertan77"},"content":" */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ambertan77"},"content":"public class ListCommand {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ambertan77"},"content":"     * An immutable string containing the header to be printed when the list command is used.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ambertan77"},"content":"    public static final String LIST_HEADER \u003d \"Here are the tasks currently in your list:\\n\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ambertan77"},"content":"     * An immutable string informing the user that there are no items in the task list.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ambertan77"},"content":"    public static final String NO_ITEMS_RESPONSE \u003d \"No tasks in list currently. Let\u0027s add one now!\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ambertan77"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ambertan77"},"content":"     * Creates a new instance of a \"list\" command.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ambertan77"},"content":"     * @param tasks List of tasks the user has input.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ambertan77"},"content":"    public ListCommand(TaskList tasks) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ambertan77"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ambertan77"},"content":"     * Executes the \"list\" command by printing all the tasks in the task list.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ambertan77"},"content":"     * @return A string containing the information of all the tasks in list.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ambertan77"},"content":"    public String execute() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ambertan77"},"content":"        if (tasks.getCount() \u003d\u003d 0) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ambertan77"},"content":"            return NO_ITEMS_RESPONSE;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ambertan77"},"content":"        } else {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ambertan77"},"content":"            String allTasks \u003d \"\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ambertan77"},"content":"            for (int j \u003d 0; j \u003c tasks.getCount() - 1; j++) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ambertan77"},"content":"                int index \u003d j + 1;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ambertan77"},"content":"                allTasks \u003d allTasks + index + \". \" + tasks.get(j).toString() + \"\\n\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ambertan77"},"content":"            }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ambertan77"},"content":"            allTasks \u003d allTasks + tasks.getCount() + \". \" + tasks.get(tasks.getCount() - 1).toString();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ambertan77"},"content":"            return LIST_HEADER + allTasks;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ambertan77"},"content":"}","lastModifiedDate":"2025-02-14","isFullCredit":false}],"authorContributionMap":{"ambertan77":54}},{"path":"src/main/java/bob/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ambertan77"},"content":"package bob.commands;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ambertan77"},"content":"// This class is adapted from the package structure in:","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ambertan77"},"content":"// https://github.com/juneha1120/ip/tree/master/src/main/java/chillguy/commands.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ambertan77"},"content":"// The package structure and the OOP logic (related to commands in Parser.java) are inspired by the above repository,","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ambertan77"},"content":"// but the methods and logic within this class were created independently.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ambertan77"},"content":"import bob.BobException;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ambertan77"},"content":"import bob.Storage;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ambertan77"},"content":"import bob.TaskList;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ambertan77"},"content":"import bob.task.Task;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ambertan77"},"content":"/**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ambertan77"},"content":" * Represents a MarkCommand that has been called by the user.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ambertan77"},"content":" */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ambertan77"},"content":"public class MarkCommand {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ambertan77"},"content":"     * An immutable string containing the header to be printed when the mark command is used.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ambertan77"},"content":"    public static final String MARK_HEADER \u003d \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ambertan77"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ambertan77"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ambertan77"},"content":"    private String filePath;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ambertan77"},"content":"     * Creates a new instance of a \"mark\" command.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ambertan77"},"content":"     * @param tasks List of tasks the user has input.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ambertan77"},"content":"     * @param storage Where tasks created in all instances of the bot are stored.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ambertan77"},"content":"     * @param filePath File path of the file containing information about the task list.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ambertan77"},"content":"    public MarkCommand(TaskList tasks, Storage storage, String filePath) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ambertan77"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ambertan77"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ambertan77"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ambertan77"},"content":"     * Executes the \"mark\" command.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ambertan77"},"content":"     * @return A string containing the information of the marked task.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ambertan77"},"content":"    public String execute(String input) throws BobException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ambertan77"},"content":"        int indexToMark \u003d Integer.valueOf(input.substring(5));","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ambertan77"},"content":"        indexToMark--;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ambertan77"},"content":"        Task taskToMark;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ambertan77"},"content":"        try {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ambertan77"},"content":"            taskToMark \u003d tasks.get(indexToMark);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ambertan77"},"content":"            taskToMark.markAsDone();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ambertan77"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ambertan77"},"content":"            throw new BobException(\"The index provided must be less than the \"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ambertan77"},"content":"                    + \"number of tasks currently in the task list.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ambertan77"},"content":"        try {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ambertan77"},"content":"            Task firstTask \u003d tasks.get(0);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ambertan77"},"content":"            storage.writeToFile(filePath, firstTask);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ambertan77"},"content":"            for (int i \u003d 1; i \u003c tasks.getCount(); i++) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ambertan77"},"content":"                Task task \u003d tasks.get(i);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ambertan77"},"content":"                storage.appendToFile(filePath, task);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ambertan77"},"content":"            }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ambertan77"},"content":"        } catch (BobException e) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ambertan77"},"content":"            return \"Unable to write to file.\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ambertan77"},"content":"        return MARK_HEADER + taskToMark.toString();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ambertan77"},"content":"}","lastModifiedDate":"2025-02-14","isFullCredit":false}],"authorContributionMap":{"ambertan77":71}},{"path":"src/main/java/bob/commands/RemoveDuplicatesCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ambertan77"},"content":"package bob.commands;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ambertan77"},"content":"import bob.Bob;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ambertan77"},"content":"import bob.BobException;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ambertan77"},"content":"import bob.Storage;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ambertan77"},"content":"import bob.TaskList;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ambertan77"},"content":"import bob.task.Task;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ambertan77"},"content":"/**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ambertan77"},"content":" * Represents a RemoveDuplicateCommand that has been called by the user.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ambertan77"},"content":" */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ambertan77"},"content":"public class RemoveDuplicatesCommand {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ambertan77"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ambertan77"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ambertan77"},"content":"    private Bob bob;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ambertan77"},"content":"    private String filePath;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ambertan77"},"content":"    private boolean hasDuplicates;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ambertan77"},"content":"     * Creates a new instance of a \"remove duplicates\" command.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ambertan77"},"content":"     * @param tasks List of tasks the user has input.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ambertan77"},"content":"     * @param storage Where tasks created in all instances of the bot are stored.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ambertan77"},"content":"     * @param bob The current instance of the Bob chatbot.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ambertan77"},"content":"    public RemoveDuplicatesCommand(TaskList tasks, Storage storage, Bob bob) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ambertan77"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ambertan77"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ambertan77"},"content":"        this.bob \u003d bob;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ambertan77"},"content":"        this.filePath \u003d bob.getFilePath();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ambertan77"},"content":"        this.hasDuplicates \u003d tasks.detectDuplicates();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ambertan77"},"content":"     * Executes the \"remove duplicates\" command.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ambertan77"},"content":"     * @return A string notifying the user whether duplicates have been removed.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ambertan77"},"content":"    public String execute() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ambertan77"},"content":"        if (!hasDuplicates) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ambertan77"},"content":"            return \"No duplicates found.\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ambertan77"},"content":"        for (int i \u003d 0; i \u003c tasks.getCount(); i++) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ambertan77"},"content":"            for (int j \u003d i + 1; j \u003c tasks.getCount(); j++) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ambertan77"},"content":"                if (tasks.get(i).toString().equals(tasks.get(j).toString())) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ambertan77"},"content":"                    tasks.remove(tasks.get(j));","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ambertan77"},"content":"                    tasks.decrementCount();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ambertan77"},"content":"                }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ambertan77"},"content":"            }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ambertan77"},"content":"        tasks.resetDuplicates();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ambertan77"},"content":"        try {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ambertan77"},"content":"            Task firstTask \u003d tasks.get(0);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ambertan77"},"content":"            storage.writeToFile(filePath, firstTask);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ambertan77"},"content":"            for (int i \u003d 1; i \u003c tasks.getCount(); i++) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ambertan77"},"content":"                Task task \u003d tasks.get(i);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ambertan77"},"content":"                if (storage.getIsNewFile()) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ambertan77"},"content":"                    storage.writeToFile(filePath, task);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ambertan77"},"content":"                    storage.setIsNewFile(false);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ambertan77"},"content":"                } else {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ambertan77"},"content":"                    storage.appendToFile(filePath, task);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ambertan77"},"content":"                }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ambertan77"},"content":"            }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ambertan77"},"content":"        } catch (BobException e) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ambertan77"},"content":"            return \"Unable to write to file.\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ambertan77"},"content":"        return \"All duplicates have been removed.\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ambertan77"},"content":"}","lastModifiedDate":"2025-02-14","isFullCredit":false}],"authorContributionMap":{"ambertan77":74}},{"path":"src/main/java/bob/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ambertan77"},"content":"package bob.commands;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ambertan77"},"content":"// This class is adapted from the package structure in:","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ambertan77"},"content":"// https://github.com/juneha1120/ip/tree/master/src/main/java/chillguy/commands.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ambertan77"},"content":"// The package structure and the OOP logic (related to commands in Parser.java) are inspired by the above repository,","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ambertan77"},"content":"// but the methods and logic within this class were created independently.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ambertan77"},"content":"import bob.BobException;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ambertan77"},"content":"import bob.Storage;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ambertan77"},"content":"import bob.TaskList;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ambertan77"},"content":"import bob.task.Task;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ambertan77"},"content":"/**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ambertan77"},"content":" * Represents an UnmarkCommand that has been called by the user.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ambertan77"},"content":" */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ambertan77"},"content":"public class UnmarkCommand {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ambertan77"},"content":"     * An immutable string containing the header to be printed when the unmark command is used.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ambertan77"},"content":"    public static final String UNMARK_HEADER \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ambertan77"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ambertan77"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ambertan77"},"content":"    private String filePath;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ambertan77"},"content":"     * Creates a new instance of an \"unmark\" command.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ambertan77"},"content":"     * @param tasks List of tasks the user has input.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ambertan77"},"content":"     * @param storage Where tasks created in all instances of the bot are stored.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ambertan77"},"content":"     * @param filePath File path of the file containing information about the task list.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ambertan77"},"content":"    public UnmarkCommand(TaskList tasks, Storage storage, String filePath) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ambertan77"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ambertan77"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ambertan77"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ambertan77"},"content":"     * Executes the \"unmark\" command.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ambertan77"},"content":"     * @return A string containing the information of the unmarked task.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ambertan77"},"content":"    public String execute(String input) throws BobException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ambertan77"},"content":"        int indexToUnmark \u003d Integer.valueOf(input.substring(7));","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ambertan77"},"content":"        indexToUnmark--;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ambertan77"},"content":"        Task taskToUnmark;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ambertan77"},"content":"        try {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ambertan77"},"content":"            taskToUnmark \u003d tasks.get(indexToUnmark);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ambertan77"},"content":"            taskToUnmark.markAsUndone();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ambertan77"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ambertan77"},"content":"            throw new BobException(\"The index provided must be less than the \"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ambertan77"},"content":"                    + \"number of tasks currently in the task list.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ambertan77"},"content":"        try {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ambertan77"},"content":"            Task firstTask \u003d tasks.get(0);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ambertan77"},"content":"            storage.writeToFile(filePath, firstTask);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ambertan77"},"content":"            for (int i \u003d 1; i \u003c tasks.getCount(); i++) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ambertan77"},"content":"                Task task \u003d tasks.get(i);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ambertan77"},"content":"                storage.appendToFile(filePath, task);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ambertan77"},"content":"            }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ambertan77"},"content":"        } catch (BobException e) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ambertan77"},"content":"            return \"Unable to write to file.\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ambertan77"},"content":"        return UNMARK_HEADER + taskToUnmark.toString();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ambertan77"},"content":"}","lastModifiedDate":"2025-02-14","isFullCredit":false}],"authorContributionMap":{"ambertan77":71}},{"path":"src/main/java/bob/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ambertan77"},"content":"package bob.gui;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ambertan77"},"content":"// code adapted from https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ambertan77"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ambertan77"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ambertan77"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ambertan77"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ambertan77"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ambertan77"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ambertan77"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ambertan77"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ambertan77"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ambertan77"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ambertan77"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ambertan77"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ambertan77"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ambertan77"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ambertan77"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ambertan77"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ambertan77"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ambertan77"},"content":"    @FXML","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ambertan77"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ambertan77"},"content":"    @FXML","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ambertan77"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ambertan77"},"content":"     * Creates a new dialog box in the graphic interface.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ambertan77"},"content":"     * @param text A string containing the message in dialog.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ambertan77"},"content":"     * @param img Image of either Bob or the user.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ambertan77"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ambertan77"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ambertan77"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ambertan77"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ambertan77"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ambertan77"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ambertan77"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ambertan77"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ambertan77"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ambertan77"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ambertan77"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ambertan77"},"content":"    private void flip() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ambertan77"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ambertan77"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ambertan77"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ambertan77"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ambertan77"},"content":"     * Creates a new DialogBox which represents the message sent by the user.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ambertan77"},"content":"     * @param text A string containing the message in dialog.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ambertan77"},"content":"     * @param img Image of the user.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ambertan77"},"content":"     * @return A new instance of DialogBox containing the text and image.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ambertan77"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ambertan77"},"content":"        assert text !\u003d null : \"user input should not be null\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ambertan77"},"content":"        assert img !\u003d null : \"user image should not be null\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ambertan77"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ambertan77"},"content":"     * Creates a new DialogBox which represents the message sent by Bob.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ambertan77"},"content":"     * @param text A string containing the message in dialog.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ambertan77"},"content":"     * @param img Image of Bob.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ambertan77"},"content":"     * @return A new instance of DialogBox containing the text and image.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ambertan77"},"content":"    public static DialogBox getBobDialog(String text, Image img) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ambertan77"},"content":"        assert text !\u003d null : \"Bob\u0027s response should not be null\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ambertan77"},"content":"        assert img !\u003d null : \"Bob\u0027s image should not be null\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ambertan77"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ambertan77"},"content":"        db.flip();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ambertan77"},"content":"        return db;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ambertan77"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"ambertan77":87}},{"path":"src/main/java/bob/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ambertan77"},"content":"package bob.gui;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ambertan77"},"content":"// code adapted from https://se-education.org/guides/tutorials/javaFxPart3.html","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ambertan77"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ambertan77"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ambertan77"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ambertan77"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ambertan77"},"content":"public class Launcher {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ambertan77"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ambertan77"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ambertan77"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"ambertan77":14}},{"path":"src/main/java/bob/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ambertan77"},"content":"package bob.gui;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ambertan77"},"content":"// code adapted from https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ambertan77"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ambertan77"},"content":"import bob.Bob;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ambertan77"},"content":"import bob.BobException;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ambertan77"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ambertan77"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ambertan77"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ambertan77"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ambertan77"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ambertan77"},"content":"/**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ambertan77"},"content":" * Main class used to start up the GUI for Bob.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ambertan77"},"content":" */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ambertan77"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ambertan77"},"content":"    private Bob bob \u003d new Bob(\"./data/tasks.txt\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ambertan77"},"content":"     * Starts up the GUI for Bob.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ambertan77"},"content":"     * @param stage the primary stage for this application, onto which the application scene can be set.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ambertan77"},"content":"     *     Applications may create other stages, if needed, but they will not be primary stages.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ambertan77"},"content":"     * @throws BobException If an error has occurred during execution of user\u0027s command.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ambertan77"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ambertan77"},"content":"    public void start(Stage stage) throws BobException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ambertan77"},"content":"        assert this.bob !\u003d null : \"Bob should be initialised before application is started\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ambertan77"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ambertan77"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ambertan77"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ambertan77"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ambertan77"},"content":"            stage.setTitle(\"Chat with Bob!\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ambertan77"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ambertan77"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBob(bob); // inject the Bob instance","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ambertan77"},"content":"            stage.show();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ambertan77"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().greet(bob);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ambertan77"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ambertan77"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ambertan77"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"ambertan77":47}},{"path":"src/main/java/bob/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ambertan77"},"content":"package bob.gui;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ambertan77"},"content":"// code adapted from https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ambertan77"},"content":"import bob.Bob;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ambertan77"},"content":"import bob.BobException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ambertan77"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ambertan77"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ambertan77"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ambertan77"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ambertan77"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ambertan77"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ambertan77"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ambertan77"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ambertan77"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ambertan77"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ambertan77"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ambertan77"},"content":"    @FXML","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ambertan77"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ambertan77"},"content":"    @FXML","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ambertan77"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ambertan77"},"content":"    @FXML","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ambertan77"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ambertan77"},"content":"    @FXML","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ambertan77"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ambertan77"},"content":"    private Bob bob;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ambertan77"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ambertan77"},"content":"    private Image bobImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/RoBob.png\"));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ambertan77"},"content":"    @FXML","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ambertan77"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ambertan77"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ambertan77"},"content":"     * Injects the Duke instance","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ambertan77"},"content":"    public void setBob(Bob b) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ambertan77"},"content":"        bob \u003d b;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ambertan77"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ambertan77"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ambertan77"},"content":"    @FXML","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ambertan77"},"content":"    private void handleUserInput() throws BobException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ambertan77"},"content":"        assert this.bob !\u003d null : \"Bob should be initialised before it can respond to the user\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ambertan77"},"content":"        assert userImage !\u003d null : \"image of the user cannot be null\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ambertan77"},"content":"        assert bobImage !\u003d null : \"image of the Bob cannot be null\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ambertan77"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ambertan77"},"content":"        String response \u003d bob.getResponse(input);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ambertan77"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ambertan77"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ambertan77"},"content":"                DialogBox.getBobDialog(response, bobImage)","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ambertan77"},"content":"        );","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ambertan77"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ambertan77"},"content":"      * Creates a dialog box containing greeting message, and appends it to","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ambertan77"},"content":"      * the dialog container.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ambertan77"},"content":"      *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ambertan77"},"content":"      * @throws BobException If an error has occurred during execution of user\u0027s command.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ambertan77"},"content":"      */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ambertan77"},"content":"    @FXML","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ambertan77"},"content":"    public void greet(Bob b) throws BobException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ambertan77"},"content":"        assert this.bob !\u003d null : \"Bob should be initialised before it can greet the user\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ambertan77"},"content":"        String greeting \u003d b.run();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ambertan77"},"content":"        assert greeting !\u003d null : \"Bob\u0027s greeting cannot be null\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ambertan77"},"content":"        assert bobImage !\u003d null : \"image of the Bob cannot be null\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ambertan77"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ambertan77"},"content":"                DialogBox.getBobDialog(greeting, bobImage)","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ambertan77"},"content":"        );","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ambertan77"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ambertan77"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"ambertan77":81}},{"path":"src/main/java/bob/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ambertan77"},"content":"package bob.task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ambertan77"},"content":"// solution below adapted from partial solution provided in course website","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ambertan77"},"content":"// https://nus-cs2103-ay2425s2.github.io/website/schedule/week2/project.html under A-Inheritance","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ambertan77"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ambertan77"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ambertan77"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ambertan77"},"content":" * Represents a Task with a deadline. A \u003ccode\u003eDeadline\u003c/code\u003e object corresponds to","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ambertan77"},"content":" * a Task represented by its description and its deadline.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ambertan77"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ambertan77"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ambertan77"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ambertan77"},"content":"     * Creates a new instance of a Deadline task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ambertan77"},"content":"     * @param description Description of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ambertan77"},"content":"     * @param deadline Deadline of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ambertan77"},"content":"    public Deadline(String description, LocalDateTime deadline) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ambertan77"},"content":"        super(description, Task.Type.DEADLINE);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ambertan77"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ambertan77"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ambertan77"},"content":"     * Includes the description and deadline of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ambertan77"},"content":"     * @return String representation of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ambertan77"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ambertan77"},"content":"    public String toString() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ambertan77"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.getDeadline() + \")\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ambertan77"},"content":"     * Returns the string representation of the type of task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ambertan77"},"content":"     * @return Letter representation of the type of task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ambertan77"},"content":"    @Override","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ambertan77"},"content":"    public String getType() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ambertan77"},"content":"        return \"D\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ambertan77"},"content":"     * Returns the description of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ambertan77"},"content":"     * @return Description of task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ambertan77"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ambertan77"},"content":"        return this.description;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ambertan77"},"content":"    // code adapted from https://www.geeksforgeeks.org/java-time-localdatetime-class-in-java/ (Example 3)","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ambertan77"},"content":"     * Returns a string showing the deadline of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ambertan77"},"content":"     * The deadline is shown in the format: date/month/year, hour:minute.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ambertan77"},"content":"     * @return Deadline of task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ambertan77"},"content":"    public String getDeadline() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ambertan77"},"content":"        assert this.deadline !\u003d null : \"the deadline of this task must be indicated\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ambertan77"},"content":"        DateTimeFormatter outputStringFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy, HH:mm\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ambertan77"},"content":"        return this.deadline.format(outputStringFormat);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ambertan77"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"ambertan77":71}},{"path":"src/main/java/bob/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ambertan77"},"content":"package bob.task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ambertan77"},"content":"// solution below adapted from partial solution provided in course website","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ambertan77"},"content":"// https://nus-cs2103-ay2425s2.github.io/website/schedule/week2/project.html under A-Inheritance","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ambertan77"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ambertan77"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ambertan77"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ambertan77"},"content":" * Represents a Task with a start and end time. A \u003ccode\u003eEvent\u003c/code\u003e object corresponds to","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ambertan77"},"content":" * a Task represented by its description, its start time and its end time.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ambertan77"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ambertan77"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ambertan77"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ambertan77"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ambertan77"},"content":"    private DateTimeFormatter outputStringFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy, HH:mm\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ambertan77"},"content":"     * Creates a new instance of an Event task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ambertan77"},"content":"     * @param description Description of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ambertan77"},"content":"     * @param from Start time of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ambertan77"},"content":"     * @param to End time of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ambertan77"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ambertan77"},"content":"        super(description, Task.Type.EVENT);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ambertan77"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ambertan77"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ambertan77"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ambertan77"},"content":"     * Includes the description, start and end time of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ambertan77"},"content":"     * @return String representation of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ambertan77"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ambertan77"},"content":"    public String toString() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ambertan77"},"content":"        return \"[E]\" + super.toString() + \" (from \" + this.getFrom() + \" to \" + this.getTo() + \")\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ambertan77"},"content":"     * Returns the string representation of the type of task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ambertan77"},"content":"     * @return Letter representation of the type of task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ambertan77"},"content":"    @Override","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ambertan77"},"content":"    public String getType() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ambertan77"},"content":"        return \"E\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ambertan77"},"content":"     * Returns the description of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ambertan77"},"content":"     * @return Description of task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ambertan77"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ambertan77"},"content":"        return this.description;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ambertan77"},"content":"    // code adapted from https://www.geeksforgeeks.org/java-time-localdatetime-class-in-java/ (Example 3)","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ambertan77"},"content":"     * Returns a string showing the start time of the event.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ambertan77"},"content":"     * The deadline is shown in the format: date/month/year, hour:minute.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ambertan77"},"content":"     * @return Start time of event.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ambertan77"},"content":"    public String getFrom() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ambertan77"},"content":"        assert this.from !\u003d null : \"the starting time of this event must be indicated\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ambertan77"},"content":"        return this.from.format(outputStringFormat);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ambertan77"},"content":"    // code adapted from https://www.geeksforgeeks.org/java-time-localdatetime-class-in-java/ (Example 3)","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ambertan77"},"content":"     * Returns a string showing the end time of the event.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ambertan77"},"content":"     * The deadline is shown in the format: date/month/year, hour:minute.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ambertan77"},"content":"     * @return End time of event.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ambertan77"},"content":"    public String getTo() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ambertan77"},"content":"        assert this.to !\u003d null : \"the ending time of this event must be indicated\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ambertan77"},"content":"        return this.to.format(outputStringFormat);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ambertan77"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"ambertan77":85}},{"path":"src/main/java/bob/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ambertan77"},"content":"package bob.task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ambertan77"},"content":"// solution below adapted from partial solution provided in course website","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ambertan77"},"content":"// https://nus-cs2103-ay2425s2.github.io/website/schedule/week2/project.html under A-Classes","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ambertan77"},"content":"import bob.BobException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ambertan77"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ambertan77"},"content":" * Represents a Task that must be of type Deadline, Event or Todo. A \u003ccode\u003eTask\u003c/code\u003e object","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ambertan77"},"content":" * corresponds to a Task characterised by its type, description and whether it has been done.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ambertan77"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ambertan77"},"content":"public class Task {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ambertan77"},"content":"    protected String description;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ambertan77"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ambertan77"},"content":"     * Specifies the types of tasks supported.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ambertan77"},"content":"    public enum Type {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ambertan77"},"content":"        TODO, DEADLINE, EVENT","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ambertan77"},"content":"    protected Type type;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ambertan77"},"content":"     * Creates a new instance of a Task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ambertan77"},"content":"     * @param description Description of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ambertan77"},"content":"     * @param type Type of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ambertan77"},"content":"    public Task(String description, Type type) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ambertan77"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ambertan77"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ambertan77"},"content":"        this.type \u003d type;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ambertan77"},"content":"     * Returns the string representation of the task\u0027s status.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ambertan77"},"content":"     * @return String representation of the task\u0027s status.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ambertan77"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ambertan77"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ambertan77"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ambertan77"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ambertan77"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ambertan77"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ambertan77"},"content":"    public void markAsUndone() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ambertan77"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ambertan77"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ambertan77"},"content":"     * Includes the status and description of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ambertan77"},"content":"     * @return String representation of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ambertan77"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ambertan77"},"content":"    public String toString() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ambertan77"},"content":"        return getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ambertan77"},"content":"     * Returns the string representation of the type of task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ambertan77"},"content":"     * If the type is neither of the supported types, an exception is thrown.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ambertan77"},"content":"     * @return Letter representation of the type of task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ambertan77"},"content":"     * @throws BobException If type is not equal to Type.DEADLINE, Type.EVENT or Type.TODO.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ambertan77"},"content":"    public String getType() throws BobException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ambertan77"},"content":"        if (type \u003d\u003d Type.DEADLINE) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ambertan77"},"content":"            return \"D\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ambertan77"},"content":"        } else if (type \u003d\u003d Type.EVENT) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ambertan77"},"content":"            return \"E\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ambertan77"},"content":"        } else if (type \u003d\u003d Type.TODO) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ambertan77"},"content":"            return \"T\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ambertan77"},"content":"        } else {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ambertan77"},"content":"            throw new BobException(\"The type of task is not supported by Bob.\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ambertan77"},"content":"     * Returns the integer representation of the status of task,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ambertan77"},"content":"     * where 1 means the task is done, and 0 meaning the task is undone.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ambertan77"},"content":"     * @return Integer representation of the status of task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ambertan77"},"content":"    public int getStatus() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ambertan77"},"content":"        if (isDone) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ambertan77"},"content":"            return 1;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ambertan77"},"content":"        } else {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ambertan77"},"content":"            return 0;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ambertan77"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"ambertan77":104}},{"path":"src/main/java/bob/task/Todos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ambertan77"},"content":"package bob.task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ambertan77"},"content":"// solution below adapted from partial solution provided in course website","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ambertan77"},"content":"// https://nus-cs2103-ay2425s2.github.io/website/schedule/week2/project.html under A-Inheritance","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ambertan77"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ambertan77"},"content":" * Represents a Task with no start or end time. A \u003ccode\u003eTodos\u003c/code\u003e object corresponds to","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ambertan77"},"content":" * a Task represented by only its description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ambertan77"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ambertan77"},"content":"public class Todos extends Task {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ambertan77"},"content":"     * Creates a new instance of a Todo task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ambertan77"},"content":"     * @param description Description of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ambertan77"},"content":"    public Todos(String description) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ambertan77"},"content":"        super(description, Type.TODO);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ambertan77"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ambertan77"},"content":"     * Includes the description of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ambertan77"},"content":"     * @return String representation of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ambertan77"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ambertan77"},"content":"    public String toString() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ambertan77"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ambertan77"},"content":"     * Returns the string representation of the type of task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ambertan77"},"content":"     * @return Letter representation of the type of task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ambertan77"},"content":"    @Override","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ambertan77"},"content":"    public String getType() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ambertan77"},"content":"        return \"T\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ambertan77"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ambertan77"},"content":"     * Returns the description of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ambertan77"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ambertan77"},"content":"     * @return Description of task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ambertan77"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ambertan77"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ambertan77"},"content":"        return this.description;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ambertan77"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"ambertan77":50}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ambertan77"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ambertan77"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ambertan77"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ambertan77"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ambertan77"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ambertan77"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ambertan77"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ambertan77"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ambertan77"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ambertan77"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ambertan77"},"content":"         spacing\u003d\"5.0\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ambertan77"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ambertan77"},"content":"         xmlns\u003d\"http://javafx.com/javafx/23.0.1\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ambertan77"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ambertan77"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ambertan77"},"content":"      \u003cVBox maxHeight\u003d\"-Infinity\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ambertan77"},"content":"            style\u003d\"-fx-background-color: darkseagreen; -fx-border-color: black; -fx-border-image-width: 0.5;\"\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ambertan77"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ambertan77"},"content":"              \u003cLabel fx:id\u003d\"dialog\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ambertan77"},"content":"                     minHeight\u003d\"-Infinity\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ambertan77"},"content":"                     text\u003d\"Label\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ambertan77"},"content":"                     wrapText\u003d\"true\"\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ambertan77"},"content":"               \u003copaqueInsets\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ambertan77"},"content":"                  \u003cInsets /\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ambertan77"},"content":"               \u003c/opaqueInsets\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ambertan77"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ambertan77"},"content":"                  \u003cInsets bottom\u003d\"2.0\" left\u003d\"2.0\" right\u003d\"2.0\" top\u003d\"2.0\" /\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ambertan77"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ambertan77"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ambertan77"},"content":"         \u003c/children\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ambertan77"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ambertan77"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ambertan77"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ambertan77"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ambertan77"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ambertan77"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ambertan77"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"ambertan77":39}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ambertan77"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ambertan77"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ambertan77"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ambertan77"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ambertan77"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ambertan77"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ambertan77"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ambertan77"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ambertan77"},"content":"            maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ambertan77"},"content":"            minHeight\u003d\"-Infinity\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ambertan77"},"content":"            minWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ambertan77"},"content":"            prefHeight\u003d\"680.0\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ambertan77"},"content":"            prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ambertan77"},"content":"            xmlns\u003d\"http://javafx.com/javafx/23.0.1\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ambertan77"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ambertan77"},"content":"            fx:controller\u003d\"bob.gui.MainWindow\"\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ambertan77"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ambertan77"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ambertan77"},"content":"                   layoutY\u003d\"638.0\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ambertan77"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ambertan77"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ambertan77"},"content":"                   prefWidth\u003d\"324.0\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ambertan77"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ambertan77"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ambertan77"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ambertan77"},"content":"                layoutY\u003d\"638.0\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ambertan77"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ambertan77"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ambertan77"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ambertan77"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ambertan77"},"content":"                text\u003d\"SEND\"\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ambertan77"},"content":"         \u003cfont\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ambertan77"},"content":"            \u003cFont name\u003d\"System Bold\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ambertan77"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ambertan77"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ambertan77"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ambertan77"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ambertan77"},"content":"                    prefHeight\u003d\"637.0\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ambertan77"},"content":"                    prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ambertan77"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ambertan77"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ambertan77"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ambertan77"},"content":"                      prefHeight\u003d\"552.0\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ambertan77"},"content":"                      prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ambertan77"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ambertan77"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ambertan77"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ambertan77"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"ambertan77":50}},{"path":"src/test/java/bob/CreateCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ambertan77"},"content":"package bob;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ambertan77"},"content":"// all methods inspired by https://nus-cs2103-ay2425s2.github.io/website/schedule/week3/topics.html#w3-7-unit-testing","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ambertan77"},"content":"// under section W3.7d","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ambertan77"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ambertan77"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ambertan77"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ambertan77"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ambertan77"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ambertan77"},"content":"import java.time.Month;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ambertan77"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ambertan77"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ambertan77"},"content":"import bob.commands.CreateCommand;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ambertan77"},"content":"import bob.task.Deadline;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ambertan77"},"content":"import bob.task.Task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ambertan77"},"content":"public class CreateCommandTest {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ambertan77"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ambertan77"},"content":"    public void createDeadlineTask_success() throws Exception {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ambertan77"},"content":"        LocalDateTime deadline \u003d LocalDateTime.of(2025, Month.JANUARY, 25, 23, 59);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ambertan77"},"content":"        Deadline expected \u003d new Deadline(\"assignment 1\", deadline);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ambertan77"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e(100));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ambertan77"},"content":"        CreateCommand command \u003d new CreateCommand(tasks, new Storage(tasks), \"./data/tasks.txt\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ambertan77"},"content":"        assertEquals(expected.toString(),","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ambertan77"},"content":"                command.createDeadlineTask(\"deadline assignment 1 /by 25-01-2025 23:59\").toString());","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ambertan77"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ambertan77"},"content":"    public void createDeadlineTask_noDetails_exceptionThrown() throws Exception {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ambertan77"},"content":"        LocalDateTime deadline \u003d LocalDateTime.of(2025, Month.JANUARY, 25, 23, 59);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ambertan77"},"content":"        Deadline expected \u003d new Deadline(\"assignment 1\", deadline);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ambertan77"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e(100));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ambertan77"},"content":"        CreateCommand command \u003d new CreateCommand(tasks, new Storage(tasks), \"./data/tasks.txt\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ambertan77"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ambertan77"},"content":"            assertEquals(expected, command.createDeadlineTask(\"deadline\"));","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ambertan77"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ambertan77"},"content":"        } catch (BobException e) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ambertan77"},"content":"            assertEquals(\"I can\u0027t create tasks with no descriptions :(\", e.getMessage());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ambertan77"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ambertan77"},"content":"    public void createDeadlineTask_noDescription_exceptionThrown() throws Exception {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ambertan77"},"content":"        LocalDateTime deadline \u003d LocalDateTime.of(2025, Month.JANUARY, 25, 23, 59);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ambertan77"},"content":"        Deadline expected \u003d new Deadline(\"assignment 1\", deadline);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ambertan77"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e(100));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ambertan77"},"content":"        CreateCommand command \u003d new CreateCommand(tasks, new Storage(tasks), \"./data/tasks.txt\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ambertan77"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ambertan77"},"content":"            assertEquals(expected, command.createDeadlineTask(\"deadline  /by 25-01-2025 23:59\"));","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ambertan77"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ambertan77"},"content":"        } catch (BobException e) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ambertan77"},"content":"            assertEquals(\"I can\u0027t create tasks with no descriptions :(\", e.getMessage());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ambertan77"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ambertan77"},"content":"    public void createDeadlineTask_noDeadline_exceptionThrown() throws Exception {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ambertan77"},"content":"        LocalDateTime deadline \u003d LocalDateTime.of(2025, Month.JANUARY, 25, 23, 59);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ambertan77"},"content":"        Deadline expected \u003d new Deadline(\"assignment 1\", deadline);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ambertan77"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e(100));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ambertan77"},"content":"        CreateCommand command \u003d new CreateCommand(tasks, new Storage(tasks), \"./data/tasks.txt\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ambertan77"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ambertan77"},"content":"            assertEquals(expected, command.createDeadlineTask(\"deadline assignment 1\"));","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ambertan77"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ambertan77"},"content":"        } catch (BobException e) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ambertan77"},"content":"            String expectedErrorMessage \u003d \"Please add a deadline in the format: [description] /by [dd-mm-yyyy hh:mm]!\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ambertan77"},"content":"            assertEquals(expectedErrorMessage, e.getMessage());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ambertan77"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ambertan77"},"content":"    public void createDeadlineTask_noDeadlineAfterSlash_exceptionThrown() throws Exception {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ambertan77"},"content":"        LocalDateTime deadline \u003d LocalDateTime.of(2025, Month.JANUARY, 25, 23, 59);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ambertan77"},"content":"        Deadline expected \u003d new Deadline(\"assignment 1\", deadline);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ambertan77"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e(100));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ambertan77"},"content":"        CreateCommand command \u003d new CreateCommand(tasks, new Storage(tasks), \"./data/tasks.txt\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ambertan77"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ambertan77"},"content":"            assertEquals(expected, command.createDeadlineTask(\"deadline assignment 1 / by\"));","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ambertan77"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ambertan77"},"content":"        } catch (BobException e) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ambertan77"},"content":"            String expectedErrorMessage \u003d \"Please add a deadline in the format: [description] /by [dd-mm-yyyy hh:mm]!\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ambertan77"},"content":"            assertEquals(expectedErrorMessage, e.getMessage());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ambertan77"},"content":"    @Test","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ambertan77"},"content":"    public void createDeadlineTask_invalidDayInput_exceptionThrown() throws Exception {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        //@@author ambertan77-reused","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // code reused from https://stackoverflow.com/questions/40268446/junit-5-how-to-assert-an-exception-is-thrown","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // with minor modifications","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e(100));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        CreateCommand command \u003d new CreateCommand(tasks, new Storage(tasks), \"./data/tasks.txt\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Exception exception \u003d assertThrows(BobException.class, () -\u003e {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"            command.execute(\"deadline assignment 1 /by 40-02-2025 23:00\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d \"Please ensure that the date and time are valid and \"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"                + \"are added in the format \u0027dd-mm-yyyy hh:mm!\u0027\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String actualMessage \u003d exception.getMessage();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(actualMessage.contains(expectedMessage));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        //@@author","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ambertan77"},"content":"    @Test","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ambertan77"},"content":"    public void createDeadlineTask_invalidMonthInput_exceptionThrown() throws Exception {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        //@@author ambertan77-reused","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // code reused from https://stackoverflow.com/questions/40268446/junit-5-how-to-assert-an-exception-is-thrown","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // with minor modifications","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e(100));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        CreateCommand command \u003d new CreateCommand(tasks, new Storage(tasks), \"./data/tasks.txt\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Exception exception \u003d assertThrows(BobException.class, () -\u003e {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"            command.execute(\"deadline assignment 1 /by 10-16-2025 23:00\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d \"Please ensure that the date and time are valid and \"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"                + \"are added in the format \u0027dd-mm-yyyy hh:mm!\u0027\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String actualMessage \u003d exception.getMessage();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertTrue(actualMessage.contains(expectedMessage));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        //@@author","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ambertan77"},"content":"    @Test","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ambertan77"},"content":"    public void createDeadlineTask_invalidHourInput_exceptionThrown() throws Exception {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        //@@author ambertan77-reused","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // code reused from https://stackoverflow.com/questions/40268446/junit-5-how-to-assert-an-exception-is-thrown","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // with minor modifications","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e(100));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        CreateCommand command \u003d new CreateCommand(tasks, new Storage(tasks), \"./data/tasks.txt\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Exception exception \u003d assertThrows(BobException.class, () -\u003e {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"            command.execute(\"deadline assignment 1 /by 10-10-2025 25:00\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d \"Please ensure that the date and time are valid and \"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"                + \"are added in the format \u0027dd-mm-yyyy hh:mm!\u0027\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        String actualMessage \u003d exception.getMessage();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertTrue(actualMessage.contains(expectedMessage));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        //@@author","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ambertan77"},"content":"    @Test","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ambertan77"},"content":"    public void createDeadlineTask_invalidMinuteInput_exceptionThrown() throws Exception {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        //@@author ambertan77-reused","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // code reused from https://stackoverflow.com/questions/40268446/junit-5-how-to-assert-an-exception-is-thrown","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // with minor modifications","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e(100));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        CreateCommand command \u003d new CreateCommand(tasks, new Storage(tasks), \"./data/tasks.txt\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        Exception exception \u003d assertThrows(BobException.class, () -\u003e {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"            command.execute(\"deadline assignment 1 /by 10-10-2025 20:60\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d \"Please ensure that the date and time are valid and \"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"                + \"are added in the format \u0027dd-mm-yyyy hh:mm!\u0027\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        String actualMessage \u003d exception.getMessage();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertTrue(actualMessage.contains(expectedMessage));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        //@@author","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"ambertan77"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"ambertan77":106,"-":64}},{"path":"src/test/java/bob/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ambertan77"},"content":"package bob;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ambertan77"},"content":"// all methods inspired by https://nus-cs2103-ay2425s2.github.io/website/schedule/week3/topics.html#w3-7-unit-testing","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ambertan77"},"content":"// under section W3.7d","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ambertan77"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ambertan77"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ambertan77"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ambertan77"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ambertan77"},"content":"import bob.task.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ambertan77"},"content":"public class StorageTest {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ambertan77"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ambertan77"},"content":"    public void createTaskFromFile_createDeadlineTask_success() throws Exception {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ambertan77"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e(100));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ambertan77"},"content":"        Storage storage \u003d new Storage(tasks);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ambertan77"},"content":"        Task actual \u003d storage.createTaskFromFile(\"D / 0 / assignment 1 / 15/01/2025, 13:00\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ambertan77"},"content":"        String expected \u003d \"[D][ ] assignment 1 (by: 15/01/2025, 13:00)\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ambertan77"},"content":"        assertEquals(expected, actual.toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ambertan77"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ambertan77"},"content":"    public void createTaskFromFile_deadlineMarkAsDone_success() throws Exception {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ambertan77"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e(100));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ambertan77"},"content":"        Storage storage \u003d new Storage(tasks);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ambertan77"},"content":"        Task actual \u003d storage.createTaskFromFile(\"D / 1 / assignment 1 / 15/01/2025, 13:00\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ambertan77"},"content":"        String expected \u003d \"[D][X] assignment 1 (by: 15/01/2025, 13:00)\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ambertan77"},"content":"        assertEquals(expected, actual.toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ambertan77"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ambertan77"},"content":"    public void createTaskFromFile_createEventTask_success() throws Exception {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ambertan77"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e(100));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ambertan77"},"content":"        Storage storage \u003d new Storage(tasks);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ambertan77"},"content":"        Task actual \u003d storage.createTaskFromFile(\"E / 0 / consult / 19/01/2025, 16:30 / 19/01/2025, 17:30\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ambertan77"},"content":"        String expected \u003d \"[E][ ] consult (from 19/01/2025, 16:30 to 19/01/2025, 17:30)\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ambertan77"},"content":"        assertEquals(expected, actual.toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ambertan77"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ambertan77"},"content":"    public void createTaskFromFile_eventMarkAsDone_success() throws Exception {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ambertan77"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e(100));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ambertan77"},"content":"        Storage storage \u003d new Storage(tasks);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ambertan77"},"content":"        Task actual \u003d storage.createTaskFromFile(\"E / 1 / consult / 19/01/2025, 16:30 / 19/01/2025, 17:30\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ambertan77"},"content":"        String expected \u003d \"[E][X] consult (from 19/01/2025, 16:30 to 19/01/2025, 17:30)\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ambertan77"},"content":"        assertEquals(expected, actual.toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ambertan77"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ambertan77"},"content":"    public void createTaskFromFile_createTodoTask_success() throws Exception {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ambertan77"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e(100));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ambertan77"},"content":"        Storage storage \u003d new Storage(tasks);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ambertan77"},"content":"        Task actual \u003d storage.createTaskFromFile(\"T / 0 / exercise\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ambertan77"},"content":"        String expected \u003d \"[T][ ] exercise\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ambertan77"},"content":"        assertEquals(expected, actual.toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ambertan77"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ambertan77"},"content":"    public void createTaskFromFile_todoMarkAsDone_success() throws Exception {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ambertan77"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e(100));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ambertan77"},"content":"        Storage storage \u003d new Storage(tasks);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ambertan77"},"content":"        Task actual \u003d storage.createTaskFromFile(\"T / 1 / exercise\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ambertan77"},"content":"        String expected \u003d \"[T][X] exercise\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ambertan77"},"content":"        assertEquals(expected, actual.toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ambertan77"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ambertan77"},"content":"    public void createTaskFromFile_wrongDeadlineTaskFormat_exceptionThrown() throws Exception {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ambertan77"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e(100));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ambertan77"},"content":"        Storage storage \u003d new Storage(tasks);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ambertan77"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ambertan77"},"content":"            Task actual \u003d storage.createTaskFromFile(\"D / assignment 1 15/01/2025, 13:00\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ambertan77"},"content":"            assertEquals(\"[D][ ] assignment 1 (by: 15/01/2025, 13:00)\", actual.toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ambertan77"},"content":"            fail();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ambertan77"},"content":"        } catch (BobException e) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ambertan77"},"content":"            assertEquals(\"Ensure that the tasks in file are in the correct format.\", e.getMessage());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ambertan77"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ambertan77"},"content":"    public void createTaskFromFile_wrongDeadlineTimeFormat_exceptionThrown() throws Exception {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ambertan77"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e(100));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ambertan77"},"content":"        Storage storage \u003d new Storage(tasks);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ambertan77"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ambertan77"},"content":"            Task actual \u003d storage.createTaskFromFile(\"D / 0 / assignment 1 / 15-01-2025 13:00\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ambertan77"},"content":"            assertEquals(\"[D][ ] assignment 1 (by: 15/01/2025, 13:00)\", actual.toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ambertan77"},"content":"            fail();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ambertan77"},"content":"        } catch (BobException e) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ambertan77"},"content":"            assertEquals(\"Ensure that the deadline is given in the correct format.\", e.getMessage());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ambertan77"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ambertan77"},"content":"    public void createTaskFromFile_wrongEventTaskFormat_exceptionThrown() throws Exception {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ambertan77"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e(100));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ambertan77"},"content":"        Storage storage \u003d new Storage(tasks);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ambertan77"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ambertan77"},"content":"            Task actual \u003d storage.createTaskFromFile(\"E / consult, 19/01/2025, 16:30 to 19/01/2025, 17:30\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ambertan77"},"content":"            assertEquals(\"[E][ ] consult (from 19/01/2025, 16:30 to 19/01/2025, 17:30)\", actual.toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ambertan77"},"content":"            fail();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ambertan77"},"content":"        } catch (BobException e) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ambertan77"},"content":"            assertEquals(\"Ensure that the tasks in file are in the correct format.\", e.getMessage());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ambertan77"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ambertan77"},"content":"    public void createTaskFromFile_wrongEventTimeFormat_exceptionThrown() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ambertan77"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e(100));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ambertan77"},"content":"        Storage storage \u003d new Storage(tasks);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ambertan77"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ambertan77"},"content":"            Task actual \u003d storage.createTaskFromFile(\"E / 0 / consult / 19-01-2025 16:30 to 19-01-2025 17:30\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ambertan77"},"content":"            assertEquals(\"[E][ ] consult (from 19/01/2025, 16:30 to 19/01/2025, 17:30)\", actual.toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ambertan77"},"content":"            fail();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ambertan77"},"content":"        } catch (BobException e) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ambertan77"},"content":"            assertEquals(\"Ensure that the from and to fields are given in the correct format.\", e.getMessage());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ambertan77"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ambertan77"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ambertan77"},"content":"    public void createTaskFromFile_wrongTodoTaskFormat_exceptionThrown() throws Exception {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ambertan77"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e(100));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ambertan77"},"content":"        Storage storage \u003d new Storage(tasks);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ambertan77"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ambertan77"},"content":"            Task actual \u003d storage.createTaskFromFile(\"Todo: exercise\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ambertan77"},"content":"            assertEquals(\"[T][ ] exercise\", actual.toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ambertan77"},"content":"            fail();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ambertan77"},"content":"        } catch (BobException e) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ambertan77"},"content":"            assertEquals(\"Ensure that the tasks in file are in the correct format.\", e.getMessage());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ambertan77"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ambertan77"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ambertan77"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"ambertan77":134}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ambertan77"},"content":"todo read textbook","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ambertan77"},"content":"deadline return textbook /by next Tues","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ambertan77"},"content":"mark 1","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ambertan77"},"content":"event consultation /from Jan 7th 3pm /to 5pm","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ambertan77"},"content":"todo write reflections","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ambertan77"},"content":"mark 3","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ambertan77"},"content":"mark 4","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ambertan77"},"content":"unmark 3","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ambertan77"},"content":"todo write proposal","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ambertan77"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ambertan77"},"content":"deadline submit proposal /by Friday 2359","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ambertan77"},"content":"event volunteering /from Sat 10am /to 2pm","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ambertan77"},"content":"deadline do assignment /by tbc","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ambertan77"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ambertan77"},"content":"bye","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"ambertan77":15}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ambertan77"},"content":"java -classpath ../bin Bob \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"ambertan77":1,"-":37}}]
