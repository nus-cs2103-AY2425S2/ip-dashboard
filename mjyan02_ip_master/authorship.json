[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"mjyan02"},"content":"# Duke.Duke project template","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mjyan02"},"content":"1. After that, locate the `src/main/java/Duke.Duke.java` file, right-click it, and choose `Run Duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false}],"authorContributionMap":{"mjyan02":2,"-":24}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mjyan02"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mjyan02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mjyan02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mjyan02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mjyan02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mjyan02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mjyan02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mjyan02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mjyan02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mjyan02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mjyan02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mjyan02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mjyan02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mjyan02"},"content":"    mainClass.set(\"duke.DukeLauncher\")","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"mjyan02":16,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"mjyan02"},"content":"# Duke.Duke User Guide","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"mjyan02":1,"-":29}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mjyan02"},"content":"package duke;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mjyan02"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mjyan02"},"content":"import duke.task.Deadline;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mjyan02"},"content":"import duke.task.Event;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mjyan02"},"content":"import duke.task.Keywords;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mjyan02"},"content":"import duke.task.Todo;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mjyan02"},"content":"import duke.ui.Ui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mjyan02"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mjyan02"},"content":" * This is the Duke application.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mjyan02"},"content":" * Duke handles user inputs, executes commands, and manages task storage.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mjyan02"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mjyan02"},"content":"    private final Storage storage;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mjyan02"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mjyan02"},"content":"    private final Ui ui;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mjyan02"},"content":"     * Constructs a new Duke instance that initializes the UI, storage, and task list.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mjyan02"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mjyan02"},"content":"     * @param filePath The file path where tasks are stored on the hard disk.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mjyan02"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mjyan02"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mjyan02"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mjyan02"},"content":"        tasks \u003d new TaskList(storage.getTasks());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mjyan02"},"content":"     * Runs Duke and processes user inputs.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mjyan02"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mjyan02"},"content":"     * @param input The user input command.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mjyan02"},"content":"    public void run(String input) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mjyan02"},"content":"        try {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mjyan02"},"content":"            if (input.equalsIgnoreCase(\"help\")) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mjyan02"},"content":"                ui.welcomeMessage();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mjyan02"},"content":"                return;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mjyan02"},"content":"            }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mjyan02"},"content":"            Keywords keyword \u003d Parser.parseKeyword(input);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mjyan02"},"content":"            switch (keyword) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mjyan02"},"content":"                case LIST:","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mjyan02"},"content":"                    tasks.listTasks(ui);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mjyan02"},"content":"                    break;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mjyan02"},"content":"                case TODO:","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mjyan02"},"content":"                    String[] todoArgs \u003d input.split(\" \", 2);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mjyan02"},"content":"                    tasks.addTask(new Todo(todoArgs[1]), ui, storage);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mjyan02"},"content":"                    break;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mjyan02"},"content":"                case DEADLINE:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mjyan02"},"content":"                    String[] deadlineArgs \u003d input.split(\" /by \", 2);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mjyan02"},"content":"                    if (deadlineArgs.length \u003c 2) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mjyan02"},"content":"                        throw new DukeException(\"Please follow the input format: deadline \u003cdescription\u003e /by yyyy-MM-dd\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mjyan02"},"content":"                    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mjyan02"},"content":"                    tasks.addTask(new Deadline(deadlineArgs[0], deadlineArgs[1]), ui, storage);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mjyan02"},"content":"                    break;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mjyan02"},"content":"                case EVENT:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mjyan02"},"content":"                    String[] eventArgs \u003d input.split(\" /from \", 2);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mjyan02"},"content":"                    if (eventArgs.length \u003c 2 || !eventArgs[1].contains(\" /to \")) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mjyan02"},"content":"                        throw new DukeException(\"Please follow the input format: event \u003cdescription\u003e /from yyyy-MM-dd /to yyyy-MM-dd\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mjyan02"},"content":"                    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mjyan02"},"content":"                    String[] eventTimes \u003d eventArgs[1].split(\" /to \", 2);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mjyan02"},"content":"                    tasks.addTask(new Event(eventArgs[0], eventTimes[0], eventTimes[1]), ui, storage);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mjyan02"},"content":"                    break;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mjyan02"},"content":"                case DELETE:","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mjyan02"},"content":"                    String[] deleteArgs \u003d input.split(\" \", 2);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mjyan02"},"content":"                    tasks.deleteTask(Integer.parseInt(deleteArgs[1]) - 1, ui, storage);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mjyan02"},"content":"                    break;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mjyan02"},"content":"                case FIND:","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mjyan02"},"content":"                    String[] findArgs \u003d input.split(\" \", 2);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mjyan02"},"content":"                    tasks.findTasks(findArgs.length \u003e 1 ? findArgs[1] : \"\", ui);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mjyan02"},"content":"                    break;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mjyan02"},"content":"                case BYE:","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mjyan02"},"content":"                    ui.displayMessage(\"Bye! Hope you come back soon!!\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mjyan02"},"content":"                    break;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mjyan02"},"content":"                default:","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mjyan02"},"content":"                    throw new DukeException(\"I\u0027m sorry, but I don\u0027t recognize that command :(\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mjyan02"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mjyan02"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mjyan02"},"content":"            ui.displayError(\"Please enter a number!\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mjyan02"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mjyan02"},"content":"            ui.displayError(\"Please enter a valid task number!\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mjyan02"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mjyan02"},"content":"            ui.displayError(e.getMessage());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mjyan02"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mjyan02"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"mjyan02":95,"-":1}},{"path":"src/main/java/Duke/DukeLauncher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mjyan02"},"content":"package duke;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mjyan02"},"content":"import duke.ui.DukeGui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mjyan02"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mjyan02"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mjyan02"},"content":" * Launcher for Duke GUI.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mjyan02"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mjyan02"},"content":"public class DukeLauncher {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mjyan02"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mjyan02"},"content":"        Application.launch(DukeGui.class, args);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mjyan02"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"mjyan02":14}},{"path":"src/main/java/Duke/Exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mjyan02"},"content":"package duke.exceptions;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mjyan02"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mjyan02"},"content":" * Class for throwing exceptions specific to the Duke.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mjyan02"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mjyan02"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mjyan02"},"content":"     * Throws a new DukeException with the specified error message.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mjyan02"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mjyan02"},"content":"     * @param message The error message describing the exception.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mjyan02"},"content":"    public DukeException(String message) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mjyan02"},"content":"        super(message);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mjyan02"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"mjyan02":15}},{"path":"src/main/java/Duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mjyan02"},"content":"package duke;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mjyan02"},"content":"import duke.task.Keywords;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mjyan02"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mjyan02"},"content":" * Parses user input commands and returns the corresponding keyword.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mjyan02"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mjyan02"},"content":"public class Parser {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mjyan02"},"content":"     * Default constructor for a Parser instance.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mjyan02"},"content":"    public Parser() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mjyan02"},"content":"     * Parses the user\u0027s input command and returns the corresponding keyword.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mjyan02"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mjyan02"},"content":"     * @param input The user\u0027s raw input command.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mjyan02"},"content":"     * @return The corresponding keyword as an Enum.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mjyan02"},"content":"    public static Keywords parseKeyword(String input) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mjyan02"},"content":"        return Keywords.fromString(input.split(\" \")[0]);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mjyan02"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"mjyan02":24}},{"path":"src/main/java/Duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mjyan02"},"content":"package duke;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mjyan02"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mjyan02"},"content":"import duke.task.Task;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mjyan02"},"content":"import java.io.File;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mjyan02"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mjyan02"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mjyan02"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mjyan02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mjyan02"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mjyan02"},"content":" * Handles getting and saving tasks to a local file on the hard disk.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mjyan02"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mjyan02"},"content":"public class Storage {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mjyan02"},"content":"     * The file path where tasks are stored on the hard disk.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mjyan02"},"content":"    protected static String PATH_URL;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mjyan02"},"content":"     * Initializes the Storage with the specified file path.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mjyan02"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mjyan02"},"content":"     * @param filePath The file path where tasks will be stored locally.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mjyan02"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mjyan02"},"content":"        PATH_URL \u003d filePath;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mjyan02"},"content":"     * Saves the current list of tasks to the storage file.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mjyan02"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mjyan02"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mjyan02"},"content":"    public static void saveTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mjyan02"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mjyan02"},"content":"            File file \u003d new File(PATH_URL);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mjyan02"},"content":"            file.getParentFile().mkdirs(); // Check if directory exists, if not make new dir","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mjyan02"},"content":"            FileWriter w \u003d new FileWriter(file);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mjyan02"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mjyan02"},"content":"                w.write(task.toFile() + \"\\n\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mjyan02"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mjyan02"},"content":"            w.close();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mjyan02"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mjyan02"},"content":"            System.out.println(\"Error saving tasks!\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mjyan02"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mjyan02"},"content":"     * Gets tasks from the storage file.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mjyan02"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mjyan02"},"content":"     * @return An ArrayList containing the tasks from the storage file.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mjyan02"},"content":"    public static ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mjyan02"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mjyan02"},"content":"        File file \u003d new File(PATH_URL);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mjyan02"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mjyan02"},"content":"            return tasks; // Return empty list","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mjyan02"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mjyan02"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mjyan02"},"content":"            FileReader reader \u003d new FileReader(file);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mjyan02"},"content":"            int ch;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mjyan02"},"content":"            StringBuilder line \u003d new StringBuilder();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mjyan02"},"content":"            while ((ch \u003d reader.read()) !\u003d -1) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mjyan02"},"content":"                if (ch \u003d\u003d \u0027\\n\u0027) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mjyan02"},"content":"                    tasks.add(Task.fromFile(line.toString()));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mjyan02"},"content":"                    line.setLength(0);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mjyan02"},"content":"                } else {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mjyan02"},"content":"                    line.append((char) ch);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mjyan02"},"content":"                }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mjyan02"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mjyan02"},"content":"            // Add last line if no newline at end","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mjyan02"},"content":"            if (!line.isEmpty()) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mjyan02"},"content":"                tasks.add(Task.fromFile(line.toString()));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mjyan02"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mjyan02"},"content":"            reader.close();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mjyan02"},"content":"        } catch (IOException | DukeException e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mjyan02"},"content":"            System.out.println(\"Error getting tasks!\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mjyan02"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mjyan02"},"content":"        return tasks;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mjyan02"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"mjyan02":90}},{"path":"src/main/java/Duke/Task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mjyan02"},"content":"package duke.task;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mjyan02"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mjyan02"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mjyan02"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mjyan02"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mjyan02"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mjyan02"},"content":" * Represents a task with a description and a due date.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mjyan02"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mjyan02"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mjyan02"},"content":"     * The due date of the task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mjyan02"},"content":"    protected LocalDate by;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mjyan02"},"content":"     * Constructs a new Deadline task with the given description and due date.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mjyan02"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mjyan02"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mjyan02"},"content":"     * @param by The due date of the task in yyyy-MM-dd format.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mjyan02"},"content":"     * @throws DukeException If the date format is invalid.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mjyan02"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mjyan02"},"content":"        super(description);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mjyan02"},"content":"        try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mjyan02"},"content":"            this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mjyan02"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mjyan02"},"content":"            throw new DukeException(\"Invalid date format! Please use yyyy-MM-dd!\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mjyan02"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mjyan02"},"content":"     * Constructs a new Deadline task with the given description and due date.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mjyan02"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mjyan02"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mjyan02"},"content":"     * @param by The due date of the task in yyyy-MM-dd format.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mjyan02"},"content":"     * @param isDone Specifies if task is marked","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mjyan02"},"content":"     * @throws DukeException If the date format is invalid.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mjyan02"},"content":"    public Deadline(String description, String by, boolean isDone) throws DukeException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mjyan02"},"content":"        super(description, isDone);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mjyan02"},"content":"        try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mjyan02"},"content":"            this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mjyan02"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mjyan02"},"content":"            throw new DukeException(\"Invalid date format! Please use yyyy-MM-dd!\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mjyan02"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mjyan02"},"content":"     * Converts the task into a formatted string representation suitable for file storage on hard disk.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mjyan02"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mjyan02"},"content":"     * @return A string representation of the task for file storage.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mjyan02"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mjyan02"},"content":"    public String toFile() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mjyan02"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + by;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mjyan02"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mjyan02"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mjyan02"},"content":"     * @return The formatted string representation of the task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mjyan02"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mjyan02"},"content":"    public String toString() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mjyan02"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mjyan02"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"mjyan02":72}},{"path":"src/main/java/Duke/Task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mjyan02"},"content":"package duke.task;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mjyan02"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mjyan02"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mjyan02"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mjyan02"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mjyan02"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mjyan02"},"content":" * Represents an event task with a description, start date and end date.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mjyan02"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mjyan02"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mjyan02"},"content":"     * The start date of the event.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mjyan02"},"content":"    protected LocalDate from;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mjyan02"},"content":"     * The end date of the event.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mjyan02"},"content":"    protected LocalDate to;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mjyan02"},"content":"     * Constructs a new Event task with the given description, start date and end date.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mjyan02"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mjyan02"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mjyan02"},"content":"     * @param from The start date of the event in yyyy-MM-dd format.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mjyan02"},"content":"     * @param to The end date of the event in yyyy-MM-dd format.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mjyan02"},"content":"     * @throws DukeException If the date format is invalid.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mjyan02"},"content":"    public Event(String description, String from, String to) throws DukeException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mjyan02"},"content":"        super(description);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mjyan02"},"content":"        try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mjyan02"},"content":"            this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mjyan02"},"content":"            this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mjyan02"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mjyan02"},"content":"            throw new DukeException(\"Invalid date format! Please use yyyy-MM-dd!\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mjyan02"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mjyan02"},"content":"     * Constructs a new Event task with the given description, start date and end date.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mjyan02"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mjyan02"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mjyan02"},"content":"     * @param from The start date of the event in yyyy-MM-dd format.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mjyan02"},"content":"     * @param to The end date of the event in yyyy-MM-dd format.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mjyan02"},"content":"     * @param isDone Specifies if task is marked","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mjyan02"},"content":"     * @throws DukeException If the date format is invalid.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mjyan02"},"content":"    public Event(String description, String from, String to, boolean isDone) throws DukeException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mjyan02"},"content":"        super(description, isDone);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mjyan02"},"content":"        try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mjyan02"},"content":"            this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mjyan02"},"content":"            this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mjyan02"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mjyan02"},"content":"            throw new DukeException(\"Invalid date format! Please use yyyy-MM-dd!\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mjyan02"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mjyan02"},"content":"     * Converts the task into a formatted string representation suitable for file storage on hard disk.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mjyan02"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mjyan02"},"content":"     * @return A string representation of the task for file storage.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mjyan02"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mjyan02"},"content":"    public String toFile() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mjyan02"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + from + \" | \" + to;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mjyan02"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mjyan02"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mjyan02"},"content":"     * @return The formatted string representation of the task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mjyan02"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mjyan02"},"content":"    public String toString() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mjyan02"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) +","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mjyan02"},"content":"                \" to: \" + to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mjyan02"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"mjyan02":82}},{"path":"src/main/java/Duke/Task/Keywords.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mjyan02"},"content":"package duke.task;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mjyan02"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mjyan02"},"content":" * Enum representing different keywords for Duke.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mjyan02"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mjyan02"},"content":"public enum Keywords {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mjyan02"},"content":"     * Keyword for exiting Duke.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mjyan02"},"content":"    BYE,","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mjyan02"},"content":"     * Keyword for listing all tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mjyan02"},"content":"    LIST,","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mjyan02"},"content":"     * Keyword for marking a task as done.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mjyan02"},"content":"    MARK,","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mjyan02"},"content":"     * Keyword for unmarking a completed task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mjyan02"},"content":"    UNMARK,","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mjyan02"},"content":"     * Keyword for adding a new Todo task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mjyan02"},"content":"    TODO,","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mjyan02"},"content":"     * Keyword for adding a new Deadline task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mjyan02"},"content":"    DEADLINE,","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mjyan02"},"content":"     * Keyword for adding a new Event task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mjyan02"},"content":"    EVENT,","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mjyan02"},"content":"     * Keyword for deleting a task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mjyan02"},"content":"    DELETE,","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mjyan02"},"content":"  ","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mjyan02"},"content":"     * Keyword for finding a task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mjyan02"},"content":"    FIND,","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mjyan02"},"content":"     * Represents an unknown keyword.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mjyan02"},"content":"    UNKNOWN;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mjyan02"},"content":"     * Converts a string into the corresponding Keywords enum value.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mjyan02"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mjyan02"},"content":"     * @param kw The input string keyword.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mjyan02"},"content":"     * @return The corresponding Keywords enum value.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mjyan02"},"content":"    public static Keywords fromString(String kw) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mjyan02"},"content":"        try {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mjyan02"},"content":"            return Keywords.valueOf(kw.toUpperCase());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mjyan02"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mjyan02"},"content":"            return UNKNOWN; // Return UNKNOWN for unknown keywords","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mjyan02"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mjyan02"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"mjyan02":70}},{"path":"src/main/java/Duke/Task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mjyan02"},"content":"package duke.task;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mjyan02"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mjyan02"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mjyan02"},"content":" * Represents a generic task in Duke with a description and marked status.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mjyan02"},"content":" * This is an abstract class that serves as a base class for specific task types.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mjyan02"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mjyan02"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mjyan02"},"content":"     * The description of the task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mjyan02"},"content":"    protected String description;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mjyan02"},"content":"     * Indicates whether the task is completed.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mjyan02"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mjyan02"},"content":"     * Constructs a new Task with the specified description.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mjyan02"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mjyan02"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mjyan02"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mjyan02"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mjyan02"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mjyan02"},"content":"     * Constructs a new Task with the specified description.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mjyan02"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mjyan02"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mjyan02"},"content":"     * @param isDone Specifies if task is marked.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mjyan02"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mjyan02"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mjyan02"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mjyan02"},"content":"     * Checks if the task is completed.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mjyan02"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mjyan02"},"content":"     * @return \"X\" if the task is done, whitespace otherwise.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mjyan02"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mjyan02"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mjyan02"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mjyan02"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mjyan02"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mjyan02"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mjyan02"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mjyan02"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mjyan02"},"content":"     * Converts the task into a formatted string representation suitable for file storage on hard disk.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mjyan02"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mjyan02"},"content":"     * @return A string representation of the task for file storage.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mjyan02"},"content":"    public abstract String toFile();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mjyan02"},"content":"     * Creates a Task object from a formatted string read from the storage file on hard disk.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mjyan02"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mjyan02"},"content":"     * @param line The line of text representing a task in the storage file on hard disk.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mjyan02"},"content":"     * @return A Task object reconstructed from the file data, or null if the file is corrupted.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mjyan02"},"content":"     * @throws DukeException If an error occurs while parsing the task data.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mjyan02"},"content":"    public static Task fromFile(String line) throws DukeException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mjyan02"},"content":"        String[] str \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mjyan02"},"content":"        if (str.length \u003c 3) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mjyan02"},"content":"            return null; // Corrupt file","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mjyan02"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mjyan02"},"content":"        String type \u003d str[0];   // To identify the task type (T, D, E)","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mjyan02"},"content":"        boolean isDone \u003d str[1].equals(\"1\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mjyan02"},"content":"        String description \u003d str[2];","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mjyan02"},"content":"        return switch (type) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mjyan02"},"content":"            case \"T\" -\u003e new Todo(description, isDone);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mjyan02"},"content":"            case \"D\" -\u003e {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mjyan02"},"content":"                if (str.length \u003c 4) yield null;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mjyan02"},"content":"                yield new Deadline(description, str[3], isDone);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mjyan02"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mjyan02"},"content":"            case \"E\" -\u003e {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mjyan02"},"content":"                if (str.length \u003c 5) yield null;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mjyan02"},"content":"                yield new Event(description, str[3], str[4], isDone);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mjyan02"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mjyan02"},"content":"            default -\u003e null; // Invalid type","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"mjyan02"},"content":"        };","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"mjyan02"},"content":"     * Returns the description of the task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"mjyan02"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"mjyan02"},"content":"     * @return The task description.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"mjyan02"},"content":"    public String getDescription() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"mjyan02"},"content":"        return description;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"mjyan02"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"mjyan02"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"mjyan02"},"content":"     * @return The formatted string representation of the task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"mjyan02"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"mjyan02"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"mjyan02"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"mjyan02"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"mjyan02":120}},{"path":"src/main/java/Duke/Task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mjyan02"},"content":"package duke.task;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mjyan02"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mjyan02"},"content":" * Represents a Todo task that contains a task description.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mjyan02"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mjyan02"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mjyan02"},"content":"     * Constructs a new Todo task with the given description.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mjyan02"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mjyan02"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mjyan02"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mjyan02"},"content":"        super(description);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mjyan02"},"content":"     * Constructs a new Todo task with the given description.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mjyan02"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mjyan02"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mjyan02"},"content":"     * @param isDone Specifies if task is marked","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mjyan02"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mjyan02"},"content":"        super(description, isDone);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mjyan02"},"content":"     * Converts the task into a formatted string representation suitable for file storage on hard disk.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mjyan02"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mjyan02"},"content":"     * @return A string representation of the task for file storage.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mjyan02"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mjyan02"},"content":"    public String toFile() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mjyan02"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mjyan02"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mjyan02"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mjyan02"},"content":"     * @return The formatted string representation of the task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mjyan02"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mjyan02"},"content":"    public String toString() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mjyan02"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mjyan02"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"mjyan02":46}},{"path":"src/main/java/Duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mjyan02"},"content":"package duke;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mjyan02"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mjyan02"},"content":"import duke.ui.Ui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mjyan02"},"content":"import duke.task.Task;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mjyan02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mjyan02"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mjyan02"},"content":" * Manages all the different types of tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mjyan02"},"content":" * Provides methods to add, delete, modify, and list tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mjyan02"},"content":" * Provides methods used for validating arguments and for testing purposes.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mjyan02"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mjyan02"},"content":"public class TaskList {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mjyan02"},"content":"     * ArrayList to store an existing list of tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mjyan02"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mjyan02"},"content":"     * Creates a TaskList instance with an existing list of tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mjyan02"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mjyan02"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mjyan02"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mjyan02"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mjyan02"},"content":"     * Adds a new task to the task list.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mjyan02"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mjyan02"},"content":"     * @param task The task to be added.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mjyan02"},"content":"     * @param ui The UI instance to display messages.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mjyan02"},"content":"     * @param storage The storage instance to save the task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mjyan02"},"content":"     * @throws DukeException If any errors occur while adding the task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mjyan02"},"content":"    public void addTask(Task task, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mjyan02"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mjyan02"},"content":"            String description \u003d task.getDescription().trim();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mjyan02"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mjyan02"},"content":"                throw new DukeException(\"Please include a description!\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mjyan02"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mjyan02"},"content":"            if (description.matches(\"\\\\d+\")) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mjyan02"},"content":"                throw new DukeException(\"Description cannot be only numbers!\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mjyan02"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mjyan02"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mjyan02"},"content":"        tasks.add(task);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mjyan02"},"content":"        ui.displayMessage(\"Got it. I\u0027ve added this task:\\n  \" + task);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mjyan02"},"content":"        ui.displayMessage(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mjyan02"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mjyan02"},"content":"     * Displays all tasks in the task list","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mjyan02"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mjyan02"},"content":"     * @param ui The UI instance to display messages.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mjyan02"},"content":"     * @return A string representation of all tasks in the task list.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mjyan02"},"content":"    public String listTasks(Ui ui) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mjyan02"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mjyan02"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mjyan02"},"content":"            result.append(\"There are no tasks in your list.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mjyan02"},"content":"        } else {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mjyan02"},"content":"            result.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mjyan02"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mjyan02"},"content":"                result.append(i + 1).append(\". \").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mjyan02"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mjyan02"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mjyan02"},"content":"        String outString \u003d result.toString().trim();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mjyan02"},"content":"        ui.displayMessage(outString);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mjyan02"},"content":"        return outString;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mjyan02"},"content":"     * Marks or unmarks a task as done.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mjyan02"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mjyan02"},"content":"     * @param tN The task number to modify.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mjyan02"},"content":"     * @param isMarked True if marked as done, false if unmarked.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mjyan02"},"content":"     * @param ui The UI instance to display messages.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mjyan02"},"content":"     * @param storage The storage instance to save changes.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mjyan02"},"content":"     * @throws DukeException If the task number provided is invalid.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mjyan02"},"content":"    public void modifyTask(Integer tN, boolean isMarked, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mjyan02"},"content":"        int taskNumber \u003d validateArguments(tN);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mjyan02"},"content":"        Task task \u003d tasks.get(taskNumber);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mjyan02"},"content":"        if (isMarked) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mjyan02"},"content":"            task.markAsDone();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mjyan02"},"content":"            ui.displayMessage(\"Nice! I\u0027ve marked this task as done:\\n  \" + task);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mjyan02"},"content":"        } else {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mjyan02"},"content":"            task.markAsNotDone();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mjyan02"},"content":"            ui.displayMessage(\"OK, I\u0027ve marked this task as not done yet:\\n  \" + task);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"mjyan02"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"mjyan02"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"mjyan02"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"mjyan02"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"mjyan02"},"content":"     * @param tN The task number to delete.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"mjyan02"},"content":"     * @param ui The UI instance to display messages.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"mjyan02"},"content":"     * @param storage The storage instance to save changes.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"mjyan02"},"content":"     * @throws DukeException If the task number provided is invalid.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"mjyan02"},"content":"    public void deleteTask(Integer tN, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"mjyan02"},"content":"        int taskNumber \u003d validateArguments(tN);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"mjyan02"},"content":"        Task removedTask \u003d tasks.remove(taskNumber);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"mjyan02"},"content":"        ui.displayMessage(\"Noted. I\u0027ve removed this task:\\n  \" + removedTask);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"mjyan02"},"content":"        ui.displayMessage(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"mjyan02"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"mjyan02"},"content":"     * Finds and displays tasks that contain the specified keyword in their description.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"mjyan02"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"mjyan02"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"mjyan02"},"content":"     * @param ui The UI instance to display results.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"mjyan02"},"content":"     * @return A list of matching tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"mjyan02"},"content":"     * @throws DukeException If no keyword is provided.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"mjyan02"},"content":"    public ArrayList\u003cTask\u003e findTasks(String keyword, Ui ui) throws DukeException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"mjyan02"},"content":"        if (keyword \u003d\u003d null || keyword.trim().isEmpty()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"mjyan02"},"content":"            throw new DukeException(\"Please enter a keyword to search for!\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"mjyan02"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"mjyan02"},"content":"        ArrayList\u003cTask\u003e matchedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"mjyan02"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"mjyan02"},"content":"            if (task.getDescription().toUpperCase().contains(keyword.toUpperCase())) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"mjyan02"},"content":"                matchedTasks.add(task);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"mjyan02"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"mjyan02"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"mjyan02"},"content":"        if (matchedTasks.isEmpty()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"mjyan02"},"content":"            ui.displayMessage(\"I\u0027m sorry, no tasks named \u0027\" + keyword + \"\u0027 were found :(\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"mjyan02"},"content":"        } else {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"mjyan02"},"content":"            ui.displayMessage(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"mjyan02"},"content":"            for (int i \u003d 0; i \u003c matchedTasks.size(); i++) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"mjyan02"},"content":"                ui.displayMessage((i + 1) + \". \" + matchedTasks.get(i));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"mjyan02"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"mjyan02"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"mjyan02"},"content":"        return matchedTasks;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"mjyan02"},"content":"     * Validates the task number provided by the user.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"mjyan02"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"mjyan02"},"content":"     * @param tN The task number to validate.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"mjyan02"},"content":"     * @return The validated task index.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"mjyan02"},"content":"     * @throws DukeException If the task number provided is invalid or out of bounds.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"mjyan02"},"content":"    private int validateArguments(Integer tN) throws DukeException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"mjyan02"},"content":"        int taskNumber \u003d tN;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"mjyan02"},"content":"        if (taskNumber \u003c 0 || taskNumber \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"mjyan02"},"content":"            throw new DukeException(\"Task does not exist! Please enter a number between 1 and \" + tasks.size() + \".\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"mjyan02"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"mjyan02"},"content":"        return taskNumber;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"mjyan02"},"content":"     * Returns the number of tasks in the task list for testing purposes.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"mjyan02"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"mjyan02"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"mjyan02"},"content":"    public int getSize() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"mjyan02"},"content":"        return tasks.size();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"mjyan02"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"mjyan02":178}},{"path":"src/main/java/Duke/Ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mjyan02"},"content":"package duke.ui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mjyan02"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mjyan02"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mjyan02"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mjyan02"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mjyan02"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mjyan02"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mjyan02"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mjyan02"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mjyan02"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mjyan02"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mjyan02"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mjyan02"},"content":" * A customised DialogBox using JavaFX for displaying chat messages in Duke.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mjyan02"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mjyan02"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mjyan02"},"content":"    public DialogBox(String message, Image img) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mjyan02"},"content":"        Label text \u003d new Label(message);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mjyan02"},"content":"        ImageView displayPicture \u003d new ImageView(img);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mjyan02"},"content":"        text.setWrapText(true);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mjyan02"},"content":"        text.setPadding(new Insets(8));","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mjyan02"},"content":"        text.setStyle(\"-fx-background-color: #40444b; -fx-text-fill: white; -fx-background-radius: 10px;\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mjyan02"},"content":"        text.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mjyan02"},"content":"        displayPicture.setFitWidth(50);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mjyan02"},"content":"        displayPicture.setFitHeight(50);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mjyan02"},"content":"        this.setSpacing(10);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mjyan02"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mjyan02"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mjyan02"},"content":"    private void flip() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mjyan02"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mjyan02"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mjyan02"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mjyan02"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mjyan02"},"content":"    public static DialogBox getUserDialog(String message, Image img) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mjyan02"},"content":"        return new DialogBox(message, img);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mjyan02"},"content":"    public static DialogBox getDukeDialog(String message, Image img) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mjyan02"},"content":"        var db \u003d new DialogBox(message, img);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mjyan02"},"content":"        db.flip();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mjyan02"},"content":"        return db;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mjyan02"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"mjyan02":52}},{"path":"src/main/java/Duke/Ui/DukeGui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mjyan02"},"content":"package duke.ui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mjyan02"},"content":"import duke.Duke;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mjyan02"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mjyan02"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mjyan02"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mjyan02"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mjyan02"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mjyan02"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mjyan02"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mjyan02"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mjyan02"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mjyan02"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mjyan02"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mjyan02"},"content":"import java.util.Objects;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mjyan02"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mjyan02"},"content":" * Duke GUI interface using JavaFX.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mjyan02"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mjyan02"},"content":"public class DukeGui extends Application {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mjyan02"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mjyan02"},"content":"    private VBox vB;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mjyan02"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mjyan02"},"content":"    private final Duke duke \u003d new Duke(\"C:/Users/ymj53/OneDrive/Documents/Uni/Y2S2/CS2103T/data/dukegui.txt\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mjyan02"},"content":"    private final Image userImage \u003d new Image(Objects.requireNonNull(getClass().getResourceAsStream(\"/images/User.jpg\")));","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mjyan02"},"content":"    private final Image dukeImage \u003d new Image(Objects.requireNonNull(getClass().getResourceAsStream(\"/images/Duke.jpg\")));","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mjyan02"},"content":"     * Setup function for the GUI","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mjyan02"},"content":"    @Override","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mjyan02"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mjyan02"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mjyan02"},"content":"        vB \u003d new VBox();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mjyan02"},"content":"        scrollPane.setContent(vB);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mjyan02"},"content":"        scrollPane.setStyle(\"-fx-background: #D0E8FF; -fx-border-color: transparent;\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mjyan02"},"content":"        vB.setStyle(\"-fx-background-color: #D0E8FF;\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mjyan02"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mjyan02"},"content":"        userInput.setPromptText(\"Message Duke...\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mjyan02"},"content":"        Button sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mjyan02"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mjyan02"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mjyan02"},"content":"        Scene scene \u003d new Scene(mainLayout, 510, 700);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mjyan02"},"content":"        scene.getStylesheets().add(Objects.requireNonNull(getClass().getClassLoader()","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mjyan02"},"content":"                .getResource(\"styles/styles.css\")).toExternalForm());","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mjyan02"},"content":"        stage.setTitle(\"duke\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mjyan02"},"content":"        stage.setResizable(false);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mjyan02"},"content":"        stage.setScene(scene);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mjyan02"},"content":"        stage.show();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mjyan02"},"content":"        stage.setMinHeight(750.0);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mjyan02"},"content":"        stage.setMinWidth(520.0);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mjyan02"},"content":"        stage.setMaxHeight(750.0);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mjyan02"},"content":"        stage.setMaxWidth(520.0);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mjyan02"},"content":"        String welcomeText \u003d printResponse(\"help\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mjyan02"},"content":"        vB.getChildren().add(DialogBox.getDukeDialog(welcomeText, dukeImage));","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mjyan02"},"content":"        vB.setPrefSize(485, 500);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mjyan02"},"content":"        AnchorPane.setTopAnchor(scrollPane, 0.0);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mjyan02"},"content":"        AnchorPane.setBottomAnchor(scrollPane, 50.0);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mjyan02"},"content":"        scrollPane.setPrefSize(510, 620);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mjyan02"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mjyan02"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mjyan02"},"content":"        userInput.setPrefWidth(380);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mjyan02"},"content":"        userInput.setStyle(\"-fx-background-color: #A5C7E6; -fx-text-fill: black;\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mjyan02"},"content":"        sendButton.setPrefWidth(80);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mjyan02"},"content":"        sendButton.setStyle(\"-fx-background-color: #2C7A7B; -fx-text-fill: white;\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mjyan02"},"content":"        AnchorPane.setBottomAnchor(userInput, 13.0);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mjyan02"},"content":"        AnchorPane.setLeftAnchor(userInput, 15.0);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mjyan02"},"content":"        AnchorPane.setBottomAnchor(sendButton, 13.0);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mjyan02"},"content":"        AnchorPane.setRightAnchor(sendButton, 15.0);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mjyan02"},"content":"        vB.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mjyan02"},"content":"        sendButton.setOnAction(event -\u003e handleInput());","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mjyan02"},"content":"        userInput.setOnAction(event -\u003e handleInput());","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mjyan02"},"content":"     * Handles user inputs and redirects it to Duke GUI.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mjyan02"},"content":"    private void handleInput() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mjyan02"},"content":"        String userText \u003d userInput.getText();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mjyan02"},"content":"        String dukeText \u003d printResponse(userText);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mjyan02"},"content":"        vB.getChildren().addAll(","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mjyan02"},"content":"                DialogBox.getUserDialog(userText, userImage),","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mjyan02"},"content":"                DialogBox.getDukeDialog(dukeText, dukeImage)","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"mjyan02"},"content":"        );","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"mjyan02"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"mjyan02"},"content":"     * Converts outputs from Duke.java into a string.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"mjyan02"},"content":"     * This allows the console to print out the same output.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"mjyan02"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"mjyan02"},"content":"     * @param input User input keyword.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"mjyan02"},"content":"     * @return The output from Duke.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"mjyan02"},"content":"    private String printResponse(String input) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"mjyan02"},"content":"        ByteArrayOutputStream output \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"mjyan02"},"content":"        PrintStream dukeOut \u003d System.out;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"mjyan02"},"content":"        System.setOut(new PrintStream(output));","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"mjyan02"},"content":"        duke.run(input);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"mjyan02"},"content":"        System.setOut(dukeOut);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"mjyan02"},"content":"        return output.toString().trim();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"mjyan02"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"mjyan02":121}},{"path":"src/main/java/Duke/Ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mjyan02"},"content":"package duke.ui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mjyan02"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mjyan02"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mjyan02"},"content":" * Handles all interactions with the user, including reading inputs and displaying messages or responses.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mjyan02"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mjyan02"},"content":"public class Ui {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mjyan02"},"content":"     * Scanner object to read user input.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mjyan02"},"content":"    protected final Scanner sc;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mjyan02"},"content":"     * Constructs an Ui object for handling user interactions.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mjyan02"},"content":"    public Ui() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mjyan02"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mjyan02"},"content":"     * Displays the welcome message when Duke starts.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mjyan02"},"content":"    public void welcomeMessage() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mjyan02"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mjyan02"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mjyan02"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mjyan02"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mjyan02"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mjyan02"},"content":"        System.out.println(\"Hello! I\u0027m Duke :D\\n\" + logo + \"\\nI can create todos, deadlines or events for you!\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mjyan02"},"content":"        System.out.println(\"Use my keywords to mark, list, delete and find your tasks!\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mjyan02"},"content":"        System.out.println(\"\\nWhat can I do for you?\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mjyan02"},"content":"     * Displays a message to the user.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mjyan02"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mjyan02"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mjyan02"},"content":"    public void displayMessage(String message) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mjyan02"},"content":"        System.out.println(message);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mjyan02"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mjyan02"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mjyan02"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mjyan02"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mjyan02"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mjyan02"},"content":"    public void displayError(String message) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mjyan02"},"content":"        System.out.println(\"Error: \" + message);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mjyan02"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"mjyan02":52}},{"path":"src/test/java/Duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mjyan02"},"content":"package duke;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mjyan02"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mjyan02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mjyan02"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mjyan02"},"content":"import duke.ui.Ui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mjyan02"},"content":"import duke.task.*;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mjyan02"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mjyan02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mjyan02"},"content":"public class DukeTest {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mjyan02"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mjyan02"},"content":"    private Ui ui;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mjyan02"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mjyan02"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mjyan02"},"content":"    public void run() throws DukeException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mjyan02"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mjyan02"},"content":"        storage \u003d new Storage(\"C:/Users/ymj53/OneDrive/Documents/Uni/Y2S2/CS2103T/data/test.txt\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mjyan02"},"content":"        taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mjyan02"},"content":"        taskList.addTask(new Todo(\"read book\"), ui, storage);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mjyan02"},"content":"        taskList.addTask(new Deadline(\"return book\", \"2024-12-06\"), ui, storage);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mjyan02"},"content":"        taskList.addTask(new Event(\"project meeting\", \"2024-02-20\", \"2024-02-21\"), ui, storage);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mjyan02"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mjyan02"},"content":"    public void testAddTask() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mjyan02"},"content":"        assertEquals(3, taskList.getSize());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mjyan02"},"content":"        assertEquals(\"\"\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mjyan02"},"content":"                Here are the tasks in your list:","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mjyan02"},"content":"                1. [T][ ] read book","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mjyan02"},"content":"                2. [D][ ] return book (by: Dec 06 2024)","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mjyan02"},"content":"                3. [E][ ] project meeting (from: Feb 20 2024 to: Feb 21 2024)\"\"\", taskList.listTasks(ui));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mjyan02"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mjyan02"},"content":"    public void testMarkTaskAsDone() throws DukeException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mjyan02"},"content":"        taskList.modifyTask(0, true, ui, storage);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mjyan02"},"content":"        taskList.modifyTask(2, true, ui, storage);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mjyan02"},"content":"        assertEquals(\"\"\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mjyan02"},"content":"                Here are the tasks in your list:","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mjyan02"},"content":"                1. [T][X] read book","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mjyan02"},"content":"                2. [D][ ] return book (by: Dec 06 2024)","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mjyan02"},"content":"                3. [E][X] project meeting (from: Feb 20 2024 to: Feb 21 2024)\"\"\", taskList.listTasks(ui));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mjyan02"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mjyan02"},"content":"    public void testInvalidTaskNumber() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mjyan02"},"content":"        Exception exception \u003d assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mjyan02"},"content":"            taskList.modifyTask(5, true, ui, storage);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mjyan02"},"content":"        });","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mjyan02"},"content":"        assertEquals(\"Task does not exist! Please enter a number between 1 and 3.\", exception.getMessage());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mjyan02"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mjyan02"},"content":"    public void testDeleteTask() throws DukeException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mjyan02"},"content":"        taskList.deleteTask(0, ui, storage);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mjyan02"},"content":"        assertEquals(2, taskList.getSize());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mjyan02"},"content":"        assertEquals(\"\"\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mjyan02"},"content":"                Here are the tasks in your list:","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mjyan02"},"content":"                1. [D][ ] return book (by: Dec 06 2024)","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mjyan02"},"content":"                2. [E][ ] project meeting (from: Feb 20 2024 to: Feb 21 2024)\"\"\", taskList.listTasks(ui));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mjyan02"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mjyan02"},"content":"    public void testFindExistingTask() throws DukeException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mjyan02"},"content":"        ArrayList\u003cTask\u003e matchedTasks \u003d taskList.findTasks(\"book\", ui);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mjyan02"},"content":"        assertEquals(2, matchedTasks.size());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mjyan02"},"content":"        assertEquals(\"[T][ ] read book\", matchedTasks.get(0).toString());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mjyan02"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mjyan02"},"content":"    public void testFindNonExistentTask() throws DukeException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mjyan02"},"content":"        ArrayList\u003cTask\u003e matchedTasks \u003d taskList.findTasks(\"homework\", ui);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mjyan02"},"content":"        assertEquals(0, matchedTasks.size());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mjyan02"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"mjyan02":85}},{"path":"src/test/java/Duke/Exceptions/DukeExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mjyan02"},"content":"package duke.exceptions;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mjyan02"},"content":"public class DukeExceptionTest {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mjyan02"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"mjyan02":4}},{"path":"src/test/java/Duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mjyan02"},"content":"package duke;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mjyan02"},"content":"public class ParserTest {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mjyan02"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"mjyan02":4}},{"path":"src/test/java/Duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mjyan02"},"content":"package duke;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mjyan02"},"content":"public class StorageTest {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mjyan02"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"mjyan02":4}},{"path":"src/test/java/Duke/Task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mjyan02"},"content":"package duke.task;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mjyan02"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mjyan02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mjyan02"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mjyan02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mjyan02"},"content":"import duke.Storage;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mjyan02"},"content":"import duke.TaskList;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mjyan02"},"content":"import duke.ui.Ui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mjyan02"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mjyan02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mjyan02"},"content":"public class DeadlineTest {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mjyan02"},"content":"    private Ui ui;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mjyan02"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mjyan02"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mjyan02"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mjyan02"},"content":"    public void run() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mjyan02"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mjyan02"},"content":"        storage \u003d new Storage(\"C:/Users/ymj53/OneDrive/Documents/Uni/Y2S2/CS2103T/data/duke.txt\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mjyan02"},"content":"        taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mjyan02"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mjyan02"},"content":"    public void testValidDeadlineCreation() throws DukeException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mjyan02"},"content":"        Deadline deadline \u003d new Deadline(\"Submit report\", \"2024-12-10\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mjyan02"},"content":"        taskList.addTask(deadline, ui, storage);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mjyan02"},"content":"        assertEquals(\"Here are the tasks in your list:\\n\" +","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mjyan02"},"content":"                \"1. [D][ ] Submit report (by: Dec 10 2024)\", taskList.listTasks(ui));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mjyan02"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mjyan02"},"content":"    public void testMissingDeadlineDescription() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mjyan02"},"content":"        assertThrows(DukeException.class, () -\u003e taskList.addTask(new Deadline(\"\", \"2024-12-10\"), ui, storage));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mjyan02"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mjyan02"},"content":"    public void testInvalidDeadlineDate() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mjyan02"},"content":"        assertThrows(DukeException.class, () -\u003e taskList.addTask(new Deadline(\"Submit report\", \"2024-13-45\"), ui, storage));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mjyan02"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"mjyan02":44}},{"path":"src/test/java/Duke/Task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mjyan02"},"content":"package duke.task;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mjyan02"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mjyan02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mjyan02"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mjyan02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mjyan02"},"content":"import duke.Storage;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mjyan02"},"content":"import duke.TaskList;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mjyan02"},"content":"import duke.ui.Ui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mjyan02"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mjyan02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mjyan02"},"content":"public class EventTest {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mjyan02"},"content":"    private Ui ui;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mjyan02"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mjyan02"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mjyan02"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mjyan02"},"content":"    public void run() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mjyan02"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mjyan02"},"content":"        storage \u003d new Storage(\"C:/Users/ymj53/OneDrive/Documents/Uni/Y2S2/CS2103T/data/duke.txt\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mjyan02"},"content":"        taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mjyan02"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mjyan02"},"content":"    public void testValidEventCreation() throws DukeException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mjyan02"},"content":"        Event event \u003d new Event(\"Project meeting\", \"2024-02-20\", \"2024-02-21\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mjyan02"},"content":"        taskList.addTask(event, ui, storage);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mjyan02"},"content":"        assertEquals(\"Here are the tasks in your list:\\n\" +","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mjyan02"},"content":"                \"1. [E][ ] Project meeting (from: Feb 20 2024 to: Feb 21 2024)\", taskList.listTasks(ui));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mjyan02"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mjyan02"},"content":"    public void testMissingEventDescription() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mjyan02"},"content":"        assertThrows(DukeException.class, () -\u003e taskList.addTask(new Event(\"\", \"2024-02-20\", \"2024-02-21\"), ui, storage));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mjyan02"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mjyan02"},"content":"    public void testInvalidEventDate() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mjyan02"},"content":"        assertThrows(DukeException.class, () -\u003e taskList.addTask(new Event(\"Project meeting\", \"2024-02-30\", \"2024-02-31\"), ui, storage));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mjyan02"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"mjyan02":44}},{"path":"src/test/java/Duke/Task/KeywordsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mjyan02"},"content":"package duke.task;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mjyan02"},"content":"public class KeywordsTest {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mjyan02"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"mjyan02":4}},{"path":"src/test/java/Duke/Task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mjyan02"},"content":"package duke.task;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mjyan02"},"content":"public class TaskTest {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mjyan02"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"mjyan02":4}},{"path":"src/test/java/Duke/Task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mjyan02"},"content":"package duke.task;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mjyan02"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mjyan02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mjyan02"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mjyan02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mjyan02"},"content":"import duke.Storage;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mjyan02"},"content":"import duke.TaskList;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mjyan02"},"content":"import duke.ui.Ui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mjyan02"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mjyan02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mjyan02"},"content":"public class TodoTest {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mjyan02"},"content":"    private Ui ui;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mjyan02"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mjyan02"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mjyan02"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mjyan02"},"content":"    public void run() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mjyan02"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mjyan02"},"content":"        storage \u003d new Storage(\"C:/Users/ymj53/OneDrive/Documents/Uni/Y2S2/CS2103T/data/duke.txt\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mjyan02"},"content":"        taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mjyan02"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mjyan02"},"content":"    public void testValidTodoCreation() throws DukeException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mjyan02"},"content":"        Todo todo \u003d new Todo(\"Read book\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mjyan02"},"content":"        taskList.addTask(todo, ui, storage);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mjyan02"},"content":"        assertEquals(\"Here are the tasks in your list:\\n\" +","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mjyan02"},"content":"                \"1. [T][ ] Read book\", taskList.listTasks(ui));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mjyan02"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mjyan02"},"content":"    public void testMissingTodoDescription() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mjyan02"},"content":"        assertThrows(DukeException.class, () -\u003e taskList.addTask(new Todo(\"\"), ui, storage));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mjyan02"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mjyan02"},"content":"    public void testInvalidTodoInput() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mjyan02"},"content":"        assertThrows(DukeException.class, () -\u003e taskList.addTask(new Todo(\"123456\"), ui, storage));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mjyan02"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mjyan02"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"mjyan02":44}},{"path":"src/test/java/Duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mjyan02"},"content":"package duke;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mjyan02"},"content":"public class TaskListTest {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mjyan02"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"mjyan02":4}},{"path":"src/test/java/Duke/Ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mjyan02"},"content":"package duke.ui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mjyan02"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mjyan02"},"content":"public class UiTest {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mjyan02"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"mjyan02":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mjyan02"},"content":"todo read book","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mjyan02"},"content":"deadline submit report /by Sunday","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mjyan02"},"content":"event project meeting /from Monday 2pm /to 4pm","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mjyan02"},"content":"list","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mjyan02"},"content":"mark 2","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mjyan02"},"content":"unmark 2","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mjyan02"},"content":"bye","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"mjyan02":7}}]
