[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varsha13152"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"varsha13152"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"varsha13152"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"varsha13152"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"varsha13152"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varsha13152"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"varsha13152"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"varsha13152"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"varsha13152"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"varsha13152"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"varsha13152"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"varsha13152"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"varsha13152"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"varsha13152"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"varsha13152"},"content":"    mainClass.set(\u0027gui.Launcher\u0027)","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"varsha13152"},"content":"    archiveBaseName \u003d \"tabby\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"varsha13152"},"content":"    archiveFileName \u003d \u0027tabby.jar\u0027","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"varsha13152"},"content":"checkstyle {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"varsha13152"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"varsha13152"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"varsha13152"},"content":"mainClassName \u003d \u0027gui.Launcher\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"varsha13152":25,"-":39}},{"path":"data/tabby_data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"varsha13152"},"content":"[T][ ] run","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varsha13152"},"content":"[D][X] return book (by: Dec 02 2019, 6:00 pm)","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varsha13152"},"content":"[E][ ] project meeting (from: Dec 02 2019, 6:00 pm to: Dec 02 2019, 8:00 pm)","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"varsha13152":3}},{"path":"src/main/java/action/Action.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varsha13152"},"content":"package action;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varsha13152"},"content":"import exceptions.TabbyException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varsha13152"},"content":"import exceptions.TabbyExceptionIncompleteCommand;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varsha13152"},"content":"import exceptions.TabbyExceptionInvalidCommand;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varsha13152"},"content":"import exceptions.TabbyExceptionInvalidInput;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varsha13152"},"content":"import exceptions.TabbyExceptionInvalidTaskNumber;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varsha13152"},"content":"import tabby.Ui;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varsha13152"},"content":"import task.TaskManager;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varsha13152"},"content":"/**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varsha13152"},"content":" * Abstract class representing an action that can be performed.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varsha13152"},"content":" */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"varsha13152"},"content":"public abstract class Action {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"varsha13152"},"content":"    private enum Command {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"varsha13152"},"content":"        LIST,","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varsha13152"},"content":"        MARK,","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"varsha13152"},"content":"        UNMARK,","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"varsha13152"},"content":"        DELETE,","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"varsha13152"},"content":"        TODO,","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"varsha13152"},"content":"        DEADLINE,","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"varsha13152"},"content":"        EVENT,","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"varsha13152"},"content":"        FIND,","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"varsha13152"},"content":"        REMINDER","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"varsha13152"},"content":"     * Parses the user input and returns the appropriate Action object.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"varsha13152"},"content":"     * @param input The user\u0027s input string.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"varsha13152"},"content":"     * @param isDone Whether the task is marked as done.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"varsha13152"},"content":"     * @param isUserInput Whether the input comes from a user.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"varsha13152"},"content":"     * @param ui The UI handler for user feedback.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"varsha13152"},"content":"     * @return An Action object representing the parsed command.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"varsha13152"},"content":"     * @throws TabbyExceptionInvalidCommand If the command is invalid.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"varsha13152"},"content":"     * @throws TabbyExceptionInvalidInput If the mark command is invalid.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"varsha13152"},"content":"     * @throws TabbyExceptionInvalidTaskNumber If the task number is not a valid integer.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"varsha13152"},"content":"     * @throws TabbyExceptionIncompleteCommand If the command is incomplete.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"varsha13152"},"content":"    public static Action userAction(String input, boolean isDone, boolean isUserInput, Ui ui)","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"varsha13152"},"content":"            throws TabbyExceptionInvalidCommand, TabbyExceptionInvalidInput,","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"varsha13152"},"content":"            TabbyExceptionInvalidTaskNumber, TabbyExceptionIncompleteCommand {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"varsha13152"},"content":"        if (Parser.validateInput(input)) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"varsha13152"},"content":"            throw new TabbyExceptionInvalidCommand();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"varsha13152"},"content":"        try {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"varsha13152"},"content":"            String[] parsedTask \u003d Parser.parseTask(input);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"varsha13152"},"content":"            assert parsedTask.length \u003e 0;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"varsha13152"},"content":"            Command command \u003d Command.valueOf(parsedTask[0].toUpperCase());","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"varsha13152"},"content":"            return switch (command) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"varsha13152"},"content":"            case LIST -\u003e new ListAction();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"varsha13152"},"content":"            case REMINDER -\u003e new RemindAction();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"varsha13152"},"content":"            case FIND -\u003e {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"varsha13152"},"content":"                if (parsedTask.length \u003c 2) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"varsha13152"},"content":"                    throw new TabbyExceptionIncompleteCommand();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"varsha13152"},"content":"                }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"varsha13152"},"content":"                yield new FindAction(parsedTask[1]);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"varsha13152"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"varsha13152"},"content":"            case TODO, DEADLINE, EVENT -\u003e new AddAction(parsedTask, isDone, isUserInput, ui);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"varsha13152"},"content":"            case MARK, UNMARK, DELETE -\u003e {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"varsha13152"},"content":"                if (parsedTask.length \u003c 2) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"varsha13152"},"content":"                    throw new TabbyExceptionInvalidTaskNumber();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"varsha13152"},"content":"                }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"varsha13152"},"content":"                try {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"varsha13152"},"content":"                    int taskNumber \u003d Integer.parseInt(parsedTask[1]) - 1;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"varsha13152"},"content":"                    yield switch (command) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"varsha13152"},"content":"                        case MARK -\u003e new MarkAction(taskNumber);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"varsha13152"},"content":"                        case UNMARK -\u003e new UnmarkAction(taskNumber);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"varsha13152"},"content":"                        case DELETE -\u003e new DeleteAction(taskNumber);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"varsha13152"},"content":"                        default -\u003e throw new TabbyExceptionInvalidCommand();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"varsha13152"},"content":"                        };","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"varsha13152"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"varsha13152"},"content":"                    throw new TabbyExceptionInvalidTaskNumber();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"varsha13152"},"content":"                }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"varsha13152"},"content":"            }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"varsha13152"},"content":"            default -\u003e throw new TabbyExceptionInvalidCommand();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"varsha13152"},"content":"            };","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"varsha13152"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"varsha13152"},"content":"            throw new TabbyExceptionInvalidCommand();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"varsha13152"},"content":"     * Runs the action with the provided task manager.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"varsha13152"},"content":"     * @param taskManager The TaskManager to operate on.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"varsha13152"},"content":"     * @throws TabbyException If an error occurs while executing the action.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"varsha13152"},"content":"    public abstract String runTask(TaskManager taskManager) throws TabbyException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"varsha13152"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"varsha13152":94}},{"path":"src/main/java/action/AddAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varsha13152"},"content":"package action;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varsha13152"},"content":"import exceptions.TabbyExceptionInvalidDeadlineInput;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varsha13152"},"content":"import exceptions.TabbyExceptionInvalidEventInput;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varsha13152"},"content":"import exceptions.TabbyExceptionInvalidTodo;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varsha13152"},"content":"import exceptions.TabbyExceptionInvalidCommand;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varsha13152"},"content":"import exceptions.TabbyExceptionIncompleteCommand;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varsha13152"},"content":"import task.TaskManager;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varsha13152"},"content":"import task.Event;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varsha13152"},"content":"import task.Deadline;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varsha13152"},"content":"import task.ToDo;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varsha13152"},"content":"import tabby.Ui;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varsha13152"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"varsha13152"},"content":"/**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"varsha13152"},"content":" * This class processes user input to create appropriate task types and adds them to the task manager.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"varsha13152"},"content":" */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varsha13152"},"content":"public class AddAction extends Action {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"varsha13152"},"content":"    private final String[] input;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"varsha13152"},"content":"    private final boolean isDone;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"varsha13152"},"content":"    private final boolean isUserInput;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"varsha13152"},"content":"    private final Ui ui;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"varsha13152"},"content":"    private enum Command {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"varsha13152"},"content":"        TODO,","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"varsha13152"},"content":"        DEADLINE,","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"varsha13152"},"content":"        EVENT","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"varsha13152"},"content":"     * Constructs an AddAction with the specified user input.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"varsha13152"},"content":"     * @param input The task input string to be processed.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"varsha13152"},"content":"     * @param isDone Indicates whether the task is done.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"varsha13152"},"content":"     * @param isUserInput Indicates whether the input comes from the user.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"varsha13152"},"content":"     * @param ui The UI handler for user feedback.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"varsha13152"},"content":"    public AddAction(String[] input, boolean isDone, boolean isUserInput, Ui ui) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"varsha13152"},"content":"        this.input \u003d input;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"varsha13152"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"varsha13152"},"content":"        this.isUserInput \u003d isUserInput;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"varsha13152"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"varsha13152"},"content":"     * Executes the action to add a task to the list.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"varsha13152"},"content":"     * @param taskManager The TaskManager to operate on.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"varsha13152"},"content":"     * @return A message confirming the task addition or an error message.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"varsha13152"},"content":"     * @throws TabbyExceptionInvalidCommand if the input format is incorrect.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"varsha13152"},"content":"     * @throws TabbyExceptionIncompleteCommand if the command lacks necessary details.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"varsha13152"},"content":"     * @throws TabbyExceptionInvalidTodo if the ToDo task is invalid.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"varsha13152"},"content":"    @Override","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"varsha13152"},"content":"    public String runTask(TaskManager taskManager) throws TabbyExceptionInvalidCommand,","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"varsha13152"},"content":"            TabbyExceptionIncompleteCommand, TabbyExceptionInvalidTodo {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"varsha13152"},"content":"        assert input.length \u003e\u003d 2;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"varsha13152"},"content":"        if (Parser.validateInput(input[1])) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"varsha13152"},"content":"            throw new TabbyExceptionIncompleteCommand();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"varsha13152"},"content":"        Command command;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"varsha13152"},"content":"        try {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"varsha13152"},"content":"            command \u003d Command.valueOf(input[0].toUpperCase());","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"varsha13152"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"varsha13152"},"content":"            throw new TabbyExceptionInvalidCommand();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"varsha13152"},"content":"        String taskDescription \u003d input[1];","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"varsha13152"},"content":"        switch (command) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"varsha13152"},"content":"            case TODO -\u003e {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"varsha13152"},"content":"                return addTodoTask(taskManager, taskDescription);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"varsha13152"},"content":"            }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"varsha13152"},"content":"            case DEADLINE -\u003e {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"varsha13152"},"content":"                return addDeadlineTask(taskManager, taskDescription);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"varsha13152"},"content":"            }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"varsha13152"},"content":"            case EVENT -\u003e {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"varsha13152"},"content":"                return addEventTask(taskManager, taskDescription);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"varsha13152"},"content":"            }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"varsha13152"},"content":"            default -\u003e throw new TabbyExceptionInvalidCommand();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"varsha13152"},"content":"     * Adds a ToDo task to the TaskManager.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"varsha13152"},"content":"     * @param taskManager The TaskManager to add the task to.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"varsha13152"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"varsha13152"},"content":"     * @return A message confirming the task addition or an error message.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"varsha13152"},"content":"     * @throws TabbyExceptionInvalidTodo if the description is empty.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"varsha13152"},"content":"    private String addTodoTask(TaskManager taskManager, String description) throws TabbyExceptionInvalidTodo {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"varsha13152"},"content":"        if (Parser.validateInput(description)) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"varsha13152"},"content":"            throw new TabbyExceptionInvalidTodo();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"varsha13152"},"content":"        ToDo task \u003d new ToDo(description, isDone);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"varsha13152"},"content":"        taskManager.addTask(task);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"varsha13152"},"content":"        return isUserInput ? taskManager.taskResponse(\"added\", task) : \"\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"varsha13152"},"content":"     * Adds a Deadline task to the TaskManager.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"varsha13152"},"content":"     * @param taskManager The TaskManager to add the task to.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"varsha13152"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"varsha13152"},"content":"     * @return A message confirming the task addition or an error message.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"varsha13152"},"content":"    private String addDeadlineTask(TaskManager taskManager, String description) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"varsha13152"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"varsha13152"},"content":"            HashMap\u003cString, String\u003e deadlineDetails \u003d Parser.parseDeadline(description, isUserInput);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"varsha13152"},"content":"            Deadline task \u003d new Deadline(deadlineDetails.get(\"description\"), isDone, deadlineDetails.get(\"by\"));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"varsha13152"},"content":"            taskManager.addTask(task);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"varsha13152"},"content":"            return isUserInput ? taskManager.taskResponse(\"added\", task) : \"\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"varsha13152"},"content":"        } catch (TabbyExceptionInvalidDeadlineInput e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"varsha13152"},"content":"            return ui.error(e.getMessage());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"varsha13152"},"content":"     * Adds an Event task to the TaskManager.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"varsha13152"},"content":"     * @param taskManager The TaskManager to add the task to.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"varsha13152"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"varsha13152"},"content":"     * @return A message confirming the task addition or an error message.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"varsha13152"},"content":"    private String addEventTask(TaskManager taskManager, String description) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"varsha13152"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"varsha13152"},"content":"            HashMap\u003cString, String\u003e eventDetails \u003d Parser.parseEvent(description, isUserInput);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"varsha13152"},"content":"            Event task \u003d new Event(eventDetails.get(\"description\"), isDone, eventDetails.get(\"from\"),","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"varsha13152"},"content":"                    eventDetails.get(\"to\"));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"varsha13152"},"content":"            taskManager.addTask(task);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"varsha13152"},"content":"            return isUserInput ? taskManager.taskResponse(\"added\", task) : \"\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"varsha13152"},"content":"        } catch (TabbyExceptionInvalidEventInput e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"varsha13152"},"content":"            return ui.error(e.getMessage());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"varsha13152"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"varsha13152":139}},{"path":"src/main/java/action/DeleteAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varsha13152"},"content":"package action;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varsha13152"},"content":"import task.TaskManager;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varsha13152"},"content":"/**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varsha13152"},"content":" * An action that deletes a task","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varsha13152"},"content":" */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varsha13152"},"content":"public class DeleteAction extends Action {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varsha13152"},"content":"    private final int taskNumber;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varsha13152"},"content":"     * Constructs a DeleteAction with the specified task number.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varsha13152"},"content":"     * @param taskNumber The task number to be deleted.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"varsha13152"},"content":"    public DeleteAction(int taskNumber) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"varsha13152"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"varsha13152"},"content":"     * Executes the action to delete task","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"varsha13152"},"content":"     * @param taskManager The TaskManager to operate on.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"varsha13152"},"content":"    @Override","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"varsha13152"},"content":"    public String runTask(TaskManager taskManager) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"varsha13152"},"content":"        return taskManager.deleteTask(taskNumber);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"varsha13152"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"varsha13152":28}},{"path":"src/main/java/action/FindAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varsha13152"},"content":"package action;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varsha13152"},"content":"import task.TaskManager;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varsha13152"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varsha13152"},"content":" * An action that finds tasks","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varsha13152"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varsha13152"},"content":"public class FindAction extends Action {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varsha13152"},"content":"    private final String keyword;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varsha13152"},"content":"     * Constructs a FindAction with the specified keyword.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varsha13152"},"content":"     * @param keyword The keyword to be match tasks","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"varsha13152"},"content":"    public FindAction(String keyword) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"varsha13152"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"varsha13152"},"content":"     * Executes the action to find keyword","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"varsha13152"},"content":"     * @param taskManager The TaskManager to operate on.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"varsha13152"},"content":"    @Override","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"varsha13152"},"content":"    public String runTask(TaskManager taskManager) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"varsha13152"},"content":"        return taskManager.findTask(keyword);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"varsha13152"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"varsha13152":27}},{"path":"src/main/java/action/ListAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varsha13152"},"content":"package action;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varsha13152"},"content":"import task.TaskManager;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varsha13152"},"content":"/**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varsha13152"},"content":" * Represents the Action on a List","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varsha13152"},"content":" */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varsha13152"},"content":"public class ListAction extends Action {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varsha13152"},"content":"    public ListAction() { }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varsha13152"},"content":"     * Executes the action to display all tasks in a list","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varsha13152"},"content":"     * @param taskManager The TaskManager to operate on.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"varsha13152"},"content":"    @Override","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"varsha13152"},"content":"    public String runTask(TaskManager taskManager) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"varsha13152"},"content":"        return taskManager.displayTaskList();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"varsha13152"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"varsha13152":19}},{"path":"src/main/java/action/MarkAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varsha13152"},"content":"package action;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varsha13152"},"content":"import task.TaskManager;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varsha13152"},"content":"/**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varsha13152"},"content":" * An action that marks a task as done.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varsha13152"},"content":" */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varsha13152"},"content":"public class MarkAction extends Action {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varsha13152"},"content":"    private final int taskNumber;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varsha13152"},"content":"     * Constructs a MarkAction with the specified task number.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varsha13152"},"content":"     * @param taskNumber The task number to be marked as done.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"varsha13152"},"content":"    public MarkAction(int taskNumber) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"varsha13152"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"varsha13152"},"content":"     * Executes the action to mark a task as done.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"varsha13152"},"content":"     * @param taskManager The TaskManager to operate on.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"varsha13152"},"content":"    @Override","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"varsha13152"},"content":"    public String runTask(TaskManager taskManager) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"varsha13152"},"content":"        return taskManager.markTaskDone(taskNumber);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"varsha13152"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"varsha13152":27}},{"path":"src/main/java/action/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varsha13152"},"content":"package action;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varsha13152"},"content":"import exceptions.TabbyExceptionIncompleteCommand;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varsha13152"},"content":"import exceptions.TabbyExceptionInvalidCommand;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varsha13152"},"content":"import exceptions.TabbyExceptionInvalidDeadlineInput;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varsha13152"},"content":"import exceptions.TabbyExceptionInvalidEventInput;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varsha13152"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varsha13152"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varsha13152"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varsha13152"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varsha13152"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"varsha13152"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"varsha13152"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"varsha13152"},"content":" * The Parser class is responsible for handling user and file input parsing.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varsha13152"},"content":" * It provides methods to validate, parse tasks, deadlines, and events.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"varsha13152"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"varsha13152"},"content":"public class Parser {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"varsha13152"},"content":"    // User input patterns","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"varsha13152"},"content":"    private static final Pattern DEADLINE_USER_INPUT_PATTERN \u003d Pattern.compile(\"(.+?)\\\\s*/by\\\\s*(.+)\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"varsha13152"},"content":"    private static final Pattern EVENT_USER_INPUT_PATTERN \u003d Pattern.compile(\"(.+?)\\\\s*/from\\\\s*(.+?)\\\\s*/to\\\\s*(.+)\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"varsha13152"},"content":"    // File input patterns","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"varsha13152"},"content":"    private static final Pattern DEADLINE_FILE_INPUT_PATTERN \u003d Pattern.compile(\"(.+?)\\\\s*\\\\(by:\\\\s*(.+?)\\\\)\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"varsha13152"},"content":"    private static final Pattern EVENT_FILE_INPUT_PATTERN \u003d","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"varsha13152"},"content":"            Pattern.compile(\"(.+?)\\\\s*\\\\(from:\\\\s*(.+?)\\\\s*to:\\\\s*(.+?)\\\\)\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"varsha13152"},"content":"    private static final Pattern FILE_INPUT_TASK_PATTERN \u003d Pattern.compile(\"^\\\\[(T|E|D)\\\\]\\\\[(X| )\\\\]\\\\s*(.*)$\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"varsha13152"},"content":"    // Date formatters","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"varsha13152"},"content":"    private static final DateTimeFormatter USER_INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"varsha13152"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"varsha13152"},"content":"     * Validates if the input is null or empty.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"varsha13152"},"content":"     * @param input The user input string.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"varsha13152"},"content":"     * @return true if input is null or empty, otherwise false.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"varsha13152"},"content":"    public static boolean validateInput(String input) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"varsha13152"},"content":"        return input \u003d\u003d null || input.trim().isEmpty();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"varsha13152"},"content":"     * Parses the task details from the file input.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"varsha13152"},"content":"     * @param input The input string from the file.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"varsha13152"},"content":"     * @return A HashMap containing task details.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"varsha13152"},"content":"    public static HashMap\u003cString, String\u003e parseFileRead(String input) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"varsha13152"},"content":"        Matcher matcher \u003d FILE_INPUT_TASK_PATTERN.matcher(input);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"varsha13152"},"content":"        HashMap\u003cString, String\u003e taskDetails \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"varsha13152"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"varsha13152"},"content":"            switch (matcher.group(1)) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"varsha13152"},"content":"            case \"T\":","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"varsha13152"},"content":"                taskDetails.put(\"task\", \"todo\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"varsha13152"},"content":"                break;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"varsha13152"},"content":"            case \"D\":","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"varsha13152"},"content":"                taskDetails.put(\"task\", \"deadline\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"varsha13152"},"content":"                break;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"varsha13152"},"content":"            case \"E\":","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"varsha13152"},"content":"                taskDetails.put(\"task\", \"event\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"varsha13152"},"content":"                break;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"varsha13152"},"content":"            default:","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"varsha13152"},"content":"                break;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"varsha13152"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"varsha13152"},"content":"            taskDetails.put(\"status\", matcher.group(2).equals(\"X\") ? \"true\" : \"false\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"varsha13152"},"content":"            taskDetails.put(\"description\", matcher.group(3));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"varsha13152"},"content":"        return taskDetails;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"varsha13152"},"content":"     * Parses the user input and returns the parsed task components.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"varsha13152"},"content":"     * @param input The user input string.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"varsha13152"},"content":"     * @return An array containing the parsed command and arguments.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"varsha13152"},"content":"     * @throws TabbyExceptionInvalidCommand If the command is invalid.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"varsha13152"},"content":"     * @throws TabbyExceptionIncompleteCommand If the command is incomplete.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"varsha13152"},"content":"    public static String[] parseTask(String input) throws TabbyExceptionInvalidCommand,","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"varsha13152"},"content":"            TabbyExceptionIncompleteCommand {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"varsha13152"},"content":"        String trimmed_input \u003d input.trim();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"varsha13152"},"content":"        if (validateInput(trimmed_input)) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"varsha13152"},"content":"            throw new TabbyExceptionInvalidCommand();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"varsha13152"},"content":"        if (input.equals(\"list\") || input.equals(\"reminder\")) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"varsha13152"},"content":"            return new String[]{trimmed_input};","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"varsha13152"},"content":"        String[] tokens \u003d trimmed_input.split(\"\\\\s+\", 2);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"varsha13152"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"varsha13152"},"content":"            throw new TabbyExceptionIncompleteCommand();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"varsha13152"},"content":"        return new String[]{tokens[0].trim(), tokens[1].trim()};","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"varsha13152"},"content":"     * Parses a deadline task input.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"varsha13152"},"content":"     * @param input The input string.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"varsha13152"},"content":"     * @param isUserInput Whether the input is from a user or a file.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"varsha13152"},"content":"     * @return A HashMap containing deadline details.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"varsha13152"},"content":"     * @throws TabbyExceptionInvalidDeadlineInput If the input format is incorrect.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"varsha13152"},"content":"    public static HashMap\u003cString, String\u003e parseDeadline(String input, boolean isUserInput)","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"varsha13152"},"content":"            throws TabbyExceptionInvalidDeadlineInput {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"varsha13152"},"content":"        Pattern pattern \u003d isUserInput ? DEADLINE_USER_INPUT_PATTERN : DEADLINE_FILE_INPUT_PATTERN;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"varsha13152"},"content":"        Matcher matcher \u003d pattern.matcher(input);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"varsha13152"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"varsha13152"},"content":"            throw new TabbyExceptionInvalidDeadlineInput();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"varsha13152"},"content":"        HashMap\u003cString, String\u003e deadlineDetails \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"varsha13152"},"content":"        String description \u003d matcher.group(1).trim();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"varsha13152"},"content":"        String dateTimeStr \u003d matcher.group(2).trim();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"varsha13152"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"varsha13152"},"content":"            deadlineDetails.put(\"description\", description);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"varsha13152"},"content":"            if (isUserInput) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"varsha13152"},"content":"                LocalDateTime deadline \u003d LocalDateTime.parse(dateTimeStr, USER_INPUT_FORMATTER);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"varsha13152"},"content":"                deadlineDetails.put(\"by\", deadline.format(OUTPUT_FORMATTER));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"varsha13152"},"content":"            } else {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"varsha13152"},"content":"                deadlineDetails.put(\"by\", dateTimeStr);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"varsha13152"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"varsha13152"},"content":"            return deadlineDetails;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"varsha13152"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"varsha13152"},"content":"            throw new TabbyExceptionInvalidDeadlineInput();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"varsha13152"},"content":"     * Parses an event task input.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"varsha13152"},"content":"     * @param input The input string.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"varsha13152"},"content":"     * @param isUserInput Whether the input is from a user or a file.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"varsha13152"},"content":"     * @return A HashMap containing event details.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"varsha13152"},"content":"     * @throws TabbyExceptionInvalidEventInput If the input format is incorrect.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"varsha13152"},"content":"    public static HashMap\u003cString, String\u003e parseEvent(String input, boolean isUserInput)","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"varsha13152"},"content":"            throws TabbyExceptionInvalidEventInput {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"varsha13152"},"content":"        Pattern pattern \u003d isUserInput ? EVENT_USER_INPUT_PATTERN : EVENT_FILE_INPUT_PATTERN;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"varsha13152"},"content":"        Matcher matcher \u003d pattern.matcher(input);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"varsha13152"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"varsha13152"},"content":"            throw new TabbyExceptionInvalidEventInput();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"varsha13152"},"content":"        HashMap\u003cString, String\u003e eventDetails \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"varsha13152"},"content":"        String description \u003d matcher.group(1).trim();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"varsha13152"},"content":"        String fromTimeStr \u003d matcher.group(2).trim();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"varsha13152"},"content":"        String toTimeStr \u003d matcher.group(3).trim();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"varsha13152"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"varsha13152"},"content":"            eventDetails.put(\"description\", description);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"varsha13152"},"content":"            if (isUserInput) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"varsha13152"},"content":"                LocalDateTime fromTime \u003d LocalDateTime.parse(fromTimeStr, USER_INPUT_FORMATTER);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"varsha13152"},"content":"                LocalDateTime toTime \u003d LocalDateTime.parse(toTimeStr, USER_INPUT_FORMATTER);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"varsha13152"},"content":"                eventDetails.put(\"from\", fromTime.format(OUTPUT_FORMATTER));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"varsha13152"},"content":"                eventDetails.put(\"to\", toTime.format(OUTPUT_FORMATTER));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"varsha13152"},"content":"            } else {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"varsha13152"},"content":"                eventDetails.put(\"from\", fromTimeStr);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"varsha13152"},"content":"                eventDetails.put(\"to\", toTimeStr);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"varsha13152"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"varsha13152"},"content":"            return eventDetails;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"varsha13152"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"varsha13152"},"content":"            throw new TabbyExceptionInvalidEventInput();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"varsha13152"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"varsha13152":183}},{"path":"src/main/java/action/RemindAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varsha13152"},"content":"package action;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varsha13152"},"content":"import task.TaskManager;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varsha13152"},"content":"/**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varsha13152"},"content":" * An action that reminds user about upcoming tasks which are not done yet","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varsha13152"},"content":" */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varsha13152"},"content":"public class RemindAction extends Action {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varsha13152"},"content":"     * Executes the action to mark a task as done.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varsha13152"},"content":"     * @param taskManager The TaskManager to operate on.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"varsha13152"},"content":"    @Override","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"varsha13152"},"content":"    public String runTask(TaskManager taskManager) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"varsha13152"},"content":"        return taskManager.remind();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varsha13152"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"varsha13152":18}},{"path":"src/main/java/action/UnmarkAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varsha13152"},"content":"package action;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varsha13152"},"content":"import task.TaskManager;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varsha13152"},"content":"/**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varsha13152"},"content":" * An action that marks a task as not done.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varsha13152"},"content":" */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varsha13152"},"content":"public class UnmarkAction extends Action {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varsha13152"},"content":"    private final int taskNumber;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varsha13152"},"content":"     * Constructs a UnmarkAction with the specified task number.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varsha13152"},"content":"     * @param taskNumber The task number to be marked as done.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"varsha13152"},"content":"    public UnmarkAction(int taskNumber) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"varsha13152"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"varsha13152"},"content":"     * Executes the action to mark a task as done.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"varsha13152"},"content":"     * @param taskManager The TaskManager to operate on.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"varsha13152"},"content":"    @Override","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"varsha13152"},"content":"    public String runTask(TaskManager taskManager) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"varsha13152"},"content":"        return taskManager.markTaskNotDone(taskNumber);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"varsha13152"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"varsha13152":28}},{"path":"src/main/java/exceptions/TabbyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varsha13152"},"content":"package exceptions;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varsha13152"},"content":"/**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varsha13152"},"content":" * Custom exception class for handling errors.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varsha13152"},"content":" */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varsha13152"},"content":"public class TabbyException extends Exception {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varsha13152"},"content":"     * Constructs a new {@code TabbyException} with the specified error message.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varsha13152"},"content":"     * @param response The detailed error message.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varsha13152"},"content":"    protected TabbyException(String response) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varsha13152"},"content":"        super(response);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"varsha13152"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"varsha13152":15}},{"path":"src/main/java/exceptions/TabbyExceptionIncompleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varsha13152"},"content":"package exceptions;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varsha13152"},"content":"/**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varsha13152"},"content":" * Exception thrown when a command is incomplete or missing required parts.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varsha13152"},"content":" */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varsha13152"},"content":"public class TabbyExceptionIncompleteCommand extends TabbyException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varsha13152"},"content":"     * Constructs an {@code TabbyExceptionIncompleteCommand} with a detailed error message.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varsha13152"},"content":"    public TabbyExceptionIncompleteCommand() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varsha13152"},"content":"        super(\"Invalid Command. Here are the valid commands \u0026 the respective formats:\\n\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varsha13152"},"content":"                + \"  - Mark: mark \u003ctask number\u003e\\n\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varsha13152"},"content":"                + \"  - Unark: unmark \u003ctask number\u003e\\n\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"varsha13152"},"content":"                + \"  - Delete: delete \u003ctask number\u003e\\n\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"varsha13152"},"content":"                + \"  - Deadline: deadline \u003cdescription\u003e /by \u003cdate time\u003e\\n\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"varsha13152"},"content":"                + \"  - Event: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\\n\"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"varsha13152"},"content":"                + \"  - Todo: todo \u003cdescription\u003e\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"varsha13152"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"varsha13152":20}},{"path":"src/main/java/exceptions/TabbyExceptionInvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varsha13152"},"content":"/**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varsha13152"},"content":" * This package contains custom exceptions used in the Tabby application to handle specific error cases.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varsha13152"},"content":" */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varsha13152"},"content":"package exceptions;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varsha13152"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varsha13152"},"content":" * Exception thrown when the user input does not match any of the valid commands in the Tabby application.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varsha13152"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varsha13152"},"content":"public class TabbyExceptionInvalidCommand extends TabbyException {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varsha13152"},"content":"     * Constructs a new TabbyExceptionInvalidCommand with a default error message.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varsha13152"},"content":"     * The error message specifies the list of valid commands available in the application.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"varsha13152"},"content":"    public TabbyExceptionInvalidCommand() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"varsha13152"},"content":"        super(\"Invalid Command. Here are the valid commands: mark, unmark, delete, list, todo, event, deadline\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varsha13152"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"varsha13152":18}},{"path":"src/main/java/exceptions/TabbyExceptionInvalidDeadlineInput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varsha13152"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varsha13152"},"content":" * This package contains custom exceptions used in the Tabby application to handle specific error cases.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varsha13152"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varsha13152"},"content":"package exceptions;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varsha13152"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varsha13152"},"content":" * Exception thrown when the input for a deadline task is invalid or does not follow the expected format.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varsha13152"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varsha13152"},"content":"public class TabbyExceptionInvalidDeadlineInput extends TabbyException {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varsha13152"},"content":"     * Constructs a new TabbyExceptionInvalidDeadlineInput with a default error message.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varsha13152"},"content":"     * The error message specifies the correct format for entering a deadline.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"varsha13152"},"content":"    public TabbyExceptionInvalidDeadlineInput() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"varsha13152"},"content":"        super(\"Invalid deadline format. Use: deadline \u003cdescription\u003e /by \u003cdate time\u003e\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varsha13152"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"varsha13152":18}},{"path":"src/main/java/exceptions/TabbyExceptionInvalidEventInput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varsha13152"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varsha13152"},"content":" * This package contains custom exceptions used in the Tabby application to handle specific error cases.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varsha13152"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varsha13152"},"content":"package exceptions;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varsha13152"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varsha13152"},"content":" * Exception thrown when the input for an event task is invalid or does not follow the expected format.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varsha13152"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varsha13152"},"content":"public class TabbyExceptionInvalidEventInput extends TabbyException {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varsha13152"},"content":"     * Constructs a new TabbyExceptionInvalidEventInput with a default error message.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varsha13152"},"content":"     * The error message specifies the correct format for entering an event task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"varsha13152"},"content":"    public TabbyExceptionInvalidEventInput() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"varsha13152"},"content":"        super(\"Invalid event format. Use: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varsha13152"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"varsha13152":18}},{"path":"src/main/java/exceptions/TabbyExceptionInvalidInput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varsha13152"},"content":"/**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varsha13152"},"content":" * This package contains custom exceptions used in the Tabby application to handle specific error cases.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varsha13152"},"content":" */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varsha13152"},"content":"package exceptions;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varsha13152"},"content":"/**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varsha13152"},"content":" * Exception thrown when the input provided for commands like mark, unmark, or delete is invalid","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varsha13152"},"content":" * or does not follow the expected format.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varsha13152"},"content":" */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varsha13152"},"content":"public class TabbyExceptionInvalidInput extends TabbyException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varsha13152"},"content":"     * Constructs a new TabbyExceptionInvalidInput with a default error message.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"varsha13152"},"content":"     * The error message specifies the correct format for commands requiring a task number.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"varsha13152"},"content":"    public TabbyExceptionInvalidInput() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"varsha13152"},"content":"        super(\"Invalid command format. Expected: mark/unmark/delete \u003ctask number\u003e\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"varsha13152"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"varsha13152":19}},{"path":"src/main/java/exceptions/TabbyExceptionInvalidTaskNumber.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varsha13152"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varsha13152"},"content":" * This package contains custom exceptions used in the Tabby application to handle specific error cases.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varsha13152"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varsha13152"},"content":"package exceptions;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varsha13152"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varsha13152"},"content":" * Exception thrown when the provided task number is invalid or does not correspond to any existing task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varsha13152"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varsha13152"},"content":"public class TabbyExceptionInvalidTaskNumber extends TabbyException {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varsha13152"},"content":"     * Constructs a new TabbyExceptionInvalidTaskNumber with a default error message.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varsha13152"},"content":"     * The error message provides guidance on how to retrieve existing tasks and correctly mark, unmark, or delete them.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"varsha13152"},"content":"    public TabbyExceptionInvalidTaskNumber() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"varsha13152"},"content":"        super(\"Invalid Task Number. Please use \u0027list\u0027 to retrieve existing tasks. \"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"varsha13152"},"content":"                + \"To mark or unmark a task please use: mark/unmark/delete \u003ctask number\u003e \");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"varsha13152"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"varsha13152":20}},{"path":"src/main/java/exceptions/TabbyExceptionInvalidTodo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varsha13152"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varsha13152"},"content":" * This package contains custom exceptions used in the Tabby application to handle specific error cases.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varsha13152"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varsha13152"},"content":"package exceptions;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varsha13152"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varsha13152"},"content":" * Exception thrown when the input for a todo task is invalid or does not follow the expected format.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varsha13152"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varsha13152"},"content":"public class TabbyExceptionInvalidTodo extends TabbyException {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varsha13152"},"content":"     * Constructs a new TabbyExceptionInvalidTodo with a default error message.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varsha13152"},"content":"     * The error message specifies the correct format for entering a todo task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"varsha13152"},"content":"    public TabbyExceptionInvalidTodo() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"varsha13152"},"content":"        super(\"Invalid command format. Expected: todo \u003cdescription\u003e\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varsha13152"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"varsha13152":18}},{"path":"src/main/java/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varsha13152"},"content":"package gui;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varsha13152"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varsha13152"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varsha13152"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varsha13152"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varsha13152"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varsha13152"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varsha13152"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varsha13152"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varsha13152"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"varsha13152"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"varsha13152"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"varsha13152"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varsha13152"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"varsha13152"},"content":" * The DialogBox class represents a custom control used to display dialog messages with an image.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"varsha13152"},"content":" * It can be used to show both user messages and Tabby\u0027s responses, with customizable positioning.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"varsha13152"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"varsha13152"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"varsha13152"},"content":"    @FXML","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"varsha13152"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"varsha13152"},"content":"    @FXML","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"varsha13152"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"varsha13152"},"content":"     * Creates a DialogBox with the given text and image.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"varsha13152"},"content":"     * Loads the FXML layout and sets the dialog text and image.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"varsha13152"},"content":"     * @param text the text to display in the dialog","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"varsha13152"},"content":"     * @param img  the image to display alongside the dialog","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"varsha13152"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"varsha13152"},"content":"        try {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"varsha13152"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"varsha13152"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"varsha13152"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"varsha13152"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"varsha13152"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"varsha13152"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"varsha13152"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"varsha13152"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"varsha13152"},"content":"     * Flips the dialog box by reversing the order of its child nodes","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"varsha13152"},"content":"     * and aligning the contents to the top-left.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"varsha13152"},"content":"     * This is used to differentiate user messages from Tabby\u0027s messages.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"varsha13152"},"content":"    private void flip() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"varsha13152"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"varsha13152"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"varsha13152"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"varsha13152"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"varsha13152"},"content":"     * Creates and returns a DialogBox representing the user\u0027s dialog message.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"varsha13152"},"content":"     * @param text the user\u0027s input text","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"varsha13152"},"content":"     * @param img  the user\u0027s profile image","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"varsha13152"},"content":"     * @return a DialogBox containing the user\u0027s dialog","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"varsha13152"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"varsha13152"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"varsha13152"},"content":"     * Creates and returns a DialogBox representing Tabby\u0027s response.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"varsha13152"},"content":"     * The dialog box is flipped to differentiate it from the user\u0027s dialog.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"varsha13152"},"content":"     * @param text Tabby\u0027s response text","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"varsha13152"},"content":"     * @param img  Tabby\u0027s profile image","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"varsha13152"},"content":"     * @return a flipped DialogBox containing Tabby\u0027s dialog","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"varsha13152"},"content":"    public static DialogBox getTabbyDialog(String text, Image img) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"varsha13152"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"varsha13152"},"content":"        db.flip();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"varsha13152"},"content":"        return db;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"varsha13152"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"varsha13152":87}},{"path":"src/main/java/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varsha13152"},"content":"package gui;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varsha13152"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varsha13152"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varsha13152"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varsha13152"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varsha13152"},"content":"public class Launcher {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varsha13152"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varsha13152"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varsha13152"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"varsha13152":12}},{"path":"src/main/java/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varsha13152"},"content":"package gui;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varsha13152"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varsha13152"},"content":"import tabby.Tabby;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varsha13152"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varsha13152"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varsha13152"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varsha13152"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varsha13152"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varsha13152"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varsha13152"},"content":" * The Main class is the entry point for the GUI application.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"varsha13152"},"content":" * It sets up the primary stage, loads the main window layout, and initializes the interaction with Tabby.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"varsha13152"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"varsha13152"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varsha13152"},"content":"    private Tabby tabby \u003d new Tabby();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"varsha13152"},"content":"     * Starts the GUI application by setting up the primary stage and displaying the main window.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"varsha13152"},"content":"     * @param stage the primary stage for this application","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"varsha13152"},"content":"    @Override","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"varsha13152"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"varsha13152"},"content":"        try {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"varsha13152"},"content":"            // Set the title of the primary window","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"varsha13152"},"content":"            stage.setTitle(\"Tabby\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"varsha13152"},"content":"            // Load the FXML layout for the main window","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"varsha13152"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"varsha13152"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"varsha13152"},"content":"            // Set up the scene and display it","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"varsha13152"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"varsha13152"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"varsha13152"},"content":"            // Pass the Tabby instance to the MainWindow controller","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"varsha13152"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setTabby(tabby);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"varsha13152"},"content":"            // Show the application window","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"varsha13152"},"content":"            stage.show();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"varsha13152"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"varsha13152"},"content":"            // Print the stack trace if an error occurs during FXML loading","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"varsha13152"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"varsha13152"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"varsha13152":50}},{"path":"src/main/java/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varsha13152"},"content":"package gui;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varsha13152"},"content":"import tabby.Tabby;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varsha13152"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varsha13152"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varsha13152"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varsha13152"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varsha13152"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varsha13152"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varsha13152"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varsha13152"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varsha13152"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"varsha13152"},"content":" * The MainWindow class represents the main graphical interface window for interacting with Tabby.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"varsha13152"},"content":" * It handles user inputs and displays conversations using a chat-like interface.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"varsha13152"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"varsha13152"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"varsha13152"},"content":"    @FXML","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"varsha13152"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"varsha13152"},"content":"    @FXML","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"varsha13152"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"varsha13152"},"content":"    @FXML","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"varsha13152"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"varsha13152"},"content":"    @FXML","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"varsha13152"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"varsha13152"},"content":"    private Tabby tabby;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"varsha13152"},"content":"    // User and Tabby icons for displaying chat messages","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"varsha13152"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/userIcon.png\"));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"varsha13152"},"content":"    private Image tabbyImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/tabbyIcon.png\"));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"varsha13152"},"content":"     * Initializes the MainWindow by binding the vertical scrollbar to follow the dialog container\u0027s height.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"varsha13152"},"content":"     * This ensures that new messages are automatically scrolled into view.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"varsha13152"},"content":"    @FXML","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"varsha13152"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"varsha13152"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"varsha13152"},"content":"     * Sets the Tabby instance used for handling user interactions.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"varsha13152"},"content":"     * Displays Tabby\u0027s initial greeting message in the dialog container.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"varsha13152"},"content":"     * @param tabby the Tabby instance to be set","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"varsha13152"},"content":"    public void setTabby(Tabby tabby) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"varsha13152"},"content":"        this.tabby \u003d tabby;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"varsha13152"},"content":"        String greeting \u003d this.tabby.getGreeting();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"varsha13152"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getTabbyDialog(greeting, tabbyImage));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"varsha13152"},"content":"     * Handles the event triggered by the user input (e.g., clicking the send button or pressing Enter).","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"varsha13152"},"content":"     * It sends the user\u0027s input to Tabby, retrieves the response, and displays both in the dialog container.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"varsha13152"},"content":"     * If the response is a farewell message, the application exits.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"varsha13152"},"content":"    @FXML","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"varsha13152"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"varsha13152"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"varsha13152"},"content":"        String output \u003d this.tabby.readUserInput(input);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"varsha13152"},"content":"        // Display user input and Tabby\u0027s response in the dialog container","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"varsha13152"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"varsha13152"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"varsha13152"},"content":"                DialogBox.getTabbyDialog(output, tabbyImage)","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"varsha13152"},"content":"        );","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"varsha13152"},"content":"        // Clear the input field after processing","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"varsha13152"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"varsha13152"},"content":"        // Exit the application if the response is a farewell message","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"varsha13152"},"content":"        if (output.equals(\"Bye. Hope to see you again soon!\")) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"varsha13152"},"content":"            Platform.exit();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"varsha13152"},"content":"            System.exit(0);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"varsha13152"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"varsha13152":83}},{"path":"src/main/java/tabby/Tabby.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varsha13152"},"content":"package tabby;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varsha13152"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varsha13152"},"content":"import exceptions.TabbyException;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varsha13152"},"content":"import action.Action;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varsha13152"},"content":"import task.Storage;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varsha13152"},"content":"import task.TaskManager;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varsha13152"},"content":"/**","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varsha13152"},"content":" * A class representing a chatbot Tabby.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varsha13152"},"content":" */","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varsha13152"},"content":"public class Tabby {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"varsha13152"},"content":"    private static final String DIRECTORY \u003d \"./data\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"varsha13152"},"content":"    private static final String FILENAME \u003d \"tabby_data.txt\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"varsha13152"},"content":"    private final Storage storage;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"varsha13152"},"content":"    private final TaskManager taskManager;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varsha13152"},"content":"    private final Ui ui;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"varsha13152"},"content":"     * Constructs a new Tabby instance and initializes its components.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"varsha13152"},"content":"     * The constructor sets up the user interface, storage, and task management.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"varsha13152"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"varsha13152"},"content":"     * - Initializes the Ui component to handle user interactions.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"varsha13152"},"content":"     * - Sets up Storage with a specified directory and filename for task persistence.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"varsha13152"},"content":"     * - Initializes TaskManager to manage tasks with the provided storage and UI.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"varsha13152"},"content":"    public Tabby() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"varsha13152"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"varsha13152"},"content":"        this.storage \u003d new Storage(DIRECTORY, FILENAME, this.ui);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"varsha13152"},"content":"        this.taskManager \u003d new TaskManager(this.storage, this.ui);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"varsha13152"},"content":"     * Prints a greeting message for the chatbot.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"varsha13152"},"content":"    public String getGreeting() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"varsha13152"},"content":"        return ui.greeting();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"varsha13152"},"content":"     * Processes user input, allowing the user to interact with the chatbot by adding tasks","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"varsha13152"},"content":"     * or viewing the task list. Returns a goodbye message if the user types \"bye\".","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"varsha13152"},"content":"     * @param input The user input string.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"varsha13152"},"content":"     * @return A message confirming task actions, an error message, or a goodbye message.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"varsha13152"},"content":"    public String readUserInput(String input) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"varsha13152"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"varsha13152"},"content":"            return goodbye();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"varsha13152"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"varsha13152"},"content":"        try {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"varsha13152"},"content":"            Action action \u003d Action.userAction(input, false, true, ui);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"varsha13152"},"content":"            output.append(action.runTask(taskManager)).append(\"\\n\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"varsha13152"},"content":"        } catch (TabbyException e) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"varsha13152"},"content":"            output.append(ui.error(e.getMessage())).append(\"\\n\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"varsha13152"},"content":"        return output.toString().trim();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"varsha13152"},"content":"     * Echoes the user input.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"varsha13152"},"content":"     * @param userInput The user input to echo.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"varsha13152"},"content":"    private void echo(String userInput) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"varsha13152"},"content":"        ui.display(userInput);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"varsha13152"},"content":"     * Prints a goodbye message for the chatbot.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"varsha13152"},"content":"    public String goodbye() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"varsha13152"},"content":"        return ui.display(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"varsha13152"},"content":"//","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"varsha13152"},"content":"//    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"varsha13152"},"content":"//     * The main method to start the chatbot.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"varsha13152"},"content":"//     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"varsha13152"},"content":"//     * @param args Command-line arguments.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"varsha13152"},"content":"//     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"varsha13152"},"content":"//    public static void main(String[] args) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"varsha13152"},"content":"//        Tabby tabby \u003d new Tabby();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"varsha13152"},"content":"//        tabby.getGreeting();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"varsha13152"},"content":"//        tabby.readUserInput();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"varsha13152"},"content":"//        tabby.goodbye();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"varsha13152"},"content":"//    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"varsha13152"},"content":"}","lastModifiedDate":"2025-01-17","isFullCredit":false}],"authorContributionMap":{"varsha13152":92}},{"path":"src/main/java/tabby/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varsha13152"},"content":"package tabby;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varsha13152"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varsha13152"},"content":" * The Ui class provides methods to display messages and errors to the console","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varsha13152"},"content":" * in a formatted and user-friendly manner.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varsha13152"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varsha13152"},"content":"public class Ui {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varsha13152"},"content":"    private static final String CHATBOT \u003d \"Tabby\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varsha13152"},"content":"     * Displays a message in a formatted manner.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varsha13152"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"varsha13152"},"content":"    public String display(String message) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"varsha13152"},"content":"       return message;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"varsha13152"},"content":"    public String greeting() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"varsha13152"},"content":"        return String.format(\"Hello! I\u0027m %s.\\n What can I do for you?\", CHATBOT);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"varsha13152"},"content":"     * Displays an error message in a formatted manner.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"varsha13152"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"varsha13152"},"content":"    public String error(String message) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"varsha13152"},"content":"        return String.format(\"Error!: \\n %s\", message);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"varsha13152"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"varsha13152":32}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varsha13152"},"content":"package task;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varsha13152"},"content":"/**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varsha13152"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varsha13152"},"content":" * This class extends the {@code Task} class to include an end date/time","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varsha13152"},"content":" * by which the task must be completed.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varsha13152"},"content":" */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varsha13152"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varsha13152"},"content":"     * The deadline for the task in string format.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varsha13152"},"content":"    protected String end;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"varsha13152"},"content":"     * Constructs a new {@code Deadline} task with the specified description and deadline.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varsha13152"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"varsha13152"},"content":"     * @param end         The deadline by which the task should be completed.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"varsha13152"},"content":"    public Deadline(String description, boolean isDone, String end) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"varsha13152"},"content":"        super(description, isDone);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"varsha13152"},"content":"        this.end \u003d end;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"varsha13152"},"content":"     * Returns a string representation of the deadline task.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"varsha13152"},"content":"     * @return A formatted string representing the deadline task.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"varsha13152"},"content":"    @Override","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"varsha13152"},"content":"    public String toString() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"varsha13152"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + end + \")\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"varsha13152"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"varsha13152":34}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varsha13152"},"content":"package task;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varsha13152"},"content":"/**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varsha13152"},"content":" * Represents an event task that has a start and end time.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varsha13152"},"content":" * This class extends the {@code Task} class to include additional","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varsha13152"},"content":" * details about when the event begins and ends.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varsha13152"},"content":" */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varsha13152"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varsha13152"},"content":"    protected String start;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varsha13152"},"content":"    protected String end;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"varsha13152"},"content":"     * Constructs a new {@code Event} task with the specified description, start, and end times.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"varsha13152"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"varsha13152"},"content":"     * @param start       The start time of the event.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varsha13152"},"content":"     * @param end         The end time of the event.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"varsha13152"},"content":"    public Event(String description, boolean isDone, String start, String end) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"varsha13152"},"content":"        super(description, isDone);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"varsha13152"},"content":"        this.start \u003d start;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"varsha13152"},"content":"        this.end \u003d end;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"varsha13152"},"content":"     * Returns a string representation of the event task.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"varsha13152"},"content":"     * @return A formatted string representing the event task.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"varsha13152"},"content":"    @Override","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"varsha13152"},"content":"    public String toString() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"varsha13152"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"varsha13152"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"varsha13152":35}},{"path":"src/main/java/task/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varsha13152"},"content":"package task;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varsha13152"},"content":"import action.Action;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varsha13152"},"content":"import action.AddAction;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varsha13152"},"content":"import action.Parser;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varsha13152"},"content":"import exceptions.TabbyException;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varsha13152"},"content":"import tabby.Ui;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varsha13152"},"content":"import java.io.File;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varsha13152"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varsha13152"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varsha13152"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varsha13152"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"varsha13152"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"varsha13152"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"varsha13152"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varsha13152"},"content":" * The Storage class is responsible for managing file I/O operations related to task storage.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"varsha13152"},"content":" * It handles loading tasks from a file and saving tasks to a file.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"varsha13152"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"varsha13152"},"content":"public class Storage {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"varsha13152"},"content":"    public final String directory;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"varsha13152"},"content":"    public final String fileName;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"varsha13152"},"content":"    private final Ui ui;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"varsha13152"},"content":"     * Constructs a Storage object to manage task files.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"varsha13152"},"content":"     * @param directory The directory where the task file is stored.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"varsha13152"},"content":"     * @param fileName  The name of the file that contains the tasks.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"varsha13152"},"content":"     * @param ui        The Ui instance used to display messages and errors.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"varsha13152"},"content":"    public Storage(String directory, String fileName, Ui ui) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"varsha13152"},"content":"        this.directory \u003d directory;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"varsha13152"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"varsha13152"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"varsha13152"},"content":"     * Loads tasks from the task file into the provided TaskManager.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"varsha13152"},"content":"     * @param taskManager The TaskManager instance to which the tasks will be added.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"varsha13152"},"content":"     * @return An ArrayList of tasks loaded from the file.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"varsha13152"},"content":"    public ArrayList\u003cTask\u003e loadTasks(TaskManager taskManager) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"varsha13152"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"varsha13152"},"content":"        File folder \u003d new File(directory);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"varsha13152"},"content":"        // Ensure the directory exists","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"varsha13152"},"content":"        if (!folder.exists()) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"varsha13152"},"content":"            folder.mkdir();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"varsha13152"},"content":"        File taskFile \u003d new File(String.format(\"%s/%s\", directory, fileName));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"varsha13152"},"content":"        // Create the task file if it doesn\u0027t exist","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"varsha13152"},"content":"        if (!taskFile.exists()) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"varsha13152"},"content":"            try {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"varsha13152"},"content":"                taskFile.createNewFile();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"varsha13152"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"varsha13152"},"content":"                ui.error(\"Error creating file: \" + taskFile.getAbsolutePath());","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"varsha13152"},"content":"            }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"varsha13152"},"content":"            return taskList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"varsha13152"},"content":"        // Read tasks from the file","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"varsha13152"},"content":"        try (Scanner scanner \u003d new Scanner(taskFile)) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"varsha13152"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"varsha13152"},"content":"                String data \u003d scanner.nextLine().trim();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"varsha13152"},"content":"                if (!Parser.validateInput(data)) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"varsha13152"},"content":"                    HashMap\u003cString, String\u003e taskDetails \u003d Parser.parseFileRead(data);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"varsha13152"},"content":"                    Action action \u003d new AddAction(","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"varsha13152"},"content":"                            new String[]{taskDetails.get(\"task\"), taskDetails.get(\"description\")},","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"varsha13152"},"content":"                            Boolean.parseBoolean(taskDetails.get(\"status\")),","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"varsha13152"},"content":"                            false,","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"varsha13152"},"content":"                            ui","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"varsha13152"},"content":"                    );","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"varsha13152"},"content":"                    action.runTask(taskManager);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"varsha13152"},"content":"                }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"varsha13152"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"varsha13152"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"varsha13152"},"content":"            ui.error(\"File not found - \" + taskFile.getAbsolutePath());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"varsha13152"},"content":"        } catch (TabbyException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"varsha13152"},"content":"            ui.error(\"Unable to process task file: \" + e.getMessage());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"varsha13152"},"content":"        return taskList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"varsha13152"},"content":"     * Saves the list of tasks to the task file.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"varsha13152"},"content":"     * @param taskList The list of tasks to save.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"varsha13152"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"varsha13152"},"content":"        File folder \u003d new File(this.directory);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"varsha13152"},"content":"        // Ensure the directory exists","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"varsha13152"},"content":"        if (!folder.exists()) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"varsha13152"},"content":"            folder.mkdir();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"varsha13152"},"content":"        File taskFile \u003d new File(folder, this.fileName);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"varsha13152"},"content":"        // Write tasks to the file","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"varsha13152"},"content":"        try (FileWriter writer \u003d new FileWriter(taskFile)) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"varsha13152"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"varsha13152"},"content":"                writer.write(task.toString() + System.lineSeparator());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"varsha13152"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"varsha13152"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"varsha13152"},"content":"            ui.error(\"Error writing to file: \" + taskFile.getAbsolutePath());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"varsha13152"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"varsha13152":114}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varsha13152"},"content":"package task;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varsha13152"},"content":"/**","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varsha13152"},"content":" * Represents a generic task with a description and completion status.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varsha13152"},"content":" * This class serves as the base class for specific types of tasks.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varsha13152"},"content":" */","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varsha13152"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varsha13152"},"content":"    protected String description;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varsha13152"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varsha13152"},"content":"     * Constructs a new Task with the specified description and completion status.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"varsha13152"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"varsha13152"},"content":"     * @param isDone      The completion status of the task (true if done, false otherwise).","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"varsha13152"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varsha13152"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"varsha13152"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"varsha13152"},"content":"     * Returns the status icon for the task.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"varsha13152"},"content":"     * An \"X\" indicates the task is completed, and a blank space indicates it is not.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"varsha13152"},"content":"     * @return A string representing the task\u0027s completion status.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"varsha13152"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"varsha13152"},"content":"        return (isDone ? \"X\" : \" \"); // Mark completed tasks with \"X\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"varsha13152"},"content":"     * Marks the task as completed.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"varsha13152"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"varsha13152"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"varsha13152"},"content":"     * Marks the task as not completed.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"varsha13152"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"varsha13152"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"varsha13152"},"content":"     * Returns the string representation of the task, including its status icon","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"varsha13152"},"content":"     * and description.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"varsha13152"},"content":"     * @return A string describing the task.","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"varsha13152"},"content":"    @Override","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"varsha13152"},"content":"    public String toString() {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"varsha13152"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), this.description);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"varsha13152"},"content":"}","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"varsha13152":57}},{"path":"src/main/java/task/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varsha13152"},"content":"package task;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varsha13152"},"content":"import tabby.Ui;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varsha13152"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varsha13152"},"content":"/**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varsha13152"},"content":" * Manages a list of tasks, providing functionality to add, delete, mark as done, and display tasks.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varsha13152"},"content":" * Also integrates with the Storage class for saving and loading tasks.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varsha13152"},"content":" */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varsha13152"},"content":"public class TaskManager {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varsha13152"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varsha13152"},"content":"    private final Storage storage;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"varsha13152"},"content":"    private final Ui ui;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"varsha13152"},"content":"     * Constructs a TaskManager instance with the specified storage and user interface.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"varsha13152"},"content":"     * @param storage The Storage instance for saving and loading tasks.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"varsha13152"},"content":"     * @param ui      The Ui instance for displaying messages and errors.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"varsha13152"},"content":"    public TaskManager(Storage storage, Ui ui) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"varsha13152"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"varsha13152"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"varsha13152"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"varsha13152"},"content":"        loadTasks();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"varsha13152"},"content":"     * Loads tasks from storage into the task list.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"varsha13152"},"content":"     * @return An ArrayList of loaded tasks.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"varsha13152"},"content":"    public ArrayList\u003cTask\u003e loadTasks() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"varsha13152"},"content":"        return storage.loadTasks(this);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"varsha13152"},"content":"     * Adds a new task to the task list and saves it to storage.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"varsha13152"},"content":"     * @param task The task to be added.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"varsha13152"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"varsha13152"},"content":"        taskList.add(task);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"varsha13152"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"varsha13152"},"content":"     * Deletes a task from the task list based on its index and saves the updated list to storage.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"varsha13152"},"content":"     * @param taskNumber The index of the task to be deleted.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"varsha13152"},"content":"     * @return A message confirming the task deletion or an error message.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"varsha13152"},"content":"    public String deleteTask(int taskNumber) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"varsha13152"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"varsha13152"},"content":"            if (taskNumber \u003c 0 || taskNumber \u003e\u003d taskList.size()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"varsha13152"},"content":"                throw new IndexOutOfBoundsException(\"Task number is out of range.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"varsha13152"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"varsha13152"},"content":"            Task task \u003d taskList.get(taskNumber);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"varsha13152"},"content":"            taskList.remove(taskNumber);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"varsha13152"},"content":"            storage.saveTasks(taskList);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"varsha13152"},"content":"            return taskResponse(\"deleted\", task);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"varsha13152"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"varsha13152"},"content":"            return \"Error: Unable to delete task. \" + e.getMessage();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"varsha13152"},"content":"     * Provides feedback to the user about a task-related action.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"varsha13152"},"content":"     * @param command The action performed (e.g., \"added\", \"deleted\").","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"varsha13152"},"content":"     * @param task    The task that was affected.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"varsha13152"},"content":"     * @return A message describing the result of the action.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"varsha13152"},"content":"    public String taskResponse(String command, Task task) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"varsha13152"},"content":"        int noOfTasks \u003d taskList.size();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"varsha13152"},"content":"        if (noOfTasks \u003d\u003d 1) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"varsha13152"},"content":"            return String.format(\"Got it. I\u0027ve %s this task:\\n %s\\nNow you have 1 task in the list\", command, task);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"varsha13152"},"content":"        } else {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"varsha13152"},"content":"            return String.format(\"Got it. I\u0027ve %s this task:\\n %s\\nNow you have %d tasks in the list\", command, task, noOfTasks);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"varsha13152"},"content":"     * Retrieves the list of tasks.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"varsha13152"},"content":"     * @return An ArrayList of tasks.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"varsha13152"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"varsha13152"},"content":"        return taskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"varsha13152"},"content":"     * Displays all tasks in the task list to the user.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"varsha13152"},"content":"    public String displayTaskList() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"varsha13152"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"varsha13152"},"content":"            return ui.display(\"No tasks in your list!\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"varsha13152"},"content":"        } else {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"varsha13152"},"content":"            StringBuilder taskListString \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"varsha13152"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"varsha13152"},"content":"                taskListString.append(i + 1).append(\". \").append(taskList.get(i)).append(\"\\n\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"varsha13152"},"content":"            }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"varsha13152"},"content":"            // Feed the combined string to ui.display","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"varsha13152"},"content":"            return taskListString.toString().trim();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"varsha13152"},"content":"     * Marks a task as done based on its index and saves the updated list to storage.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"varsha13152"},"content":"     * @param taskNumber The index of the task to mark as done.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"varsha13152"},"content":"     * @return A message confirming the task has been marked as done or an error message.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"varsha13152"},"content":"    public String markTaskDone(int taskNumber) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"varsha13152"},"content":"        if (taskNumber \u003e\u003d 0 \u0026\u0026 taskNumber \u003c taskList.size()) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"varsha13152"},"content":"            Task task \u003d taskList.get(taskNumber);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"varsha13152"},"content":"            task.markAsDone();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"varsha13152"},"content":"            storage.saveTasks(taskList);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"varsha13152"},"content":"            return String.format(\"Nice! I\u0027ve marked this task as done:\\n %s\", task);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"varsha13152"},"content":"        } else {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"varsha13152"},"content":"            return \"Invalid task number.\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"varsha13152"},"content":"     * Marks a task as not done based on its index and saves the updated list to storage.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"varsha13152"},"content":"     * @param taskNumber The index of the task to mark as not done.","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"varsha13152"},"content":"     * @return A message confirming the task has been marked as not done or an error message.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"varsha13152"},"content":"    public String markTaskNotDone(int taskNumber) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"varsha13152"},"content":"        if (taskNumber \u003e\u003d 0 \u0026\u0026 taskNumber \u003c taskList.size()) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"varsha13152"},"content":"            Task task \u003d taskList.get(taskNumber);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"varsha13152"},"content":"            task.markAsNotDone();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"varsha13152"},"content":"            storage.saveTasks(taskList);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"varsha13152"},"content":"            return String.format(\"OK, I\u0027ve marked this task as not done yet:\\n %s\", task);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"varsha13152"},"content":"        } else {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"varsha13152"},"content":"            return \"Invalid task number.\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"varsha13152"},"content":"     * Searches the task list for tasks containing the specified keyword and displays the matching tasks.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"varsha13152"},"content":"     * @param keyword The keyword to search for within task descriptions.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"varsha13152"},"content":"     * If the task list is empty, an error message is displayed indicating there are no tasks.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"varsha13152"},"content":"     * If no matching tasks are found, an error message is displayed.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"varsha13152"},"content":"     * Otherwise, the matching tasks are displayed in a formatted list.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"varsha13152"},"content":"     * Searches the task list for tasks containing the specified keyword and displays the matching tasks.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"varsha13152"},"content":"     * @param keyword The keyword to search for within task descriptions.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"varsha13152"},"content":"     * @return A message containing the matching tasks or an error message.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"varsha13152"},"content":"    public String findTask(String keyword) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"varsha13152"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"varsha13152"},"content":"            return \"There are no tasks in your list!\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"varsha13152"},"content":"        StringBuilder taskListString \u003d new StringBuilder();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"varsha13152"},"content":"        int matchCount \u003d 0;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"varsha13152"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"varsha13152"},"content":"            String task \u003d taskList.get(i).toString();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"varsha13152"},"content":"            if (task.contains(keyword)) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"varsha13152"},"content":"                taskListString.append(++matchCount).append(\". \").append(task).append(\"\\n\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"varsha13152"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"varsha13152"},"content":"        if (matchCount \u003d\u003d 0) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"varsha13152"},"content":"            return \"No matching tasks found!\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"varsha13152"},"content":"        } else {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"varsha13152"},"content":"            return \"Here are the matching tasks in your list:\\n\" + taskListString.toString().trim();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"varsha13152"},"content":"    public String remind() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"varsha13152"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"varsha13152"},"content":"            return \"There are no tasks in your list!\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"varsha13152"},"content":"        StringBuilder taskListString \u003d new StringBuilder();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"varsha13152"},"content":"        int matchCount \u003d 0;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"varsha13152"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"varsha13152"},"content":"            Task task \u003d taskList.get(i);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"varsha13152"},"content":"            if (!task.getStatusIcon().equals(\"X\") \u0026\u0026 !(task instanceof ToDo)) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"varsha13152"},"content":"                taskListString.append(++matchCount).append(\". \").append(task).append(\"\\n\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"varsha13152"},"content":"            }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"varsha13152"},"content":"        if (matchCount \u003d\u003d 0) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"varsha13152"},"content":"            return \"No matching tasks found!\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"varsha13152"},"content":"        } else {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"varsha13152"},"content":"            return \"Here are upcoming deadlines/events in your list:\\n\" + taskListString.toString().trim();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"varsha13152"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"varsha13152":206}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varsha13152"},"content":"package task;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varsha13152"},"content":"/**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varsha13152"},"content":" * Represents a simple to-do task without a specific deadline or duration.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varsha13152"},"content":" * This class extends the {@code Task} class to represent tasks that need to be done.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varsha13152"},"content":" */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varsha13152"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varsha13152"},"content":"     * Constructs a new {@code ToDo} task with the specified description.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varsha13152"},"content":"     *","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varsha13152"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"varsha13152"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"varsha13152"},"content":"        super(description, isDone);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varsha13152"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"varsha13152"},"content":"     * Returns a string representation of the to-do task.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"varsha13152"},"content":"     * @return A formatted string representing the to-do task.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"varsha13152"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"varsha13152"},"content":"    @Override","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"varsha13152"},"content":"    public String toString() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"varsha13152"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"varsha13152"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"varsha13152":26}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"varsha13152"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varsha13152"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varsha13152"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varsha13152"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varsha13152"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varsha13152"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varsha13152"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varsha13152"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varsha13152"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varsha13152"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varsha13152"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"varsha13152"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"varsha13152"},"content":"         spacing\u003d\"10\"\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"varsha13152"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"varsha13152"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varsha13152"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"varsha13152"},"content":"                \u003cInsets left\u003d\"10\" right\u003d\"10\"/\u003e \u003c!-- Padding between text and image --\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"varsha13152"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"varsha13152"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"varsha13152"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"varsha13152"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"varsha13152"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"varsha13152"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"varsha13152"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"varsha13152"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"varsha13152":27}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"varsha13152"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varsha13152"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varsha13152"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varsha13152"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varsha13152"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varsha13152"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varsha13152"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varsha13152"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varsha13152"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"600.0\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varsha13152"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varsha13152"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"varsha13152"},"content":"            fx:controller\u003d\"gui.MainWindow\"\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"varsha13152"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"varsha13152"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"varsha13152"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varsha13152"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"varsha13152"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"varsha13152"},"content":"                   prefWidth\u003d\"500.0\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"varsha13152"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"varsha13152"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"varsha13152"},"content":"                layoutX\u003d\"500.0\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"varsha13152"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"varsha13152"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"varsha13152"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"varsha13152"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"varsha13152"},"content":"                prefWidth\u003d\"100.0\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"varsha13152"},"content":"                text\u003d\"Send\" /\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"varsha13152"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"varsha13152"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"varsha13152"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"varsha13152"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"varsha13152"},"content":"                    prefWidth\u003d\"600.0\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"varsha13152"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"varsha13152"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"varsha13152"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"varsha13152"},"content":"                      prefHeight\u003d\"552.0\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"varsha13152"},"content":"                      prefWidth\u003d\"580.0\" /\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"varsha13152"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"varsha13152"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"varsha13152"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"varsha13152"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"varsha13152":43}},{"path":"src/test/java/action/AddActionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varsha13152"},"content":"package action;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varsha13152"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varsha13152"},"content":"import exceptions.TabbyException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varsha13152"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varsha13152"},"content":"import tabby.Ui;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varsha13152"},"content":"import task.Storage;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varsha13152"},"content":"import task.TaskManager;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varsha13152"},"content":"import task.Task;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varsha13152"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"varsha13152"},"content":"public class AddActionTest {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"varsha13152"},"content":"    private static final String DIRECTORY \u003d \"./data\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"varsha13152"},"content":"    private static final String FILENAME \u003d \"tabby_data.txt\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varsha13152"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"varsha13152"},"content":"    public void addToDoTest() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"varsha13152"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"varsha13152"},"content":"        Storage storage \u003d new Storage(DIRECTORY, FILENAME, ui);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"varsha13152"},"content":"        TaskManager taskManager \u003d new TaskManager(storage, ui);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"varsha13152"},"content":"        taskManager.getTasks().clear();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"varsha13152"},"content":"        String input \u003d \"todo walk dog\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"varsha13152"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"varsha13152"},"content":"            Action action \u003d Action.userAction(input, false, false, ui);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"varsha13152"},"content":"            action.runTask(taskManager);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"varsha13152"},"content":"        } catch (TabbyException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"varsha13152"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"varsha13152"},"content":"        ArrayList\u003cTask\u003e taskList \u003d taskManager.getTasks();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"varsha13152"},"content":"        String output \u003d \"\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"varsha13152"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"varsha13152"},"content":"            output \u003d task.toString();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"varsha13152"},"content":"        String expected \u003d \"[T][ ] walk dog\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"varsha13152"},"content":"        assertEquals(expected, output);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"varsha13152"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"varsha13152"},"content":"    public void addDeadlineTest() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"varsha13152"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"varsha13152"},"content":"        Storage storage \u003d new Storage(DIRECTORY, FILENAME, ui);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"varsha13152"},"content":"        TaskManager taskManager \u003d new TaskManager(storage, ui);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"varsha13152"},"content":"        taskManager.getTasks().clear();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"varsha13152"},"content":"        String input \u003d \"deadline return book /by 2/12/2019 1800\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"varsha13152"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"varsha13152"},"content":"            Action action \u003d Action.userAction(input, false, true, ui);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"varsha13152"},"content":"            action.runTask(taskManager);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"varsha13152"},"content":"        } catch (TabbyException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"varsha13152"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"varsha13152"},"content":"        ArrayList\u003cTask\u003e taskList \u003d taskManager.getTasks();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"varsha13152"},"content":"        String output \u003d \"\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"varsha13152"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"varsha13152"},"content":"            output \u003d task.toString();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"varsha13152"},"content":"        String expected \u003d \"[D][ ] return book (by: Dec 02 2019, 6:00 pm)\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"varsha13152"},"content":"        assertEquals(expected, output);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"varsha13152"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"varsha13152"},"content":"    public void addEventTest() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"varsha13152"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"varsha13152"},"content":"        Storage storage \u003d new Storage(DIRECTORY, FILENAME, ui);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"varsha13152"},"content":"        TaskManager taskManager \u003d new TaskManager(storage, ui);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"varsha13152"},"content":"        taskManager.getTasks().clear();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"varsha13152"},"content":"        String input \u003d \"event project meeting /from 2/12/2019 1800 /to 2/12/2019 2000\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"varsha13152"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"varsha13152"},"content":"            Action action \u003d Action.userAction(input, false, true, ui);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"varsha13152"},"content":"            action.runTask(taskManager);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"varsha13152"},"content":"        } catch (TabbyException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"varsha13152"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"varsha13152"},"content":"        ArrayList\u003cTask\u003e taskList \u003d taskManager.getTasks();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"varsha13152"},"content":"        String output \u003d \"\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"varsha13152"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"varsha13152"},"content":"            output \u003d task.toString();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"varsha13152"},"content":"        String expected \u003d \"[E][ ] project meeting (from: Dec 02 2019, 6:00 pm to: Dec 02 2019, 8:00 pm)\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"varsha13152"},"content":"        assertEquals(expected, output);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"varsha13152"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"varsha13152":93}},{"path":"src/test/java/action/MarkActionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varsha13152"},"content":"package action;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varsha13152"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varsha13152"},"content":"import exceptions.TabbyException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varsha13152"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varsha13152"},"content":"import tabby.Ui;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varsha13152"},"content":"import task.Storage;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varsha13152"},"content":"import task.TaskManager;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varsha13152"},"content":"import task.Task;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"varsha13152"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"varsha13152"},"content":"public class MarkActionTest {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"varsha13152"},"content":"    private static final String DIRECTORY \u003d \"./data\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"varsha13152"},"content":"    private static final String FILENAME \u003d \"tabby_data.txt\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varsha13152"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"varsha13152"},"content":"    public void MarkTest() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"varsha13152"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"varsha13152"},"content":"        Storage storage \u003d new Storage(DIRECTORY, FILENAME, ui);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"varsha13152"},"content":"        TaskManager taskManager \u003d new TaskManager(storage, ui);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"varsha13152"},"content":"        taskManager.getTasks().clear();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"varsha13152"},"content":"        String add_input \u003d \"todo walk dog\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"varsha13152"},"content":"        String mark_input \u003d \"mark 1\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"varsha13152"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"varsha13152"},"content":"            Action add_action \u003d Action.userAction(add_input, false, false, ui);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"varsha13152"},"content":"            add_action.runTask(taskManager);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"varsha13152"},"content":"            Action mark_action \u003d Action.userAction(mark_input, false, false, ui);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"varsha13152"},"content":"            mark_action.runTask(taskManager);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"varsha13152"},"content":"        } catch (TabbyException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"varsha13152"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"varsha13152"},"content":"        ArrayList\u003cTask\u003e taskList \u003d taskManager.getTasks();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"varsha13152"},"content":"        String output \u003d \"\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"varsha13152"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"varsha13152"},"content":"            output \u003d task.toString();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"varsha13152"},"content":"        String expected \u003d \"[T][X] walk dog\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"varsha13152"},"content":"        assertEquals(expected, output);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"varsha13152"},"content":"    @Test","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"varsha13152"},"content":"    public void MarkInvalidTest() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"varsha13152"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"varsha13152"},"content":"        Storage storage \u003d new Storage(DIRECTORY, FILENAME, ui);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"varsha13152"},"content":"        TaskManager taskManager \u003d new TaskManager(storage, ui);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"varsha13152"},"content":"        taskManager.getTasks().clear();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"varsha13152"},"content":"        String mark_input \u003d \"mark 2\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"varsha13152"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"varsha13152"},"content":"            Action mark_action \u003d Action.userAction(mark_input, false, false, ui);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"varsha13152"},"content":"            mark_action.runTask(taskManager);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"varsha13152"},"content":"        } catch (TabbyException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"varsha13152"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"varsha13152"},"content":"        ArrayList\u003cTask\u003e taskList \u003d taskManager.getTasks();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"varsha13152"},"content":"        String output \u003d \"\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"varsha13152"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"varsha13152"},"content":"            output \u003d task.toString();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"varsha13152"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"varsha13152"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"varsha13152"},"content":"        String expected \u003d \"\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"varsha13152"},"content":"        assertEquals(expected, output);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"varsha13152"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"varsha13152"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"varsha13152":70}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"varsha13152"},"content":"todo borrow book","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"varsha13152"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"varsha13152"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"varsha13152"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"varsha13152"},"content":"mark 2","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"varsha13152"},"content":"mark 1","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"varsha13152"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"varsha13152"},"content":"unmark 1","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"varsha13152"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varsha13152"},"content":"bye","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"varsha13152":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"varsha13152"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\tabby\\*.java","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"varsha13152"},"content":"java -classpath ..\\bin tabby.Tabby \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"varsha13152":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"varsha13152"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/tabby/*.java","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"varsha13152"},"content":"java -classpath ../bin Tabby \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"varsha13152":2,"-":36}}]
