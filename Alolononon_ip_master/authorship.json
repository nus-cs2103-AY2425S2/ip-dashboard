[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Alolononon"},"content":"References:","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Alolononon"},"content":"- Princess icon photo: https://www.flaticon.com/free-icon/princess_1596580","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Alolononon"},"content":"- Prince icon photo: https://www.flaticon.com/free-icon/queen_10751424","lastModifiedDate":"2025-02-22","isFullCredit":false}],"authorContributionMap":{"Alolononon":3}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"Alolononon"},"content":"plugins {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Alolononon"},"content":"    id \u0027java\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Alolononon"},"content":"    id \u0027application\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Alolononon"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Alolononon"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Alolononon"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Alolononon"},"content":"checkstyle {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Alolononon"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Alolononon"},"content":"}","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Alolononon"},"content":"group \u003d \u0027org.example\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Alolononon"},"content":"version \u003d \u00271.0-SNAPSHOT\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Alolononon"},"content":"repositories {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Alolononon"},"content":"    mavenCentral()","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Alolononon"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Alolononon"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Alolononon"},"content":"dependencies {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Alolononon"},"content":"    testImplementation platform(\u0027org.junit:junit-bom:5.10.0\u0027)","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Alolononon"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Alolononon"},"content":"    implementation group: \u0027com.joestelmach\u0027, name: \u0027natty\u0027, version: \u00270.13\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Alolononon"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Alolononon"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Alolononon"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Alolononon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Alolononon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Alolononon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Alolononon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Alolononon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Alolononon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Alolononon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Alolononon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Alolononon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Alolononon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Alolononon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Alolononon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Alolononon"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Alolononon"},"content":"test {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Alolononon"},"content":"    useJUnitPlatform()","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Alolononon"},"content":"    testLogging {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Alolononon"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Alolononon"},"content":"        showExceptions true","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Alolononon"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Alolononon"},"content":"        showCauses true","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Alolononon"},"content":"        showStackTraces true","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Alolononon"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Alolononon"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Alolononon"},"content":"application {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Alolononon"},"content":"//    mainClass.set(\"princess.Princess\")","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Alolononon"},"content":"    mainClass.set(\"Launcher\")","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Alolononon"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Alolononon"},"content":"shadowJar {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Alolononon"},"content":"    archiveBaseName \u003d \"princess\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Alolononon"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"Alolononon":65,"-":5}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Alolononon"},"content":"# Princess Task Manager User Guide","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Alolononon"},"content":"Ui.png","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"Alolononon":2,"-":29}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"Alolononon"},"content":"rootProject.name \u003d \u0027untitled\u0027","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"Alolononon":2}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alolononon"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Alolononon"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Alolononon"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Alolononon"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Alolononon"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Alolononon"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Alolononon"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Alolononon"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Alolononon"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Alolononon"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Alolononon"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Alolononon"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Alolononon"},"content":"    private Label text;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Alolononon"},"content":"    @FXML","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Alolononon"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Alolononon"},"content":"    @FXML","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Alolononon"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Alolononon"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Alolononon"},"content":"        try {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Alolononon"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Alolononon"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Alolononon"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Alolononon"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Alolononon"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Alolononon"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Alolononon"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Alolononon"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Alolononon"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Alolononon"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Alolononon"},"content":"    private void flip() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Alolononon"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Alolononon"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Alolononon"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Alolononon"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Alolononon"},"content":"    public static DialogBox getUserDialog(String s, Image i) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Alolononon"},"content":"        return new DialogBox(s, i);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Alolononon"},"content":"    public static DialogBox getPrincessDialog(String s, Image i) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Alolononon"},"content":"        var db \u003d new DialogBox(s, i);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Alolononon"},"content":"        db.flip();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Alolononon"},"content":"        return db;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Alolononon"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"Alolononon":69}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alolononon"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Alolononon"},"content":"/**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Alolononon"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Alolononon"},"content":" */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Alolononon"},"content":"public class Launcher {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Alolononon"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Alolononon"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Alolononon"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"Alolononon":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alolononon"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Alolononon"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Alolononon"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Alolononon"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Alolononon"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Alolononon"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Alolononon"},"content":"import princess.Princess;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Alolononon"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Alolononon"},"content":"    private Princess princess \u003d new Princess();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Alolononon"},"content":"    @Override","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Alolononon"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Alolononon"},"content":"        try {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Alolononon"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Alolononon"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Alolononon"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Alolononon"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Alolononon"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setPrincess(princess); // inject the princess instance","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Alolononon"},"content":"            stage.show();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Alolononon"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Alolononon"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Alolononon"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Alolononon"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"Alolononon":34}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alolononon"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Alolononon"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Alolononon"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Alolononon"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Alolononon"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Alolononon"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Alolononon"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Alolononon"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Alolononon"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Alolononon"},"content":"import javafx.util.Duration;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Alolononon"},"content":"import princess.Princess;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Alolononon"},"content":"/**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Alolononon"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Alolononon"},"content":" */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Alolononon"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Alolononon"},"content":"    @FXML","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Alolononon"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Alolononon"},"content":"    @FXML","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Alolononon"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Alolononon"},"content":"    @FXML","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Alolononon"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Alolononon"},"content":"    @FXML","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Alolononon"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Alolononon"},"content":"    private Princess princess;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Alolononon"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaPrince.png\"));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Alolononon"},"content":"    private Image princessImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaPrincess.png\"));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Alolononon"},"content":"    @FXML","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Alolononon"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Alolononon"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Alolononon"},"content":"        // Display welcome message from Princess","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Alolononon"},"content":"        if (princess !\u003d null) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Alolononon"},"content":"            dialogContainer.getChildren().add(","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Alolononon"},"content":"                    DialogBox.getPrincessDialog(princess.getWelcomeResponse(), princessImage)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Alolononon"},"content":"            );","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Alolononon"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Alolononon"},"content":"    /** Injects the Princess instance */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Alolononon"},"content":"    public void setPrincess(Princess p) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Alolononon"},"content":"        princess \u003d p;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Alolononon"},"content":"        // Show the welcome message when the bot is set","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Alolononon"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Alolononon"},"content":"                DialogBox.getPrincessDialog(princess.getWelcomeResponse(), princessImage)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Alolononon"},"content":"        );","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Alolononon"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Princess\u0027s reply and then appends them","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Alolononon"},"content":"     * to the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Alolononon"},"content":"    @FXML","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Alolononon"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Alolononon"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Alolononon"},"content":"        String response \u003d princess.getResponse(input);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Alolononon"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Alolononon"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Alolononon"},"content":"                DialogBox.getPrincessDialog(response, princessImage)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Alolononon"},"content":"        );","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Alolononon"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Alolononon"},"content":"        // solution below was retrieved from chatgpt at 21 feb 2025","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Alolononon"},"content":"        // original prompt: help me close a window after a slight delay","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Alolononon"},"content":"        // If user types \"bye\", delay closing the application","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Alolononon"},"content":"        if (princess.isExit()) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Alolononon"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(2)); // 2-second delay","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Alolononon"},"content":"            delay.setOnFinished(event -\u003e Platform.exit()); // Close app after delay","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Alolononon"},"content":"            delay.play();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Alolononon"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Alolononon"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"Alolononon":81}},{"path":"src/main/java/princess/Princess.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alolononon"},"content":"package princess;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Alolononon"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Alolononon"},"content":"import princess.command.Command;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Alolononon"},"content":"import princess.command.Storage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Alolononon"},"content":"import princess.task.TaskList;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Alolononon"},"content":"import princess.ui.UI;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Alolononon"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Alolononon"},"content":" * A task management application that allows users to add, delete, mark, and unmark tasks.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Alolononon"},"content":" * Tasks can be of type Todo, Deadline, or Event. Tasks are saved to and loaded from a file.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Alolononon"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Alolononon"},"content":"public class Princess {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Alolononon"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Alolononon"},"content":"    private UI ui;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Alolononon"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Alolononon"},"content":"    private String filePath \u003d \"data/saved_tasks.txt\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Alolononon"},"content":"    private Command command;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Alolononon"},"content":"     * Creates a Princess application with the given file path to load and save tasks.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Alolononon"},"content":"    public Princess() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Alolononon"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Alolononon"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Alolononon"},"content":"        taskList \u003d new TaskList(storage.loadTasksFromFile());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Alolononon"},"content":"        command \u003d new Command(ui);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Alolononon"},"content":"     * The main method to run the application.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Alolononon"},"content":"     * @param args command-line arguments (not used)","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Alolononon"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Alolononon"},"content":"        new Princess().run();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Alolononon"},"content":"     * Runs the task management app: displays messages, executes commands, and saves tasks.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Alolononon"},"content":"    public void run() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Alolononon"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Alolononon"},"content":"        String output \u003d \"\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Alolononon"},"content":"        output \u003d ui.showDivider() + ui.showWelcomeMessage() + ui.showDivider() + \"\\n\";; // Display welcome message","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Alolononon"},"content":"        System.out.print(output);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Alolononon"},"content":"        try {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Alolononon"},"content":"            // main command","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Alolononon"},"content":"            while (true) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Alolononon"},"content":"                String input \u003d sc.nextLine();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Alolononon"},"content":"                output \u003d ui.showDivider();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Alolononon"},"content":"                output +\u003d command.execute(input, taskList);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Alolononon"},"content":"                System.out.print(output);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Alolononon"},"content":"                if (command.isExit()) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Alolononon"},"content":"                    break;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Alolononon"},"content":"                }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Alolononon"},"content":"                System.out.print(ui.showEndingDivider()); // show ending divider after every action","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Alolononon"},"content":"                storeTasklistToFile();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Alolononon"},"content":"            }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Alolononon"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Alolononon"},"content":"            System.out.println(\"Oops! The princess has encountered a royal error. \"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Alolononon"},"content":"                    + \"Time to call in the knights of debugging! \\n Terminal error: \" + e.getMessage());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Alolononon"},"content":"            System.out.println(e);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Alolononon"},"content":"        } finally {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Alolononon"},"content":"            System.out.print(ui.showDivider());","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Alolononon"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Alolononon"},"content":"    private void storeTasklistToFile() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Alolononon"},"content":"        // Save tasks to file before exiting","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Alolononon"},"content":"        try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Alolononon"},"content":"            storage.writeToFile(taskList.getTasks());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Alolononon"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Alolononon"},"content":"            System.out.println(\"There was an error saving your tasks: \" + e.getMessage());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Alolononon"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Alolononon"},"content":"    public String getWelcomeResponse() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Alolononon"},"content":"        return ui.showWelcomeMessage();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Alolononon"},"content":"     * Generates a response for the user\u0027s chat message.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Alolononon"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Alolononon"},"content":"        String output \u003d \"\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Alolononon"},"content":"        try {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Alolononon"},"content":"            output +\u003d command.execute(input, taskList);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Alolononon"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Alolononon"},"content":"            output +\u003d \"Oops! The princess has encountered a royal error. \"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Alolononon"},"content":"                    + \"Time to call in the knights of debugging! \\n Terminal error: \" + e.getMessage();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Alolononon"},"content":"        } finally {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Alolononon"},"content":"            storeTasklistToFile();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Alolononon"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Alolononon"},"content":"        return output;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Alolononon"},"content":"     * Checks if the exit command has been issued.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Alolononon"},"content":"     * @return true if the application should exit, false otherwise.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Alolononon"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Alolononon"},"content":"        return command.isExit();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Alolononon"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"Alolononon":125}},{"path":"src/main/java/princess/PrincessException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alolononon"},"content":"package princess;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Alolononon"},"content":"/**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Alolononon"},"content":" * A custom exception for handling errors specific to the Princess application.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Alolononon"},"content":" */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Alolononon"},"content":"public class PrincessException extends Exception {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Alolononon"},"content":"     * Constructs a new \u003ccode\u003ePrincessException\u003c/code\u003e with the specified detail message.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Alolononon"},"content":"     * @param msg the detail message","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Alolononon"},"content":"    public PrincessException(String msg) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Alolononon"},"content":"        super(msg);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Alolononon"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"Alolononon":15}},{"path":"src/main/java/princess/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alolononon"},"content":"package princess.command;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Alolononon"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Alolononon"},"content":"import princess.PrincessException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Alolononon"},"content":"import princess.task.Deadline;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Alolononon"},"content":"import princess.task.Event;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Alolononon"},"content":"import princess.task.Task;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Alolononon"},"content":"import princess.task.TaskList;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Alolononon"},"content":"import princess.task.Todo;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Alolononon"},"content":"import princess.ui.UI;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Alolononon"},"content":"/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Alolononon"},"content":" * Handles different user commands and executes the corresponding actions.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Alolononon"},"content":" */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Alolononon"},"content":"public class Command {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Alolononon"},"content":"    public static final String NO_MATCHING_TASKS_FOUND_MESSAGE \u003d \"     No matching tasks found.\\n\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Alolononon"},"content":"    private UI ui;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Alolononon"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Alolononon"},"content":"    private String princessResponse \u003d \"\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Alolononon"},"content":"     * Constructor to initialize the Command object with a UI.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Alolononon"},"content":"     * @param ui The UI to interact with the user.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Alolononon"},"content":"    public Command(UI ui) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Alolononon"},"content":"        assert ui !\u003d null : \"UI instance cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Alolononon"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Alolononon"},"content":"     * Executes the command based on user input.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Alolononon"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Alolononon"},"content":"     * @throws Exception If an error occurs during command execution.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Alolononon"},"content":"    public String execute(String input, TaskList taskList) throws Exception {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Alolononon"},"content":"        assert input !\u003d null \u0026\u0026 !input.trim().isEmpty() : \"Input cannot be null or empty\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Alolononon"},"content":"        assert taskList !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Alolononon"},"content":"        princessResponse \u003d \"\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Alolononon"},"content":"        // Convert input into CommandType","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Alolononon"},"content":"        String[] inputParts \u003d input.split(\" \");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Alolononon"},"content":"        CommandType commandType \u003d CommandType.fromString(inputParts[0]);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Alolononon"},"content":"        try {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Alolononon"},"content":"            // Commands","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Alolononon"},"content":"            switch (commandType) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Alolononon"},"content":"            // Exit the application","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Alolononon"},"content":"            case BYE:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Alolononon"},"content":"                handleExitCommand();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Alolononon"},"content":"                break;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Alolononon"},"content":"            case LIST:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Alolononon"},"content":"                handleListCommand(taskList);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Alolononon"},"content":"                break;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Alolononon"},"content":"            case DELETE:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Alolononon"},"content":"                handleDeleteCommand(taskList, inputParts);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Alolononon"},"content":"                break;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Alolononon"},"content":"            case MARK:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Alolononon"},"content":"                handleMarkCommand(taskList, inputParts);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Alolononon"},"content":"                break;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Alolononon"},"content":"            case UNMARK:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Alolononon"},"content":"                handleUnmarkCommand(taskList, inputParts);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Alolononon"},"content":"                break;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Alolononon"},"content":"            case TODO:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Alolononon"},"content":"                handleAddToDo(inputParts, input, taskList);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Alolononon"},"content":"                break;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Alolononon"},"content":"            case DEADLINE:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Alolononon"},"content":"                handleAddDeadline(inputParts, input, taskList);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Alolononon"},"content":"                break;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Alolononon"},"content":"            case EVENT:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Alolononon"},"content":"                handleAddEvent(inputParts, input, taskList);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Alolononon"},"content":"                break;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Alolononon"},"content":"            case HELP:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Alolononon"},"content":"                princessResponse +\u003d ui.showHelpMessage(); // Display help message","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Alolononon"},"content":"                break;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Alolononon"},"content":"            case FIND:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Alolononon"},"content":"                handleFindFunction(inputParts, input, taskList);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Alolononon"},"content":"                break;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Alolononon"},"content":"            case INVALID:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Alolononon"},"content":"            default:","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Alolononon"},"content":"                throw new PrincessException(ui.showInvalidCommandMessage());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Alolononon"},"content":"            }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Alolononon"},"content":"        } catch (PrincessException e) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Alolononon"},"content":"            princessResponse +\u003d e.getMessage() + \"\\n\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Alolononon"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Alolononon"},"content":"        return princessResponse;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Alolononon"},"content":"     * Checks if the program should exit.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Alolononon"},"content":"     * @return {@code true} if the exit command has been issued, otherwise {@code false}.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Alolononon"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Alolononon"},"content":"        return isExit;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Alolononon"},"content":"     * Handles the exit command by setting the exit flag and displaying the exit message.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Alolononon"},"content":"     * This method marks the application as ready to terminate.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Alolononon"},"content":"    private void handleExitCommand() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Alolononon"},"content":"        isExit \u003d true;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Alolononon"},"content":"        princessResponse +\u003d ui.showEndingMessage(); // show exiting message when closing app","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Alolononon"},"content":"     * Lists all tasks in the task list.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Alolononon"},"content":"     * @param taskList The list of tasks to be displayed.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Alolononon"},"content":"    private void handleListCommand(TaskList taskList) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Alolononon"},"content":"        assert taskList !\u003d null : \"TaskList should not be null when listing\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Alolononon"},"content":"        //listing out all tasks","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Alolononon"},"content":"        princessResponse +\u003d UI.MESSAGE_LIST_HEADER;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Alolononon"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Alolononon"},"content":"            princessResponse +\u003d UI.MESSAGE_EMPTY_LIST;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Alolononon"},"content":"        } else {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Alolononon"},"content":"            generateTaskListString(taskList);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Alolononon"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Alolononon"},"content":"    private void generateTaskListString(TaskList taskList) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Alolononon"},"content":"        int num \u003d 1;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Alolononon"},"content":"        for (Task elem : taskList.getTasks()) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Alolononon"},"content":"            princessResponse +\u003d \"     \" + Integer.toString(num++) + \".\" + elem.toString() + \"\\n\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Alolononon"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Alolononon"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Alolononon"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Alolononon"},"content":"     * @param inputParts The command input split into parts.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Alolononon"},"content":"     * @throws PrincessException If the input is invalid.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Alolononon"},"content":"    private void handleDeleteCommand(TaskList taskList, String[] inputParts) throws PrincessException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Alolononon"},"content":"        assert taskList !\u003d null : \"TaskList should not be null when deleting\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Alolononon"},"content":"        // Delete a task","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Alolononon"},"content":"        validateTaskIndex(taskList, inputParts);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Alolononon"},"content":"        int elemNum \u003d Integer.parseInt(inputParts[1]);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Alolononon"},"content":"        Task taskToRemove \u003d taskList.getElem(elemNum - 1); // Retrieve task before removal","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Alolononon"},"content":"        showDeleteMessage(taskList, taskToRemove, elemNum);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Alolononon"},"content":"        showTaskCountMessage(taskList);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Alolononon"},"content":"    private void showDeleteMessage(TaskList taskList, Task taskToRemove, int elemNum) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Alolononon"},"content":"        princessResponse +\u003d \"     Alrighty, Princess have removed this task:\\n\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Alolononon"},"content":"                + \"       \" + taskToRemove.toString() + \"\\n\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Alolononon"},"content":"        taskList.removeElem(elemNum - 1);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Alolononon"},"content":"    private void showTaskCountMessage(TaskList taskList) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Alolononon"},"content":"        princessResponse +\u003d \"     Now you have \" + taskList.getSize() + \" tasks in the list.\\n\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Alolononon"},"content":"    private static void validateTaskIndex(TaskList taskList, String[] inputParts) throws PrincessException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Alolononon"},"content":"        if (inputParts.length \u003c 2) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Alolononon"},"content":"            throw new PrincessException(\"     \" + \"OH NOOO!!! There is missing value. Please input a value.\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Alolononon"},"content":"        } else if (!isInteger(inputParts[1]) || Integer.parseInt(inputParts[1]) \u003c 1","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Alolononon"},"content":"                || Integer.parseInt(inputParts[1]) \u003e taskList.getSize()) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Alolononon"},"content":"            throw new PrincessException(\"     \" + \"OH NOOO!!! INVALID input!! Please input a proper value.\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Alolononon"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Alolononon"},"content":"     * Marks a task as completed.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Alolononon"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Alolononon"},"content":"     * @param inputParts The command input split into parts.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Alolononon"},"content":"     * @throws PrincessException If the input is invalid.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Alolononon"},"content":"    private void handleMarkCommand(TaskList taskList, String[] inputParts) throws PrincessException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Alolononon"},"content":"        assert taskList !\u003d null : \"TaskList should not be null when marking a task\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Alolononon"},"content":"        // Mark a task as done","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Alolononon"},"content":"        validateTaskIndex(taskList, inputParts);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Alolononon"},"content":"        int elemNum \u003d Integer.parseInt(inputParts[1]);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Alolononon"},"content":"        assert elemNum \u003e\u003d 1 \u0026\u0026 elemNum \u003c\u003d taskList.getSize() : \"Invalid task index for marking\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Alolononon"},"content":"        Task taskToMark \u003d taskList.getElem(elemNum - 1);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Alolononon"},"content":"        taskToMark.markTask();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Alolononon"},"content":"        showTaskMarkedMessage(taskToMark);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Alolononon"},"content":"    private void showTaskMarkedMessage(Task taskToMark) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Alolononon"},"content":"        princessResponse +\u003d \"     Nice! You are the best! Princess have help you marked this task as done:\\n\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Alolononon"},"content":"                          + \"       \" + taskToMark.toString() + \"\\n\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Alolononon"},"content":"     * Marks a task as undone.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Alolononon"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Alolononon"},"content":"     * @param inputParts The command input split into parts.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Alolononon"},"content":"     * @throws PrincessException If the input is invalid.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Alolononon"},"content":"    private void handleUnmarkCommand(TaskList taskList, String[] inputParts) throws PrincessException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Alolononon"},"content":"        assert taskList !\u003d null : \"TaskList should not be null when unmarking a task\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Alolononon"},"content":"        // Mark a task as undone","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Alolononon"},"content":"        validateTaskIndex(taskList, inputParts);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Alolononon"},"content":"        int elemNum \u003d Integer.parseInt(inputParts[1]);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Alolononon"},"content":"        assert elemNum \u003e\u003d 1 \u0026\u0026 elemNum \u003c\u003d taskList.getSize() : \"Invalid task index for unmarking\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Alolononon"},"content":"        Task taskToUnmark \u003d taskList.getElem(elemNum - 1);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Alolononon"},"content":"        taskToUnmark.unmarkTask();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Alolononon"},"content":"        showTaskUnmarkedMessage(taskToUnmark);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Alolononon"},"content":"    private void showTaskUnmarkedMessage(Task elem) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Alolononon"},"content":"        princessResponse +\u003d \"     Whattt?!?! Alright... Princess have marked this task as undone:\\n\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Alolononon"},"content":"                          + \"       \" + elem.toString() + \"\\n\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Alolononon"},"content":"     * Adds a ToDo task.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Alolononon"},"content":"     * @param inputParts The command input split into parts.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Alolononon"},"content":"     * @param input The full user input.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Alolononon"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Alolononon"},"content":"     * @throws PrincessException If the input is invalid.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Alolononon"},"content":"    private void handleAddToDo(String[] inputParts, String input, TaskList taskList) throws PrincessException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Alolononon"},"content":"        assert taskList !\u003d null : \"TaskList should not be null when adding a ToDo\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Alolononon"},"content":"        validateTaskDescription(input);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Alolononon"},"content":"        String taskName \u003d extractTaskName(input);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Alolononon"},"content":"        String placeName \u003d extractPlaceName(input);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Alolononon"},"content":"        Task newTask \u003d new Todo(taskName);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Alolononon"},"content":"        newTask.setPlace(placeName);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Alolononon"},"content":"        showTaskAddedMessage(taskList, newTask);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Alolononon"},"content":"    private static void validateTaskDescription(String input) throws PrincessException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Alolononon"},"content":"        String[] inputArr \u003d input.split(\"/at\")[0].trim().split(\" \");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Alolononon"},"content":"        if (inputArr.length \u003c 2) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Alolononon"},"content":"            throw new PrincessException(\"     \" + \"OH NOOO!!! Sweetheart, There is no task description!\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Alolononon"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"Alolononon"},"content":"    private static void validatePlaceName(String input) throws PrincessException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Alolononon"},"content":"        if (input.contains(\"/at\")) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Alolononon"},"content":"            String[] inputArray \u003d input.trim().split(\"/at\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Alolononon"},"content":"            if (inputArray.length \u003c 2) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Alolononon"},"content":"                throw new PrincessException(\"     \" + \"OH NOOO!!! Sweetheart, after putting \\\"/at\\\", \"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Alolononon"},"content":"                        + \"there is no place name!\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Alolononon"},"content":"            }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Alolononon"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"Alolononon"},"content":"    private static String extractPlaceName(String input) throws PrincessException {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Alolononon"},"content":"        if (!input.contains(\"/at\")) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Alolononon"},"content":"            return null;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Alolononon"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"Alolononon"},"content":"        validatePlaceName(input);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"Alolononon"},"content":"        String placeName \u003d input.split(\"/at\")[1].trim();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"Alolononon"},"content":"        return placeName;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"Alolononon"},"content":"    private void showTaskAddedMessage(TaskList taskList, Task newTask) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"Alolononon"},"content":"        princessResponse +\u003d ui.showTaskAdded(newTask, taskList);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"Alolononon"},"content":"    private static String extractTaskName(String input) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"Alolononon"},"content":"        return input.substring(5).split(\" /at \")[0];","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"Alolononon"},"content":"     * Adds a Deadline task.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"Alolononon"},"content":"     * @param inputParts The command input split into parts.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"Alolononon"},"content":"     * @param input The full user input.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"Alolononon"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"Alolononon"},"content":"     * @throws PrincessException If the input is invalid.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"Alolononon"},"content":"    private void handleAddDeadline(String[] inputParts, String input, TaskList taskList) throws PrincessException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"Alolononon"},"content":"        assert taskList !\u003d null : \"TaskList should not be null when adding a ToDo\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"Alolononon"},"content":"        validateDeadlineInputFormat(inputParts, input);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"Alolononon"},"content":"        ExtractDeadlineDetails deadlineDetails \u003d getDeadlineDetails(input);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"Alolononon"},"content":"        String placeName \u003d extractPlaceName(input);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"Alolononon"},"content":"        try {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"Alolononon"},"content":"            Task newTask \u003d new Deadline(deadlineDetails.taskName(), deadlineDetails.by());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"Alolononon"},"content":"            newTask.setPlace(placeName);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"Alolononon"},"content":"            showTaskAddedMessage(taskList, newTask);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"Alolononon"},"content":"        } catch (IllegalArgumentException e) { // throw error for invalid date format","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"Alolononon"},"content":"            showInvalidDateInputMessage(e);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"Alolononon"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"Alolononon"},"content":"    private void showInvalidDateInputMessage(IllegalArgumentException e) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"Alolononon"},"content":"        princessResponse +\u003d \"     \" + e.getMessage() + \"\\n\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"Alolononon"},"content":"                          + \"     \" + \"try again\\n\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"Alolononon"},"content":"    private static ExtractDeadlineDetails getDeadlineDetails(String input) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"Alolononon"},"content":"        String[] stringArr \u003d input.substring(9).split(\"/by | /at\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"Alolononon"},"content":"        String taskName \u003d stringArr[0];","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"Alolononon"},"content":"        String by \u003d stringArr[1];","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"Alolononon"},"content":"        ExtractDeadlineDetails result \u003d new ExtractDeadlineDetails(taskName, by);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"Alolononon"},"content":"        return result;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"Alolononon"},"content":"    private record ExtractDeadlineDetails(String taskName, String by) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"Alolononon"},"content":"    private static void validateDeadlineInputFormat(String[] inputParts, String input) throws PrincessException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"Alolononon"},"content":"        if (inputParts.length \u003c 4 || !input.contains(\"/by\")) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"Alolononon"},"content":"            throw new PrincessException(\"     \" + \"OH NOOO!!! Sweetheart, please follow the deadline format: \"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"Alolononon"},"content":"                    + \"deadline [task name] /by [deadline]\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"Alolononon"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"Alolononon"},"content":"     * Adds an Event task.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"Alolononon"},"content":"     * @param inputParts The command input split into parts.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"Alolononon"},"content":"     * @param input The full user input.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"Alolononon"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"Alolononon"},"content":"     * @throws PrincessException If the input is invalid.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"Alolononon"},"content":"    private void handleAddEvent(String[] inputParts, String input, TaskList taskList) throws PrincessException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"Alolononon"},"content":"        assert taskList !\u003d null : \"TaskList should not be null when adding a ToDo\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"Alolononon"},"content":"        validateEventInputFormat(inputParts, input);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"Alolononon"},"content":"        GetEventDetails eventDetails \u003d getEventDetails(input);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"Alolononon"},"content":"        String placeName \u003d extractPlaceName(input);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"Alolononon"},"content":"        try {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"Alolononon"},"content":"            Task newTask \u003d new Event(eventDetails.taskName(), eventDetails.from(), eventDetails.to());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"Alolononon"},"content":"            newTask.setPlace(placeName);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"Alolononon"},"content":"            showTaskAddedMessage(taskList, newTask);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"Alolononon"},"content":"        } catch (IllegalArgumentException e) { // throw error for invalid date format","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"Alolononon"},"content":"            showInvalidDateInputMessage(e);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"Alolononon"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"Alolononon"},"content":"    private static GetEventDetails getEventDetails(String input) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"Alolononon"},"content":"        String[] stringArr \u003d input.substring(6).split(\"/from | /to | /at\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"Alolononon"},"content":"        String taskName \u003d stringArr[0];","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"Alolononon"},"content":"        String from \u003d stringArr[1];","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"Alolononon"},"content":"        String to \u003d stringArr[2];","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"Alolononon"},"content":"        GetEventDetails eventDetails \u003d new GetEventDetails(taskName, from, to);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"Alolononon"},"content":"        return eventDetails;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"Alolononon"},"content":"    private record GetEventDetails(String taskName, String from, String to) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"Alolononon"},"content":"    private static void validateEventInputFormat(String[] inputParts, String input) throws PrincessException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"Alolononon"},"content":"        if (inputParts.length \u003c 6 || !input.contains(\"/from\") || !input.contains(\"/to\")) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"Alolononon"},"content":"            throw new PrincessException(\"     \" + \"OH NOOO!!! Sweetheart, please follow the deadline format: \"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"Alolononon"},"content":"                    + \"event [taskname] /from [date/time] /to [date/time]\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"Alolononon"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"Alolononon"},"content":"     * Searches for tasks matching the keyword.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"Alolononon"},"content":"     * @param inputParts The command input split into parts.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"Alolononon"},"content":"     * @param input The full user input.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"Alolononon"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"Alolononon"},"content":"     * @throws PrincessException If the input is invalid.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"Alolononon"},"content":"    private void handleFindFunction(String[] inputParts, String input, TaskList taskList) throws PrincessException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"Alolononon"},"content":"        assert taskList !\u003d null : \"TaskList should not be null when searching for tasks\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"Alolononon"},"content":"        validateFindInput(inputParts);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"Alolononon"},"content":"        String keyword \u003d extractKeyword(input);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"Alolononon"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"Alolononon"},"content":"        filterMatchingTasks(taskList, keyword, matchingTasks);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"Alolononon"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"Alolononon"},"content":"            princessResponse +\u003d NO_MATCHING_TASKS_FOUND_MESSAGE;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"Alolononon"},"content":"        } else {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"Alolononon"},"content":"            generateMatchingTasksMessage(matchingTasks);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"Alolononon"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"Alolononon"},"content":"    private void generateMatchingTasksMessage(ArrayList\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"Alolononon"},"content":"        princessResponse +\u003d \"     Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"Alolononon"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"Alolononon"},"content":"            princessResponse +\u003d \"     \" + (i + 1) + \".\" + matchingTasks.get(i) + \"\\n\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"Alolononon"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"Alolononon"},"content":"    private static void filterMatchingTasks(TaskList taskList, String keyword, ArrayList\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"Alolononon"},"content":"        for (Task eachtask : taskList.getTasks()) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"Alolononon"},"content":"            if (eachtask.getTaskName().toLowerCase().contains(keyword)) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"Alolononon"},"content":"                matchingTasks.add(eachtask);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"Alolononon"},"content":"            }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"Alolononon"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"Alolononon"},"content":"    private static String extractKeyword(String input) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"Alolononon"},"content":"        String keyword \u003d input.substring(5).toLowerCase();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"Alolononon"},"content":"        return keyword;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"Alolononon"},"content":"    private static void validateFindInput(String[] inputParts) throws PrincessException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"Alolononon"},"content":"        if (inputParts.length \u003c 2) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"Alolononon"},"content":"            throw new PrincessException(\"     \"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"Alolononon"},"content":"                    + \"OH NOOO!!! There is missing keyword. Please input a keyword to search.\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"Alolononon"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"Alolononon"},"content":"     * Checks if the given string can be parsed as an integer.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"Alolononon"},"content":"     * @param str The string to check.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"Alolononon"},"content":"     * @return True if the string is an integer, false otherwise.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"Alolononon"},"content":"    public static boolean isInteger(String str) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"Alolononon"},"content":"        try {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"Alolononon"},"content":"            Integer.parseInt(str);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"Alolononon"},"content":"            return true; // Successfully parsed, it\u0027s an integer","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"Alolononon"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"Alolononon"},"content":"            return false; // Not an integer","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"Alolononon"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"Alolononon"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"Alolononon":422}},{"path":"src/main/java/princess/command/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alolononon"},"content":"package princess.command;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Alolononon"},"content":"/**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Alolononon"},"content":" * Enum representing different command types in the application.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Alolononon"},"content":" */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Alolononon"},"content":"public enum CommandType {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Alolononon"},"content":"    BYE, LIST, DELETE, MARK, UNMARK, TODO, DEADLINE, EVENT, HELP, FIND, INVALID;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Alolononon"},"content":"     * Converts a string into a CommandType, ensuring case-insensitive matching.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Alolononon"},"content":"     * @param command The user input string.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Alolononon"},"content":"     * @return The corresponding CommandType, or INVALID if not recognized.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Alolononon"},"content":"    public static CommandType fromString(String command) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Alolononon"},"content":"        try {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Alolononon"},"content":"            return CommandType.valueOf(command.toUpperCase());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Alolononon"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Alolononon"},"content":"            return INVALID; // Return INVALID if the command is not recognized","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Alolononon"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Alolononon"},"content":"}","lastModifiedDate":"2025-02-17","isFullCredit":false}],"authorContributionMap":{"Alolononon":22}},{"path":"src/main/java/princess/command/DateParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alolononon"},"content":"package princess.command;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Alolononon"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Alolononon"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Alolononon"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Alolononon"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Alolononon"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Alolononon"},"content":"import java.time.temporal.ChronoField;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Alolononon"},"content":"import java.util.List;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Alolononon"},"content":"import java.util.Locale;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Alolononon"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Alolononon"},"content":" * Parses date and time strings into LocalDateTime objects using a list of supported formats.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Alolononon"},"content":" * If the input is only a date, the time is set to 00:00.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Alolononon"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Alolononon"},"content":"public class DateParser {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Alolononon"},"content":"     * Helper method to create a case-insensitive formatter.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Alolononon"},"content":"     * If defaultMinute is true, it sets the minute to 0 if it\u0027s not provided in the input.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Alolononon"},"content":"    private static DateTimeFormatter createFormatter(String pattern, boolean defaultMinute) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Alolononon"},"content":"        DateTimeFormatterBuilder builder \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Alolononon"},"content":"                .parseCaseInsensitive()","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Alolononon"},"content":"                .appendPattern(pattern);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Alolononon"},"content":"        if (defaultMinute) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Alolononon"},"content":"            builder.parseDefaulting(ChronoField.MINUTE_OF_HOUR, 0);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Alolononon"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Alolononon"},"content":"        return builder.toFormatter(Locale.ENGLISH);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Alolononon"},"content":"    // List of supported date and time formats","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Alolononon"},"content":"    private static final List\u003cDateTimeFormatter\u003e DATE_FORMATS \u003d List.of(","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Alolononon"},"content":"            createFormatter(\"yyyy-MM-dd\", false), // 2000-03-01","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Alolononon"},"content":"            createFormatter(\"MMM dd yyyy\", false), // Mar 01 2000","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Alolononon"},"content":"            createFormatter(\"dd-MM-yyyy\", false), // 01-03-2000","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Alolononon"},"content":"            createFormatter(\"dd/MM/yyyy\", false),","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Alolononon"},"content":"            createFormatter(\"yyyy-MM-dd HHmm\", false), // 2000-03-01 1800","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Alolononon"},"content":"            createFormatter(\"dd-MM-yyyy HHmm\", false), // 01-03-2000 1800","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Alolononon"},"content":"            createFormatter(\"MMM dd yyyy HHmm\", false), // Mar 01 2000 1800","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Alolononon"},"content":"            createFormatter(\"dd/MM/yyyy HHmm\", false), // 01/03/2000 1800","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Alolononon"},"content":"            createFormatter(\"yyyy-MM-dd h:mma\", false), // 2000-03-01 4:00PM","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Alolononon"},"content":"            createFormatter(\"dd-MM-yyyy h:mma\", false), // 01-03-2000 4:00PM","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Alolononon"},"content":"            createFormatter(\"MMM dd yyyy h:mma\", false), // Mar 01 2000 4:00PM","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Alolononon"},"content":"            createFormatter(\"dd/MM/yyyy h:mma\", false), // 01/03/2000 4:00PM","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Alolononon"},"content":"            // Formats that support \"4PM\" without minutes.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Alolononon"},"content":"            createFormatter(\"yyyy-MM-dd ha\", true), // 2000-03-01 4PM","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Alolononon"},"content":"            createFormatter(\"dd-MM-yyyy ha\", true), // 01-03-2000 4PM","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Alolononon"},"content":"            createFormatter(\"MMM dd yyyy ha\", true), // Mar 01 2000 4PM","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Alolononon"},"content":"            createFormatter(\"dd/MM/yyyy ha\", true) // 01/03/2000 4PM","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Alolononon"},"content":"    );","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Alolononon"},"content":"     * Parses a date/time string into a LocalDateTime object.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Alolononon"},"content":"     * If the input is only a date, the time is set to 00:00.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Alolononon"},"content":"     * @param input the date/time string to parse","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Alolononon"},"content":"     * @return the parsed LocalDateTime","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Alolononon"},"content":"     * @throws IllegalArgumentException if the input doesn\u0027t match any supported format","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Alolononon"},"content":"    public static LocalDateTime parseDateTime(String input) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Alolononon"},"content":"        input \u003d input.trim(); // Remove unnecessary spaces","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Alolononon"},"content":"        for (DateTimeFormatter formatter : DATE_FORMATS) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Alolononon"},"content":"            try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Alolononon"},"content":"                if (input.length() \u003e 11) { // If time is included","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Alolononon"},"content":"                    return LocalDateTime.parse(input, formatter);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Alolononon"},"content":"                } else { // If only date is given, assume 00:00 time","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Alolononon"},"content":"                    return LocalDate.parse(input, formatter).atStartOfDay();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Alolononon"},"content":"                }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Alolononon"},"content":"            } catch (DateTimeParseException ignored) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Alolononon"},"content":"                // Try the next format","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Alolononon"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Alolononon"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Alolononon"},"content":"        throw new IllegalArgumentException(\"Invalid date format: \" + input","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Alolononon"},"content":"        + \"\\nPerhaps, you can follow this format: jan 20 2000 1300\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Alolononon"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"Alolononon":84}},{"path":"src/main/java/princess/command/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alolononon"},"content":"package princess.command;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Alolononon"},"content":"import java.io.File;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Alolononon"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Alolononon"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Alolononon"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Alolononon"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Alolononon"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Alolononon"},"content":"import princess.task.Deadline;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Alolononon"},"content":"import princess.task.Event;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Alolononon"},"content":"import princess.task.Task;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Alolononon"},"content":"import princess.task.Todo;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Alolononon"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Alolononon"},"content":" * Handles file operations such as ensuring file existence,","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Alolononon"},"content":" * reading from a file, writing to a file, and loading tasks.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Alolononon"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Alolononon"},"content":"public class Storage {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Alolononon"},"content":"     * The path to the file where tasks are stored.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Alolononon"},"content":"    private String filePath;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Alolononon"},"content":"     * Constructs a new \u003ccode\u003eStorage\u003c/code\u003e object with the specified file path.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Alolononon"},"content":"     * Automatically ensures the file and necessary directories exist.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Alolononon"},"content":"     * @param filePath the path to the file where tasks will be read from and written to","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Alolononon"},"content":"     * @throws AssertionError if \u003ccode\u003efilePath\u003c/code\u003e is null or empty","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Alolononon"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Alolononon"},"content":"        assert filePath !\u003d null \u0026\u0026 !filePath.trim().isEmpty() : \"File path cannot be null or empty\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Alolononon"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Alolononon"},"content":"        ensureFileExists();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Alolononon"},"content":"     * Ensures that the specified file exists. If not, it creates the necessary directories and file.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Alolononon"},"content":"    public void ensureFileExists() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Alolononon"},"content":"        assert filePath !\u003d null : \"File path should not be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Alolononon"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Alolononon"},"content":"        if (!f.exists()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Alolononon"},"content":"            File folder \u003d f.getParentFile(); // Get \"data/\" folder","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Alolononon"},"content":"            if (!folder.exists()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Alolononon"},"content":"                folder.mkdirs(); // Create \"data/\" folder if missing","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Alolononon"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Alolononon"},"content":"            if (!f.exists()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Alolononon"},"content":"                try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Alolononon"},"content":"                    f.createNewFile(); // Create \"saved_tasks.txt\" if missing","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Alolononon"},"content":"                    assert f.exists() : \"File should exist after creation\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Alolononon"},"content":"                } catch (IOException e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Alolononon"},"content":"                    System.out.println(\"Error creating file: \" + e.getMessage());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Alolononon"},"content":"                }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Alolononon"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Alolononon"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Alolononon"},"content":"     * Prints the contents of a specified file.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Alolononon"},"content":"     * @param filePath The path of the file to read.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Alolononon"},"content":"     * @throws FileNotFoundException If the file does not exist.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Alolononon"},"content":"    public void printFileContents(String filePath) throws FileNotFoundException {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Alolononon"},"content":"        assert filePath !\u003d null \u0026\u0026 !filePath.trim().isEmpty() : \"File path cannot be null or empty\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Alolononon"},"content":"        File f \u003d new File(filePath); // create a File for the given file path","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Alolononon"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Alolononon"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Alolononon"},"content":"            System.out.println(s.nextLine());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Alolononon"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Alolononon"},"content":"     * Loads tasks from a file and stores them in the provided ArrayList.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Alolononon"},"content":"     * @return storage an {@code ArrayList} of {@code Task} objects loaded from the file.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Alolononon"},"content":"    public ArrayList\u003cTask\u003e loadTasksFromFile() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Alolononon"},"content":"        assert filePath !\u003d null : \"File path should not be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Alolononon"},"content":"        ArrayList\u003cTask\u003e storage \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Alolononon"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Alolononon"},"content":"        try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Alolononon"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Alolononon"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Alolononon"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Alolononon"},"content":"                String[] lineArr \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Alolononon"},"content":"                if (lineArr.length \u003c 3) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Alolononon"},"content":"                    System.out.println(\"Skipping invalid line: \" + line);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Alolononon"},"content":"                    continue;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Alolononon"},"content":"                }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Alolononon"},"content":"                String type \u003d lineArr[0];","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Alolononon"},"content":"                boolean isDone \u003d lineArr[1].equals(\"1\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Alolononon"},"content":"                String description \u003d lineArr[2];","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Alolononon"},"content":"                Task task \u003d null;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Alolononon"},"content":"                switch (type) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Alolononon"},"content":"                case \"T\":","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Alolononon"},"content":"                    task \u003d new Todo(description);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Alolononon"},"content":"                    break;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Alolononon"},"content":"                case \"D\":","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Alolononon"},"content":"                    if (lineArr.length \u003c 4) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Alolononon"},"content":"                        task \u003d null; // Ensure valid deadline format","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Alolononon"},"content":"                        break;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Alolononon"},"content":"                    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Alolononon"},"content":"                    task \u003d new Deadline(description, lineArr[3]); // parts[3] is due date","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Alolononon"},"content":"                    break;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Alolononon"},"content":"                case \"E\":","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Alolononon"},"content":"                    if (lineArr.length \u003c 5) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Alolononon"},"content":"                        task \u003d null; // Ensure valid event format","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Alolononon"},"content":"                        break;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Alolononon"},"content":"                    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Alolononon"},"content":"                    task \u003d new Event(description, lineArr[3], lineArr[4]); // parts[3] \u003d from, parts[4] \u003d to","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Alolononon"},"content":"                    break;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Alolononon"},"content":"                default:","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Alolononon"},"content":"                    task \u003d null;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Alolononon"},"content":"                }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Alolononon"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Alolononon"},"content":"                    storage.add(task); // Add parsed task to storage","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Alolononon"},"content":"                }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Alolononon"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Alolononon"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Alolononon"},"content":"            System.out.println(\"File not found.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Alolononon"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Alolononon"},"content":"        return storage;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Alolononon"},"content":"     * Writes tasks from an ArrayList to a file.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Alolononon"},"content":"     * @param storage  The ArrayList of tasks to save.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Alolononon"},"content":"     * @throws IOException If an error occurs while writing to the file.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Alolononon"},"content":"    public void writeToFile(ArrayList\u003cTask\u003e storage) throws IOException {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Alolononon"},"content":"        assert filePath !\u003d null : \"File path should not be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Alolononon"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Alolononon"},"content":"        for (Task task : storage) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Alolononon"},"content":"            if (task instanceof Todo) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Alolononon"},"content":"                fw.write(\"T | \" + (task.getIsTaskDone() ? \"1\" : \"0\") + \" | \" + task.getTaskName() + \"\\n\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Alolononon"},"content":"            } else if (task instanceof Deadline) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Alolononon"},"content":"                fw.write(\"D | \" + (task.getIsTaskDone() ? \"1\" : \"0\") + \" | \" + task.getTaskName()","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Alolononon"},"content":"                        + \" | \" + ((Deadline) task).getBy() + \"\\n\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Alolononon"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Alolononon"},"content":"                fw.write(\"E | \" + (task.getIsTaskDone() ? \"1\" : \"0\") + \" | \" + task.getTaskName()","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Alolononon"},"content":"                        + \" | \" + ((Event) task).getFrom() + \" | \" + ((Event) task).getTo() + \"\\n\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Alolononon"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Alolononon"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Alolononon"},"content":"        fw.close();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Alolononon"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"Alolononon":166}},{"path":"src/main/java/princess/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alolononon"},"content":"package princess.task;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Alolononon"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Alolononon"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Alolononon"},"content":"import princess.command.DateParser;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Alolononon"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Alolononon"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Alolononon"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Alolononon"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Alolononon"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Alolononon"},"content":"     * Creates a deadline task with a description and a deadline.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Alolononon"},"content":"     * @param description the task description","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Alolononon"},"content":"     * @param by          the deadline date/time as a string","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Alolononon"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Alolononon"},"content":"        super(description);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Alolononon"},"content":"        assert description !\u003d null \u0026\u0026 !description.trim().isEmpty() : \"Deadline description cannot be null or empty\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Alolononon"},"content":"        assert by !\u003d null \u0026\u0026 !by.trim().isEmpty() : \"Deadline date/time cannot be null or empty\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Alolononon"},"content":"        this.by \u003d DateParser.parseDateTime(by);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Alolononon"},"content":"     * Returns the formatted deadline date/time.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Alolononon"},"content":"     * @return the deadline as a formatted string","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Alolononon"},"content":"    public String getBy() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Alolononon"},"content":"        assert by !\u003d null : \"Deadline date/time should never be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Alolononon"},"content":"        return by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mma\"));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Alolononon"},"content":"     * Returns the string representation of the deadline task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Alolononon"},"content":"     * @return the formatted deadline task string","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Alolononon"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Alolononon"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Alolononon"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Alolononon"},"content":"                + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mma\")) + \")\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Alolononon"},"content":"                + super.getPlace().toString();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Alolononon"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"Alolononon":49}},{"path":"src/main/java/princess/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alolononon"},"content":"package princess.task;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Alolononon"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Alolononon"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Alolononon"},"content":"import princess.command.DateParser;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Alolononon"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Alolononon"},"content":" * Represents an event task with a start and end date/time.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Alolononon"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Alolononon"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Alolononon"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Alolononon"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Alolononon"},"content":"     * Creates an event task with a description, start date/time, and end date/time.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Alolononon"},"content":"     * @param description the task description","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Alolononon"},"content":"     * @param from        the start date/time as a string","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Alolononon"},"content":"     * @param to          the end date/time as a string","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Alolononon"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Alolononon"},"content":"        super(description);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Alolononon"},"content":"        assert description !\u003d null \u0026\u0026 !description.trim().isEmpty() : \"Event description cannot be null or empty\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Alolononon"},"content":"        assert from !\u003d null \u0026\u0026 !from.trim().isEmpty() : \"Event start time cannot be null or empty\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Alolononon"},"content":"        assert to !\u003d null \u0026\u0026 !to.trim().isEmpty() : \"Event end time cannot be null or empty\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Alolononon"},"content":"        this.from \u003d DateParser.parseDateTime(from);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Alolononon"},"content":"        this.to \u003d DateParser.parseDateTime(to);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Alolononon"},"content":"     * Returns the formatted start date/time.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Alolononon"},"content":"     * @return the start date/time as a formatted string","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Alolononon"},"content":"    public String getFrom() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Alolononon"},"content":"        assert from !\u003d null : \"Start time should never be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Alolononon"},"content":"        return from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mma\"));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Alolononon"},"content":"     * Returns the formatted end date/time.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Alolononon"},"content":"     * @return the end date/time as a formatted string","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Alolononon"},"content":"    public String getTo() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Alolononon"},"content":"        assert to !\u003d null : \"End time should never be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Alolononon"},"content":"        return to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mma\"));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Alolononon"},"content":"     * Returns the string representation of the event task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Alolononon"},"content":"     * @return the formatted event task string","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Alolononon"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Alolononon"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Alolononon"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Alolononon"},"content":"                + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mma\"))","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Alolononon"},"content":"                + \" to: \" + to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mma\")) + \")\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Alolononon"},"content":"                + super.getPlace().toString();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Alolononon"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"Alolononon":65}},{"path":"src/main/java/princess/task/Place.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alolononon"},"content":"package princess.task;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Alolononon"},"content":"/**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Alolononon"},"content":" * Represents a named location.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Alolononon"},"content":" */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Alolononon"},"content":"public class Place {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Alolononon"},"content":"    private String placeName \u003d null;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Alolononon"},"content":"     * Creates a new Place without a specified name.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Alolononon"},"content":"    public Place() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Alolononon"},"content":"     * Sets the name of this place.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Alolononon"},"content":"     * @param placeName the name of this place","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Alolononon"},"content":"    public void setPlaceName(String placeName) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Alolononon"},"content":"        this.placeName \u003d placeName;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Alolononon"},"content":"     * Returns a string representation of this place.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Alolononon"},"content":"     * @return a string containing the place name if set, or an empty string otherwise","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Alolononon"},"content":"    @Override","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Alolononon"},"content":"    public String toString() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Alolononon"},"content":"        if (placeName !\u003d null) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Alolononon"},"content":"            return \" (at: \" + placeName + \")\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Alolononon"},"content":"        } else {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Alolononon"},"content":"            return \"\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Alolononon"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Alolononon"},"content":"}","lastModifiedDate":"2025-02-17","isFullCredit":false}],"authorContributionMap":{"Alolononon":39}},{"path":"src/main/java/princess/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alolononon"},"content":"package princess.task;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Alolononon"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Alolononon"},"content":" * Represents a task with a name and a completion status.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Alolononon"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Alolononon"},"content":"public class Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Alolononon"},"content":"    private String taskName;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Alolononon"},"content":"    private boolean isDone;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Alolononon"},"content":"    private Place place;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Alolononon"},"content":"     * Constructs a new Task with the specified name.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Alolononon"},"content":"     * By default, the task is not completed.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Alolononon"},"content":"     * @param taskName The name or description of the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Alolononon"},"content":"    public Task(String taskName) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Alolononon"},"content":"        assert taskName !\u003d null \u0026\u0026 !taskName.trim().isEmpty() : \"Task name cannot be null or empty\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Alolononon"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Alolononon"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Alolononon"},"content":"        this.place \u003d new Place();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Alolononon"},"content":"     * Gets the name or description of the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Alolononon"},"content":"     * @return The task name.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Alolononon"},"content":"    public String getTaskName() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Alolononon"},"content":"        assert this.taskName !\u003d null : \"Task name should never be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Alolononon"},"content":"        return this.taskName;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Alolononon"},"content":"     * Checks if the task is completed.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Alolononon"},"content":"     * @return {@code true} if the task is done, otherwise {@code false}.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Alolononon"},"content":"    public boolean getIsTaskDone() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Alolononon"},"content":"        return this.isDone;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Alolononon"},"content":"     * Marks the task as completed.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Alolononon"},"content":"    public void markTask() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Alolononon"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Alolononon"},"content":"     * Marks the task as not completed.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Alolononon"},"content":"    public void unmarkTask() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Alolononon"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Alolononon"},"content":"    public void setPlace(String place) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Alolononon"},"content":"        this.place.setPlaceName(place);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Alolononon"},"content":"    public Place getPlace() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Alolononon"},"content":"        return this.place;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Alolononon"},"content":"     * Returns the string representation of the task,","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Alolononon"},"content":"     * indicating its completion status and name.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Alolononon"},"content":"     * @return A formatted string representing the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Alolononon"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Alolononon"},"content":"        return \"[\" + (this.isDone ? \"X\" : \" \") + \"] \" + this.taskName;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Alolononon"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"Alolononon":77}},{"path":"src/main/java/princess/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alolononon"},"content":"package princess.task;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Alolononon"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Alolononon"},"content":"/**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Alolononon"},"content":" * Represents a list of tasks.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Alolononon"},"content":" */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Alolononon"},"content":"public class TaskList {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Alolononon"},"content":"     * The collection of tasks.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Alolononon"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Alolononon"},"content":"     * Constructs a new TaskList with the specified initial tasks.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Alolononon"},"content":"     * @param tasks the initial list of tasks","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Alolononon"},"content":"     * @throws IllegalArgumentException if tasks is null","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Alolononon"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Alolononon"},"content":"        assert tasks !\u003d null : \"Task list cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Alolononon"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Alolononon"},"content":"     * Checks if the list of tasks is empty.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Alolononon"},"content":"     * @return true if the list is empty, false otherwise","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Alolononon"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Alolononon"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Alolononon"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Alolononon"},"content":"     * @return the size of the task list","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Alolononon"},"content":"    public Integer getSize() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Alolononon"},"content":"        return tasks.size();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Alolononon"},"content":"     * Returns the entire list of tasks.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Alolononon"},"content":"     * @return the underlying list of tasks","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Alolononon"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Alolononon"},"content":"        assert tasks !\u003d null : \"Task list should never be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Alolononon"},"content":"        return tasks;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Alolononon"},"content":"     * Returns the task at the specified index.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Alolononon"},"content":"     * @param index the index of the task to retrieve","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Alolononon"},"content":"     * @return the task at the given index","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Alolononon"},"content":"     * @throws IndexOutOfBoundsException if the index is out of range","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Alolononon"},"content":"    public Task getElem(int index) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Alolononon"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size() : \"Index out of bounds when retrieving task\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Alolononon"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Alolononon"},"content":"     * Removes the task at the specified index.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Alolononon"},"content":"     * @param index the index of the task to remove","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Alolononon"},"content":"     * @throws IndexOutOfBoundsException if the index is out of range","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Alolononon"},"content":"    public void removeElem(int index) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Alolononon"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size() : \"Index out of bounds when removing task\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Alolononon"},"content":"        tasks.remove(index);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Alolononon"},"content":"     * Adds a task to the end of the list.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Alolononon"},"content":"     * @param task the task to add","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Alolononon"},"content":"     * @throws IllegalArgumentException if the task is null","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Alolononon"},"content":"    public void addElem(Task task) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Alolononon"},"content":"        assert task !\u003d null : \"Cannot add a null task\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Alolononon"},"content":"        tasks.add(task);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Alolononon"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"Alolononon":88}},{"path":"src/main/java/princess/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alolononon"},"content":"package princess.task;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Alolononon"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Alolononon"},"content":" * Represents a Todo task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Alolononon"},"content":" * A Todo is a task that only has a description and completion status.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Alolononon"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Alolononon"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Alolononon"},"content":"     * Constructs a Todo task with the specified description.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Alolononon"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Alolononon"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Alolononon"},"content":"        super(description);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Alolononon"},"content":"        assert description !\u003d null \u0026\u0026 !description.trim().isEmpty() : \"Todo description cannot be null or empty\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Alolononon"},"content":"     * Returns the string representation of the Todo task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Alolononon"},"content":"     * @return A formatted string indicating the task type and its details.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Alolononon"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Alolononon"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Alolononon"},"content":"        return \"[T]\" + super.toString() + super.getPlace().toString();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Alolononon"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"Alolononon":31}},{"path":"src/main/java/princess/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alolononon"},"content":"package princess.ui;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Alolononon"},"content":"import princess.task.Task;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Alolononon"},"content":"import princess.task.TaskList;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Alolononon"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Alolononon"},"content":" * The UI class handles the display of messages and dividers in the terminal.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Alolononon"},"content":" * It provides methods for showing welcome messages, help messages, and task-related information.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Alolononon"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Alolononon"},"content":"public class UI {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Alolononon"},"content":"    // Common UI Messages","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Alolononon"},"content":"    public static final String SPACE \u003d \"     \";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Alolononon"},"content":"    public static final String MESSAGE_LIST_HEADER \u003d \"     Here are the tasks in your list for your Princess!\\n\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Alolononon"},"content":"    public static final String MESSAGE_EMPTY_LIST \u003d \"     \" + \"      ---there is nothing in your list---\\n\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Alolononon"},"content":"     * Constructs a UI object.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Alolononon"},"content":"    public UI() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Alolononon"},"content":"     * Displays a divider line for formatting in the terminal.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Alolononon"},"content":"    public String showDivider() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Alolononon"},"content":"        return \"    ____________________________________________________________\\n\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Alolononon"},"content":"     * Displays a welcome message to the user.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Alolononon"},"content":"     * This method also shows a divider before and after the message.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Alolononon"},"content":"    public String showWelcomeMessage() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Alolononon"},"content":"        return \"     Hello! I\u0027m your Beautiful princess\\n\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Alolononon"},"content":"            + \"     What can I do for you?\\n\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Alolononon"},"content":"     * Displays a help message with a list of available commands for the user.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Alolononon"},"content":"    public String showHelpMessage() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Alolononon"},"content":"        return \"     below are the commands! Command me boi!\\n\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Alolononon"},"content":"                + \"       list\\n\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Alolononon"},"content":"                + \"       delete [index]\\n\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Alolononon"},"content":"                + \"       mark [index]\\n\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Alolononon"},"content":"                + \"       unmark [index]\\n\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Alolononon"},"content":"                + \"       todo [taskname] /at [place]\\n\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Alolononon"},"content":"                + \"       deadline [taskname] /by [deadline] /at [place]\\n\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Alolononon"},"content":"                + \"       event [taskname] /from [date/time] /to [date/time] /at [place]\\n\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Alolononon"},"content":"                + \"               (note: /at command is optional)\\n\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Alolononon"},"content":"                + \"       find [keyword]\\n\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Alolononon"},"content":"                + \"       bye\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Alolononon"},"content":"     * Displays an ending divider line for formatting in the terminal.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Alolononon"},"content":"    public String showEndingDivider() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Alolononon"},"content":"        return showDivider() + \"\\n\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Alolononon"},"content":"     * Displays an ending message to the user, indicating the program is about to end.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Alolononon"},"content":"     * A divider is shown before and after the message.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Alolononon"},"content":"    public String showEndingMessage() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Alolononon"},"content":"        return \"     Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Alolononon"},"content":"     * Adds a task to the specified \u003ccode\u003eTaskList\u003c/code\u003e and returns a message indicating the task was added.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Alolononon"},"content":"     * @param task     the task to be added","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Alolononon"},"content":"     * @param taskList the task list to which the task will be added","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Alolononon"},"content":"     * @return a string confirming the addition of the task and the updated task count","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Alolononon"},"content":"     * @throws AssertionError if \u003ccode\u003etask\u003c/code\u003e or \u003ccode\u003etaskList\u003c/code\u003e is null","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Alolononon"},"content":"    public String showTaskAdded(Task task, TaskList taskList) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Alolononon"},"content":"        assert task !\u003d null : \"Task cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Alolononon"},"content":"        assert taskList !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Alolononon"},"content":"        taskList.addElem(task);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Alolononon"},"content":"        return \"     \" + \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Alolononon"},"content":"                + \"       \" + task.toString() + \"\\n\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Alolononon"},"content":"                + \"     Now you have \" + taskList.getSize() + \" tasks in the list.\\n\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Alolononon"},"content":"     * Returns a message indicating that the user\u0027s command was invalid.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Alolononon"},"content":"     * @return a string containing the invalid command message","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Alolononon"},"content":"    public String showInvalidCommandMessage() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Alolononon"},"content":"        return \"     \" + \"OH NOOO!!! I don\u0027t understand what that means... \"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Alolononon"},"content":"                + \"type \u0027help\u0027 for help\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Alolononon"},"content":"     * Prints the specified string to the console.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Alolononon"},"content":"     *","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Alolononon"},"content":"     * @param str the string to be printed","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Alolononon"},"content":"    public void println(String str) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Alolononon"},"content":"        System.out.println(str);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Alolononon"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"Alolononon":112}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Alolononon"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Alolononon"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Alolononon"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Alolononon"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Alolononon"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Alolononon"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Alolononon"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Alolononon"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Alolononon"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Alolononon"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Alolononon"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Alolononon"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Alolononon"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Alolononon"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Alolononon"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Alolononon"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Alolononon"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Alolononon"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Alolononon"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Alolononon"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"Alolononon":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Alolononon"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Alolononon"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Alolononon"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Alolononon"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Alolononon"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Alolononon"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Alolononon"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Alolononon"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Alolononon"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Alolononon"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Alolononon"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Alolononon"},"content":"            fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Alolononon"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Alolononon"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Alolononon"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Alolononon"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Alolononon"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Alolononon"},"content":"                   prefWidth\u003d\"324.0\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Alolononon"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Alolononon"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Alolononon"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Alolononon"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Alolononon"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Alolononon"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Alolononon"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Alolononon"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Alolononon"},"content":"                text\u003d\"Send\" /\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Alolononon"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Alolononon"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Alolononon"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Alolononon"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Alolononon"},"content":"                    prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Alolononon"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Alolononon"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Alolononon"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Alolononon"},"content":"                      prefHeight\u003d\"552.0\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Alolononon"},"content":"                      prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Alolononon"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Alolononon"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Alolononon"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Alolononon"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"Alolononon":44}},{"path":"src/test/java/princess/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alolononon"},"content":"package princess.task;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Alolononon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Alolononon"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Alolononon"},"content":"public class ToDoTest {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Alolononon"},"content":"     * Tests the constructor and ensures the description is correctly set.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Alolononon"},"content":"    @Test","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Alolononon"},"content":"    public void testTodoCreation() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Alolononon"},"content":"        Todo todo \u003d new Todo(\"Buy milk\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Alolononon"},"content":"        assertEquals(\"[T][ ] Buy milk\", todo.toString());","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Alolononon"},"content":"     * Tests marking a Todo task as done.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Alolononon"},"content":"    @Test","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Alolononon"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Alolononon"},"content":"        Todo todo \u003d new Todo(\"Buy milk\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Alolononon"},"content":"        todo.markTask();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Alolononon"},"content":"        assertEquals(\"[T][X] Buy milk\", todo.toString());","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Alolononon"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Alolononon"},"content":"     * Tests unmarking a Todo task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Alolononon"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Alolononon"},"content":"    @Test","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Alolononon"},"content":"    public void testUnmark() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Alolononon"},"content":"        Todo todo \u003d new Todo(\"Buy milk\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Alolononon"},"content":"        todo.markTask();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Alolononon"},"content":"        todo.unmarkTask();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Alolononon"},"content":"        assertEquals(\"[T][ ] Buy milk\", todo.toString(), \"Todo should be unmarked.\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Alolononon"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"Alolononon":39}},{"path":"src/test/java/princess/ui/UITest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alolononon"},"content":"package princess.ui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Alolononon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Alolononon"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Alolononon"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Alolononon"},"content":"import princess.task.Task;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Alolononon"},"content":"import princess.task.TaskList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Alolononon"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Alolononon"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Alolononon"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Alolononon"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Alolononon"},"content":"public class UITest {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Alolononon"},"content":"    private UI ui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Alolononon"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Alolononon"},"content":"    public void setUp() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Alolononon"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Alolononon"},"content":"    @Test","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Alolononon"},"content":"    void testShowDivider() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Alolononon"},"content":"        assertEquals(\"    ____________________________________________________________\\n\", ui.showDivider());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Alolononon"},"content":"    @Test","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Alolononon"},"content":"    void testShowWelcomeMessage() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Alolononon"},"content":"        assertEquals(\"     Hello! I\u0027m your Beautiful princess\\n\"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Alolononon"},"content":"                + \"     What can I do for you?\\n\", ui.showWelcomeMessage());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Alolononon"},"content":"    @Test","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Alolononon"},"content":"    void testShowHelpMessage() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Alolononon"},"content":"        assertEquals(\"     below are the commands! Command me boi!\\n\"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Alolononon"},"content":"                + \"       list\\n\"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Alolononon"},"content":"                + \"       delete [index]\\n\"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Alolononon"},"content":"                + \"       mark [index]\\n\"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Alolononon"},"content":"                + \"       unmark [index]\\n\"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Alolononon"},"content":"                + \"       todo [taskname]\\n\"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Alolononon"},"content":"                + \"       deadline [taskname] /by [deadline]\\n\"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Alolononon"},"content":"                + \"       event [taskname] /from [date/time] /to [date/time]\\n\"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Alolononon"},"content":"                + \"       find [keyword]\\n\"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Alolononon"},"content":"                + \"       bye\", ui.showHelpMessage());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Alolononon"},"content":"    @Test","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Alolononon"},"content":"    void testShowEndingDivider() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Alolononon"},"content":"        assertEquals(\"    ____________________________________________________________\\n\\n\", ui.showEndingDivider());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Alolononon"},"content":"    @Test","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Alolononon"},"content":"    void testShowEndingMessage() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Alolononon"},"content":"        assertEquals(\"     Bye. Hope to see you again soon!\\n\", ui.showEndingMessage());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Alolononon"},"content":"    @Test","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Alolononon"},"content":"    void testShowTaskAdded() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Alolononon"},"content":"        // Creating real instances instead of mocks","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Alolononon"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Alolononon"},"content":"        Task task \u003d new Task(\"Read book\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Alolononon"},"content":"        // Call the method","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Alolononon"},"content":"        String result \u003d ui.showTaskAdded(task, taskList);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Alolononon"},"content":"        // Expected result","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Alolononon"},"content":"        String expected \u003d \"     Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Alolononon"},"content":"                + \"       \" + task.toString() + \"\\n\"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Alolononon"},"content":"                + \"     Now you have \" + taskList.getSize() + \" tasks in the list.\\n\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Alolononon"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Alolononon"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Alolononon"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Alolononon"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"Alolononon":78}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Alolononon"},"content":"todo borrow book","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Alolononon"},"content":"deadline return book /by 01-03-2000 1300","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Alolononon"},"content":"event project meeting /from 01/03/2000 1000 /to 01/03/2000 1200","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Alolononon"},"content":"mark 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Alolononon"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Alolononon"},"content":"unmark 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Alolononon"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Alolononon"},"content":"delete 2","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Alolononon"},"content":"list","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Alolononon"},"content":"delete 1","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Alolononon"},"content":"delete 1","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Alolononon"},"content":"bye","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"Alolononon":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Alolononon"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\princess\\*.java","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Alolononon"},"content":"java -classpath ..\\bin princess.Princess \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"Alolononon":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Alolononon"},"content":"java -classpath ../bin Princess \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"Alolononon":1,"-":37}}]
