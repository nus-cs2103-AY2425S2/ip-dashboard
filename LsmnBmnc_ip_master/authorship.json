[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LsmnBmnc"},"content":"public class Deadline extends Task{","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LsmnBmnc"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LsmnBmnc"},"content":"    private String by;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LsmnBmnc"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LsmnBmnc"},"content":"    public Deadline (String description, String by) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LsmnBmnc"},"content":"        super(description);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LsmnBmnc"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LsmnBmnc"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LsmnBmnc"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LsmnBmnc"},"content":"    @Override","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LsmnBmnc"},"content":"    public String toString() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LsmnBmnc"},"content":"        return \"[D]\" + super.toString() + \" (by:\" + by + \")\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LsmnBmnc"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LsmnBmnc"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"LsmnBmnc":14}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LsmnBmnc"},"content":"public class Event extends Task{","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LsmnBmnc"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LsmnBmnc"},"content":"    private String startTime;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LsmnBmnc"},"content":"    private String endTime;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LsmnBmnc"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LsmnBmnc"},"content":"    public Event (String description, String startTime, String endTime) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LsmnBmnc"},"content":"        super(description);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LsmnBmnc"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LsmnBmnc"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LsmnBmnc"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LsmnBmnc"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LsmnBmnc"},"content":"    @Override","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LsmnBmnc"},"content":"    public String toString() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LsmnBmnc"},"content":"        return \"[E]\" + super.toString() + \" (from:\" + startTime + \" to:\" + endTime + \")\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LsmnBmnc"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LsmnBmnc"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LsmnBmnc"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"LsmnBmnc":17}},{"path":"src/main/java/Nana.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LsmnBmnc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LsmnBmnc"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LsmnBmnc"},"content":"public class Nana {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LsmnBmnc"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LsmnBmnc"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LsmnBmnc"},"content":"    private static int taskCount \u003d 0;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LsmnBmnc"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LsmnBmnc"},"content":"    public static void processInput (String input, Scanner scanner) throws NanaException {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LsmnBmnc"},"content":"        if (input.equals(\"blah\")){","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LsmnBmnc"},"content":"            throw new NanaException(\"It seems nonsense\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LsmnBmnc"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LsmnBmnc"},"content":"        if (input.equals(\"list\")) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LsmnBmnc"},"content":"            listTasks();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LsmnBmnc"},"content":"        } else if (input.equals(\"mark\")) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LsmnBmnc"},"content":"            markTask(scanner);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LsmnBmnc"},"content":"        } else if (input.equals(\"unmark\")) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LsmnBmnc"},"content":"            unmarkTask(scanner);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LsmnBmnc"},"content":"        } else if (input.equals(\"todo\")) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LsmnBmnc"},"content":"            addTodo(scanner);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LsmnBmnc"},"content":"        } else if (input.equals(\"deadline\")) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LsmnBmnc"},"content":"            addDeadline(scanner);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LsmnBmnc"},"content":"        } else if (input.equals(\"event\")) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LsmnBmnc"},"content":"            addEvent(scanner);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LsmnBmnc"},"content":"        } else if (input.equals(\"delete\")) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LsmnBmnc"},"content":"            deleteTask(scanner);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LsmnBmnc"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LsmnBmnc"},"content":"        else {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LsmnBmnc"},"content":"            addTask(input, scanner);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LsmnBmnc"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LsmnBmnc"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LsmnBmnc"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LsmnBmnc"},"content":"    public static void listTasks() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LsmnBmnc"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LsmnBmnc"},"content":"        System.out.println(\"     Here are the tasks in your list:\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LsmnBmnc"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LsmnBmnc"},"content":"            System.out.println(\"     \" + (i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LsmnBmnc"},"content":"        }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LsmnBmnc"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LsmnBmnc"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LsmnBmnc"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LsmnBmnc"},"content":"    public static void markTask(Scanner scanner) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LsmnBmnc"},"content":"        int taskNumber \u003d scanner.nextInt();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LsmnBmnc"},"content":"        tasks.get(taskNumber - 1).markAsDone();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LsmnBmnc"},"content":"        System.out.println(\"    ____________________________________________________________\\n\" +","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LsmnBmnc"},"content":"                \"     Nice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LsmnBmnc"},"content":"                \"       [X] \" + tasks.get(taskNumber - 1).getDescription() + \"\\n\" +","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LsmnBmnc"},"content":"                \"    ____________________________________________________________\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LsmnBmnc"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LsmnBmnc"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LsmnBmnc"},"content":"    public static void unmarkTask(Scanner scanner) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LsmnBmnc"},"content":"        int taskNumber \u003d scanner.nextInt();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LsmnBmnc"},"content":"        tasks.get(taskNumber - 1).markAsUndone();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LsmnBmnc"},"content":"        System.out.println(\"    ____________________________________________________________\\n\" +","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LsmnBmnc"},"content":"                \"     Nice! I\u0027ve marked this task as undone:\\n\" +","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LsmnBmnc"},"content":"                \"       [ ] \" + tasks.get(taskNumber - 1).getDescription() + \"\\n\" +","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LsmnBmnc"},"content":"                \"    ____________________________________________________________\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LsmnBmnc"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LsmnBmnc"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LsmnBmnc"},"content":"    public static void addTodo(Scanner scanner) throws NanaException {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LsmnBmnc"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LsmnBmnc"},"content":"        String taskName \u003d scanner.nextLine();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LsmnBmnc"},"content":"        if (taskName.equals(\"\")) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LsmnBmnc"},"content":"            throw new NanaException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LsmnBmnc"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LsmnBmnc"},"content":"        tasks.add(taskCount,new Todo(taskName));","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LsmnBmnc"},"content":"        taskCount++;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LsmnBmnc"},"content":"        System.out.println(\"    ____________________________________________________________\\n\" +","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"LsmnBmnc"},"content":"                \"     Got it. I\u0027ve added this task:\\n\" + \"       \" + tasks.get(taskCount - 1) + \"\\n\" +","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"LsmnBmnc"},"content":"                \"     Now you have \" + taskCount + \" tasks in the list.\\n\" +","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"LsmnBmnc"},"content":"                \"    ____________________________________________________________\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"LsmnBmnc"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"LsmnBmnc"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"LsmnBmnc"},"content":"    public static void addDeadline(Scanner scanner) throws NanaException {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"LsmnBmnc"},"content":"        scanner.useDelimiter(\" /by\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"LsmnBmnc"},"content":"        String taskName \u003d scanner.next();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"LsmnBmnc"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"LsmnBmnc"},"content":"        scanner.useDelimiter(\" \");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"LsmnBmnc"},"content":"        scanner.next();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"LsmnBmnc"},"content":"        String by \u003d scanner.nextLine();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"LsmnBmnc"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"LsmnBmnc"},"content":"        scanner.useDelimiter(\"\\\\p{javaWhitespace}+\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"LsmnBmnc"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"LsmnBmnc"},"content":"        tasks.add(taskCount,new Deadline(taskName, by));","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"LsmnBmnc"},"content":"        taskCount++;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"LsmnBmnc"},"content":"        System.out.println(\"    ____________________________________________________________\\n\" +","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"LsmnBmnc"},"content":"                \"     Got it. I\u0027ve added this task:\\n\" + \"       \" + tasks.get(taskCount - 1) + \"\\n\" +","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"LsmnBmnc"},"content":"                \"     Now you have \" + taskCount + \" tasks in the list.\\n\" +","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"LsmnBmnc"},"content":"                \"    ____________________________________________________________\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"LsmnBmnc"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"LsmnBmnc"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"LsmnBmnc"},"content":"    public static void addEvent(Scanner scanner) throws NanaException {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"LsmnBmnc"},"content":"        scanner.useDelimiter(\" /from\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"LsmnBmnc"},"content":"        String taskName \u003d scanner.next();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"LsmnBmnc"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"LsmnBmnc"},"content":"        scanner.useDelimiter(\" \");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"LsmnBmnc"},"content":"        scanner.next();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"LsmnBmnc"},"content":"        scanner.useDelimiter(\" /to\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"LsmnBmnc"},"content":"        String startTime \u003d scanner.next();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"LsmnBmnc"},"content":"        scanner.useDelimiter(\" \");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"LsmnBmnc"},"content":"        scanner.next();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"LsmnBmnc"},"content":"        String endTime \u003d scanner.nextLine();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"LsmnBmnc"},"content":"        scanner.useDelimiter(\"\\\\p{javaWhitespace}+\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"LsmnBmnc"},"content":"        tasks.add(taskCount,new Event(taskName, startTime, endTime));","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"LsmnBmnc"},"content":"        taskCount++;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"LsmnBmnc"},"content":"        System.out.println(\"    ____________________________________________________________\\n\" +","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"LsmnBmnc"},"content":"                \"     Got it. I\u0027ve added this task:\\n\" + \"       \" + tasks.get(taskCount - 1) + \"\\n\" +","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"LsmnBmnc"},"content":"                \"     Now you have \" + taskCount + \" tasks in the list.\\n\" +","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"LsmnBmnc"},"content":"                \"    ____________________________________________________________\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"LsmnBmnc"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"LsmnBmnc"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"LsmnBmnc"},"content":"    public static void deleteTask (Scanner scanner) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"LsmnBmnc"},"content":"        int taskNumber \u003d scanner.nextInt();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"LsmnBmnc"},"content":"        Task task \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"LsmnBmnc"},"content":"        tasks.remove(taskNumber - 1);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"LsmnBmnc"},"content":"        taskCount--;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"LsmnBmnc"},"content":"        System.out.println(\"    ____________________________________________________________\\n\" +","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"LsmnBmnc"},"content":"                \"     Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"LsmnBmnc"},"content":"                \"       \" + task + \"\\n\" +","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"LsmnBmnc"},"content":"                \"     Now you have \" + taskCount + \" tasks in the list.\\n\" +","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"LsmnBmnc"},"content":"                \"    ____________________________________________________________\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"LsmnBmnc"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"LsmnBmnc"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"LsmnBmnc"},"content":"    public static void addTask(String input, Scanner scanner) throws NanaException {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"LsmnBmnc"},"content":"        String taskName \u003d input + scanner.nextLine();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"LsmnBmnc"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"LsmnBmnc"},"content":"        tasks.add(taskCount, new Task(taskName));","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"LsmnBmnc"},"content":"        taskCount++;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"LsmnBmnc"},"content":"        System.out.println(\"    ____________________________________________________________\\n\" +","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"LsmnBmnc"},"content":"                \"     added: \" + taskName + \"\\n\" +","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"LsmnBmnc"},"content":"                \"    ____________________________________________________________\");","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"LsmnBmnc"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"LsmnBmnc"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"LsmnBmnc"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"LsmnBmnc"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"LsmnBmnc"},"content":"        System.out.println(\"    ____________________________________________________________\\n\" +","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"LsmnBmnc"},"content":"                \"     Hello! I\u0027m Nana\\n\" +","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"LsmnBmnc"},"content":"                \"     What can I do for you?\\n\" +","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"LsmnBmnc"},"content":"                \"    ____________________________________________________________\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"LsmnBmnc"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"LsmnBmnc"},"content":"        while (true) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"LsmnBmnc"},"content":"            String input \u003d scanner.next();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"LsmnBmnc"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"LsmnBmnc"},"content":"                System.out.println(\"    ____________________________________________________________\\n\" +","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"LsmnBmnc"},"content":"                        \"     Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"LsmnBmnc"},"content":"                        \"    ____________________________________________________________\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"LsmnBmnc"},"content":"                break;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"LsmnBmnc"},"content":"            } else {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"LsmnBmnc"},"content":"                try {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"LsmnBmnc"},"content":"                    processInput(input, scanner);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"LsmnBmnc"},"content":"                } catch (NanaException e) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"LsmnBmnc"},"content":"                    System.out.println(\"    ____________________________________________________________\\n\" +","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"LsmnBmnc"},"content":"                            \"     Exception: \" + e.getMessage() + \"\\n\" +","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"LsmnBmnc"},"content":"                            \"    ____________________________________________________________\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"LsmnBmnc"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"LsmnBmnc"},"content":"                }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"LsmnBmnc"},"content":"            }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"LsmnBmnc"},"content":"        }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"LsmnBmnc"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"LsmnBmnc"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"LsmnBmnc"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"LsmnBmnc"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"LsmnBmnc"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"LsmnBmnc"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"LsmnBmnc":163}},{"path":"src/main/java/NanaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LsmnBmnc"},"content":"public class NanaException extends Exception {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LsmnBmnc"},"content":"    public NanaException(String message) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LsmnBmnc"},"content":"        super(message);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LsmnBmnc"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LsmnBmnc"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LsmnBmnc"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"LsmnBmnc":6}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LsmnBmnc"},"content":"public class Task {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LsmnBmnc"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LsmnBmnc"},"content":"    protected String description;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LsmnBmnc"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LsmnBmnc"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LsmnBmnc"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LsmnBmnc"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LsmnBmnc"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LsmnBmnc"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LsmnBmnc"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LsmnBmnc"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LsmnBmnc"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LsmnBmnc"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LsmnBmnc"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LsmnBmnc"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LsmnBmnc"},"content":"        return description;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LsmnBmnc"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LsmnBmnc"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LsmnBmnc"},"content":"    public String toString() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LsmnBmnc"},"content":"        return \"[\" + getStatusIcon() + \"]\" + description;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LsmnBmnc"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LsmnBmnc"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LsmnBmnc"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LsmnBmnc"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LsmnBmnc"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LsmnBmnc"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LsmnBmnc"},"content":"    public void markAsUndone() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LsmnBmnc"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LsmnBmnc"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LsmnBmnc"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"LsmnBmnc":30}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LsmnBmnc"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LsmnBmnc"},"content":"    public Todo (String description) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LsmnBmnc"},"content":"        super(description);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LsmnBmnc"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LsmnBmnc"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LsmnBmnc"},"content":"    @Override","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LsmnBmnc"},"content":"    public String toString() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LsmnBmnc"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LsmnBmnc"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LsmnBmnc"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LsmnBmnc"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LsmnBmnc"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"LsmnBmnc":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LsmnBmnc"},"content":"todo borrow book","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LsmnBmnc"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LsmnBmnc"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LsmnBmnc"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"LsmnBmnc":4}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LsmnBmnc"},"content":"if ! javac -cp /Users/gonghaozhen/Documents/Y2S2/CS2103T/ip/src/main/java -Xlint:none -d ../bin /Users/gonghaozhen/Documents/Y2S2/CS2103T/ip/src/main/java/*.java","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LsmnBmnc"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LsmnBmnc"},"content":"java -classpath /Users/gonghaozhen/Documents/Y2S2/CS2103T/ip/src/main/bin Nana \u003c /Users/gonghaozhen/Documents/Y2S2/CS2103T/ip/text-ui-test/input.txt \u003e /Users/gonghaozhen/Documents/Y2S2/CS2103T/ip/text-ui-test/ACTUAL.TXT","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LsmnBmnc"},"content":"cp /Users/gonghaozhen/Documents/Y2S2/CS2103T/ip/text-ui-test/EXPECTED.TXT /Users/gonghaozhen/Documents/Y2S2/CS2103T/ip/text-ui-test/EXPECTED-UNIX.TXT","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LsmnBmnc"},"content":"dos2unix /Users/gonghaozhen/Documents/Y2S2/CS2103T/ip/text-ui-test/ACTUAL.TXT /Users/gonghaozhen/Documents/Y2S2/CS2103T/ip/text-ui-test/EXPECTED-UNIX.TXT","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LsmnBmnc"},"content":"diff /Users/gonghaozhen/Documents/Y2S2/CS2103T/ip/text-ui-test/ACTUAL.TXT /Users/gonghaozhen/Documents/Y2S2/CS2103T/ip/text-ui-test/EXPECTED-UNIX.TXT","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"LsmnBmnc":6,"-":33}}]
