[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"jniaorx"},"content":"plugins {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jniaorx"},"content":"    id \u0027java\u0027","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jniaorx"},"content":"    id \u0027application\u0027","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jniaorx"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jniaorx"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jniaorx"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jniaorx"},"content":"repositories {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jniaorx"},"content":"    mavenCentral()","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jniaorx"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jniaorx"},"content":"dependencies {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jniaorx"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jniaorx"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jniaorx"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jniaorx"},"content":"test {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jniaorx"},"content":"    useJUnitPlatform()","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jniaorx"},"content":"    testLogging {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jniaorx"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jniaorx"},"content":"        showExceptions true","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jniaorx"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jniaorx"},"content":"        showCauses true","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jniaorx"},"content":"        showStackTraces true","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jniaorx"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jniaorx"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jniaorx"},"content":"application {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jniaorx"},"content":"    mainClass.set(\"introBlaise.ui.IntroBlaise\")","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jniaorx"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jniaorx"},"content":"shadowJar {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jniaorx"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jniaorx"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jniaorx"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jniaorx"},"content":"run{","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jniaorx"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jniaorx"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"jniaorx":42}},{"path":"data/introBlaise.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jniaorx"},"content":"D | 0 | return book | 21-09-2025 1600","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jniaorx"},"content":"E | 0 | return show | 31-01-2025 1600 to 31-01-2025 1800","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jniaorx"},"content":"E | 0 | idk | 21-09-2025 1600 to 21-09-2025 1800","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jniaorx"},"content":"D | 0 | return book | 31-01-2025 1600","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"jniaorx":4}},{"path":"src/main/java/introBlaise/exceptions/AlreadyUndoneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jniaorx"},"content":"package introBlaise.exceptions;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jniaorx"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jniaorx"},"content":" * Exception class representing an error condition where an attempt is made to mark a task","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jniaorx"},"content":" * as \"undone\" when it has already been marked as not done.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jniaorx"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jniaorx"},"content":"public class AlreadyUndoneException extends IntroBlaiseException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jniaorx"},"content":"     * Constructs a new {@code introBlaise.exceptions.AlreadyUndoneException} with the specified detail message.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jniaorx"},"content":"     * @param exception The detail message that explains the reason for this exception.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jniaorx"},"content":"    public AlreadyUndoneException(String exception) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jniaorx"},"content":"        super(exception);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jniaorx"},"content":"     * Exception class representing an error condition where an attempt is made to add","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jniaorx"},"content":"     * a task without description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jniaorx"},"content":"    public static class EmptyDescriptionException extends IntroBlaiseException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jniaorx"},"content":"        /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jniaorx"},"content":"         * Constructs a new {@code introBlaise.exceptions.AlreadyUndoneException.EmptyDescriptionException} with the specified detail message.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jniaorx"},"content":"         * @param exception The detail message that explains the reason for this exception.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jniaorx"},"content":"         */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jniaorx"},"content":"        public EmptyDescriptionException(String exception) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jniaorx"},"content":"            super(exception);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jniaorx"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jniaorx"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"jniaorx":29}},{"path":"src/main/java/introBlaise/exceptions/DeleteEmptyTaskListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jniaorx"},"content":"package introBlaise.exceptions;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jniaorx"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jniaorx"},"content":" * Exception class representing an error condition where an attempt is made to delete a task from an","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jniaorx"},"content":" * empty task list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jniaorx"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jniaorx"},"content":"public class DeleteEmptyTaskListException extends IntroBlaiseException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jniaorx"},"content":"     * Constructs a new {@code introBlaise.exceptions.DeleteEmptyTaskListException} with the specified detail message.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jniaorx"},"content":"     * @param exception The detail message that explains the reason for this exception.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jniaorx"},"content":"    public DeleteEmptyTaskListException(String exception) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jniaorx"},"content":"        super(exception);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jniaorx"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"jniaorx":15}},{"path":"src/main/java/introBlaise/exceptions/EmptyTaskListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jniaorx"},"content":"package introBlaise.exceptions;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jniaorx"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jniaorx"},"content":" * Exception class representing an error condition where an attempt is made to print","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jniaorx"},"content":" * an empty task list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jniaorx"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jniaorx"},"content":"public class EmptyTaskListException extends IntroBlaiseException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jniaorx"},"content":"     * Constructs a new {@code introBlaise.exceptions.EmptyTaskListException} with the specified detail message.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jniaorx"},"content":"     * @param exception The detail message that explains the reason for this exception.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jniaorx"},"content":"    public EmptyTaskListException(String exception) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jniaorx"},"content":"        super(exception);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jniaorx"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"jniaorx":15}},{"path":"src/main/java/introBlaise/exceptions/IntroBlaiseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jniaorx"},"content":"package introBlaise.exceptions;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jniaorx"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jniaorx"},"content":" * A custom exception class for the introBlaise.ui.IntroBlaise bot.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jniaorx"},"content":" * The {@code introBlaise.exceptions.IntroBlaiseException} class is used to represent application-specific errors","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jniaorx"},"content":" * that may occur during the execution of the introBlaise.ui.IntroBlaise program.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jniaorx"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jniaorx"},"content":"public class IntroBlaiseException extends Exception {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jniaorx"},"content":"     * Constructs a new introBlaise.exceptions.IntroBlaiseException with the specified detail message.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jniaorx"},"content":"     * @param exception The detail message that explains the reason for this exception.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jniaorx"},"content":"    public IntroBlaiseException(String exception) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jniaorx"},"content":"        super(exception);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jniaorx"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"jniaorx":18}},{"path":"src/main/java/introBlaise/exceptions/InvalidDeadlineFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jniaorx"},"content":"package introBlaise.exceptions;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jniaorx"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jniaorx"},"content":" * Exception class representing an error condition where user inputs","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jniaorx"},"content":" * incorrect format for a introBlaise.task.Deadline task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jniaorx"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jniaorx"},"content":"public class InvalidDeadlineFormatException extends IntroBlaiseException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jniaorx"},"content":"     * Constructs a new {@code InvalidDeadlineException} with the specified detail message.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jniaorx"},"content":"     * @param exception The detail message that explains the reason for this exception.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jniaorx"},"content":"    public InvalidDeadlineFormatException(String exception) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jniaorx"},"content":"        super(exception);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jniaorx"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"jniaorx":15}},{"path":"src/main/java/introBlaise/exceptions/InvalidEventFromFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jniaorx"},"content":"package introBlaise.exceptions;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jniaorx"},"content":"import introBlaise.exceptions.IntroBlaiseException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jniaorx"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jniaorx"},"content":" * Exception class representing an error condition where user inputs","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jniaorx"},"content":" * incorrect format of \"from\" for an introBlaise.task.Event task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jniaorx"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jniaorx"},"content":"public class InvalidEventFromFormatException extends IntroBlaiseException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jniaorx"},"content":"     * Constructs a new {@code introBlaise.exceptions.InvalidEventFromFormatException} with the specified detail message.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jniaorx"},"content":"     * @param exception The detail message that explains the reason for this exception.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jniaorx"},"content":"    public InvalidEventFromFormatException(String exception) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jniaorx"},"content":"        super(exception);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jniaorx"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"jniaorx":17}},{"path":"src/main/java/introBlaise/exceptions/InvalidEventToFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jniaorx"},"content":"package introBlaise.exceptions;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jniaorx"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jniaorx"},"content":" * Exception class representing an error condition where user inputs","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jniaorx"},"content":" * incorrect format of \"to\" for an introBlaise.task.Event task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jniaorx"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jniaorx"},"content":"public class InvalidEventToFormatException extends IntroBlaiseException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jniaorx"},"content":"     * Constructs a new {@code introBlaise.exceptions.InvalidEventToFormatException} with the specified detail message.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jniaorx"},"content":"     * @param exception The detail message that explains the reason for this exception.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jniaorx"},"content":"    public InvalidEventToFormatException(String exception) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jniaorx"},"content":"        super(exception);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jniaorx"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"jniaorx":15}},{"path":"src/main/java/introBlaise/exceptions/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jniaorx"},"content":"package introBlaise.exceptions;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jniaorx"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jniaorx"},"content":" * Exception class representing an error condition where user inputs","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jniaorx"},"content":" * an invalid command.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jniaorx"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jniaorx"},"content":"public class InvalidInputException extends IntroBlaiseException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jniaorx"},"content":"     * Constructs a new {@code introBlaise.exceptions.InvalidInputException} with the specified detail message.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jniaorx"},"content":"     * @param exception The detail message that explains the reason for this exception.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jniaorx"},"content":"    public InvalidInputException (String exception) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jniaorx"},"content":"        super(exception);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jniaorx"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"jniaorx":14}},{"path":"src/main/java/introBlaise/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jniaorx"},"content":"package introBlaise.storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jniaorx"},"content":"import java.io.*;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jniaorx"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jniaorx"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jniaorx"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jniaorx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jniaorx"},"content":"import java.util.List;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jniaorx"},"content":"public class Storage {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jniaorx"},"content":"    private static final String DIRECTORY_PATH \u003d \"data\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jniaorx"},"content":"    private static final String FILE_PATH \u003d \"data/introBlaise.txt\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jniaorx"},"content":"    public Storage() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jniaorx"},"content":"        createFile();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jniaorx"},"content":"    private void createFile() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jniaorx"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jniaorx"},"content":"            Path dirPath \u003d Paths.get(DIRECTORY_PATH);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jniaorx"},"content":"            Path filePath \u003d Paths.get(FILE_PATH);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jniaorx"},"content":"            // Create directory if it doesn\u0027t exist","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jniaorx"},"content":"            if (!Files.exists(dirPath)) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jniaorx"},"content":"                Files.createDirectories(dirPath);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jniaorx"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jniaorx"},"content":"            // Create file if it doesn\u0027t exist","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jniaorx"},"content":"            if (!Files.exists(filePath)) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jniaorx"},"content":"                Files.createFile(filePath);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jniaorx"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jniaorx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"Error creating file: \" + e.getMessage());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jniaorx"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jniaorx"},"content":"    public List\u003cString\u003e loadTasks() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jniaorx"},"content":"        List\u003cString\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jniaorx"},"content":"        // Check if the file exists and is not empty","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jniaorx"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jniaorx"},"content":"            Path filePath \u003d Paths.get(FILE_PATH);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jniaorx"},"content":"            if (Files.exists(filePath) \u0026\u0026 Files.size(filePath) \u003e 0) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jniaorx"},"content":"                // Read from the file if it exists and is not empty","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jniaorx"},"content":"                try (BufferedReader br \u003d new BufferedReader(new FileReader(FILE_PATH))) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jniaorx"},"content":"                    String line;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jniaorx"},"content":"                    while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jniaorx"},"content":"                        tasks.add(line);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jniaorx"},"content":"                    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jniaorx"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jniaorx"},"content":"            } else {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jniaorx"},"content":"                System.out.println(\"File is empty or does not exist. No tasks to load.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jniaorx"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jniaorx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"Error reading file: \" + e.getMessage());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jniaorx"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jniaorx"},"content":"        return tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jniaorx"},"content":"    public void saveTasks(List\u003cString\u003e tasks) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jniaorx"},"content":"        try (BufferedWriter bw \u003d new BufferedWriter(new FileWriter(FILE_PATH))) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jniaorx"},"content":"            for (String task : tasks) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jniaorx"},"content":"                bw.write(task);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jniaorx"},"content":"                bw.newLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jniaorx"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jniaorx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jniaorx"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jniaorx"},"content":"    public void handleCorruptedFile() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jniaorx"},"content":"        System.out.println(\"Warning: Corrupted file detected. Resetting...\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jniaorx"},"content":"        saveTasks(new ArrayList\u003c\u003e()); // Reset file with an empty task list","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jniaorx"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"jniaorx":77}},{"path":"src/main/java/introBlaise/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jniaorx"},"content":"package introBlaise.task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jniaorx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jniaorx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jniaorx"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jniaorx"},"content":" * Represents a task with a specific deadline that needs to be completed before a certain date or time.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jniaorx"},"content":" * This class extends the {@code introBlaise.task.Task} class and adds a deadline attribute to store the due date/time","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jniaorx"},"content":" * of the task. It overrides the {@code toString()} method to provide a customized string representation.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jniaorx"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jniaorx"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jniaorx"},"content":"    /** The deadline by which the task should be completed, represented as a string. */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jniaorx"},"content":"    protected String by;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jniaorx"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jniaorx"},"content":"     * Constructs a new {@code introBlaise.task.Deadline} task with the specified description and deadline.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jniaorx"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jniaorx"},"content":"     * @param by The deadline (date/time) by which the task must be completed.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jniaorx"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jniaorx"},"content":"        super(description);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jniaorx"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jniaorx"},"content":"        this.deadline \u003d parseDeadline(by);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jniaorx"},"content":"    private LocalDateTime parseDeadline(String by) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jniaorx"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d-MM-yyyy HHmm\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jniaorx"},"content":"        return LocalDateTime.parse(by, formatter);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jniaorx"},"content":"    public LocalDateTime getDeadline() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jniaorx"},"content":"        return deadline;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jniaorx"},"content":"     * Returns a string representation of the deadline task, including its type, description,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jniaorx"},"content":"     * and the deadline by which it must be completed.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jniaorx"},"content":"     * @return A string in the format \"[D][status] description (by: deadline)\"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jniaorx"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jniaorx"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jniaorx"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jniaorx"},"content":"        String formattedDate \u003d deadline.format(formatter);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jniaorx"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedDate + \")\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jniaorx"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"jniaorx":47}},{"path":"src/main/java/introBlaise/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jniaorx"},"content":"package introBlaise.task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jniaorx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jniaorx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jniaorx"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jniaorx"},"content":" * Represents a task that occurs within a specific time frame.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jniaorx"},"content":" * The {@code introBlaise.task.Event} class extends the {@code introBlaise.task.Task} class to include","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jniaorx"},"content":" * additional details about the start time and end time of the task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jniaorx"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jniaorx"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jniaorx"},"content":"    protected String from;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jniaorx"},"content":"    protected String to;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jniaorx"},"content":"     * The starting date/time of the event.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jniaorx"},"content":"    protected LocalDateTime parsedFrom;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jniaorx"},"content":"     * The ending date/time of the event.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jniaorx"},"content":"    protected LocalDateTime parsedTo;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jniaorx"},"content":"     * Constructs an {@code introBlaise.task.Event} object with the specified description, start time, and end time.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jniaorx"},"content":"     * @param description A brief description of the event.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jniaorx"},"content":"     * @param from The starting date/time of the event.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jniaorx"},"content":"     * @param to The ending date/tine of the event.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jniaorx"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jniaorx"},"content":"        super(description);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jniaorx"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jniaorx"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jniaorx"},"content":"        this.parsedFrom \u003d parseDateTime(from);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jniaorx"},"content":"        this.parsedTo \u003d parseDateTime(to);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jniaorx"},"content":"    private LocalDateTime parseDateTime(String dateTimeStr) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jniaorx"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d-MM-yyyy HHmm\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jniaorx"},"content":"        return LocalDateTime.parse(dateTimeStr, formatter);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jniaorx"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jniaorx"},"content":"        return parsedFrom;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jniaorx"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jniaorx"},"content":"        return parsedTo;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jniaorx"},"content":"     * Returns a string representation of the event, including its description,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jniaorx"},"content":"     * start time, and end time.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jniaorx"},"content":"     * @return A formatted string that represents the event.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jniaorx"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jniaorx"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jniaorx"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d-MM-yyyy HHmm\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jniaorx"},"content":"        String formattedFrom \u003d parsedFrom.format(formatter);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jniaorx"},"content":"        String formattedTo \u003d parsedTo.format(formatter);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jniaorx"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + formattedFrom + \" to: \" + formattedTo + \")\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jniaorx"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"jniaorx":64}},{"path":"src/main/java/introBlaise/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jniaorx"},"content":"package introBlaise.task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jniaorx"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jniaorx"},"content":" * Represents a generic task with a description and completion status.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jniaorx"},"content":" * The {@code introBlaise.task.Task} class serves as a base class for different types of tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jniaorx"},"content":" * It provides methods to manage the task\u0027s description and completion status.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jniaorx"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jniaorx"},"content":"public class Task {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jniaorx"},"content":"    // The description of the task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jniaorx"},"content":"    protected String description;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jniaorx"},"content":"    // Indicates whether the task is marked as done.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jniaorx"},"content":"    public boolean isDone;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jniaorx"},"content":"     * Constructs a new introBlaise.task.Task with the specified description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jniaorx"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jniaorx"},"content":"     * @param description A string describing the task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jniaorx"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jniaorx"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jniaorx"},"content":"        this.isDone \u003d false; // Default status is not done.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jniaorx"},"content":"     * Returns the status icon representing whether the task is done.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jniaorx"},"content":"     * @return \"X\" if the task is done, otherwise a space (\" \").","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jniaorx"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jniaorx"},"content":"        return (isDone ? \"X\" : \" \"); // Mark done task with \"X\".","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jniaorx"},"content":"     * Marks the task as done by setting its status to true.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jniaorx"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jniaorx"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jniaorx"},"content":"     * Marks the task as not done by setting its status to false.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jniaorx"},"content":"    public void markAsUndone() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jniaorx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jniaorx"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jniaorx"},"content":"     * The string includes the task\u0027s status icon and description","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jniaorx"},"content":"     * @return A formatted string representing the task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jniaorx"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jniaorx"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jniaorx"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jniaorx"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"jniaorx":56}},{"path":"src/main/java/introBlaise/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jniaorx"},"content":"package introBlaise.task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jniaorx"},"content":"import introBlaise.exceptions.EmptyTaskListException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jniaorx"},"content":"import introBlaise.storage.Storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jniaorx"},"content":"import introBlaise.task.Deadline;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jniaorx"},"content":"import introBlaise.task.Event;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jniaorx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jniaorx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jniaorx"},"content":"import java.util.List;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jniaorx"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jniaorx"},"content":" * Manages a list of tasks, allowing tasks to be added, removed, retrieved, and displayed.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jniaorx"},"content":" * THe {@code TaskManager} class serves as a central utility for handling user tasks,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jniaorx"},"content":" * providing operations to interact with and manipulate the task list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jniaorx"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jniaorx"},"content":"public class TaskList {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jniaorx"},"content":"    // Stores the list of tasks.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jniaorx"},"content":"    private final ArrayList\u003cTask\u003e tasksList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jniaorx"},"content":"    private final Storage storage; // Instance of saveData","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jniaorx"},"content":"    public TaskList() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jniaorx"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jniaorx"},"content":"        List\u003cString\u003e loadedTasks \u003d storage.loadTasks();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jniaorx"},"content":"        // Convert loaded tasks from stings to introBlaise.task.Task objects and update taskslist","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jniaorx"},"content":"        for (String taskStr : loadedTasks) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jniaorx"},"content":"            Task task \u003d stringToTask(taskStr);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jniaorx"},"content":"            if (task !\u003d null) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jniaorx"},"content":"                tasksList.add(task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jniaorx"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jniaorx"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jniaorx"},"content":"     * Adds a new task to the task list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jniaorx"},"content":"     * @param task The task to be added.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jniaorx"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jniaorx"},"content":"        // introBlaise.task.Task newTask \u003d new introBlaise.task.Task(description);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jniaorx"},"content":"        tasksList.add(task); // Add new task to the list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jniaorx"},"content":"        // System.out.println(\"    __________________\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jniaorx"},"content":"        // System.out.println(\"    added: \" + description);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jniaorx"},"content":"        // System.out.println(\"    __________________\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jniaorx"},"content":"        saveTasks();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jniaorx"},"content":"     * Removes a specific task from the task list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jniaorx"},"content":"     * @param task The task to be removed.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jniaorx"},"content":"    public void removeTask(Task task) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jniaorx"},"content":"        tasksList.remove(task);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jniaorx"},"content":"        saveTasks();;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jniaorx"},"content":"     * Prints the list of tasks to the console.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jniaorx"},"content":"     * If the task list is empty, an {@code introBlaise.exceptions.EmptyTaskListException} is thrown and its","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jniaorx"},"content":"     * message is printed instead.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jniaorx"},"content":"    public void printTaskList() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jniaorx"},"content":"        try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jniaorx"},"content":"            // Check if the task list is empty.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jniaorx"},"content":"            if (tasksList.isEmpty()) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jniaorx"},"content":"                throw new EmptyTaskListException(\"Oh no! Your task list is empty now. Please add tasks!\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jniaorx"},"content":"            } else {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jniaorx"},"content":"                // Print all tasks in the list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jniaorx"},"content":"                System.out.println(\"    _________________________________\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jniaorx"},"content":"                System.out.println(\"    Here are the tasks in your list:\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jniaorx"},"content":"                for (int i \u003d 0; i \u003c tasksList.size(); i++) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jniaorx"},"content":"                    System.out.println(\"    \" + (i + 1) + \". \" + getTask(i));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jniaorx"},"content":"                }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jniaorx"},"content":"                System.out.println(\"    _________________________________\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jniaorx"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jniaorx"},"content":"        } catch (EmptyTaskListException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jniaorx"},"content":"            // Handle empty task list by printing the exception message.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jniaorx"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jniaorx"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jniaorx"},"content":"     * Retrieves a specific task from the task list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jniaorx"},"content":"     * @param taskIndex The index of the task to retrieve.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jniaorx"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jniaorx"},"content":"    public Task getTask(int taskIndex) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jniaorx"},"content":"        return tasksList.get(taskIndex);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jniaorx"},"content":"     * Returns the full list of tasks.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jniaorx"},"content":"     * @return AN {@code ArrayList} containing all tasks.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jniaorx"},"content":"    public ArrayList\u003cTask\u003e getTasksList() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jniaorx"},"content":"        return tasksList;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jniaorx"},"content":"    public void saveTasks() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jniaorx"},"content":"        List\u003cString\u003e taskStrings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jniaorx"},"content":"        for (Task task : tasksList) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jniaorx"},"content":"            taskStrings.add(taskToString(task)); // Convert tasks to strings","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jniaorx"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jniaorx"},"content":"        storage.saveTasks(taskStrings); // Save tasks to file","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jniaorx"},"content":"    public void printTasksForDate(LocalDate date) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jniaorx"},"content":"        for (Task task : tasksList) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jniaorx"},"content":"            // Check if the task is an instance of introBlaise.task.Deadline","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jniaorx"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"jniaorx"},"content":"                Deadline deadlineTask \u003d (Deadline) task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"jniaorx"},"content":"                LocalDate taskDate \u003d deadlineTask.getDeadline().toLocalDate(); // Get the date part from introBlaise.task.Deadline","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"jniaorx"},"content":"                if (taskDate.isEqual(date)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"jniaorx"},"content":"                    System.out.println(task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"jniaorx"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"jniaorx"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"jniaorx"},"content":"            // Check if the task is an instance of introBlaise.task.Event","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"jniaorx"},"content":"            else if (task instanceof Event) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"jniaorx"},"content":"                Event eventTask \u003d (Event) task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"jniaorx"},"content":"                LocalDate eventDate \u003d eventTask.getFrom().toLocalDate();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"jniaorx"},"content":"                if (eventDate.isEqual(date)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"jniaorx"},"content":"                    System.out.println(task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"jniaorx"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"jniaorx"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"jniaorx"},"content":"            // Skip introBlaise.task.ToDo tasks as they don\u0027t have a date","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"jniaorx"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"jniaorx"},"content":"    private String taskToString(Task task) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"jniaorx"},"content":"        if (task instanceof ToDo) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"jniaorx"},"content":"            return \"T | \" + (task.isDone ? \"1\" : \"0\") + \" | \" + task.description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"jniaorx"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"jniaorx"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"jniaorx"},"content":"            return \"D | \" + (task.isDone ? \"1\" : \"0\") + \" | \" + task.description + \" | \" + deadline.by;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"jniaorx"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"jniaorx"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"jniaorx"},"content":"            return \"E | \" + (task.isDone ? \"1\" : \"0\") + \" | \" + task.description + \" | \" + event.from + \" to \" + event.to;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"jniaorx"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"jniaorx"},"content":"        return \"\"; // Default case","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"jniaorx"},"content":"    private Task stringToTask(String line) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"jniaorx"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"jniaorx"},"content":"            String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"jniaorx"},"content":"            if (parts.length \u003c 4) { // Check if the parts array has enough data","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"jniaorx"},"content":"                System.out.println(\"There is currently no tasks to be done.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"jniaorx"},"content":"                return null;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"jniaorx"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"jniaorx"},"content":"            String taskType \u003d parts[0].trim();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"jniaorx"},"content":"            String isDone \u003d parts[1].trim();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"jniaorx"},"content":"            String description \u003d parts[2].trim();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"jniaorx"},"content":"            switch (taskType) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"jniaorx"},"content":"            case \"T\":","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"jniaorx"},"content":"                Task todo \u003d new ToDo(description);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"jniaorx"},"content":"                if (\"1\".equals(isDone)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"jniaorx"},"content":"                    todo.markAsDone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"jniaorx"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"jniaorx"},"content":"                return todo;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"jniaorx"},"content":"            case \"D\":","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"jniaorx"},"content":"                String deadlineDate \u003d parts[3].trim();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"jniaorx"},"content":"                Task deadline \u003d new Deadline(description, deadlineDate);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"jniaorx"},"content":"                if (\"1\".equals(isDone)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"jniaorx"},"content":"                    deadline.markAsDone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"jniaorx"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"jniaorx"},"content":"                return deadline;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"jniaorx"},"content":"            case \"E\":","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"jniaorx"},"content":"                String eventDate \u003d parts[3].trim();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"jniaorx"},"content":"                String[] eventDetails \u003d eventDate.split(\" to \");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"jniaorx"},"content":"                Task event \u003d new Event(description, eventDetails[0], eventDetails[1]);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"jniaorx"},"content":"                if (\"1\".equals(isDone)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"jniaorx"},"content":"                    event.markAsDone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"jniaorx"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"jniaorx"},"content":"                return event;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"jniaorx"},"content":"            default:","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"jniaorx"},"content":"                System.out.println(\"Skipping corrupted task line: \" + line);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"jniaorx"},"content":"                return null;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"jniaorx"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"jniaorx"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"Error parsing task line: \" + e.getMessage());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"jniaorx"},"content":"            return null;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"jniaorx"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"jniaorx"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"jniaorx":191}},{"path":"src/main/java/introBlaise/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jniaorx"},"content":"package introBlaise.task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jniaorx"},"content":"import introBlaise.task.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jniaorx"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jniaorx"},"content":" * Represents a task without any date/time attached to it.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jniaorx"},"content":" * This class extends the {@code introBlaise.task.Task} class and add the task without any date/time attached","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jniaorx"},"content":" * to the list. It overrides the {@code toString()} method to provide a customized string representation.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jniaorx"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jniaorx"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jniaorx"},"content":"     * Constructs a new {@code introBlaise.task.ToDo} task with the specified description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jniaorx"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jniaorx"},"content":"    public ToDo(String description) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jniaorx"},"content":"        super(description);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jniaorx"},"content":"     * Returns a string representation of the todo task, including its type and description.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jniaorx"},"content":"     * @return A string in the format \"[T][status] description\"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jniaorx"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jniaorx"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jniaorx"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jniaorx"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"jniaorx":27}},{"path":"src/main/java/introBlaise/ui/Echo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jniaorx"},"content":"package introBlaise.ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jniaorx"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jniaorx"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jniaorx"},"content":" * A class that echoes user input until the user types \"bye\".","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jniaorx"},"content":" * This class provides a method to interact with the user via the console,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jniaorx"},"content":" * repeatedly printing back whatever the user inputs unless the input is \"bye\".","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jniaorx"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jniaorx"},"content":"public class Echo {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jniaorx"},"content":"     * Default constructor or the {@code introBlaise.ui.Echo} class.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jniaorx"},"content":"     * Initializes an {@code introBlaise.ui.Echo} instance. This constructor does not perform","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jniaorx"},"content":"     * any specific initialization as no fields are defined for the class.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jniaorx"},"content":"    public Echo() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jniaorx"},"content":"     * Starts an interactive session that echoes user input until the user types \"bye\".","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jniaorx"},"content":"     * This method reads input from the provided {@link Scanner} object and prints","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jniaorx"},"content":"     * it back to the console in a formatted manner. The interaction ends when the","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jniaorx"},"content":"     * user inputs the word \"bye\",","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jniaorx"},"content":"     * @param scanner A {@link Scanner} object used to read input from the user.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jniaorx"},"content":"    public void echo(Scanner scanner) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jniaorx"},"content":"        // Wait for the first user input.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jniaorx"},"content":"        String userInput \u003d scanner.nextLine();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jniaorx"},"content":"        // Continue echoing user input until \"bye\" is entered.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jniaorx"},"content":"        while (!userInput.equals(\"bye\")) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jniaorx"},"content":"            // Print a formatted response with the user input","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    __________________\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    \" + userInput);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    __________________\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jniaorx"},"content":"            // Wait for the next user input","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jniaorx"},"content":"            userInput \u003d scanner.nextLine();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jniaorx"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jniaorx"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"jniaorx":41}},{"path":"src/main/java/introBlaise/ui/Greetings.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jniaorx"},"content":"package introBlaise.ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jniaorx"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jniaorx"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jniaorx"},"content":" * Handles user greetings and farewells for the bot.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jniaorx"},"content":" * The {@code introBlaise.ui.Greetings} class provides methods to greet the user when","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jniaorx"},"content":" * they start interacting with the application and bid them farewell","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jniaorx"},"content":" * when they exit.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jniaorx"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jniaorx"},"content":"public class Greetings {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jniaorx"},"content":"     * Constructs a {@code introBlaise.ui.Greetings} object.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jniaorx"},"content":"     * This constructor does not perform any initialization.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jniaorx"},"content":"    public Greetings() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jniaorx"},"content":"     * Greets the user and captures their name.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jniaorx"},"content":"     * This method prompts the user for their name and responds with a personalized","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jniaorx"},"content":"     * greeting. A {@link Scanner} object is used to read the user\u0027s input.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jniaorx"},"content":"     * @param scanner A {@code Scanner} object to read user input.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jniaorx"},"content":"    public void greet(Scanner scanner) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jniaorx"},"content":"        // Prompt the user with a greeting message.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jniaorx"},"content":"        System.out.println(\"    _________________________________\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jniaorx"},"content":"        System.out.println(\"    Sup! I am IntroBlaise. What\u0027s your name?\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jniaorx"},"content":"        // Check if there is user input and read it.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jniaorx"},"content":"        if (scanner.hasNextLine()) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jniaorx"},"content":"            String name \u003d scanner.nextLine(); // Read user\u0027s name.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jniaorx"},"content":"            // Responds with a personalized greeting.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    _________________________________\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    Hi \" + name + \"!(ʘ‿ʘ)╯ Nice to meet you! You can start adding tasks to your very own task list! :)\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    _________________________________\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jniaorx"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jniaorx"},"content":"     * Bids farewell to the user.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jniaorx"},"content":"     * This method prints a goodbye message to the user when they exit the application.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jniaorx"},"content":"    public void sayBye() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jniaorx"},"content":"        // Print a farewell message.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jniaorx"},"content":"        System.out.println(\"    _________________________________\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jniaorx"},"content":"        System.out.println(\"    Bye! Hope to see you again soon! :(\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jniaorx"},"content":"        System.out.println(\"    _________________________________\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jniaorx"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"jniaorx":52}},{"path":"src/main/java/introBlaise/ui/IntroBlaise.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jniaorx"},"content":"package introBlaise.ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jniaorx"},"content":"import introBlaise.task.TaskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jniaorx"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jniaorx"},"content":" * The entry point for the introBlaise.ui.IntroBlaise bot.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jniaorx"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jniaorx"},"content":"public class IntroBlaise {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jniaorx"},"content":"     * Main method to run the introBlaise.ui.IntroBlaise bot.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jniaorx"},"content":"     * @param args Command-line arguments.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jniaorx"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jniaorx"},"content":"        // Initialize UI","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jniaorx"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jniaorx"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jniaorx"},"content":"        // Initialize application components","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jniaorx"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jniaorx"},"content":"        Parser commands \u003d new Parser(taskList);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jniaorx"},"content":"        // Main loop for user interaction","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jniaorx"},"content":"        while (true) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jniaorx"},"content":"            String userInput \u003d ui.readInput();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jniaorx"},"content":"            if (userInput.equalsIgnoreCase(\"Bye\")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jniaorx"},"content":"                ui.showGoodbye();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jniaorx"},"content":"                break;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jniaorx"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jniaorx"},"content":"            commands.executeCommand(userInput);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jniaorx"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jniaorx"},"content":"        // Close scanner before exiting","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jniaorx"},"content":"        ui.closeScanner();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jniaorx"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"jniaorx":37}},{"path":"src/main/java/introBlaise/ui/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jniaorx"},"content":"package introBlaise.ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jniaorx"},"content":"import introBlaise.exceptions.*;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jniaorx"},"content":"import introBlaise.task.ToDo;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jniaorx"},"content":"import introBlaise.task.Deadline;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jniaorx"},"content":"import introBlaise.task.Event;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jniaorx"},"content":"import introBlaise.task.TaskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jniaorx"},"content":"import introBlaise.task.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jniaorx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jniaorx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jniaorx"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jniaorx"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jniaorx"},"content":" * The Commands class handles the execution fo user commands in the chatbot.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jniaorx"},"content":" * It interprets user inputs, executes corresponding operations, and manages tasks","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jniaorx"},"content":" * using the TaskManager instance.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jniaorx"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jniaorx"},"content":"public class Parser {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jniaorx"},"content":"    private final TaskList taskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jniaorx"},"content":"     * Constructor for Commands.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jniaorx"},"content":"     * @param taskList The TaskManager instance responsible for managing tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jniaorx"},"content":"    public Parser(TaskList taskList) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jniaorx"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jniaorx"},"content":"     * Executes a command based on the user\u0027s input.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jniaorx"},"content":"     * Handles different task operations such as listing, adding, marking, unmarking,and deleting tasks.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jniaorx"},"content":"     * @param userInput The user\u0027s input as a command string.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jniaorx"},"content":"    public void executeCommand(String userInput) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jniaorx"},"content":"        try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jniaorx"},"content":"            if (userInput.equalsIgnoreCase(\"List\")) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jniaorx"},"content":"                // Displays the task list when \"list\" is input.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jniaorx"},"content":"                taskList.printTaskList();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jniaorx"},"content":"            } else if (userInput.startsWith(\"mark\")) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jniaorx"},"content":"                // Marks a task as done based on its index.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jniaorx"},"content":"                markTaskAsDone(userInput);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jniaorx"},"content":"            } else if (userInput.startsWith(\"unmark\")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jniaorx"},"content":"                // Marks a task as not done based on its index.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jniaorx"},"content":"                unmarkTaskAsUndone(userInput);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jniaorx"},"content":"            } else if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jniaorx"},"content":"                // Adds a new To-Do task to the list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jniaorx"},"content":"                addTodoTask(userInput);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jniaorx"},"content":"            } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jniaorx"},"content":"                // Adds a new introBlaise.task.Deadline task with a specific due date.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jniaorx"},"content":"                addDeadlineTask(userInput);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jniaorx"},"content":"            } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jniaorx"},"content":"                // Adds a new introBlaise.task.Event task with a duration.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jniaorx"},"content":"                addEventTask(userInput);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jniaorx"},"content":"            } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jniaorx"},"content":"                // Deletes a task from the list based on its index.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jniaorx"},"content":"                deleteTask(userInput);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jniaorx"},"content":"            } else if (userInput.startsWith(\"tasks on\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jniaorx"},"content":"                String dateInput \u003d userInput.substring(9).trim(); // Extract the date part from input","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jniaorx"},"content":"                // Define the expected date format","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jniaorx"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d-MM-yyyy\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jniaorx"},"content":"                try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jniaorx"},"content":"                    // Convert the string to LocalDate","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jniaorx"},"content":"                    LocalDate localDate \u003d LocalDate.parse(dateInput, formatter);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jniaorx"},"content":"                    // Call the method with the parsed LocalDate","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jniaorx"},"content":"                 } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jniaorx"},"content":"                    System.out.println(\"Invalid date format. Please enter the date in d-MM-yyyy format.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jniaorx"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jniaorx"},"content":"            } else {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jniaorx"},"content":"                throw new InvalidInputException(\"Err...I don\u0027t understand this :(. Please give a valid command!\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jniaorx"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jniaorx"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jniaorx"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jniaorx"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jniaorx"},"content":"     * Marks a task as done based on user input.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jniaorx"},"content":"     * @param userInput The user input string, expected in the format \"mark x\" where x is the task number.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jniaorx"},"content":"     * @throws IndexOutOfBoundsException Exception thrown when format of user input is incorrect.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jniaorx"},"content":"     * @throws NumberFormatException Exception thrown when number format of user input is incorrect.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jniaorx"},"content":"    public void markTaskAsDone(String userInput) throws IndexOutOfBoundsException, NumberFormatException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jniaorx"},"content":"        try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jniaorx"},"content":"            // Extract task index from the input and mark the task as done.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jniaorx"},"content":"            int taskNo \u003d Integer.parseInt(userInput.substring(5)) - 1;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jniaorx"},"content":"            Task currTask \u003d taskList.getTask(taskNo);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jniaorx"},"content":"            currTask.markAsDone();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jniaorx"},"content":"            taskList.saveTasks();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jniaorx"},"content":"            // Notify the user that the task is marked as done.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    _________________________________\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    Well done! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"        \" + currTask);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    _________________________________\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jniaorx"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"Uh oh! Invalid index. Are you sure you are marking the correct task?\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jniaorx"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"Uh oh! Invalid number. Please enter a number after \u0027unmark\u0027.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jniaorx"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jniaorx"},"content":"     * Marks a task as undone based on user input.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jniaorx"},"content":"     * @param userInput The user input string, expected in the format \"unmark x\" where x is the task number.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jniaorx"},"content":"     * @throws IndexOutOfBoundsException Exception thrown when format of user input is incorrect.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jniaorx"},"content":"     * @throws NumberFormatException Exception thrown when number format of user input is incorrect.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jniaorx"},"content":"    public void unmarkTaskAsUndone(String userInput) throws IndexOutOfBoundsException, NumberFormatException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jniaorx"},"content":"        try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jniaorx"},"content":"            // Extract the task index from the input and mark the task as undone.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jniaorx"},"content":"            int taskNo \u003d Integer.parseInt(userInput.substring(7)) - 1;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"jniaorx"},"content":"            Task currTask \u003d taskList.getTask(taskNo);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"jniaorx"},"content":"            // Error thrown when user tries to unmark an undone task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"jniaorx"},"content":"            if (!currTask.isDone) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"jniaorx"},"content":"                throw new AlreadyUndoneException(\"This task has already been marked undone!\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"jniaorx"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"jniaorx"},"content":"            currTask.markAsUndone();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"jniaorx"},"content":"            taskList.saveTasks();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"jniaorx"},"content":"            // Notify the user that the task is marked as not done.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    _________________________________\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    \" + currTask);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    _________________________________\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"jniaorx"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"Uh oh! Invalid index. Are you sure you are unmarking the correct task?\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"jniaorx"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"Uh oh! Invalid number. Please enter a number after \u0027unmark\u0027.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"jniaorx"},"content":"        } catch (AlreadyUndoneException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"jniaorx"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"jniaorx"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"jniaorx"},"content":"     * Adds a To-Do task to the task list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"jniaorx"},"content":"     * @param userInput The user input string, expected in the format \"todo x\" where x is the task description.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"jniaorx"},"content":"     * @throws NumberFormatException Exception thrown when number format of user input is incorrect.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"jniaorx"},"content":"     * @throws StringIndexOutOfBoundsException Exception thrown when format of user input is incorrect.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"jniaorx"},"content":"    public void addTodoTask(String userInput) throws NumberFormatException, StringIndexOutOfBoundsException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"jniaorx"},"content":"        try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"jniaorx"},"content":"            // Extract the description of the task from the input.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"jniaorx"},"content":"            String description \u003d userInput.substring((5));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"jniaorx"},"content":"            // Error thrown if user does not input description.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"jniaorx"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"jniaorx"},"content":"                throw new AlreadyUndoneException.EmptyDescriptionException(\"Please enter a description for your task!\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"jniaorx"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"jniaorx"},"content":"            ToDo todoTask \u003d new ToDo(description);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"jniaorx"},"content":"            taskList.addTask(todoTask);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"jniaorx"},"content":"            int numOfTask \u003d taskList.getTasksList().size();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"jniaorx"},"content":"            // Notify the user that the task has been added.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    _________________________________\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"        \" + todoTask);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    Now you have \" + numOfTask + \" tasks in the list.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    _________________________________\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"jniaorx"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"Uh oh! Invalid number. Please enter a number after \u0027unmark\u0027.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"jniaorx"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"Errr...Please enter a description\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"jniaorx"},"content":"        } catch (AlreadyUndoneException.EmptyDescriptionException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"jniaorx"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"jniaorx"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"jniaorx"},"content":"     * Adds a introBlaise.task.Deadline task to the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"jniaorx"},"content":"     * @param userInput The user input string, expected in  the format deadline x /by date where x is the task description.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"jniaorx"},"content":"     * @throws StringIndexOutOfBoundsException Exception thrown when format of user input is incorrect.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"jniaorx"},"content":"    public void addDeadlineTask(String userInput) throws StringIndexOutOfBoundsException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"jniaorx"},"content":"        try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"jniaorx"},"content":"            // Get introBlaise.task.Deadline task from user input.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"jniaorx"},"content":"            Deadline deadlineTask \u003d getDeadlineTask(userInput);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"jniaorx"},"content":"            taskList.addTask(deadlineTask);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"jniaorx"},"content":"            int numOfTask \u003d taskList.getTasksList().size();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"jniaorx"},"content":"            // Notify the user that the task has been added.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    _________________________________\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"        \" + deadlineTask);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    Now you have \" + numOfTask + \" tasks in the list.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    _________________________________\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"jniaorx"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"Please enter a description and a deadline for your task!\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"jniaorx"},"content":"        } catch (InvalidDeadlineFormatException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"jniaorx"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"jniaorx"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"jniaorx"},"content":"     * Creates a introBlaise.task.Deadline task based on user input.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"jniaorx"},"content":"     * @param userInput The user input string, expected in  the format deadline x /by date where x is the task description.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"jniaorx"},"content":"     * @return A introBlaise.task.Deadline task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"jniaorx"},"content":"     * @throws InvalidDeadlineFormatException Exception thrown when format of user\u0027s input is incorrect.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"jniaorx"},"content":"    private static Deadline getDeadlineTask(String userInput) throws InvalidDeadlineFormatException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"jniaorx"},"content":"        String description \u003d userInput.substring(8, userInput.indexOf(\"/\")).trim();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"jniaorx"},"content":"        int separator \u003d userInput.indexOf(\"/\") + 4;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"jniaorx"},"content":"        String deadline \u003d userInput.substring(separator);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"jniaorx"},"content":"        if (deadline.isEmpty()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"jniaorx"},"content":"            throw new InvalidDeadlineFormatException(\"There seems to be no deadline entered...? Please enter a deadline after the word /by.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"jniaorx"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"jniaorx"},"content":"        return new Deadline(description, deadline);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"jniaorx"},"content":"     * Adds an introBlaise.task.Event task to the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"jniaorx"},"content":"     * @param userInput The user input string, expected in  the format event x /from date /to date where x is the task description.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"jniaorx"},"content":"     * @throws StringIndexOutOfBoundsException Exception thrown when format of user input is incorrect.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"jniaorx"},"content":"    public void addEventTask(String userInput) throws StringIndexOutOfBoundsException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"jniaorx"},"content":"        try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"jniaorx"},"content":"            Event eventTask \u003d getEvent(userInput);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"jniaorx"},"content":"            taskList.addTask(eventTask);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"jniaorx"},"content":"            int numOfTask \u003d taskList.getTasksList().size(); // no of task in task list","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    _________________________________\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"        \" + eventTask);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    Now you have \" + numOfTask + \" tasks in the list.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    _________________________________\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"jniaorx"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"Please enter a description and a duration for your task!\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"jniaorx"},"content":"        } catch (InvalidEventFromFormatException | InvalidEventToFormatException |","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"jniaorx"},"content":"                 AlreadyUndoneException.EmptyDescriptionException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"jniaorx"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"jniaorx"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"jniaorx"},"content":"     * Creates an introBlaise.task.Event task based on user input.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"jniaorx"},"content":"     * @param userInput The user input string, expected in  the format event x /from date /to date where x is the task description.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"jniaorx"},"content":"     * @return An introBlaise.task.Event task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"jniaorx"},"content":"     * @throws AlreadyUndoneException.EmptyDescriptionException Exception thrown when no description is entered.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"jniaorx"},"content":"     * @throws InvalidEventFromFormatException Exception thrown when format of user input is incorrect.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"jniaorx"},"content":"     * @throws InvalidEventToFormatException Exception thrown when format of user input is incorrect.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"jniaorx"},"content":"    private static Event getEvent(String userInput) throws AlreadyUndoneException.EmptyDescriptionException, InvalidEventFromFormatException, InvalidEventToFormatException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"jniaorx"},"content":"        // Extract description from user input.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"jniaorx"},"content":"        String description \u003d userInput.substring(5, userInput.indexOf(\"/\")).trim();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"jniaorx"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"jniaorx"},"content":"            throw new AlreadyUndoneException.EmptyDescriptionException(\"Please enter a description for your task!\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"jniaorx"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"jniaorx"},"content":"        if (!userInput.contains(\"/from\")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"jniaorx"},"content":"            throw new InvalidEventFromFormatException(\"Please include a \u0027From\u0027 date by using /from!\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"jniaorx"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"jniaorx"},"content":"        if (!userInput.contains(\"/to\")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"jniaorx"},"content":"            throw new InvalidEventToFormatException(\"Please include a \u0027To\u0027 date by using /to!\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"jniaorx"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"jniaorx"},"content":"        // Extract from and to date from user input.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"jniaorx"},"content":"        String[] segments \u003d userInput.substring(6).split(\"/\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"jniaorx"},"content":"        String from \u003d segments[1].substring(4).trim();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"jniaorx"},"content":"        if (from.isEmpty()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"jniaorx"},"content":"            throw new InvalidEventFromFormatException(\"Please include a \u0027From\u0027 date after the word /from!\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"jniaorx"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"jniaorx"},"content":"        String to \u003d segments[2].substring(2).trim();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"jniaorx"},"content":"        if (to.isEmpty()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"jniaorx"},"content":"            throw new InvalidEventToFormatException(\"Please include a \u0027To\u0027 date after the word /to!\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"jniaorx"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"jniaorx"},"content":"        return new Event(description, from, to);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"jniaorx"},"content":"     * Deletes a task from the task list based on user input.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"jniaorx"},"content":"     * @param userInput The user input string, expected in the format delete x where x is the task description.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"jniaorx"},"content":"     * @throws IndexOutOfBoundsException Exception thrown when user is deleting the wrong task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"jniaorx"},"content":"     * @throws NumberFormatException Exception thrown when number format of user input is incorrect.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"jniaorx"},"content":"    public void deleteTask(String userInput) throws IndexOutOfBoundsException, NumberFormatException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"jniaorx"},"content":"        try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"jniaorx"},"content":"            if (taskList.getTasksList().isEmpty()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"jniaorx"},"content":"                throw new DeleteEmptyTaskListException(\"Your task list is empty. You can\u0027t delete anything. Please add tasks.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"jniaorx"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"jniaorx"},"content":"            // Extract task from user input.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"jniaorx"},"content":"            int taskNo \u003d Integer.parseInt(userInput.substring(7)) - 1;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"jniaorx"},"content":"            Task currTask \u003d taskList.getTask(taskNo);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"jniaorx"},"content":"            taskList.removeTask(currTask);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"jniaorx"},"content":"            int numOfTask \u003d taskList.getTasksList().size();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"jniaorx"},"content":"            // Notify the user that the task has been deleted.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    _________________________________\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"        \" + currTask);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    Now you have \" + numOfTask + \" tasks in the list.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    _________________________________\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"jniaorx"},"content":"        } catch (DeleteEmptyTaskListException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"jniaorx"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"jniaorx"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"Uh oh! Invalid index. Have you entered the index? Are you sure you are deleting the correct task?\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"jniaorx"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"Uh oh! Invalid number. Please enter a number after \u0027delete\u0027.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"jniaorx"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"jniaorx"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"jniaorx":306}},{"path":"src/main/java/introBlaise/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jniaorx"},"content":"package introBlaise.ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jniaorx"},"content":"import introBlaise.ui.Greetings;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jniaorx"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jniaorx"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jniaorx"},"content":" * Handles interactions with the user, including displaying messages and reading input.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jniaorx"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jniaorx"},"content":"public class Ui {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jniaorx"},"content":"    private Scanner scanner;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jniaorx"},"content":"    private Greetings greetings;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jniaorx"},"content":"     * Constructor initializes the scanner for user input and the introBlaise.ui.Greetings component.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jniaorx"},"content":"    public Ui() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jniaorx"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jniaorx"},"content":"        this.greetings \u003d new Greetings();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jniaorx"},"content":"     * Displays the bot\u0027s welcome message with an ASCII logo and greets the user.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jniaorx"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jniaorx"},"content":"        String logo \u003d","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jniaorx"},"content":"                \".___        __               __________.__         .__\\n\" +","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jniaorx"},"content":"                        \"|   | _____/  |________  ____\\\\______   \\\\  | _____  |__| ______ ____\\n\" +","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jniaorx"},"content":"                        \"|   |/    \\\\   __\\\\_  __ \\\\/  _ \\\\|    |  _/  | \\\\__  \\\\ |  |/  ___// __ \\\\\\n\" +","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jniaorx"},"content":"                        \"|   |   |  \\\\  |  |  | \\\\(  \u003c_\u003e )    |   \\\\  |__/ __ \\\\|  |\\\\___ \\\\\\\\  ___/\\n\" +","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jniaorx"},"content":"                        \"|___|___|  /__|  |__|   \\\\____/|______  /____(____  /__/____  \u003e\\\\___  \u003e\\n\" +","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jniaorx"},"content":"                        \"\\n\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jniaorx"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jniaorx"},"content":"        // Delegate greeting responsibility to introBlaise.ui.Greetings class","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jniaorx"},"content":"        greetings.greet(scanner);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jniaorx"},"content":"     * Reads user input from the console.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jniaorx"},"content":"     * @return The input string entered by the user.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jniaorx"},"content":"    public String readInput() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jniaorx"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jniaorx"},"content":"     * Displays a farewell message when the user exits.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jniaorx"},"content":"    public void showGoodbye() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jniaorx"},"content":"        greetings.sayBye();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jniaorx"},"content":"     * Closes the scanner when the application is shutting down.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jniaorx"},"content":"    public void closeScanner() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jniaorx"},"content":"        scanner.close();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jniaorx"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"jniaorx":60}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jniaorx"},"content":"extro blaise","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jniaorx"},"content":"todo borrow book","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jniaorx"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jniaorx"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jniaorx"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jniaorx"},"content":"mark 1","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jniaorx"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jniaorx"},"content":"delete 1","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jniaorx"},"content":"bye","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"jniaorx":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jniaorx"},"content":"java -classpath ..\\bin introBlaise.ui.IntroBlaise \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"jniaorx":1,"-":20}}]
