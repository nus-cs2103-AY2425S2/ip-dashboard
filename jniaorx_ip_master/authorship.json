[{"path":"src/main/java/AlreadyUndoneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jniaorx"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jniaorx"},"content":" * Exception class representing an error condition where an attempt is made to mark a task","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jniaorx"},"content":" * as \"undone\" when it has already been marked as not done.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jniaorx"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jniaorx"},"content":"public class AlreadyUndoneException extends IntroBlaiseException{","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jniaorx"},"content":"     * Constructs a new {@code AlreadyUndoneException} with the specified detail message.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jniaorx"},"content":"     * @param exception The detail message that explains the reason for this exception.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jniaorx"},"content":"    public AlreadyUndoneException(String exception) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jniaorx"},"content":"        super(exception);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jniaorx"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"jniaorx":13}},{"path":"src/main/java/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jniaorx"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jniaorx"},"content":" * The Commands class handles the execution fo user commands in the chatbot.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jniaorx"},"content":" * It interprets user inputs, executes corresponding operations, and manages tasks","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jniaorx"},"content":" * using the TaskManager instance.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jniaorx"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jniaorx"},"content":"public class Commands {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jniaorx"},"content":"    private final TaskManager taskManager;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jniaorx"},"content":"     * Constructor for Commands.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jniaorx"},"content":"     * @param taskManager The TaskManager instance responsible for managing tasks.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jniaorx"},"content":"    public Commands(TaskManager taskManager) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jniaorx"},"content":"        this.taskManager \u003d taskManager;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jniaorx"},"content":"     * Executes a command based on the user\u0027s input.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jniaorx"},"content":"     * Handles different task operations such as listing, adding, marking, unmarking,and deleting tasks.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jniaorx"},"content":"     * @param userInput The user\u0027s input as a command string.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jniaorx"},"content":"    public void executeCommand(String userInput) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jniaorx"},"content":"        try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jniaorx"},"content":"            if (userInput.equalsIgnoreCase(\"List\")) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jniaorx"},"content":"                // Displays the task list when \"list\" is input.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jniaorx"},"content":"                taskManager.printTaskList();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jniaorx"},"content":"            } else if (userInput.startsWith(\"mark\")) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jniaorx"},"content":"                // Marks a task as done based on its index.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jniaorx"},"content":"                markTaskAsDone(userInput);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jniaorx"},"content":"            } else if (userInput.startsWith(\"unmark\")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jniaorx"},"content":"                // Marks a task as not done based on its index.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jniaorx"},"content":"                unmarkTaskAsUndone(userInput);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jniaorx"},"content":"            } else if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jniaorx"},"content":"                // Adds a new To-Do task to the list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jniaorx"},"content":"                addTodoTask(userInput);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jniaorx"},"content":"            } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jniaorx"},"content":"                // Adds a new Deadline task with a specific due date.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jniaorx"},"content":"                addDeadlineTask(userInput);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jniaorx"},"content":"            } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jniaorx"},"content":"                // Adds a new Event task with a duration.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jniaorx"},"content":"                addEventTask(userInput);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jniaorx"},"content":"            } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jniaorx"},"content":"                // Deletes a task from the list based on its index.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jniaorx"},"content":"                deleteTask(userInput);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jniaorx"},"content":"            } else {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jniaorx"},"content":"                throw new InvalidInputException(\"Err...I don\u0027t understand this :(. Please give a valid command!\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jniaorx"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jniaorx"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jniaorx"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jniaorx"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jniaorx"},"content":"     * Marks a task as done based on user input.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jniaorx"},"content":"     * @param userInput The user input string, expected in the format \"mark x\" where x is the task number.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jniaorx"},"content":"     * @throws IndexOutOfBoundsException Exception thrown when format of user input is incorrect.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jniaorx"},"content":"     * @throws NumberFormatException Exception thrown when number format of user input is incorrect.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jniaorx"},"content":"    public void markTaskAsDone(String userInput) throws IndexOutOfBoundsException, NumberFormatException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jniaorx"},"content":"        try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jniaorx"},"content":"            // Extract task index from the input and mark the task as done.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jniaorx"},"content":"            int taskNo \u003d Integer.parseInt(userInput.substring(5)) - 1;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jniaorx"},"content":"            Task currTask \u003d taskManager.getTask(taskNo);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jniaorx"},"content":"            currTask.markAsDone();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jniaorx"},"content":"            // Notify the user that the task is marked as done.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    _________________________________\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    Well done! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"        \" + currTask);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    _________________________________\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jniaorx"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"Uh oh! Invalid index. Are you sure you are marking the correct task?\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jniaorx"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"Uh oh! Invalid number. Please enter a number after \u0027unmark\u0027.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jniaorx"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jniaorx"},"content":"     * Marks a task as undone based on user input.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jniaorx"},"content":"     * @param userInput The user input string, expected in the format \"unmark x\" where x is the task number.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jniaorx"},"content":"     * @throws IndexOutOfBoundsException Exception thrown when format of user input is incorrect.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jniaorx"},"content":"     * @throws NumberFormatException Exception thrown when number format of user input is incorrect.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jniaorx"},"content":"    public void unmarkTaskAsUndone(String userInput) throws IndexOutOfBoundsException, NumberFormatException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jniaorx"},"content":"        try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jniaorx"},"content":"            // Extract the task index from the input and mark the task as undone.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jniaorx"},"content":"            int taskNo \u003d Integer.parseInt(userInput.substring(7)) - 1;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jniaorx"},"content":"            Task currTask \u003d taskManager.getTask(taskNo);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jniaorx"},"content":"            // Error thrown when user tries to unmark an undone task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jniaorx"},"content":"            if (!currTask.isDone) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jniaorx"},"content":"                throw new AlreadyUndoneException(\"This task has already been marked undone!\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jniaorx"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jniaorx"},"content":"            currTask.markAsUndone();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jniaorx"},"content":"            // Notify the user that the task is marked as not done.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    _________________________________\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    \" + currTask);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    _________________________________\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jniaorx"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"Uh oh! Invalid index. Are you sure you are unmarking the correct task?\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jniaorx"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"Uh oh! Invalid number. Please enter a number after \u0027unmark\u0027.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jniaorx"},"content":"        } catch (AlreadyUndoneException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jniaorx"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jniaorx"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jniaorx"},"content":"     * Adds a To-Do task to the task list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jniaorx"},"content":"     * @param userInput The user input string, expected in the format \"todo x\" where x is the task description.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jniaorx"},"content":"     * @throws NumberFormatException Exception thrown when number format of user input is incorrect.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jniaorx"},"content":"     * @throws StringIndexOutOfBoundsException Exception thrown when format of user input is incorrect.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"jniaorx"},"content":"    public void addTodoTask(String userInput) throws NumberFormatException, StringIndexOutOfBoundsException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"jniaorx"},"content":"        try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"jniaorx"},"content":"            // Extract the description of the task from the input.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"jniaorx"},"content":"            String description \u003d userInput.substring((5));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"jniaorx"},"content":"            // Error thrown if user does not input description.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"jniaorx"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"jniaorx"},"content":"                throw new EmptyDescriptionException(\"Please enter a description for your task!\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"jniaorx"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"jniaorx"},"content":"            ToDo todoTask \u003d new ToDo(description);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"jniaorx"},"content":"            taskManager.addTask(todoTask);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"jniaorx"},"content":"            int numOfTask \u003d taskManager.getTasksList().size();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"jniaorx"},"content":"            // Notify the user that the task has been added.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    _________________________________\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"        \" + todoTask);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    Now you have \" + numOfTask + \" tasks in the list.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    _________________________________\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"jniaorx"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"Uh oh! Invalid number. Please enter a number after \u0027unmark\u0027.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"jniaorx"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"Errr...Please enter a description\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"jniaorx"},"content":"        } catch (EmptyDescriptionException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"jniaorx"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"jniaorx"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"jniaorx"},"content":"     * Adds a Deadline task to the task list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"jniaorx"},"content":"     * @param userInput The user input string, expected in  the format deadline x /by date where x is the task description.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"jniaorx"},"content":"     * @throws StringIndexOutOfBoundsException Exception thrown when format of user input is incorrect.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"jniaorx"},"content":"    public void addDeadlineTask(String userInput) throws StringIndexOutOfBoundsException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"jniaorx"},"content":"        try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"jniaorx"},"content":"            // Get Deadline task from user input.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"jniaorx"},"content":"            Deadline deadlineTask \u003d getDeadlineTask(userInput);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"jniaorx"},"content":"            taskManager.addTask(deadlineTask);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"jniaorx"},"content":"            int numOfTask \u003d taskManager.getTasksList().size();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"jniaorx"},"content":"            // Notify the user that the task has been added.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    _________________________________\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"        \" + deadlineTask);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    Now you have \" + numOfTask + \" tasks in the list.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    _________________________________\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"jniaorx"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"Please enter a description and a deadline for your task!\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"jniaorx"},"content":"        } catch (InvalidDeadlineFormatException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"jniaorx"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"jniaorx"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"jniaorx"},"content":"     * Creates a Deadline task based on user input.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"jniaorx"},"content":"     * @param userInput The user input string, expected in  the format deadline x /by date where x is the task description.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"jniaorx"},"content":"     * @return A Deadline task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"jniaorx"},"content":"     * @throws InvalidDeadlineFormatException Exception thrown when format of user\u0027s input is incorrect.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"jniaorx"},"content":"    private static Deadline getDeadlineTask(String userInput) throws InvalidDeadlineFormatException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"jniaorx"},"content":"        String description \u003d userInput.substring(8, userInput.indexOf(\"/\")).trim();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"jniaorx"},"content":"        int separator \u003d userInput.indexOf(\"/\") + 4;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"jniaorx"},"content":"        String deadline \u003d userInput.substring(separator);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"jniaorx"},"content":"        if (deadline.isEmpty()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"jniaorx"},"content":"            throw new InvalidDeadlineFormatException(\"There seems to be no deadline entered...? Please enter a deadline after the word /by.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"jniaorx"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"jniaorx"},"content":"        return new Deadline(description, deadline);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"jniaorx"},"content":"     * Adds an Event task to the task list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"jniaorx"},"content":"     * @param userInput The user input string, expected in  the format event x /from date /to date where x is the task description.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"jniaorx"},"content":"     * @throws StringIndexOutOfBoundsException Exception thrown when format of user input is incorrect.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"jniaorx"},"content":"    public void addEventTask(String userInput) throws StringIndexOutOfBoundsException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"jniaorx"},"content":"        try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"jniaorx"},"content":"            Event eventTask \u003d getEvent(userInput);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"jniaorx"},"content":"            taskManager.addTask(eventTask);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"jniaorx"},"content":"            int numOfTask \u003d taskManager.getTasksList().size(); // no of task in task list","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    _________________________________\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"        \" + eventTask);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    Now you have \" + numOfTask + \" tasks in the list.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    _________________________________\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"jniaorx"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"Please enter a description and a duration for your task!\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"jniaorx"},"content":"        } catch (InvalidEventFromFormatException | InvalidEventToFormatException | EmptyDescriptionException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"jniaorx"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"jniaorx"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"jniaorx"},"content":"     * Creates an Event task based on user input.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"jniaorx"},"content":"     * @param userInput The user input string, expected in  the format event x /from date /to date where x is the task description.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"jniaorx"},"content":"     * @return An Event task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"jniaorx"},"content":"     * @throws EmptyDescriptionException Exception thrown when no description is entered.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"jniaorx"},"content":"     * @throws InvalidEventFromFormatException Exception thrown when format of user input is incorrect.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"jniaorx"},"content":"     * @throws InvalidEventToFormatException Exception thrown when format of user input is incorrect.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"jniaorx"},"content":"    private static Event getEvent(String userInput) throws EmptyDescriptionException, InvalidEventFromFormatException, InvalidEventToFormatException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"jniaorx"},"content":"        // Extract description from user input.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"jniaorx"},"content":"        String description \u003d userInput.substring(5, userInput.indexOf(\"/\")).trim();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"jniaorx"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"jniaorx"},"content":"            throw new EmptyDescriptionException(\"Please enter a description for your task!\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"jniaorx"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"jniaorx"},"content":"        if (!userInput.contains(\"/from\")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"jniaorx"},"content":"            throw new InvalidEventFromFormatException(\"Please include a \u0027From\u0027 date by using /from!\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"jniaorx"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"jniaorx"},"content":"        if (!userInput.contains(\"/to\")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"jniaorx"},"content":"            throw new InvalidEventToFormatException(\"Please include a \u0027To\u0027 date by using /to!\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"jniaorx"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"jniaorx"},"content":"        // Extract from and to date from user input.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"jniaorx"},"content":"        String[] segments \u003d userInput.substring(6).split(\"/\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"jniaorx"},"content":"        String from \u003d segments[1].substring(4).trim();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"jniaorx"},"content":"        if (from.isEmpty()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"jniaorx"},"content":"            throw new InvalidEventFromFormatException(\"Please include a \u0027From\u0027 date after the word /from!\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"jniaorx"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"jniaorx"},"content":"        String to \u003d segments[2].substring(2).trim();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"jniaorx"},"content":"        if (to.isEmpty()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"jniaorx"},"content":"            throw new InvalidEventToFormatException(\"Please include a \u0027To\u0027 date after the word /to!\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"jniaorx"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"jniaorx"},"content":"        return new Event(description, from, to);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"jniaorx"},"content":"     * Deletes a task from the task list based on user input.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"jniaorx"},"content":"     * @param userInput The user input string, expected in the format delete x where x is the task description.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"jniaorx"},"content":"     * @throws IndexOutOfBoundsException Exception thrown when user is deleting the wrong task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"jniaorx"},"content":"     * @throws NumberFormatException Exception thrown when number format of user input is incorrect.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"jniaorx"},"content":"    public void deleteTask(String userInput) throws IndexOutOfBoundsException, NumberFormatException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"jniaorx"},"content":"        try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"jniaorx"},"content":"            if (taskManager.getTasksList().isEmpty()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"jniaorx"},"content":"                throw new DeleteEmptyTaskListException(\"Your task list is empty. You can\u0027t delete anything. Please add tasks.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"jniaorx"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"jniaorx"},"content":"            // Extract task from user input.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"jniaorx"},"content":"            int taskNo \u003d Integer.parseInt(userInput.substring(7)) - 1;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"jniaorx"},"content":"            Task currTask \u003d taskManager.getTask(taskNo);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"jniaorx"},"content":"            taskManager.removeTask(currTask);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"jniaorx"},"content":"            int numOfTask \u003d taskManager.getTasksList().size();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"jniaorx"},"content":"            // Notify the user that the task has been deleted.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    _________________________________\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"        \" + currTask);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    Now you have \" + numOfTask + \" tasks in the list.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    _________________________________\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"jniaorx"},"content":"        } catch (DeleteEmptyTaskListException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"jniaorx"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"jniaorx"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"Uh oh! Invalid index. Have you entered the index? Are you sure you are deleting the correct task?\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"jniaorx"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"Uh oh! Invalid number. Please enter a number after \u0027delete\u0027.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"jniaorx"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"jniaorx"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"jniaorx":276}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jniaorx"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jniaorx"},"content":" * Represents a task with a specific deadline that needs to be completed before a certain date or time.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jniaorx"},"content":" * This class extends the {@code Task} class and adds a deadline attribute to store the due date/time","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jniaorx"},"content":" * of the task. It overrides the {@code toString()} method to provide a customized string representation.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jniaorx"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jniaorx"},"content":"public class Deadline extends Task{","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jniaorx"},"content":"    /** The deadline by which the task should be completed, represented as a string. */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jniaorx"},"content":"    protected String by;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jniaorx"},"content":"     * Constructs a new {@code Deadline} task with the specified description and deadline.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jniaorx"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jniaorx"},"content":"     * @param by The deadline (date/time) by which the task must be completed.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jniaorx"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jniaorx"},"content":"        super(description);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jniaorx"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jniaorx"},"content":"     * Returns a string representation of the deadline task, including its type, description,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jniaorx"},"content":"     * and the deadline by which it must be completed.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jniaorx"},"content":"     * @return A string in the format \"[D][status] description (by: deadline)\"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jniaorx"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jniaorx"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jniaorx"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jniaorx"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"jniaorx":29}},{"path":"src/main/java/DeleteEmptyTaskListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jniaorx"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jniaorx"},"content":" * Exception class representing an error condition where an attempt is made to delete a task from an","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jniaorx"},"content":" * empty task list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jniaorx"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jniaorx"},"content":"public class DeleteEmptyTaskListException extends IntroBlaiseException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jniaorx"},"content":"     * Constructs a new {@code DeleteEmptyTaskListException} with the specified detail message.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jniaorx"},"content":"     * @param exception The detail message that explains the reason for this exception.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jniaorx"},"content":"    public DeleteEmptyTaskListException(String exception) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jniaorx"},"content":"        super(exception);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jniaorx"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"jniaorx":13}},{"path":"src/main/java/Echo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jniaorx"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jniaorx"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jniaorx"},"content":" * A class that echoes user input until the user types \"bye\".","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jniaorx"},"content":" * This class provides a method to interact with the user via the console,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jniaorx"},"content":" * repeatedly printing back whatever the user inputs unless the input is \"bye\".","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jniaorx"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jniaorx"},"content":"public class Echo {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jniaorx"},"content":"     * Default constructor or the {@code Echo} class.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jniaorx"},"content":"     * Initializes an {@code Echo} instance. This constructor does not perform","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jniaorx"},"content":"     * any specific initialization as no fields are defined for the class.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jniaorx"},"content":"    public Echo() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jniaorx"},"content":"     * Starts an interactive session that echoes user input until the user types \"bye\".","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jniaorx"},"content":"     * This method reads input from the provided {@link Scanner} object and prints","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jniaorx"},"content":"     * it back to the console in a formatted manner. The interaction ends when the","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jniaorx"},"content":"     * user inputs the word \"bye\",","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jniaorx"},"content":"     * @param scanner A {@link Scanner} object used to read input from the user.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jniaorx"},"content":"    public void echo(Scanner scanner) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jniaorx"},"content":"        // Wait for the first user input.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jniaorx"},"content":"        String userInput \u003d scanner.nextLine();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jniaorx"},"content":"        // Continue echoing user input until \"bye\" is entered.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jniaorx"},"content":"        while (!userInput.equals(\"bye\")) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jniaorx"},"content":"            // Print a formatted response with the user input","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    __________________\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    \" + userInput);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    __________________\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jniaorx"},"content":"            // Wait for the next user input","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jniaorx"},"content":"            userInput \u003d scanner.nextLine();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jniaorx"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jniaorx"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"jniaorx":39}},{"path":"src/main/java/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jniaorx"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jniaorx"},"content":" * Exception class representing an error condition where an attempt is made to add","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jniaorx"},"content":" * a task without description.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jniaorx"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jniaorx"},"content":"public class EmptyDescriptionException extends IntroBlaiseException{","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jniaorx"},"content":"     * Constructs a new {@code EmptyDescriptionException} with the specified detail message.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jniaorx"},"content":"     * @param exception The detail message that explains the reason for this exception.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jniaorx"},"content":"    public EmptyDescriptionException(String exception) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jniaorx"},"content":"        super(exception);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jniaorx"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"jniaorx":13}},{"path":"src/main/java/EmptyTaskListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jniaorx"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jniaorx"},"content":" * Exception class representing an error condition where an attempt is made to print","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jniaorx"},"content":" * an empty task list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jniaorx"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jniaorx"},"content":"public class EmptyTaskListException extends IntroBlaiseException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jniaorx"},"content":"     * Constructs a new {@code EmptyTaskListException} with the specified detail message.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jniaorx"},"content":"     * @param exception The detail message that explains the reason for this exception.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jniaorx"},"content":"    public EmptyTaskListException(String exception) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jniaorx"},"content":"        super(exception);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jniaorx"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"jniaorx":13}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jniaorx"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jniaorx"},"content":" * Represents a task that occurs within a specific time frame.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jniaorx"},"content":" * The {@code Event} class extends the {@code Task} class to include","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jniaorx"},"content":" * additional details about the start time and end time of the task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jniaorx"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jniaorx"},"content":"public class Event extends Task{","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jniaorx"},"content":"     * The starting date/time of the event.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jniaorx"},"content":"    protected String from;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jniaorx"},"content":"     * The ending date/time of the event.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jniaorx"},"content":"    protected String to;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jniaorx"},"content":"     * Constructs an {@code Event} object with the specified description, start time, and end time.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jniaorx"},"content":"     * @param description A brief description of the event.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jniaorx"},"content":"     * @param from The starting date/time of the event.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jniaorx"},"content":"     * @param to The ending date/tine of the event.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jniaorx"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jniaorx"},"content":"        super(description); // Calls the constructor of the Task class","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jniaorx"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jniaorx"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jniaorx"},"content":"     * Returns a string representation of the event, including its description,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jniaorx"},"content":"     * start time, and end time.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jniaorx"},"content":"     * @return A formatted string that represents the event.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jniaorx"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jniaorx"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jniaorx"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jniaorx"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"jniaorx":38}},{"path":"src/main/java/Greetings.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jniaorx"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jniaorx"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jniaorx"},"content":" * Handles user greetings and farewells for the bot.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jniaorx"},"content":" * The {@code Greetings} class provides methods to greet the user when","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jniaorx"},"content":" * they start interacting with the application and bid them farewell","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jniaorx"},"content":" * when they exit.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jniaorx"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jniaorx"},"content":"public class Greetings {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jniaorx"},"content":"     * Constructs a {@code Greetings} object.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jniaorx"},"content":"     * This constructor does not perform any initialization.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jniaorx"},"content":"    public Greetings() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jniaorx"},"content":"     * Greets the user and captures their name.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jniaorx"},"content":"     * This method prompts the user for their name and responds with a personalized","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jniaorx"},"content":"     * greeting. A {@link Scanner} object is used to read the user\u0027s input.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jniaorx"},"content":"     * @param scanner A {@code Scanner} object to read user input.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jniaorx"},"content":"    public void greet(Scanner scanner) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jniaorx"},"content":"        // Prompt the user with a greeting message.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jniaorx"},"content":"        System.out.println(\"    _________________________________\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jniaorx"},"content":"        System.out.println(\"    Sup! I am IntroBlaise. What\u0027s your name?\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jniaorx"},"content":"        // Check if there is user input and read it.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jniaorx"},"content":"        if (scanner.hasNextLine()) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jniaorx"},"content":"            String name \u003d scanner.nextLine(); // Read user\u0027s name.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jniaorx"},"content":"            // Responds with a personalized greeting.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    _________________________________\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    Hi \" + name + \"!(ʘ‿ʘ)╯ Nice to meet you! You can start adding tasks to your very own task list! :)\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jniaorx"},"content":"            System.out.println(\"    _________________________________\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jniaorx"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jniaorx"},"content":"     * Bids farewell to the user.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jniaorx"},"content":"     * This method prints a goodbye message to the user when they exit the application.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jniaorx"},"content":"    public void sayBye() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jniaorx"},"content":"        // Print a farewell message.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jniaorx"},"content":"        System.out.println(\"    _________________________________\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jniaorx"},"content":"        System.out.println(\"    Bye! Hope to see you again soon! :(\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jniaorx"},"content":"        System.out.println(\"    _________________________________\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jniaorx"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"jniaorx":50}},{"path":"src/main/java/IntroBlaise.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jniaorx"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jniaorx"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jniaorx"},"content":" * The entry point for the IntroBlaise bot.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jniaorx"},"content":" * The {@code IntroBlaise} class initializes the bot, displays a welcome message,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jniaorx"},"content":" * and continuously interacts with the user to execute commands or end the session.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jniaorx"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jniaorx"},"content":"public class IntroBlaise {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jniaorx"},"content":"     * Main method to run the IntroBlaise bot.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jniaorx"},"content":"     * @param args Command-line arguments.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jniaorx"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jniaorx"},"content":"        // ASCII art logo for the bot.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jniaorx"},"content":"        String logo \u003d","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jniaorx"},"content":"                \".___        __               __________.__         .__\\n\" +","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jniaorx"},"content":"                        \"|   | _____/  |________  ____\\\\______   \\\\  | _____  |__| ______ ____\\n\" +","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jniaorx"},"content":"                        \"|   |/    \\\\   __\\\\_  __ \\\\/  _ \\\\|    |  _/  | \\\\__  \\\\ |  |/  ___// __ \\\\\\n\" +","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jniaorx"},"content":"                        \"|   |   |  \\\\  |  |  | \\\\(  \u003c_\u003e )    |   \\\\  |__/ __ \\\\|  |\\\\___ \\\\\\\\  ___/\\n\" +","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jniaorx"},"content":"                        \"|___|___|  /__|  |__|   \\\\____/|______  /____(____  /__/____  \u003e\\\\___  \u003e\\n\" +","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jniaorx"},"content":"                        \"\\n\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jniaorx"},"content":"        // Print welcome message with logo.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jniaorx"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jniaorx"},"content":"        // Initialize application components.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jniaorx"},"content":"        TaskManager taskManager \u003d new TaskManager(); // Manage tasks.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jniaorx"},"content":"        Commands commands \u003d new Commands(taskManager); // Processes user commands.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jniaorx"},"content":"        Greetings greetings \u003d new Greetings(); // Handles user greetings and farewells.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jniaorx"},"content":"        // Initialize scanner to read user input.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jniaorx"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jniaorx"},"content":"        // Greet the user.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jniaorx"},"content":"        greetings.greet(scanner);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jniaorx"},"content":"        // Main loop for user interaction.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jniaorx"},"content":"        while(true) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jniaorx"},"content":"            // Read user input.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jniaorx"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jniaorx"},"content":"            // Check if the user wants to exit the bot.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jniaorx"},"content":"            if (userInput.equalsIgnoreCase(\"Bye\")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jniaorx"},"content":"                // Bid farewell and exit the loop.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jniaorx"},"content":"                greetings.sayBye();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jniaorx"},"content":"                break;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jniaorx"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jniaorx"},"content":"            // Execute the command input by the user.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jniaorx"},"content":"            commands.executeCommand(userInput);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jniaorx"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jniaorx"},"content":"        // Close the scanner to release resources.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jniaorx"},"content":"        scanner.close();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jniaorx"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"jniaorx":56}},{"path":"src/main/java/IntroBlaiseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jniaorx"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jniaorx"},"content":" * A custom exception class for the IntroBlaise bot.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jniaorx"},"content":" * The {@code IntroBlaiseException} class is used to represent application-specific errors","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jniaorx"},"content":" * that may occur during the execution of the IntroBlaise program.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jniaorx"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jniaorx"},"content":"public class IntroBlaiseException extends Exception {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jniaorx"},"content":"     * Constructs a new IntroBlaiseException with the specified detail message.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jniaorx"},"content":"     * @param exception The detail message that explains the reason for this exception.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jniaorx"},"content":"    public IntroBlaiseException(String exception) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jniaorx"},"content":"        super(exception);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jniaorx"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"jniaorx":16}},{"path":"src/main/java/InvalidDeadlineFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jniaorx"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jniaorx"},"content":" * Exception class representing an error condition where user inputs","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jniaorx"},"content":" * incorrect format for a Deadline task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jniaorx"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jniaorx"},"content":"public class InvalidDeadlineFormatException extends IntroBlaiseException{","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jniaorx"},"content":"     * Constructs a new {@code InvalidDeadlineException} with the specified detail message.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jniaorx"},"content":"     * @param exception The detail message that explains the reason for this exception.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jniaorx"},"content":"    public InvalidDeadlineFormatException(String exception) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jniaorx"},"content":"        super(exception);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jniaorx"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"jniaorx":13}},{"path":"src/main/java/InvalidEventFromFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jniaorx"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jniaorx"},"content":" * Exception class representing an error condition where user inputs","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jniaorx"},"content":" * incorrect format of \"from\" for an Event task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jniaorx"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jniaorx"},"content":"public class InvalidEventFromFormatException extends IntroBlaiseException{","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jniaorx"},"content":"     * Constructs a new {@code InvalidEventFromFormatException} with the specified detail message.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jniaorx"},"content":"     * @param exception The detail message that explains the reason for this exception.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jniaorx"},"content":"    public InvalidEventFromFormatException(String exception) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jniaorx"},"content":"        super(exception);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jniaorx"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"jniaorx":13}},{"path":"src/main/java/InvalidEventToFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jniaorx"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jniaorx"},"content":" * Exception class representing an error condition where user inputs","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jniaorx"},"content":" * incorrect format of \"to\" for an Event task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jniaorx"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jniaorx"},"content":"public class InvalidEventToFormatException extends IntroBlaiseException{","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jniaorx"},"content":"     * Constructs a new {@code InvalidEventToFormatException} with the specified detail message.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jniaorx"},"content":"     * @param exception The detail message that explains the reason for this exception.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jniaorx"},"content":"    public InvalidEventToFormatException(String exception) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jniaorx"},"content":"        super(exception);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jniaorx"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"jniaorx":13}},{"path":"src/main/java/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jniaorx"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jniaorx"},"content":" * Exception class representing an error condition where user inputs","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jniaorx"},"content":" * an invalid command.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jniaorx"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jniaorx"},"content":"public class InvalidInputException extends IntroBlaiseException{","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jniaorx"},"content":"     * Constructs a new {@code InvalidInputException} with the specified detail message.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jniaorx"},"content":"     * @param exception The detail message that explains the reason for this exception.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jniaorx"},"content":"    public InvalidInputException (String exception) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jniaorx"},"content":"        super(exception);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jniaorx"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"jniaorx":13}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jniaorx"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jniaorx"},"content":" * Represents a generic task with a description and completion status.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jniaorx"},"content":" * The {@code Task} class serves as a base class for different types of tasks.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jniaorx"},"content":" * It provides methods to manage the task\u0027s description and completion status.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jniaorx"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jniaorx"},"content":"public class Task {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jniaorx"},"content":"    // The description of the task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jniaorx"},"content":"    protected String description;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jniaorx"},"content":"    // Indicates whether the task is marked as done.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jniaorx"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jniaorx"},"content":"     * Constructs a new Task with the specified description.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jniaorx"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jniaorx"},"content":"     * @param description A string describing the task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jniaorx"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jniaorx"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jniaorx"},"content":"        this.isDone \u003d false; // Default status is not done.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jniaorx"},"content":"     * Returns the status icon representing whether the task is done.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jniaorx"},"content":"     * @return \"X\" if the task is done, otherwise a space (\" \").","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jniaorx"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jniaorx"},"content":"        return (isDone ? \"X\" : \" \"); // Mark done task with \"X\".","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jniaorx"},"content":"     * Marks the task as done by setting its status to true.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jniaorx"},"content":"    public void markAsDone() { this.isDone \u003d true; }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jniaorx"},"content":"     * Marks the task as not done by setting its status to false.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jniaorx"},"content":"    public void markAsUndone() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jniaorx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jniaorx"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jniaorx"},"content":"     * The string includes the task\u0027s status icon and description","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jniaorx"},"content":"     * @return A formatted string representing the task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jniaorx"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jniaorx"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jniaorx"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jniaorx"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"jniaorx":52}},{"path":"src/main/java/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jniaorx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jniaorx"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jniaorx"},"content":" * Manages a list of tasks, allowing tasks to be added, removed, retrieved, and displayed.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jniaorx"},"content":" * THe {@code TaskManager} class serves as a central utility for handling user tasks,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jniaorx"},"content":" * providing operations to interact with and manipulate the task list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jniaorx"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jniaorx"},"content":"public class TaskManager {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jniaorx"},"content":"    // Stores the list of tasks.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jniaorx"},"content":"    private final ArrayList\u003cTask\u003e tasksList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jniaorx"},"content":"     * Adds a new task to the task list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jniaorx"},"content":"     * @param task The task to be added.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jniaorx"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jniaorx"},"content":"        // Task newTask \u003d new Task(description);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jniaorx"},"content":"        tasksList.add(task); // Add new task to the list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jniaorx"},"content":"        // System.out.println(\"    __________________\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jniaorx"},"content":"        // System.out.println(\"    added: \" + description);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jniaorx"},"content":"        // System.out.println(\"    __________________\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jniaorx"},"content":"     * Removes a specific task from the task list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jniaorx"},"content":"     * @param task The task to be removed.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jniaorx"},"content":"    public void removeTask(Task task) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jniaorx"},"content":"        tasksList.remove(task);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jniaorx"},"content":"     * Prints the list of tasks to the console.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jniaorx"},"content":"     * If the task list is empty, an {@code EmptyTaskListException} is thrown and its","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jniaorx"},"content":"     * message is printed instead.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jniaorx"},"content":"    public void printTaskList() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jniaorx"},"content":"        try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jniaorx"},"content":"            // Check if the task list is empty.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jniaorx"},"content":"            if (tasksList.isEmpty()) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jniaorx"},"content":"                throw new EmptyTaskListException(\"Oh no! Your task list is empty now. Please add tasks!\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jniaorx"},"content":"            } else {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jniaorx"},"content":"                // Print all tasks in the list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jniaorx"},"content":"                System.out.println(\"    _________________________________\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jniaorx"},"content":"                System.out.println(\"    Here are the tasks in your list:\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jniaorx"},"content":"                for (int i \u003d 0; i \u003c tasksList.size(); i++) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jniaorx"},"content":"                    System.out.println(\"    \" + (i + 1) + \". \" + getTask(i));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jniaorx"},"content":"                }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jniaorx"},"content":"                System.out.println(\"    _________________________________\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jniaorx"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jniaorx"},"content":"        } catch (EmptyTaskListException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jniaorx"},"content":"            // Handle empty task list by printing the exception message.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jniaorx"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jniaorx"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jniaorx"},"content":"     * Retrieves a specific task from the task list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jniaorx"},"content":"     * @param taskIndex The index of the task to retrieve.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jniaorx"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jniaorx"},"content":"    public Task getTask(int taskIndex) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jniaorx"},"content":"        return tasksList.get(taskIndex);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jniaorx"},"content":"     * Returns the full list of tasks.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jniaorx"},"content":"     * @return AN {@code ArrayList} containing all tasks.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jniaorx"},"content":"    public ArrayList\u003cTask\u003e getTasksList() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jniaorx"},"content":"        return tasksList;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jniaorx"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"jniaorx":73}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jniaorx"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jniaorx"},"content":" * Represents a task without any date/time attached to it.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jniaorx"},"content":" * This class extends the {@code Task} class and add the task without any date/time attached","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jniaorx"},"content":" * to the list. It overrides the {@code toString()} method to provide a customized string representation.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jniaorx"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jniaorx"},"content":"public class ToDo extends Task{","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jniaorx"},"content":"     * Constructs a new {@code ToDo} task with the specified description.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jniaorx"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jniaorx"},"content":"    public ToDo(String description) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jniaorx"},"content":"        super(description);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jniaorx"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jniaorx"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jniaorx"},"content":"     * Returns a string representation of the todo task, including its type and description.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jniaorx"},"content":"     * @return A string in the format \"[T][status] description\"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jniaorx"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jniaorx"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jniaorx"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jniaorx"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jniaorx"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jniaorx"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"jniaorx":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jniaorx"},"content":"extro blaise","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jniaorx"},"content":"todo borrow book","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jniaorx"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jniaorx"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jniaorx"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jniaorx"},"content":"mark 1","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jniaorx"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jniaorx"},"content":"delete 1","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jniaorx"},"content":"bye","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"jniaorx":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jniaorx"},"content":"java -classpath ..\\bin IntroBlaise \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"jniaorx":1,"-":20}}]
