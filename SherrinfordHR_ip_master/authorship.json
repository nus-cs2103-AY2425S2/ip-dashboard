[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SherrinfordHR"},"content":"    mainClass.set(\"Watson.Watson\")","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SherrinfordHR"},"content":"    archiveBaseName \u003d \"Watson\"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"SherrinfordHR":2,"-":39}},{"path":"src/main/java/Watson/Watson.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherrinfordHR"},"content":"package Watson;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.command.Command;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.command.ExitCommand;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.exception.WatsonException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.parser.Parser;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.storage.Storage;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.task.TaskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.ui.Ui;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SherrinfordHR"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SherrinfordHR"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SherrinfordHR"},"content":" * Main class for the Watson task management application.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SherrinfordHR"},"content":" * Handles initialization, command execution loop, and graceful shutdown.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SherrinfordHR"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SherrinfordHR"},"content":"public class Watson {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SherrinfordHR"},"content":"    private final Storage storage;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SherrinfordHR"},"content":"    private final TaskList Tasklist;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SherrinfordHR"},"content":"    private final Parser parser;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SherrinfordHR"},"content":"    private final Ui ui;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SherrinfordHR"},"content":"     * Constructs a Watson instance with the specified file path for storage.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SherrinfordHR"},"content":"     * Initializes UI, storage, task list, and parser. Loads existing tasks from storage.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SherrinfordHR"},"content":"     * @param filepath The path to the file used for storing tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SherrinfordHR"},"content":"    public Watson(String filepath) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SherrinfordHR"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SherrinfordHR"},"content":"        this.storage \u003d new Storage(filepath);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SherrinfordHR"},"content":"        this.Tasklist \u003d new TaskList();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SherrinfordHR"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SherrinfordHR"},"content":"        loadtask();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SherrinfordHR"},"content":"     * Loads tasks from the storage file into the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SherrinfordHR"},"content":"     * Displays an error message if loading fails.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SherrinfordHR"},"content":"    private void loadtask() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SherrinfordHR"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SherrinfordHR"},"content":"            Tasklist.loadTasks(storage.load());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SherrinfordHR"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SherrinfordHR"},"content":"            ui.showError(\"Loading tasks: \" + e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SherrinfordHR"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SherrinfordHR"},"content":"     * Starts the Watson application.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SherrinfordHR"},"content":"     * Displays welcome message, processes user commands until exit, and saves tasks after each command.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SherrinfordHR"},"content":"    public void run() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SherrinfordHR"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SherrinfordHR"},"content":"        while (true) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SherrinfordHR"},"content":"            try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SherrinfordHR"},"content":"                String command \u003d ui.readCommand();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SherrinfordHR"},"content":"                Command cmd \u003d parser.parse(command);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SherrinfordHR"},"content":"                if (cmd instanceof ExitCommand) break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SherrinfordHR"},"content":"                cmd.execute(Tasklist, storage, ui);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SherrinfordHR"},"content":"                storage.savetask(Tasklist);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SherrinfordHR"},"content":"            } catch (WatsonException | NumberFormatException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SherrinfordHR"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SherrinfordHR"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SherrinfordHR"},"content":"                ui.showError(\"Unexpected error: \" + e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"SherrinfordHR"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"SherrinfordHR"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"SherrinfordHR"},"content":"        ui.showGoodbye();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"SherrinfordHR"},"content":"        ui.close();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"SherrinfordHR"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"SherrinfordHR"},"content":"        new Watson(\"C:/Users/sherr/OneDrive/文档/ip/src/main/tasklist.txt\").run();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"SherrinfordHR"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"SherrinfordHR":77}},{"path":"src/main/java/Watson/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherrinfordHR"},"content":"package Watson.command;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.task.Deadline;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.task.Events;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.task.Task;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.task.ToDo;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.task.TaskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.storage.Storage;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.ui.Ui;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.exception.WatsonException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SherrinfordHR"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SherrinfordHR"},"content":" * Represents a command to add a task (ToDo, Deadline, or Event) to the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SherrinfordHR"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SherrinfordHR"},"content":"public class AddCommand implements Command {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SherrinfordHR"},"content":"    private final String type;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SherrinfordHR"},"content":"    private final String args;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SherrinfordHR"},"content":"     * Constructs an AddCommand with the specified task type and arguments.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SherrinfordHR"},"content":"     * @param type The type of task to add (e.g., \"todo\", \"deadline\", \"event\").","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SherrinfordHR"},"content":"     * @param args The arguments provided for the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SherrinfordHR"},"content":"    public AddCommand(String type, String args) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SherrinfordHR"},"content":"        this.type \u003d type;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SherrinfordHR"},"content":"        this.args \u003d args;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SherrinfordHR"},"content":"     * Executes the add command by delegating to specific methods based on the task type.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SherrinfordHR"},"content":"     * @param tasks The task list to modify.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SherrinfordHR"},"content":"     * @param storage The storage handler (not used in this command).","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SherrinfordHR"},"content":"     * @param ui The UI to display feedback.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SherrinfordHR"},"content":"     * @throws WatsonException If task creation fails due to invalid input format.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SherrinfordHR"},"content":"    @Override","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SherrinfordHR"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) throws WatsonException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SherrinfordHR"},"content":"        switch (type) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SherrinfordHR"},"content":"        case \"todo\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SherrinfordHR"},"content":"            addTodo(tasks, ui);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SherrinfordHR"},"content":"            break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SherrinfordHR"},"content":"        case \"deadline\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SherrinfordHR"},"content":"            addDeadline(tasks, ui);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SherrinfordHR"},"content":"            break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SherrinfordHR"},"content":"        case \"event\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SherrinfordHR"},"content":"            addEvent(tasks, ui);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SherrinfordHR"},"content":"            break;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SherrinfordHR"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SherrinfordHR"},"content":"     * Adds a ToDo task to the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SherrinfordHR"},"content":"     * @param tasks The task list to modify.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SherrinfordHR"},"content":"     * @param ui The UI to display feedback.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SherrinfordHR"},"content":"     * @throws WatsonException If the description is empty.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SherrinfordHR"},"content":"    private void addTodo(TaskList tasks, Ui ui) throws WatsonException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SherrinfordHR"},"content":"        if (args.isEmpty()) throw new WatsonException(\"ToDo cannot be empty!\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SherrinfordHR"},"content":"        Task task \u003d new ToDo(args);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SherrinfordHR"},"content":"        tasks.add(task);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SherrinfordHR"},"content":"        ui.showTaskAdded(task, tasks.size());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"SherrinfordHR"},"content":"     * Adds a Deadline task to the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"SherrinfordHR"},"content":"     * @param tasks The task list to modify.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"SherrinfordHR"},"content":"     * @param ui The UI to display feedback.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"SherrinfordHR"},"content":"     * @throws WatsonException If the input format is invalid (e.g., missing \"/by\" delimiter).","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"SherrinfordHR"},"content":"    private void addDeadline(TaskList tasks, Ui ui) throws WatsonException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"SherrinfordHR"},"content":"        String[] parts \u003d args.split(\"/by\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"SherrinfordHR"},"content":"        if (parts.length \u003c 2) throw new WatsonException(\"Deadline format invalid!\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"SherrinfordHR"},"content":"        Task task \u003d new Deadline(parts[0].trim(), parts[1].trim());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"SherrinfordHR"},"content":"        tasks.add(task);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"SherrinfordHR"},"content":"        ui.showTaskAdded(task, tasks.size());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"SherrinfordHR"},"content":"     * Adds an Event task to the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"SherrinfordHR"},"content":"     * @param tasks The task list to modify.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"SherrinfordHR"},"content":"     * @param ui The UI to display feedback.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"SherrinfordHR"},"content":"     * @throws WatsonException If the input format is invalid (e.g., missing \"/from\" or \"/to\" delimiters).","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"SherrinfordHR"},"content":"    private void addEvent(TaskList tasks, Ui ui) throws WatsonException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"SherrinfordHR"},"content":"        String[] parts \u003d args.split(\"/from|/to\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"SherrinfordHR"},"content":"        if (parts.length \u003c 3) throw new WatsonException(\"Event format invalid!\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"SherrinfordHR"},"content":"        Task task \u003d new Events(parts[0].trim(), parts[1].trim(), parts[2].trim());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"SherrinfordHR"},"content":"        tasks.add(task);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"SherrinfordHR"},"content":"        ui.showTaskAdded(task, tasks.size());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"SherrinfordHR"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"SherrinfordHR":96}},{"path":"src/main/java/Watson/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherrinfordHR"},"content":"package Watson.command;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.task.TaskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.storage.Storage;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.ui.Ui;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.exception.WatsonException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SherrinfordHR"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SherrinfordHR"},"content":" * Represents an executable command for the Watson application.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SherrinfordHR"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SherrinfordHR"},"content":"public interface Command {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SherrinfordHR"},"content":"     * Executes the command\u0027s logic.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SherrinfordHR"},"content":"     * @param tasks The task list to operate on.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SherrinfordHR"},"content":"     * @param storage The storage handler for reading/writing data.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SherrinfordHR"},"content":"     * @param ui The UI for displaying feedback to the user.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SherrinfordHR"},"content":"     * @throws WatsonException If an error occurs during execution.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SherrinfordHR"},"content":"    void execute(TaskList tasks, Storage storage, Ui ui) throws WatsonException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SherrinfordHR"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"SherrinfordHR":20}},{"path":"src/main/java/Watson/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherrinfordHR"},"content":"package Watson.command;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.task.Task;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.task.TaskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.storage.Storage;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.ui.Ui;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.exception.WatsonException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SherrinfordHR"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SherrinfordHR"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SherrinfordHR"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SherrinfordHR"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SherrinfordHR"},"content":"    private final String indexStr;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SherrinfordHR"},"content":"     * Constructs a DeleteCommand with the specified task index string.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SherrinfordHR"},"content":"     * @param indexStr The string representing the 1-based index of the task to delete.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SherrinfordHR"},"content":"    public DeleteCommand(String indexStr) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SherrinfordHR"},"content":"        this.indexStr \u003d indexStr;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SherrinfordHR"},"content":"     * Executes the deletion of the specified task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SherrinfordHR"},"content":"     * @param tasks The task list to modify.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SherrinfordHR"},"content":"     * @param storage The storage handler (not used in this command).","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SherrinfordHR"},"content":"     * @param ui The UI to display feedback.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SherrinfordHR"},"content":"     * @throws WatsonException If the index is invalid, out of bounds, or not a number.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SherrinfordHR"},"content":"    @Override","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SherrinfordHR"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) throws WatsonException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SherrinfordHR"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SherrinfordHR"},"content":"            int index \u003d Integer.parseInt(indexStr) - 1;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SherrinfordHR"},"content":"            Task task \u003d tasks.get(index);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SherrinfordHR"},"content":"            tasks.delete(index);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SherrinfordHR"},"content":"            ui.showTaskRemoved(task, tasks.size());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SherrinfordHR"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SherrinfordHR"},"content":"            throw new WatsonException(\"Task number is out of range!\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SherrinfordHR"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SherrinfordHR"},"content":"            throw new WatsonException(\"Please provide a valid task number!\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SherrinfordHR"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SherrinfordHR"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"SherrinfordHR":45}},{"path":"src/main/java/Watson/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherrinfordHR"},"content":"package Watson.command;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.task.TaskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.storage.Storage;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.ui.Ui;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SherrinfordHR"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SherrinfordHR"},"content":" * Represents a command to exit the Watson application.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SherrinfordHR"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SherrinfordHR"},"content":"public class ExitCommand implements Command {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SherrinfordHR"},"content":"     * Executes the exit command. No operation is performed here.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SherrinfordHR"},"content":"     * @param tasks The task list (unused).","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SherrinfordHR"},"content":"     * @param storage The storage handler (unused).","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SherrinfordHR"},"content":"     * @param ui The UI (unused).","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SherrinfordHR"},"content":"    @Override","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SherrinfordHR"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SherrinfordHR"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"SherrinfordHR":21}},{"path":"src/main/java/Watson/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherrinfordHR"},"content":"package Watson.command;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.task.TaskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.storage.Storage;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.ui.Ui;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SherrinfordHR"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SherrinfordHR"},"content":" * Represents a command to display all tasks in the task list.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SherrinfordHR"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SherrinfordHR"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SherrinfordHR"},"content":"     * Executes the command by displaying all tasks through the UI.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SherrinfordHR"},"content":"     * @param tasks The task list to be displayed.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SherrinfordHR"},"content":"     * @param storage Unused in this command (required by interface).","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SherrinfordHR"},"content":"     * @param ui The UI component to interact with the user.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SherrinfordHR"},"content":"    @Override","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SherrinfordHR"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SherrinfordHR"},"content":"        ui.showTaskList(tasks.getAll());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SherrinfordHR"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"SherrinfordHR":22}},{"path":"src/main/java/Watson/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherrinfordHR"},"content":"package Watson.command;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.task.Task;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.task.TaskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.storage.Storage;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.ui.Ui;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.exception.WatsonException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SherrinfordHR"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SherrinfordHR"},"content":" * Represents a command to mark or unmark a task as done/undone.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SherrinfordHR"},"content":" * Validates the task index and updates its status.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SherrinfordHR"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SherrinfordHR"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SherrinfordHR"},"content":"    private final String action;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SherrinfordHR"},"content":"    private final String indexStr;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SherrinfordHR"},"content":"     * Constructs a MarkCommand with the specified action and task index.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SherrinfordHR"},"content":"     * @param action \"mark\" or \"unmark\" to indicate the desired action.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SherrinfordHR"},"content":"     * @param indexStr The task index (as a 1-based string) to be updated.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SherrinfordHR"},"content":"    public MarkCommand(String action, String indexStr) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SherrinfordHR"},"content":"        this.action \u003d action;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SherrinfordHR"},"content":"        this.indexStr \u003d indexStr;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SherrinfordHR"},"content":"     * Executes the command by updating the task status and showing feedback.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SherrinfordHR"},"content":"     * @param tasks The task list containing the target task.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SherrinfordHR"},"content":"     * @param storage Unused in this command (required by interface).","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SherrinfordHR"},"content":"     * @param ui The UI component to display feedback.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SherrinfordHR"},"content":"     * @throws WatsonException If the index is invalid, out of bounds, or not a number.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SherrinfordHR"},"content":"    @Override","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SherrinfordHR"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) throws WatsonException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SherrinfordHR"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SherrinfordHR"},"content":"            int index \u003d Integer.parseInt(indexStr) - 1;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SherrinfordHR"},"content":"            Task task \u003d tasks.get(index);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SherrinfordHR"},"content":"            String feedback \u003d task.updatestatus(action);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SherrinfordHR"},"content":"            ui.showMessage(feedback);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SherrinfordHR"},"content":"            ui.showMarkResult(task);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SherrinfordHR"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SherrinfordHR"},"content":"            throw new WatsonException(\"Task number is out of range!\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SherrinfordHR"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SherrinfordHR"},"content":"            throw new WatsonException(\"Please provide a valid task number!\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SherrinfordHR"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SherrinfordHR"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"SherrinfordHR":50}},{"path":"src/main/java/Watson/command/SearchCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherrinfordHR"},"content":"package Watson.command;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.exception.WatsonException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.storage.Storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.task.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.task.TaskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.ui.Ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SherrinfordHR"},"content":"import java.util.List;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SherrinfordHR"},"content":"public class SearchCommand implements Command{","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SherrinfordHR"},"content":"    String keyword;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SherrinfordHR"},"content":"    public SearchCommand(String keyword) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SherrinfordHR"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SherrinfordHR"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SherrinfordHR"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) throws WatsonException{","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SherrinfordHR"},"content":"        List\u003cTask\u003e matchingTasks \u003d tasks.findTasks(keyword);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SherrinfordHR"},"content":"        ui.showTasks(matchingTasks);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SherrinfordHR"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"SherrinfordHR":21}},{"path":"src/main/java/Watson/exception/WatsonException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherrinfordHR"},"content":"package Watson.exception;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SherrinfordHR"},"content":"public class WatsonException extends Exception {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SherrinfordHR"},"content":"     * Constructs a WatsonException with a detailed message.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SherrinfordHR"},"content":"     * @param message The error message describing the exception cause.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SherrinfordHR"},"content":"    public WatsonException(String message) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SherrinfordHR"},"content":"        super(message);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SherrinfordHR"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"SherrinfordHR":12}},{"path":"src/main/java/Watson/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherrinfordHR"},"content":"package Watson.parser;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.command.*;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.exception.WatsonException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SherrinfordHR"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SherrinfordHR"},"content":" * Parses user input into executable commands.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SherrinfordHR"},"content":" * Converts raw string commands to corresponding Command objects.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SherrinfordHR"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SherrinfordHR"},"content":"public class Parser {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SherrinfordHR"},"content":"     * Parses a user input string and returns the appropriate command.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SherrinfordHR"},"content":"     * @param command The raw user input string (case-insensitive).","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SherrinfordHR"},"content":"     * @return A Command object corresponding to the input.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SherrinfordHR"},"content":"     * @throws WatsonException If the input command is unrecognized, incomplete, or improperly formatted.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SherrinfordHR"},"content":"    public static Command parse(String command) throws WatsonException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SherrinfordHR"},"content":"        String[] parts \u003d command.split(\" \", 2);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SherrinfordHR"},"content":"        String action \u003d parts[0].toLowerCase();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SherrinfordHR"},"content":"        switch (action) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SherrinfordHR"},"content":"            case \"bye\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SherrinfordHR"},"content":"                return new ExitCommand();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SherrinfordHR"},"content":"            case \"list\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SherrinfordHR"},"content":"                return new ListCommand();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SherrinfordHR"},"content":"            case \"mark\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SherrinfordHR"},"content":"            case \"unmark\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SherrinfordHR"},"content":"                return new MarkCommand(action, parts[1]);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SherrinfordHR"},"content":"            case \"delete\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SherrinfordHR"},"content":"                return new DeleteCommand(parts[1]);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SherrinfordHR"},"content":"            case \"todo\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SherrinfordHR"},"content":"            case \"deadline\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SherrinfordHR"},"content":"            case \"event\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SherrinfordHR"},"content":"                return new AddCommand(action, parts.length \u003e 1 ? parts[1] : \"\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SherrinfordHR"},"content":"            case \"find\":","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SherrinfordHR"},"content":"                return new SearchCommand(parts[1]);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SherrinfordHR"},"content":"            default:","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SherrinfordHR"},"content":"                throw new WatsonException(\"OOPS!!! I don\u0027t know what that means.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SherrinfordHR"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SherrinfordHR"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"SherrinfordHR":42}},{"path":"src/main/java/Watson/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherrinfordHR"},"content":"package Watson.storage;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.task.*;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SherrinfordHR"},"content":"import java.io.*;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SherrinfordHR"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SherrinfordHR"},"content":"import java.util.List;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SherrinfordHR"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SherrinfordHR"},"content":" * Manages persistent storage for tasks by reading from and writing to a file.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SherrinfordHR"},"content":" * Handles file creation, data parsing, and task serialization.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SherrinfordHR"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SherrinfordHR"},"content":"public class Storage {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SherrinfordHR"},"content":"    private final String filepath;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SherrinfordHR"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SherrinfordHR"},"content":"     * @param filepath The path to the file used for data storage.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SherrinfordHR"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SherrinfordHR"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SherrinfordHR"},"content":"     * Loads tasks from the storage file. Creates the file and parent directories if they do not exist.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SherrinfordHR"},"content":"     * @return A list of tasks loaded from the file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SherrinfordHR"},"content":"     * @throws IOException If an I/O error occurs while reading the file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SherrinfordHR"},"content":"    public List\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SherrinfordHR"},"content":"        List\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SherrinfordHR"},"content":"        File file \u003d new File(filepath);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SherrinfordHR"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SherrinfordHR"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SherrinfordHR"},"content":"            file.createNewFile();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SherrinfordHR"},"content":"            return loadedTasks; // Return empty list for new file","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SherrinfordHR"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SherrinfordHR"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SherrinfordHR"},"content":"            String line;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SherrinfordHR"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SherrinfordHR"},"content":"                Task task \u003d parseLine(line);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SherrinfordHR"},"content":"                if (task !\u003d null) loadedTasks.add(task);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SherrinfordHR"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SherrinfordHR"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SherrinfordHR"},"content":"        return loadedTasks;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SherrinfordHR"},"content":"     * Parses a line from the storage file into a Task object.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SherrinfordHR"},"content":"     * @param line The line read from the file, formatted as \"TYPE | STATUS | DESCRIPTION | [EXTRA FIELDS]\".","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SherrinfordHR"},"content":"     * @return A Task object, or null if the line format is invalid.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SherrinfordHR"},"content":"    private Task parseLine(String line) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SherrinfordHR"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SherrinfordHR"},"content":"        switch (parts[0]) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SherrinfordHR"},"content":"        case \"T\":","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SherrinfordHR"},"content":"            return parseTodo(parts);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SherrinfordHR"},"content":"        case \"D\":","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SherrinfordHR"},"content":"            return parseDeadline(parts);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SherrinfordHR"},"content":"        case \"E\":","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SherrinfordHR"},"content":"            return parseEvent(parts);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SherrinfordHR"},"content":"        default:","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"SherrinfordHR"},"content":"            return null;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"SherrinfordHR"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"SherrinfordHR"},"content":"    // Private helper methods (no Javadoc needed for brevity)","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"SherrinfordHR"},"content":"    private Task parseTodo(String[] parts) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"SherrinfordHR"},"content":"        ToDo todo \u003d new ToDo(parts[2]);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"SherrinfordHR"},"content":"        todo.setstatus(parts[1]);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"SherrinfordHR"},"content":"        return todo;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"SherrinfordHR"},"content":"    private Task parseDeadline(String[] parts) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"SherrinfordHR"},"content":"        Deadline deadline \u003d new Deadline(parts[2], parts[3]);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"SherrinfordHR"},"content":"        deadline.setstatus(parts[1]);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"SherrinfordHR"},"content":"        return deadline;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"SherrinfordHR"},"content":"    private Task parseEvent(String[] parts) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"SherrinfordHR"},"content":"        Events event \u003d new Events(parts[2], parts[3], parts[4]);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"SherrinfordHR"},"content":"        event.setstatus(parts[1]);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"SherrinfordHR"},"content":"        return event;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"SherrinfordHR"},"content":"     * Saves all tasks from the task list to the storage file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"SherrinfordHR"},"content":"     * @param tasks The task list to be saved.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"SherrinfordHR"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"SherrinfordHR"},"content":"    public void savetask(TaskList tasks) throws IOException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"SherrinfordHR"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filepath))) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"SherrinfordHR"},"content":"            for (Task task : tasks.getAll()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"SherrinfordHR"},"content":"                writer.write(task.tofile());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"SherrinfordHR"},"content":"                writer.newLine();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"SherrinfordHR"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"SherrinfordHR"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"SherrinfordHR"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"SherrinfordHR":104}},{"path":"src/main/java/Watson/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherrinfordHR"},"content":"package Watson.task;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SherrinfordHR"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SherrinfordHR"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SherrinfordHR"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SherrinfordHR"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SherrinfordHR"},"content":" * Represents a task with a specific deadline. Parses and stores the due date/time.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SherrinfordHR"},"content":" * Inherits from the Task class and supports deadline-specific formatting.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SherrinfordHR"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SherrinfordHR"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SherrinfordHR"},"content":"    private final String due;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SherrinfordHR"},"content":"    private LocalDateTime duedate;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SherrinfordHR"},"content":"     * Constructs a Deadline task with a description and due date string.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SherrinfordHR"},"content":"     * Attempts to parse the due date using the \"d/M/yyyy HHmm\" format. Retains the raw string if parsing fails.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SherrinfordHR"},"content":"     * @param description The task description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SherrinfordHR"},"content":"     * @param due The due date string (e.g., \"2/12/2023 1800\").","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SherrinfordHR"},"content":"    public Deadline(String description, String due) {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SherrinfordHR"},"content":"        super(description);","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SherrinfordHR"},"content":"        this.due \u003d due;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SherrinfordHR"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SherrinfordHR"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SherrinfordHR"},"content":"            this.duedate \u003d LocalDateTime.parse(due, formatter);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SherrinfordHR"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SherrinfordHR"},"content":"            this.duedate \u003d null;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SherrinfordHR"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SherrinfordHR"},"content":"     * Returns a formatted string for display. Uses \"MMM dd yyyy, h:mm\" if parsed successfully;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SherrinfordHR"},"content":"     * otherwise, uses the raw due string.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SherrinfordHR"},"content":"     * @return Formatted string (e.g., \"[D] [X] Submit report (by: Dec 02 2023, 6:00 PM)\").","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SherrinfordHR"},"content":"    @Override","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SherrinfordHR"},"content":"    public String toString() {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SherrinfordHR"},"content":"        if (this.duedate !\u003d null) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SherrinfordHR"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SherrinfordHR"},"content":"            String newdate \u003d this.duedate.format(formatter);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SherrinfordHR"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + newdate + \")\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SherrinfordHR"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SherrinfordHR"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.due + \")\";","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SherrinfordHR"},"content":"     * Serializes the task for file storage in the format: \"D | [status] | [description] | [due]\".","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SherrinfordHR"},"content":"     * @return A string like \"D | 1 | Submit report | 2/12/2023 1800\".","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SherrinfordHR"},"content":"    @Override","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SherrinfordHR"},"content":"    public String tofile() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SherrinfordHR"},"content":"        return \"D | \" + (status ? \"1 | \" : \"0 | \") + super.tofile() + \" | \" + this.due;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SherrinfordHR"},"content":"}","lastModifiedDate":"2025-01-16","isFullCredit":false}],"authorContributionMap":{"SherrinfordHR":58}},{"path":"src/main/java/Watson/task/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherrinfordHR"},"content":"package Watson.task;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SherrinfordHR"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SherrinfordHR"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SherrinfordHR"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SherrinfordHR"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SherrinfordHR"},"content":" * Represents an event task with start and end times. Parses and stores date/time information.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SherrinfordHR"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SherrinfordHR"},"content":"public class Events extends Task {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SherrinfordHR"},"content":"    private final String from;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SherrinfordHR"},"content":"    private final String to;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SherrinfordHR"},"content":"    private LocalDateTime fromdate;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SherrinfordHR"},"content":"    private LocalDateTime todate;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SherrinfordHR"},"content":"     * Constructs an Events task with description, start time, and end time.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SherrinfordHR"},"content":"     * Parses dates using \"d/M/yyyy HHmm\" format. Retains raw strings if parsing fails.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SherrinfordHR"},"content":"     * @param description The task description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SherrinfordHR"},"content":"     * @param from The start time string (e.g., \"3/12/2023 0900\").","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SherrinfordHR"},"content":"     * @param to The end time string (e.g., \"3/12/2023 1700\").","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SherrinfordHR"},"content":"    public Events(String description, String from, String to) {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SherrinfordHR"},"content":"        super(description);","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SherrinfordHR"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SherrinfordHR"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SherrinfordHR"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SherrinfordHR"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SherrinfordHR"},"content":"            this.fromdate \u003d LocalDateTime.parse(from, formatter);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SherrinfordHR"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SherrinfordHR"},"content":"            this.fromdate \u003d null;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SherrinfordHR"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SherrinfordHR"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SherrinfordHR"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SherrinfordHR"},"content":"            this.todate \u003d LocalDateTime.parse(to, formatter); // Changed from \u0027from\u0027 to \u0027to\u0027","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SherrinfordHR"},"content":"            this.todate \u003d LocalDateTime.parse(to, formatter);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SherrinfordHR"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SherrinfordHR"},"content":"            this.todate \u003d null;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SherrinfordHR"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SherrinfordHR"},"content":"     * Returns a formatted string for display. Uses \"MMM dd yyyy, h:mm a\" for parsed dates;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SherrinfordHR"},"content":"     * falls back to raw strings if parsing failed.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SherrinfordHR"},"content":"     * @return Formatted string (e.g., \"[E] [ ] Team meeting (from: Dec 03 2023, 9:00 AM to: 5:00 PM)\").","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SherrinfordHR"},"content":"    @Override","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SherrinfordHR"},"content":"    public String toString() {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SherrinfordHR"},"content":"        String fromtoString;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SherrinfordHR"},"content":"        String totoString;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SherrinfordHR"},"content":"        if (fromdate !\u003d null) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SherrinfordHR"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SherrinfordHR"},"content":"            fromtoString \u003d fromdate.format(formatter);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SherrinfordHR"},"content":"        } else {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SherrinfordHR"},"content":"            fromtoString \u003d this.from;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SherrinfordHR"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SherrinfordHR"},"content":"        if (todate !\u003d null) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SherrinfordHR"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SherrinfordHR"},"content":"            totoString \u003d todate.format(formatter);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SherrinfordHR"},"content":"        } else {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SherrinfordHR"},"content":"            totoString \u003d this.to;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SherrinfordHR"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SherrinfordHR"},"content":"        return \"[D]\" + super.toString() + \" (from: \" + fromtoString + \" to: \" + totoString + \")\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"SherrinfordHR"},"content":"     * Serializes the event for file storage in the format: \"E | [status] | [description] | [from] | [to]\".","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"SherrinfordHR"},"content":"     * @return A string like \"E | 0 | Team meeting | 3/12/2023 0900 | 3/12/2023 1700\".","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"SherrinfordHR"},"content":"    @Override","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"SherrinfordHR"},"content":"    public String tofile() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"SherrinfordHR"},"content":"        return \"E | \" + (status ? \"1 | \" : \"0 | \") + super.tofile() + \" | \" + this.from + \" | \" + this.to;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"SherrinfordHR"},"content":"}","lastModifiedDate":"2025-01-16","isFullCredit":false}],"authorContributionMap":{"SherrinfordHR":77}},{"path":"src/main/java/Watson/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherrinfordHR"},"content":"package Watson.task;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SherrinfordHR"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SherrinfordHR"},"content":" * Base class for all task types. Manages the task description and completion status.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SherrinfordHR"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SherrinfordHR"},"content":"public class Task {","lastModifiedDate":"2025-01-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SherrinfordHR"},"content":"    private final String description;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SherrinfordHR"},"content":"    protected boolean status;","lastModifiedDate":"2025-01-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SherrinfordHR"},"content":"     * Constructs a Task with a description. Initial status is set to \"not done\".","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SherrinfordHR"},"content":"     * @param description The task description (e.g., \"Read book\").","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SherrinfordHR"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SherrinfordHR"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SherrinfordHR"},"content":"        this.status \u003d false;","lastModifiedDate":"2025-01-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SherrinfordHR"},"content":"     * Returns the task\u0027s status icon (\"[X]\" for done, \"[ ]\" for undone).","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SherrinfordHR"},"content":"     * @return Formatted status string.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SherrinfordHR"},"content":"    public String getstatus() {","lastModifiedDate":"2025-01-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SherrinfordHR"},"content":"        return status ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2025-01-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SherrinfordHR"},"content":"     * Sets the task\u0027s status based on a string input (\"1\" for done, \"0\" for undone).","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SherrinfordHR"},"content":"     * Note: This method returns null and is intended for loading tasks from storage.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SherrinfordHR"},"content":"     * @param s The status string (\"1\" or \"0\").","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SherrinfordHR"},"content":"     * @return Always returns null (legacy implementation).","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SherrinfordHR"},"content":"    public Task setstatus(String s) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SherrinfordHR"},"content":"        this.status \u003d s.equals(\"1\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SherrinfordHR"},"content":"        return null;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SherrinfordHR"},"content":"     * Updates the task\u0027s status based on a command (\"mark\" or \"unmark\").","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SherrinfordHR"},"content":"     * @param command The action to perform (\"mark\" or \"unmark\").","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SherrinfordHR"},"content":"     * @return Feedback message (e.g., \"Nice! I\u0027ve marked this task as done:\").","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SherrinfordHR"},"content":"    public String updatestatus(String command) {","lastModifiedDate":"2025-01-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SherrinfordHR"},"content":"        if (command.equals(\"unmark\")) {","lastModifiedDate":"2025-01-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SherrinfordHR"},"content":"            this.status \u003d false;","lastModifiedDate":"2025-01-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SherrinfordHR"},"content":"            return \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2025-01-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SherrinfordHR"},"content":"        } else if (command.equals(\"mark\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SherrinfordHR"},"content":"            this.status \u003d true;","lastModifiedDate":"2025-01-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SherrinfordHR"},"content":"            return \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2025-01-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SherrinfordHR"},"content":"        }","lastModifiedDate":"2025-01-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SherrinfordHR"},"content":"        return \"\";","lastModifiedDate":"2025-01-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SherrinfordHR"},"content":"     * Returns a string representation of the task, including status and description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SherrinfordHR"},"content":"     * @return Formatted string (e.g., \"[X] Read book\").","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SherrinfordHR"},"content":"    @Override","lastModifiedDate":"2025-01-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SherrinfordHR"},"content":"    public String toString() {","lastModifiedDate":"2025-01-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SherrinfordHR"},"content":"        return getstatus() + \" \" + description;","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"SherrinfordHR"},"content":"     * Serializes the task description for storage. Subclasses override this to include type and status.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"SherrinfordHR"},"content":"     * @return The task description (e.g., \"Read book\").","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"SherrinfordHR"},"content":"    public String tofile() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"SherrinfordHR"},"content":"        return description;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"SherrinfordHR"},"content":"    public String getdescription() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"SherrinfordHR"},"content":"        return description;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"SherrinfordHR"},"content":"}","lastModifiedDate":"2025-01-11","isFullCredit":false}],"authorContributionMap":{"SherrinfordHR":80}},{"path":"src/main/java/Watson/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherrinfordHR"},"content":"package Watson.task;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SherrinfordHR"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SherrinfordHR"},"content":"import java.util.List;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SherrinfordHR"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SherrinfordHR"},"content":" * Manages a list of tasks with operations to add, remove, retrieve, and load tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SherrinfordHR"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SherrinfordHR"},"content":"public class TaskList {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SherrinfordHR"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SherrinfordHR"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SherrinfordHR"},"content":"    public TaskList() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SherrinfordHR"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SherrinfordHR"},"content":"     * Adds a task to the list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SherrinfordHR"},"content":"     * @param task The task to add.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SherrinfordHR"},"content":"    public void add(Task task) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SherrinfordHR"},"content":"        tasks.add(task);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SherrinfordHR"},"content":"     * Removes a task from the list by its index.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SherrinfordHR"},"content":"     * @param index The 0-based index of the task to remove.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SherrinfordHR"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SherrinfordHR"},"content":"    public void delete(int index) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SherrinfordHR"},"content":"        tasks.remove(index);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SherrinfordHR"},"content":"     * Retrieves a task from the list by its index.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SherrinfordHR"},"content":"     * @param index The 0-based index of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SherrinfordHR"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SherrinfordHR"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SherrinfordHR"},"content":"    public Task get(int index) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SherrinfordHR"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SherrinfordHR"},"content":"     * Returns a copy of all tasks in the list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SherrinfordHR"},"content":"     * @return A list containing all tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SherrinfordHR"},"content":"    public List\u003cTask\u003e getAll() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SherrinfordHR"},"content":"        return new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SherrinfordHR"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SherrinfordHR"},"content":"     * @return The size of the list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SherrinfordHR"},"content":"    public int size() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SherrinfordHR"},"content":"        return tasks.size();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"SherrinfordHR"},"content":"     * Appends tasks from storage to the current list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"SherrinfordHR"},"content":"     * @param loadedTasks The list of tasks to load.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"SherrinfordHR"},"content":"    public void loadTasks(List\u003cTask\u003e loadedTasks) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"SherrinfordHR"},"content":"        tasks.addAll(loadedTasks);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"SherrinfordHR"},"content":"    public List\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"SherrinfordHR"},"content":"        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"SherrinfordHR"},"content":"        for (Task task : tasks){","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"SherrinfordHR"},"content":"            if(task.getdescription().toLowerCase().contains(keyword)){","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"SherrinfordHR"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"SherrinfordHR"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"SherrinfordHR"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"SherrinfordHR"},"content":"        return matchingTasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"SherrinfordHR"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"SherrinfordHR":85}},{"path":"src/main/java/Watson/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherrinfordHR"},"content":"package Watson.task;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SherrinfordHR"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SherrinfordHR"},"content":" * Represents a todo task without date/time constraints. Inherits from Task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SherrinfordHR"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SherrinfordHR"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SherrinfordHR"},"content":"     * Constructs a ToDo task with a description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SherrinfordHR"},"content":"     * @param description The task description (e.g., \"Buy milk\").","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SherrinfordHR"},"content":"    public ToDo(String description) {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SherrinfordHR"},"content":"        super(description);","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SherrinfordHR"},"content":"     * Returns a formatted string for display.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SherrinfordHR"},"content":"     * @return Formatted string (e.g., \"[T] [ ] Buy milk\").","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SherrinfordHR"},"content":"    @Override","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SherrinfordHR"},"content":"    public String toString() {","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SherrinfordHR"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SherrinfordHR"},"content":"     * Serializes the todo task for file storage in the format: \"T | [status] | [description]\".","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SherrinfordHR"},"content":"     * @return A string like \"T | 0 | Buy milk\".","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SherrinfordHR"},"content":"    @Override","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SherrinfordHR"},"content":"    public String tofile() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SherrinfordHR"},"content":"        return \"T | \" + (status ? \"1 | \" : \"0 | \") + super.tofile();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SherrinfordHR"},"content":"}","lastModifiedDate":"2025-01-16","isFullCredit":false}],"authorContributionMap":{"SherrinfordHR":36}},{"path":"src/main/java/Watson/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherrinfordHR"},"content":"package Watson.ui;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.task.Task;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SherrinfordHR"},"content":"import java.util.List;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SherrinfordHR"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SherrinfordHR"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SherrinfordHR"},"content":" * Handles all user interactions, including input reading and message display.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SherrinfordHR"},"content":" * Manages the command-line interface (CLI) for the Watson application.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SherrinfordHR"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SherrinfordHR"},"content":"public class Ui {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SherrinfordHR"},"content":"    private final Scanner scanner;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SherrinfordHR"},"content":"     * Constructs a Ui instance and initializes the input scanner.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SherrinfordHR"},"content":"    public Ui() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SherrinfordHR"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SherrinfordHR"},"content":"     * Displays the welcome message when the application starts.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SherrinfordHR"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SherrinfordHR"},"content":"        System.out.println(\"Hello! I\u0027m Watson\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SherrinfordHR"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SherrinfordHR"},"content":"     * Displays the goodbye message when the application exits.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SherrinfordHR"},"content":"    public void showGoodbye() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SherrinfordHR"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SherrinfordHR"},"content":"     * Reads and trims a user command from the CLI.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SherrinfordHR"},"content":"     * @return The trimmed user input string.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SherrinfordHR"},"content":"    public String readCommand() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SherrinfordHR"},"content":"        return scanner.nextLine().trim();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SherrinfordHR"},"content":"     * Prints all tasks in a numbered list format.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SherrinfordHR"},"content":"     * @param tasks The list of tasks to display.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SherrinfordHR"},"content":"    public void showTaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SherrinfordHR"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SherrinfordHR"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SherrinfordHR"},"content":"            System.out.println((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SherrinfordHR"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SherrinfordHR"},"content":"     * Confirms a task addition and shows the updated total task count.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SherrinfordHR"},"content":"     * @param task The added task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SherrinfordHR"},"content":"     * @param totalTasks The new total number of tasks after addition.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SherrinfordHR"},"content":"    public void showTaskAdded(Task task, int totalTasks) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SherrinfordHR"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SherrinfordHR"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SherrinfordHR"},"content":"        System.out.printf(\"Now you have %d tasks in the list.%n\", totalTasks);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"SherrinfordHR"},"content":"     * Confirms a task removal and shows the updated total task count.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"SherrinfordHR"},"content":"     * @param task The removed task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"SherrinfordHR"},"content":"     * @param totalTasks The new total number of tasks after removal.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"SherrinfordHR"},"content":"    public void showTaskRemoved(Task task, int totalTasks) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"SherrinfordHR"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"SherrinfordHR"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"SherrinfordHR"},"content":"        System.out.printf(\"Now you have %d tasks in the list.%n\", totalTasks);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"SherrinfordHR"},"content":"     * Displays the updated status of a marked/unmarked task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"SherrinfordHR"},"content":"     * @param task The task whose status was updated.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"SherrinfordHR"},"content":"    public void showMarkResult(Task task) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"SherrinfordHR"},"content":"        System.out.println(\"Status updated:\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"SherrinfordHR"},"content":"        System.out.println(\"  \" + task.getstatus() + \" \" + task);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"SherrinfordHR"},"content":"     * Prints an error message to the console.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"SherrinfordHR"},"content":"     * @param message The error message to display.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"SherrinfordHR"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"SherrinfordHR"},"content":"        System.out.println(\"Error: \" + message);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"SherrinfordHR"},"content":"     * Prints a general informational message to the console.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"SherrinfordHR"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"SherrinfordHR"},"content":"     * @param message The message to display.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"SherrinfordHR"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"SherrinfordHR"},"content":"        System.out.println(message);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"SherrinfordHR"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"SherrinfordHR"},"content":"     * Closes the scanner to release system resources.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"SherrinfordHR"},"content":"     * Should be called when the UI is no longer needed.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"SherrinfordHR"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"SherrinfordHR"},"content":"    public void close() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"SherrinfordHR"},"content":"        scanner.close();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"SherrinfordHR"},"content":"    public void showTasks(List\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"SherrinfordHR"},"content":"        if (matchingTasks.isEmpty()){","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"SherrinfordHR"},"content":"            System.out.println(\"No match found.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"SherrinfordHR"},"content":"            return;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"SherrinfordHR"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"SherrinfordHR"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"SherrinfordHR"},"content":"        for(int i \u003d 0; i \u003c matchingTasks.size(); i++){","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"SherrinfordHR"},"content":"            System.out.println((i+1) + \". \" + matchingTasks.get(i));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"SherrinfordHR"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"SherrinfordHR"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"SherrinfordHR":127}},{"path":"src/main/tasklist.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SherrinfordHR"},"content":"T | 0 | read","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SherrinfordHR"},"content":"D | 0 | finish work | 11/2/2000 1159","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"SherrinfordHR":2}},{"path":"src/test/java/Watson/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherrinfordHR"},"content":"// src/test/java/watson/parser/ParserTest.java","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SherrinfordHR"},"content":"package Watson.parser;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.command.*;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.exception.WatsonException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SherrinfordHR"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SherrinfordHR"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SherrinfordHR"},"content":"class ParserTest {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SherrinfordHR"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SherrinfordHR"},"content":"    void parse_validTodoCommand_returnsAddCommand() throws WatsonException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SherrinfordHR"},"content":"        Command cmd \u003d Parser.parse(\"todo Buy milk\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SherrinfordHR"},"content":"        assertTrue(cmd instanceof AddCommand);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SherrinfordHR"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SherrinfordHR"},"content":"    void parse_invalidCommand_throwsException() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SherrinfordHR"},"content":"        assertThrows(WatsonException.class, () -\u003e {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SherrinfordHR"},"content":"            Parser.parse(\"blah invalid command\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SherrinfordHR"},"content":"        });","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SherrinfordHR"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"SherrinfordHR":22}},{"path":"src/test/java/Watson/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherrinfordHR"},"content":"// src/test/java/watson/storage/StorageTest.java","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SherrinfordHR"},"content":"package Watson.storage;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SherrinfordHR"},"content":"import Watson.task.*;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SherrinfordHR"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SherrinfordHR"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SherrinfordHR"},"content":"import java.util.List;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SherrinfordHR"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SherrinfordHR"},"content":"class StorageTest {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SherrinfordHR"},"content":"    private static final String TEST_FILE \u003d \"test_tasks.txt\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SherrinfordHR"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SherrinfordHR"},"content":"    void saveAndLoad_maintainsTaskIntegrity() throws IOException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SherrinfordHR"},"content":"        // Setup","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SherrinfordHR"},"content":"        Storage storage \u003d new Storage(TEST_FILE);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SherrinfordHR"},"content":"        TaskList original \u003d new TaskList();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SherrinfordHR"},"content":"        original.add(new ToDo(\"Test task\"));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SherrinfordHR"},"content":"        original.add(new Deadline(\"Return book\", \"2/12/2023 1800\"));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SherrinfordHR"},"content":"        // Test save/load cycle","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SherrinfordHR"},"content":"        storage.savetask(original);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SherrinfordHR"},"content":"        TaskList loaded \u003d new TaskList();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SherrinfordHR"},"content":"        loaded.loadTasks(storage.load());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SherrinfordHR"},"content":"        // Verify","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SherrinfordHR"},"content":"        assertEquals(original.size(), loaded.size());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SherrinfordHR"},"content":"        assertEquals(","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SherrinfordHR"},"content":"                original.get(1).toString(),","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SherrinfordHR"},"content":"                loaded.get(1).toString()","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SherrinfordHR"},"content":"        );","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SherrinfordHR"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"SherrinfordHR":33}},{"path":"src/test/java/Watson/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherrinfordHR"},"content":"// src/test/java/watson/task/TaskListTest.java","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SherrinfordHR"},"content":"package Watson.task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SherrinfordHR"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SherrinfordHR"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SherrinfordHR"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SherrinfordHR"},"content":"class TaskListTest {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SherrinfordHR"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SherrinfordHR"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SherrinfordHR"},"content":"    void setUp() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SherrinfordHR"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SherrinfordHR"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SherrinfordHR"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SherrinfordHR"},"content":"    void add_validTask_increasesSize() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SherrinfordHR"},"content":"        Task todo \u003d new ToDo(\"Read book\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SherrinfordHR"},"content":"        taskList.add(todo);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SherrinfordHR"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SherrinfordHR"},"content":"        assertEquals(todo, taskList.get(0));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SherrinfordHR"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SherrinfordHR"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"SherrinfordHR":23}}]
