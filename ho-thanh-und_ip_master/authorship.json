[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ho-thanh-und"},"content":"# Him project template","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ho-thanh-und"},"content":"1. After that, locate the `src/main/java/Him.java` file, right-click it, and choose `Run Him.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false}],"authorContributionMap":{"ho-thanh-und":2,"-":24}},{"path":"data/Him.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ho-thanh-und"},"content":"T | 1 | read book","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ho-thanh-und"},"content":"D | 0 | return book | June 6th","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ho-thanh-und"},"content":"E | 0 | project meeting | Aug 6th 2-4pm","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ho-thanh-und"},"content":"T | 1 | join sports club","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"ho-thanh-und":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ho-thanh-und"},"content":"# Him User Guide","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"ho-thanh-und":1,"-":29}},{"path":"src/main/java/BlankDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ho-thanh-und"},"content":"public class BlankDeadlineException extends Exception {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ho-thanh-und"},"content":"    public BlankDeadlineException(String error) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ho-thanh-und"},"content":"        super(error);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ho-thanh-und"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ho-thanh-und"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"ho-thanh-und":5}},{"path":"src/main/java/BlankEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ho-thanh-und"},"content":"public class BlankEventException extends Exception {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ho-thanh-und"},"content":"    public BlankEventException(String error) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ho-thanh-und"},"content":"        super(error);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ho-thanh-und"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ho-thanh-und"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"ho-thanh-und":5}},{"path":"src/main/java/BlankToDoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ho-thanh-und"},"content":"public class BlankToDoException extends Exception {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ho-thanh-und"},"content":"    public BlankToDoException(String error) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ho-thanh-und"},"content":"        super(error);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ho-thanh-und"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ho-thanh-und"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"ho-thanh-und":5}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ho-thanh-und"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ho-thanh-und"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ho-thanh-und"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ho-thanh-und"},"content":"import java.util.Optional;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ho-thanh-und"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ho-thanh-und"},"content":"    protected String by;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ho-thanh-und"},"content":"    protected Optional\u003cLocalDate\u003e dueDate;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ho-thanh-und"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ho-thanh-und"},"content":"     * Creates a Deadline object with its description and deadline","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ho-thanh-und"},"content":"     * @param description description","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ho-thanh-und"},"content":"     * @param by by","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ho-thanh-und"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ho-thanh-und"},"content":"    public Deadline(String description, String by, boolean isDone) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ho-thanh-und"},"content":"        super(description, isDone);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ho-thanh-und"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ho-thanh-und"},"content":"        this.dueDate \u003d parseDate(by);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ho-thanh-und"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ho-thanh-und"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ho-thanh-und"},"content":"     * Parse a date String into Local Date if in the expected format","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ho-thanh-und"},"content":"     * @param date date","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ho-thanh-und"},"content":"     * @return an Optional","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ho-thanh-und"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ho-thanh-und"},"content":"    private Optional\u003cLocalDate\u003e parseDate(String date) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ho-thanh-und"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ho-thanh-und"},"content":"            return Optional.of(LocalDate.parse(date));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ho-thanh-und"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ho-thanh-und"},"content":"            return Optional.empty();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ho-thanh-und"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ho-thanh-und"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ho-thanh-und"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ho-thanh-und"},"content":"     * Gives a string representation of the Deadline object","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ho-thanh-und"},"content":"     * @return formatted String with date if valid, or else just return a regular String","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ho-thanh-und"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ho-thanh-und"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ho-thanh-und"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ho-thanh-und"},"content":"        return dueDate","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ho-thanh-und"},"content":"                .map(localDate -\u003e \"[D]\" + super.toString() + \" (by: \" +","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ho-thanh-und"},"content":"                        localDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\")","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ho-thanh-und"},"content":"                .orElse(\"[D]\" + super.toString() + \" (by: \" + by + \")\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ho-thanh-und"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ho-thanh-und"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ho-thanh-und"},"content":"    public String toFile() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ho-thanh-und"},"content":"        return \"D | \" + super.toFile() + \" | \" + dueDate.map(LocalDate::toString).orElse(by);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ho-thanh-und"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ho-thanh-und"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"ho-thanh-und":50}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ho-thanh-und"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ho-thanh-und"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ho-thanh-und"},"content":"import java.util.Optional;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ho-thanh-und"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ho-thanh-und"},"content":"    protected String time;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ho-thanh-und"},"content":"    protected Optional\u003cLocalDate\u003e dueTime;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ho-thanh-und"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ho-thanh-und"},"content":"     * Creates an Event object with its description and time","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ho-thanh-und"},"content":"     * @param description description","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ho-thanh-und"},"content":"     * @param time time","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ho-thanh-und"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ho-thanh-und"},"content":"    public Event(String description, String time, boolean isDone) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ho-thanh-und"},"content":"        super(description, isDone);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ho-thanh-und"},"content":"        this.time \u003d time;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ho-thanh-und"},"content":"        if(this.time.matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2}\")) { //YYYY-MM-DD","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ho-thanh-und"},"content":"            this.dueTime \u003d Optional.of(LocalDate.parse(this.time));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ho-thanh-und"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ho-thanh-und"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ho-thanh-und"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ho-thanh-und"},"content":"     *  Gives a string representation of the Event","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ho-thanh-und"},"content":"     * @return String","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ho-thanh-und"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ho-thanh-und"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ho-thanh-und"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ho-thanh-und"},"content":"        return this.dueTime","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ho-thanh-und"},"content":"                .map(localDate -\u003e \"[E]\" + super.toString() + String.format(\"(at: %s)\",","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ho-thanh-und"},"content":"                localDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")))).orElseGet(()","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ho-thanh-und"},"content":"                        -\u003e \"[E]\" + super.toString() + String.format(\"(at: %s)\", this.time));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ho-thanh-und"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ho-thanh-und"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ho-thanh-und"},"content":"    public String toFile() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ho-thanh-und"},"content":"        return \"E | \" + super.toFile();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ho-thanh-und"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ho-thanh-und"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"ho-thanh-und":38}},{"path":"src/main/java/Him.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ho-thanh-und"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ho-thanh-und"},"content":"import java.io.File;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ho-thanh-und"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ho-thanh-und"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ho-thanh-und"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ho-thanh-und"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ho-thanh-und"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ho-thanh-und"},"content":"public class Him {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ho-thanh-und"},"content":"    private ArrayList\u003cTask\u003e todos;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ho-thanh-und"},"content":"    public Him() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ho-thanh-und"},"content":"        this.todos \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ho-thanh-und"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ho-thanh-und"},"content":"    public static void print(String msg) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ho-thanh-und"},"content":"        System.out.println(msg);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ho-thanh-und"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ho-thanh-und"},"content":"    public void displayTodo() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ho-thanh-und"},"content":"        print(\"Here are your tasks: \");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ho-thanh-und"},"content":"        int i \u003d 1;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ho-thanh-und"},"content":"        for (Task todo : todos) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ho-thanh-und"},"content":"            String res \u003d System.out.printf(\"%d. %s%n\", i++, todo).toString();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ho-thanh-und"},"content":"            print(res);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ho-thanh-und"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ho-thanh-und"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ho-thanh-und"},"content":"    public void markDone(int index) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ho-thanh-und"},"content":"        print(\"Congrats! Another task down: \");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ho-thanh-und"},"content":"        todos.get(index - 1).markAsDone();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ho-thanh-und"},"content":"        print(todos.get(index - 1).toString());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ho-thanh-und"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ho-thanh-und"},"content":"    public void addToDo(String[] words, String input) throws BlankToDoException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ho-thanh-und"},"content":"        if (words.length \u003d\u003d 1) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ho-thanh-und"},"content":"            throw new BlankToDoException(\"Oh dear! The todo seems to be empty\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ho-thanh-und"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ho-thanh-und"},"content":"        Task todo \u003d new ToDo(input.substring(5), false);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ho-thanh-und"},"content":"        this.todos.add(todo);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ho-thanh-und"},"content":"        print(\"Gotcha bro! I\u0027ve added this task:\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ho-thanh-und"},"content":"        print(todo.toString());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ho-thanh-und"},"content":"        System.out.printf(\"Now you have %d task(s) in your todo-list%n\", todos.size());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ho-thanh-und"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ho-thanh-und"},"content":"    public void addDeadline(String[] words, String input) throws BlankDeadlineException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ho-thanh-und"},"content":"        if (words.length \u003c 4 || !input.contains(\" by \")) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ho-thanh-und"},"content":"            throw new BlankDeadlineException(\"The deadline description or due date can\u0027t be empty bro, you gotta \" +","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ho-thanh-und"},"content":"                    \"use this format: deadline \u003ctask\u003e by \u003cdate\u003e\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ho-thanh-und"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ho-thanh-und"},"content":"        String[] parts \u003d input.split(\" by \", 2);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ho-thanh-und"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ho-thanh-und"},"content":"            throw new BlankDeadlineException(\"The deadline description or due date can\u0027t be empty bro, you gotta \" +","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ho-thanh-und"},"content":"                    \"use this format: deadline \u003ctask\u003e by \u003cdate\u003e\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ho-thanh-und"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ho-thanh-und"},"content":"        String description \u003d parts[0].substring(9).trim();  // Remove \"deadline \"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ho-thanh-und"},"content":"        String dueDate \u003d parts[1].trim();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ho-thanh-und"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ho-thanh-und"},"content":"            throw new BlankDeadlineException(\"The deadline description or due date can\u0027t be empty bro, you gotta \" +","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ho-thanh-und"},"content":"                    \"use this format: deadline \u003ctask\u003e by \u003cdate\u003e\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ho-thanh-und"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ho-thanh-und"},"content":"        Task deadline \u003d new Deadline(description, dueDate, false);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ho-thanh-und"},"content":"        this.todos.add(deadline);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ho-thanh-und"},"content":"        print(\"Gotcha bro! I\u0027ve added this deadline:\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ho-thanh-und"},"content":"        print(deadline.toString());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ho-thanh-und"},"content":"        System.out.printf(\"Now you have %d deadline(s) in your todo-list%n\", todos.size());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ho-thanh-und"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ho-thanh-und"},"content":"    public void addEvent(String[] words, String input) throws BlankEventException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ho-thanh-und"},"content":"        if (words.length \u003c 4 || !input.contains(\" at \")) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ho-thanh-und"},"content":"            throw new BlankEventException(\"The event description or time can\u0027t be empty bro, you gotta \" +","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ho-thanh-und"},"content":"                    \"use this format: event \u003ctask\u003e at \u003ctime\u003e\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ho-thanh-und"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ho-thanh-und"},"content":"        String[] parts \u003d input.split(\" at \", 2);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ho-thanh-und"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ho-thanh-und"},"content":"            throw new BlankEventException(\"The event description or time can\u0027t be empty bro, you gotta \" +","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ho-thanh-und"},"content":"                    \"use this format: event \u003ctask\u003e at \u003ctime\u003e\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ho-thanh-und"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ho-thanh-und"},"content":"        String description \u003d parts[0].substring(6).trim();  // Remove \"event \"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ho-thanh-und"},"content":"        String eventTime \u003d parts[1].trim();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ho-thanh-und"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ho-thanh-und"},"content":"            throw new BlankEventException(\"The event description or time can\u0027t be empty bro, you gotta \" +","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ho-thanh-und"},"content":"                    \"use this format: event \u003ctask\u003e at \u003ctime\u003e\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ho-thanh-und"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ho-thanh-und"},"content":"        Task event \u003d new Event(description, eventTime, false);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ho-thanh-und"},"content":"        this.todos.add(event);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ho-thanh-und"},"content":"        print(\"Gotcha bro! I\u0027ve added this event:\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ho-thanh-und"},"content":"        print(event.toString());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ho-thanh-und"},"content":"        System.out.printf(\"Now you have %d event(s) in your todo-list%n\", todos.size());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ho-thanh-und"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ho-thanh-und"},"content":"    public void deleteToDo(int index) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ho-thanh-und"},"content":"        Task deleted \u003d todos.get(index - 1);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ho-thanh-und"},"content":"        this.todos.remove(index - 1);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ho-thanh-und"},"content":"        print(\"No worries! I\u0027ll remove that for you: \");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ho-thanh-und"},"content":"        print(deleted.toString());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ho-thanh-und"},"content":"        System.out.printf(\"Now you have %d task(s) in your todo-list%n\", todos.size());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ho-thanh-und"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ho-thanh-und"},"content":"    public static ArrayList\u003cTask\u003e getPreviousTasks() throws FileNotFoundException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ho-thanh-und"},"content":"        File file \u003d new File(\"data/data.txt\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ho-thanh-und"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ho-thanh-und"},"content":"        Scanner input \u003d new Scanner(file);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ho-thanh-und"},"content":"        while (input.hasNextLine()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ho-thanh-und"},"content":"            String line \u003d input.nextLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ho-thanh-und"},"content":"            String[] data \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ho-thanh-und"},"content":"            Task task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ho-thanh-und"},"content":"            switch (data[0]) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ho-thanh-und"},"content":"                case \"T\":","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ho-thanh-und"},"content":"                    task \u003d new ToDo(data[2], getBooleanFromString(data[1]));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ho-thanh-und"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ho-thanh-und"},"content":"                    break;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ho-thanh-und"},"content":"                case \"D\":","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ho-thanh-und"},"content":"                    task \u003d new Deadline(data[2], data[3], getBooleanFromString(data[1]));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ho-thanh-und"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ho-thanh-und"},"content":"                    break;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ho-thanh-und"},"content":"                case \"E\":","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ho-thanh-und"},"content":"                    task \u003d new Event(data[2], data[3], getBooleanFromString(data[1]));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ho-thanh-und"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ho-thanh-und"},"content":"                    break;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ho-thanh-und"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ho-thanh-und"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ho-thanh-und"},"content":"        return tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ho-thanh-und"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ho-thanh-und"},"content":"    public static boolean getBooleanFromString(String s) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ho-thanh-und"},"content":"        return !s.equals(\"0\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ho-thanh-und"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ho-thanh-und"},"content":"    public static void fillFileWithTasks(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ho-thanh-und"},"content":"        FileWriter fw \u003d new FileWriter(\"data/data.txt\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ho-thanh-und"},"content":"        String accumulatedTasks \u003d \"\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ho-thanh-und"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ho-thanh-und"},"content":"            accumulatedTasks \u003d accumulatedTasks + tasks.get(i).toFile() + \"\\n\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ho-thanh-und"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ho-thanh-und"},"content":"        fw.write(accumulatedTasks);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ho-thanh-und"},"content":"        fw.close();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ho-thanh-und"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ho-thanh-und"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ho-thanh-und"},"content":"        Him him \u003d new Him();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ho-thanh-und"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ho-thanh-und"},"content":"            him.todos \u003d getPreviousTasks();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ho-thanh-und"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ho-thanh-und"},"content":"            // Ignore file not found case, just start with an empty task list","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"ho-thanh-und"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"ho-thanh-und"},"content":"        print(\"Hello! I\u0027m Him\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ho-thanh-und"},"content":"        print(\"How can I help you?\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"ho-thanh-und"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ho-thanh-und"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ho-thanh-und"},"content":"            while (true) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"ho-thanh-und"},"content":"                String input \u003d scanner.nextLine();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"ho-thanh-und"},"content":"                String[] words \u003d input.split(\" \");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"ho-thanh-und"},"content":"                String fstWord \u003d words[0];","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"ho-thanh-und"},"content":"                if (input.equals(\"thank you\")) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"ho-thanh-und"},"content":"                    print(\"You\u0027re welcome, kind individual!\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"ho-thanh-und"},"content":"                    try {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"ho-thanh-und"},"content":"                        fillFileWithTasks(him.todos);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"ho-thanh-und"},"content":"                    } catch (IOException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"ho-thanh-und"},"content":"                        print(\"Unable to save the file \u0027data.txt\u0027\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"ho-thanh-und"},"content":"                    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"ho-thanh-und"},"content":"                    break;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"ho-thanh-und"},"content":"                } else if (input.equals(\"list\")) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"ho-thanh-und"},"content":"                    him.displayTodo();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"ho-thanh-und"},"content":"                } else if (fstWord.equals(\"done\")) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"ho-thanh-und"},"content":"                    int num \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"ho-thanh-und"},"content":"                    him.markDone(num);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"ho-thanh-und"},"content":"                } else if (fstWord.equals(\"todo\")) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"ho-thanh-und"},"content":"                    try {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"ho-thanh-und"},"content":"                        him.addToDo(words, input);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"ho-thanh-und"},"content":"                    } catch (BlankToDoException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"ho-thanh-und"},"content":"                        print(e.getMessage());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"ho-thanh-und"},"content":"                    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"ho-thanh-und"},"content":"                } else if (fstWord.equals(\"deadline\")) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"ho-thanh-und"},"content":"                    try {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"ho-thanh-und"},"content":"                        him.addDeadline(words, input);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"ho-thanh-und"},"content":"                    } catch (BlankDeadlineException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"ho-thanh-und"},"content":"                        print(e.getMessage());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"ho-thanh-und"},"content":"                    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"ho-thanh-und"},"content":"                } else if (fstWord.equals(\"event\")) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"ho-thanh-und"},"content":"                    try {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"ho-thanh-und"},"content":"                        him.addEvent(words, input);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"ho-thanh-und"},"content":"                    } catch (BlankEventException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"ho-thanh-und"},"content":"                        print(e.getMessage());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"ho-thanh-und"},"content":"                    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"ho-thanh-und"},"content":"                } else if (fstWord.equals(\"delete\")) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"ho-thanh-und"},"content":"                    int deleteNum \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"ho-thanh-und"},"content":"                    him.deleteToDo(deleteNum);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"ho-thanh-und"},"content":"                } else {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"ho-thanh-und"},"content":"                    print(\"Sorry, I don\u0027t know what that means!\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"ho-thanh-und"},"content":"                }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"ho-thanh-und"},"content":"            }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"ho-thanh-und"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"ho-thanh-und"},"content":"            // Handle Ctrl+C gracefully","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"ho-thanh-und"},"content":"            print(\"Glad to have helped!\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"ho-thanh-und"},"content":"        } finally {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"ho-thanh-und"},"content":"            scanner.close();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"ho-thanh-und"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"ho-thanh-und"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"ho-thanh-und"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"ho-thanh-und":215}},{"path":"src/main/java/HimException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ho-thanh-und"},"content":"public class HimException extends Exception {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ho-thanh-und"},"content":"    public HimException(String msg) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ho-thanh-und"},"content":"        super(msg);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ho-thanh-und"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ho-thanh-und"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"ho-thanh-und":5}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ho-thanh-und"},"content":"public class Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ho-thanh-und"},"content":"    protected String description;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ho-thanh-und"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ho-thanh-und"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ho-thanh-und"},"content":"     * Creates a new task with its description and is set to false as default","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ho-thanh-und"},"content":"     * @param description is the description of the task (input from user)","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ho-thanh-und"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ho-thanh-und"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ho-thanh-und"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ho-thanh-und"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ho-thanh-und"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ho-thanh-und"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ho-thanh-und"},"content":"     * Retrieves the icon of the task","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ho-thanh-und"},"content":"     * @return a String which stores the status icons","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ho-thanh-und"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ho-thanh-und"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ho-thanh-und"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ho-thanh-und"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ho-thanh-und"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ho-thanh-und"},"content":"     * Marks task completed by setting the boolean variable isDone to true","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ho-thanh-und"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ho-thanh-und"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ho-thanh-und"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ho-thanh-und"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ho-thanh-und"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ho-thanh-und"},"content":"     * Unmarks tasks that were previously marked as completed","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ho-thanh-und"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ho-thanh-und"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ho-thanh-und"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ho-thanh-und"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ho-thanh-und"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ho-thanh-und"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ho-thanh-und"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ho-thanh-und"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ho-thanh-und"},"content":"    public String toFile() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ho-thanh-und"},"content":"        if (this.isDone) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ho-thanh-und"},"content":"            return \"1 | \" + this.description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ho-thanh-und"},"content":"        } else {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ho-thanh-und"},"content":"            return \"0 | \" + this.description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ho-thanh-und"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ho-thanh-und"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ho-thanh-und"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"ho-thanh-und":48}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ho-thanh-und"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ho-thanh-und"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ho-thanh-und"},"content":"     * Creates a To-Do object with its description","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ho-thanh-und"},"content":"     * @param description description","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ho-thanh-und"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ho-thanh-und"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ho-thanh-und"},"content":"        super(description, isDone);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ho-thanh-und"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ho-thanh-und"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ho-thanh-und"},"content":"     * Gives a string representation of the To-do object","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ho-thanh-und"},"content":"     * @return String","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ho-thanh-und"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ho-thanh-und"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ho-thanh-und"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ho-thanh-und"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ho-thanh-und"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ho-thanh-und"},"content":"    public String toFile() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ho-thanh-und"},"content":"        return \"T | \" + super.toFile();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ho-thanh-und"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ho-thanh-und"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"ho-thanh-und":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ho-thanh-und"},"content":"todo borrow book","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ho-thanh-und"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ho-thanh-und"},"content":"deadline return book /by Friday","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ho-thanh-und"},"content":"event fns meeting /at Mon 2-4pm","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ho-thanh-und"},"content":"mark 3","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ho-thanh-und"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ho-thanh-und"},"content":"thank you","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"ho-thanh-und":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ho-thanh-und"},"content":"del ACTUAL.TXT","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ho-thanh-und"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ho-thanh-und"},"content":"java -classpath ..\\bin Him \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"ho-thanh-und":3,"-":19}}]
