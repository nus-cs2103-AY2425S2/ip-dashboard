{"authorDailyContributionsMap":{"nanditaselvaraju":[{"date":"2025-01-30","commitResults":[{"hash":"92954b46544519dcb2f0f1925793b95d87366b77","isMergeCommit":false,"messageTitle":"create new main class, add greeting remove Duke.java","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":10}}},{"hash":"919774091ad88be1a19671aefd13791c258840d8","isMergeCommit":false,"messageTitle":"added code to echo command given by the user","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":1}}},{"hash":"3cc4716216e79bd7c26f7df8e47afe80cdeed18c","isMergeCommit":false,"messageTitle":"store tasks in a list, and print out the list of tasks","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":2}}}]},{"date":"2025-01-31","commitResults":[{"hash":"b3bcd26cf0244aa34fde1cff1d73933ed157205b","isMergeCommit":false,"messageTitle":"ability to mark things as done, and uncheck if not done","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":99,"deletions":21}}}]},{"date":"2025-02-02","commitResults":[{"hash":"a7b59acdde4ccc1ae4700f4eb5a112ac0fb655e9","isMergeCommit":false,"messageTitle":"added a ToDo, Deadline and Event class, together with necessary methods","messageBody":"","tags":["Level-5","Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":77,"deletions":5}}},{"hash":"2e303e91ca9e8172943250284b9c00967a62c7d1","isMergeCommit":false,"messageTitle":"added a deleteTasks method, implemented I/O testing","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"txt":{"insertions":9,"deletions":0},"java":{"insertions":32,"deletions":8},"bat":{"insertions":1,"deletions":1},"sh":{"insertions":1,"deletions":1}}}]},{"date":"2025-02-07","commitResults":[{"hash":"b6c3e8d1e7522abac5b39639b3027eeda503367c","isMergeCommit":false,"messageTitle":"Implement task storage, auto-save and load tasks from disk","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{"java":{"insertions":87,"deletions":26}}},{"hash":"df70b4922434bcf3ac88021f203ee47222b0fb3b","isMergeCommit":false,"messageTitle":"no message","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0}}}]},{"date":"2025-02-14","commitResults":[{"hash":"439bfd0144ce12f7ee8cf9dfd73b085ca65e35eb","isMergeCommit":false,"messageTitle":"Update chatbot to use Date, Time format","messageBody":"Code is still not giving out the dates in the right format, still have corrections to be done\n","tags":["Level-8"],"fileTypesAndContributionMap":{"txt":{"insertions":13,"deletions":6},"java":{"insertions":71,"deletions":17}}}]},{"date":"2025-02-20","commitResults":[{"hash":"61bfd89c1dac7e7d02ea565f504513d6bdff499f","isMergeCommit":false,"messageTitle":"Improve code structure with OOP principles and add ResetCommand   - Refactored the codebase to follow OOP principles by extracting closely related code into separate classes:     - Created `Ui` class to handle user interactions.     - Created `Storage` class to manage file I/O operations.     - Created `Parser` class to interpret user commands.     - Created `TaskList` class to manage the list of tasks.     - Introduced `Command` classes (e.g., `MarkCommand`, `UnmarkCommand`, `AddTodoCommand`, etc.) to encapsulate command logic.   - Added `ResetCommand` to allow users to reset the task list at the start of the program:       - Prompts the user with \"Do you want to reset the task list? (yes/no): \".       - Clears the task list and storage file if the user inputs `yes`.       - Preserves the task list if the user inputs `no`.   - Ensured backward compatibility with existing functionality while adding new features.","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"txt":{"insertions":7,"deletions":13},"java":{"insertions":461,"deletions":221}}},{"hash":"21800dea57ee146e92ae2701f6067c6bedb43ff5","isMergeCommit":false,"messageTitle":"Revert \"Improve code structure with OOP principles and add ResetCommand\"","messageBody":"This reverts commit 61bfd89c1dac7e7d02ea565f504513d6bdff499f.\n","fileTypesAndContributionMap":{"txt":{"insertions":13,"deletions":7},"java":{"insertions":221,"deletions":461}}}]},{"date":"2025-02-22","commitResults":[{"hash":"a51cb3cac48b92502882df38cfca26f8e644154c","isMergeCommit":false,"messageTitle":"Refactor: Organise classes into suitable Java packages.","messageBody":"Before organising into packages, there was minimal code maintainability and scalability. To improve the structure, divide the classes into suitable packages:\n   - bork.core\n   - bork.command\n   - bork.task\n   - bork.ui\n   - bork.storage\n   - bork.exception\nThis refactoring improves code organization, adheres to OOP principles, and makes the project more maintainable and scalable.\n","tags":["A-Packages"],"fileTypesAndContributionMap":{"txt":{"insertions":11,"deletions":1},"java":{"insertions":124,"deletions":32},"sh":{"insertions":0,"deletions":0}}}]},{"date":"2025-02-23","commitResults":[{"hash":"26de6fa145f6b30cf4e44e73bcff41728aa30a9c","isMergeCommit":true,"messageTitle":"Merge branch \u0027add-gradle-support\u0027","messageBody":"* add-gradle-support:\n  build.gradle: Prevent generating a second JAR file\n  Bump gradle and lib version\n  Add Gradle support\n","fileTypesAndContributionMap":{}},{"hash":"1f2c13daceea4fbe93ac1d646a39c2494a005b0e","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-8\u0027","messageBody":"* branch-Level-8:\n  Refactor: Organise classes into suitable Java packages.\n  Improve code structure with OOP principles and add ResetCommand   - Refactored the codebase to follow OOP principles by extracting closely related code into separate classes:     - Created `Ui` class to handle user interactions.     - Created `Storage` class to manage file I/O operations.     - Created `Parser` class to interpret user commands.     - Created `TaskList` class to manage the list of tasks.     - Introduced `Command` classes (e.g., `MarkCommand`, `UnmarkCommand`, `AddTodoCommand`, etc.) to encapsulate command logic.   - Added `ResetCommand` to allow users to reset the task list at the start of the program:       - Prompts the user with \"Do you want to reset the task list? (yes/no): \".       - Clears the task list and storage file if the user inputs `yes`.       - Preserves the task list if the user inputs `no`.   - Ensured backward compatibility with existing functionality while adding new features.\n  Update chatbot to use Date, Time format\n","fileTypesAndContributionMap":{}}]},{"date":"2025-02-25","commitResults":[{"hash":"be1eb9ace9703b57cc536f97bdcb6d904b6e0312","isMergeCommit":true,"messageTitle":"Test: Add JUnit tests for TaskList and Storage classes","messageBody":"To ensure reliability of the code, add JUnit tests for two non-trivial methods:\n   1. TaskList: Tested the add and remove methods to verify task management functionality\n   2. Storage: Tested the save and load methods to ensure that tasks are correctly persisted and retrieved\n","tags":["A-Jar","A-JUnit"],"fileTypesAndContributionMap":{}},{"hash":"6e0876469c95cd4d88bcab56d22192ae0982afcf","isMergeCommit":false,"messageTitle":"Add JavaDoc comments to improve code documentation","messageBody":"Adding JavaDoc comments enhances code readability and maintainability by providing clear explanations of classes, methods, and parameters. This improves understanding for developers working on the codebase and ensures consistency in documentation.\n\nLet\u0027s ensure that all public methods include meaningful descriptions, parameter details, and return values where applicable.\n","tags":["A-JavaDoc","A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":332,"deletions":0}}}]},{"date":"2025-02-26","commitResults":[{"hash":"82e5ad7bb2c0cd5eda2398d73c09a097bd6c4b62","isMergeCommit":false,"messageTitle":"Feature: Add find command to search tasks by keyword","messageBody":"Users can now search for tasks containing a specific keyword in their descriptions using the find command.\nThe implementation includes:\n   - A new FindCommand class to handle the search logic.\n   - Updates to the Parser class to recognise the find command.\n   - A new method in the Ui class to display matching tasks.\nThis feature improves usability by allowing users to quickly locate tasks based on keywords.\n","tags":["Level-9"],"fileTypesAndContributionMap":{"java":{"insertions":69,"deletions":0}}}]},{"date":"2025-02-27","commitResults":[{"hash":"b9feeb67afb7137cdd818f91898e6579cbe90dd3","isMergeCommit":false,"messageTitle":"Fix coding style violations and add Javadoc comments","messageBody":"- Added missing Javadoc comments to all classes and methods.\n- Reordered imports to follow lexicographical order as per Checkstyle rules.\n- Fixed indentation issues in switch cases and method blocks.\n- Replaced wildcard imports with explicit static imports in test classes.\n- Wrapped long lines to adhere to the 120-character limit.\n- Ensured proper spacing around keywords (e.g., if statements).\n\nCheckstyle now passes without errors.\n","tags":["A-Checkstyle"],"fileTypesAndContributionMap":{"gradle":{"insertions":5,"deletions":0},"java":{"insertions":273,"deletions":114}}}]},{"date":"2025-02-28","commitResults":[{"hash":"23350f8bd488cafa2591107c9edf3cb66412f904","isMergeCommit":false,"messageTitle":"ðŸ’» Add JavaFX GUI for chatbot interaction","messageBody":"- Implemented JavaFX-based GUI for the chatbot.\n- Followed SE-EDU JavaFX tutorial up to Part 4, and changed the colours of the backgrounds and labels.\n- Ensured a separate Launcher class for compatibility.\n- Users can now interact with the chatbot through the graphical interface. ðŸš€\n","fileTypesAndContributionMap":{"gradle":{"insertions":15,"deletions":1},"fxml":{"insertions":41,"deletions":0},"java":{"insertions":181,"deletions":0}}},{"hash":"1d7279257e9468bde3aa297acbb65cf6a42fe79c","isMergeCommit":false,"messageTitle":"Fix GUI response handling and display welcome message on start up","messageBody":"- Fixed issue where GUI was mirroring user input instead of processing it through Bork.\n- Ensured that the welcome message is displayed automatically when the program starts.\n","tags":["Level-10"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":0},"java":{"insertions":139,"deletions":87}}},{"hash":"cc5d28f960e895d1061916e356e95f0d113d0e08","isMergeCommit":false,"messageTitle":"Feature: Add assertions to enforce critical assumptions in ToDo class","messageBody":"Use Java\u0027s assert feature to document and enforce key assumptions in the ToDo class. These assertions help catch potential issues early and ensure data integrity.\n- Add an assertion in the constructor to verify that the task description is not null or empty.\n- Include assertions in `toFileString()` and `toString()` methods  to ensure that the description is not null before processing.\n- Improve overall code robustness by validating essential conditions at runtime during development.\n\nThese assertions help prevent unexpected behaviour and improve code reliability.\n","fileTypesAndContributionMap":{"java":{"insertions":85,"deletions":0}}},{"hash":"2140fa290f846bac9eaafa0f9982a84b2990645a","isMergeCommit":false,"messageTitle":"Refactor: Task class to improve code quality and maintainability","messageBody":"- Enforced encapsulation by making \u0027description\u0027 private final.\n- Introduced a reusable DateTimeFormatter to avoid duplication.\n- Improved error handling in fromFileString() by throwing IllegalArgumentException instead of returning null.\n- Extracted helper methods (parseDeadline, parseEvent) to improve readability and maintainability.\n- Followed Code Quality principles for better structure and single responsibility.\n\nThis refactor ensures better error handling, readability, and future extensibility.\n","fileTypesAndContributionMap":{"java":{"insertions":244,"deletions":48}}},{"hash":"9e20e323842866c977436c76effedfafcd1094e6","isMergeCommit":true,"messageTitle":"Merge pull request #3 from nanditaselvaraju/branch-A-Assertions","messageBody":"Feature: Add assertions to enforce critical assumptions in ToDo class","fileTypesAndContributionMap":{}},{"hash":"6c646d4be83c1ac69cc704c9df86d3a1839d5e7f","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into branch-A-CodeQuality","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"b767c5c6f71f1c0608731119c85591338b138c27","isMergeCommit":true,"messageTitle":"Merge pull request #2 from nanditaselvaraju/branch-A-CodeQuality","messageBody":"Refactor: Task class to improve code quality and maintainability","fileTypesAndContributionMap":{}}]}]},"authorFileTypeContributionMap":{"nanditaselvaraju":{"java":1789,"md":0,"fxml":41,"sh":1,"bat":1,"gradle":21,"txt":23}},"authorContributionVariance":{"nanditaselvaraju":55156.35},"authorDisplayNameMap":{"nanditaselvaraju":"CS2103T-T14-2 SELV..DITA"}}
