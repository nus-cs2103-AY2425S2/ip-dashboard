[{"path":"input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nanditaselvaraju"},"content":"todo buy groceries","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nanditaselvaraju"},"content":"todo read book","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nanditaselvaraju"},"content":"deadline submit report /by 2025-10-10-1800","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nanditaselvaraju"},"content":"event team meeting /from 2025-10-10 1400 /to 2025-10-10 1500","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nanditaselvaraju"},"content":"list","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nanditaselvaraju"},"content":"mark 1","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nanditaselvaraju"},"content":"unmark 2","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nanditaselvaraju"},"content":"list","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nanditaselvaraju"},"content":"delete 3","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nanditaselvaraju"},"content":"list","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nanditaselvaraju"},"content":"bye","lastModifiedDate":"2025-02-22","isFullCredit":false}],"authorContributionMap":{"nanditaselvaraju":11}},{"path":"src/main/java/bork/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nanditaselvaraju"},"content":"package bork.command;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.task.Task;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.task.TaskList;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.task.Deadline;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.ui.UserInterface;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.storage.Storage;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.exception.BorkException;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nanditaselvaraju"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nanditaselvaraju"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nanditaselvaraju"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nanditaselvaraju"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nanditaselvaraju"},"content":"    private String description;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nanditaselvaraju"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nanditaselvaraju"},"content":"     * Constructs an {@code AddDeadlineCommand} by parsing the provided arguments.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nanditaselvaraju"},"content":"     * The arguments must contain a description and a deadline in the format {@code yyyy-MM-dd HHmm}.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nanditaselvaraju"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param arguments The command arguments containing the task description and deadline.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nanditaselvaraju"},"content":"     * @throws BorkException If the arguments are missing or the date format is incorrect.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nanditaselvaraju"},"content":"    public AddDeadlineCommand(String arguments) throws BorkException {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nanditaselvaraju"},"content":"        if (arguments.isEmpty() || !arguments.contains(\"/by\")) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nanditaselvaraju"},"content":"            throw new BorkException(\"Invalid format! Use: deadline \u003cdescription\u003e /by \u003cyyyy-MM-dd HHmm\u003e\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nanditaselvaraju"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nanditaselvaraju"},"content":"        String[] parts \u003d arguments.split(\" /by \", 2);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nanditaselvaraju"},"content":"        this.description \u003d parts[0];","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nanditaselvaraju"},"content":"        try {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nanditaselvaraju"},"content":"            this.deadline \u003d LocalDateTime.parse(parts[1], DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nanditaselvaraju"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nanditaselvaraju"},"content":"            throw new BorkException(\"Invalid date format! Use: yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nanditaselvaraju"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nanditaselvaraju"},"content":"     * Executes the command by added a {@link Deadline} task to the task list.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nanditaselvaraju"},"content":"     * The new task is then displayed to the user and saved to storage.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nanditaselvaraju"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param tasks The list of tasks to operate on.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param ui The user interface to display messages.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param storage The storage system to save or load tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nanditaselvaraju"},"content":"     * @throws BorkException If an error occurs while saving the task.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nanditaselvaraju"},"content":"    @Override","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nanditaselvaraju"},"content":"    public void execute(TaskList tasks, UserInterface ui, Storage storage) throws BorkException {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nanditaselvaraju"},"content":"        Task task \u003d new Deadline(description, deadline);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nanditaselvaraju"},"content":"        tasks.add(task);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nanditaselvaraju"},"content":"        ui.showTaskAdded(task, tasks.size());","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nanditaselvaraju"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nanditaselvaraju"},"content":"}","lastModifiedDate":"2025-02-20","isFullCredit":false}],"authorContributionMap":{"nanditaselvaraju":54}},{"path":"src/main/java/bork/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nanditaselvaraju"},"content":"package bork.command;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.task.Task;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.task.TaskList;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.task.Event;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.ui.UserInterface;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.storage.Storage;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.exception.BorkException;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nanditaselvaraju"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nanditaselvaraju"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nanditaselvaraju"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nanditaselvaraju"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nanditaselvaraju"},"content":"    private String description;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nanditaselvaraju"},"content":"    private LocalDateTime start;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nanditaselvaraju"},"content":"    private LocalDateTime end;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nanditaselvaraju"},"content":"     * Constructs an {@code AddEventCommand} by parsing the provided arguments.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nanditaselvaraju"},"content":"     * The arguments must contain a description, a start time, and an end time in the format {@code yyyy-MM-dd HHmm}.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nanditaselvaraju"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param arguments The command arguments containing the task description, start time, and end time.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nanditaselvaraju"},"content":"     * @throws BorkException If the arguments are missing or the date format is incorrect.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nanditaselvaraju"},"content":"    public AddEventCommand(String arguments) throws BorkException {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nanditaselvaraju"},"content":"        if (arguments.isEmpty() || !arguments.contains(\"/from\") || !arguments.contains(\"/to\")) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nanditaselvaraju"},"content":"            throw new BorkException(\"Invalid format! Use: event \u003cdescription\u003e /from \u003cyyyy-MM-dd HHmm\u003e /to \u003cyyyy-MM-dd HHmm\u003e\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nanditaselvaraju"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nanditaselvaraju"},"content":"        String[] parts \u003d arguments.split(\" /from \", 2);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nanditaselvaraju"},"content":"        this.description \u003d parts[0];","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nanditaselvaraju"},"content":"        String[] timeParts \u003d parts[1].split(\" /to \", 2);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nanditaselvaraju"},"content":"        try {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nanditaselvaraju"},"content":"            this.start \u003d LocalDateTime.parse(timeParts[0], DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nanditaselvaraju"},"content":"            this.end \u003d LocalDateTime.parse(timeParts[1], DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nanditaselvaraju"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nanditaselvaraju"},"content":"            throw new BorkException(\"Invalid date format! Use: yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nanditaselvaraju"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nanditaselvaraju"},"content":"     * Executes the command by adding an {@link Event} task to the task list.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nanditaselvaraju"},"content":"     * The new task is then displayed to the user and saved to storage.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nanditaselvaraju"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param tasks The list of tasks to operate on.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param ui The user interface to display messages.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param storage The storage system to save or load tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nanditaselvaraju"},"content":"     * @throws BorkException If an error occurs while saving the task.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nanditaselvaraju"},"content":"    @Override","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nanditaselvaraju"},"content":"    public void execute(TaskList tasks, UserInterface ui, Storage storage) throws BorkException {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nanditaselvaraju"},"content":"        Task task \u003d new Event(description, start, end);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nanditaselvaraju"},"content":"        tasks.add(task);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nanditaselvaraju"},"content":"        ui.showTaskAdded(task, tasks.size());","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nanditaselvaraju"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nanditaselvaraju"},"content":"}","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false}],"authorContributionMap":{"nanditaselvaraju":58}},{"path":"src/main/java/bork/command/AddToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nanditaselvaraju"},"content":"package bork.command;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.task.Task;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.task.TaskList;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.task.ToDo;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.ui.UserInterface;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.storage.Storage;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.exception.BorkException;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nanditaselvaraju"},"content":"public class AddToDoCommand extends Command {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nanditaselvaraju"},"content":"    private String description;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nanditaselvaraju"},"content":"     * Constructs an {@code AddToDoCommand} by parsing the provided arguemnts.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nanditaselvaraju"},"content":"     * The argument must contain a description of the ToDo task.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nanditaselvaraju"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param arguments The command arguments containing the description.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nanditaselvaraju"},"content":"     * @throws BorkException If the description is empty.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nanditaselvaraju"},"content":"    public AddToDoCommand(String arguments) throws BorkException {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nanditaselvaraju"},"content":"        if(arguments.isEmpty()) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nanditaselvaraju"},"content":"            throw new BorkException(\"Description of a todo cannot be empty.\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nanditaselvaraju"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nanditaselvaraju"},"content":"        this.description \u003d arguments;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nanditaselvaraju"},"content":"     * Executes the command by adding a {@link ToDo} task to the task list.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nanditaselvaraju"},"content":"     * The new task is then displayed to the user and saved to storage.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nanditaselvaraju"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param tasks The list of tasks to operate on.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param ui The user interface to display messages.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param storage The storage system to save or load tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nanditaselvaraju"},"content":"     * @throws BorkException If an error occurs while saving the task.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nanditaselvaraju"},"content":"    @Override","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nanditaselvaraju"},"content":"    public void execute(TaskList tasks, UserInterface ui, Storage storage) throws BorkException {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nanditaselvaraju"},"content":"        Task task \u003d new ToDo(description);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nanditaselvaraju"},"content":"        tasks.add(task);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nanditaselvaraju"},"content":"        ui.showTaskAdded(task, tasks.size());","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nanditaselvaraju"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nanditaselvaraju"},"content":"}","lastModifiedDate":"2025-02-20","isFullCredit":false}],"authorContributionMap":{"nanditaselvaraju":43}},{"path":"src/main/java/bork/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nanditaselvaraju"},"content":"package bork.command;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.task.TaskList;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.ui.UserInterface;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.storage.Storage;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.exception.BorkException;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nanditaselvaraju"},"content":"public abstract class Command {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nanditaselvaraju"},"content":"     * Executes the command, performing actions on the given task list,","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nanditaselvaraju"},"content":"     * interacting with the user interface, and potentially modifying storage.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nanditaselvaraju"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param tasks The list of tasks to operate on.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param ui The user interface to display messages.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param storage The storage system to save or load tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nanditaselvaraju"},"content":"     * @throws BorkException If an error occurs during execution.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nanditaselvaraju"},"content":"    public abstract void execute(TaskList tasks, UserInterface ui, Storage storage) throws BorkException;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nanditaselvaraju"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nanditaselvaraju"},"content":"        return false;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nanditaselvaraju"},"content":"}","lastModifiedDate":"2025-02-20","isFullCredit":false}],"authorContributionMap":{"nanditaselvaraju":23}},{"path":"src/main/java/bork/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nanditaselvaraju"},"content":"package bork.command;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.task.Task;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.task.TaskList;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.ui.UserInterface;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.storage.Storage;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.exception.BorkException;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nanditaselvaraju"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nanditaselvaraju"},"content":"    private int taskIndex;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nanditaselvaraju"},"content":"     * Constructs a {@code DeleteCommand} by parsing the provided argument as a task index.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nanditaselvaraju"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param arguments The command argument containing the index of the task to delete.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nanditaselvaraju"},"content":"     * @throws BorkException If the argument is not a valid integer.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nanditaselvaraju"},"content":"    public DeleteCommand(String arguments) throws BorkException {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nanditaselvaraju"},"content":"        try {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nanditaselvaraju"},"content":"            this.taskIndex \u003d Integer.parseInt(arguments) - 1;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nanditaselvaraju"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nanditaselvaraju"},"content":"            throw new BorkException(\"Invalid bork.task number.\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nanditaselvaraju"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nanditaselvaraju"},"content":"     * Executes the command by deleting the specified task from the task list.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nanditaselvaraju"},"content":"     * The removed task is displayed to the user and the updated task list is saved.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nanditaselvaraju"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param tasks The list of tasks to operate on.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param ui The user interface to display messages.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param storage The storage system to save or load tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nanditaselvaraju"},"content":"     * @throws BorkException If the task index is out of bounds.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nanditaselvaraju"},"content":"    @Override","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nanditaselvaraju"},"content":"    public void execute(TaskList tasks, UserInterface ui, Storage storage) throws BorkException {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nanditaselvaraju"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nanditaselvaraju"},"content":"            throw new BorkException(\"Invalid bork.task number.\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nanditaselvaraju"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nanditaselvaraju"},"content":"        Task removedTask \u003d tasks.remove(taskIndex);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nanditaselvaraju"},"content":"        ui.showTaskRemoved(removedTask, tasks.size());","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nanditaselvaraju"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nanditaselvaraju"},"content":"}","lastModifiedDate":"2025-02-20","isFullCredit":false}],"authorContributionMap":{"nanditaselvaraju":44}},{"path":"src/main/java/bork/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nanditaselvaraju"},"content":"package bork.command;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.task.TaskList;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.ui.UserInterface;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.storage.Storage;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nanditaselvaraju"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nanditaselvaraju"},"content":"     * Executes the exit command by displaying a goodbye message.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nanditaselvaraju"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param tasks The list of tasks to operate on.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param ui The user interface to display messages.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param storage The storage system to save or load tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nanditaselvaraju"},"content":"    @Override","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nanditaselvaraju"},"content":"    public void execute(TaskList tasks, UserInterface ui, Storage storage) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nanditaselvaraju"},"content":"        ui.showGoodbye();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nanditaselvaraju"},"content":"     * Indicates that this command will exit the application.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nanditaselvaraju"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nanditaselvaraju"},"content":"     * @return {@code true}, indicating that the application should terminate.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nanditaselvaraju"},"content":"    @Override","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nanditaselvaraju"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nanditaselvaraju"},"content":"        return true;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nanditaselvaraju"},"content":"}","lastModifiedDate":"2025-02-20","isFullCredit":false}],"authorContributionMap":{"nanditaselvaraju":30}},{"path":"src/main/java/bork/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nanditaselvaraju"},"content":"package bork.command;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.task.TaskList;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.ui.UserInterface;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.storage.Storage;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nanditaselvaraju"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nanditaselvaraju"},"content":"     * Executes the list command by dsiaplying all tasks in the task list.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nanditaselvaraju"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param tasks The list of tasks to operate on.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param ui The user interface to display messages.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param storage The storage system to save or load tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nanditaselvaraju"},"content":"    @Override","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nanditaselvaraju"},"content":"    public void execute(TaskList tasks, UserInterface ui, Storage storage) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nanditaselvaraju"},"content":"        ui.showTaskList(tasks);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nanditaselvaraju"},"content":"}","lastModifiedDate":"2025-02-20","isFullCredit":false}],"authorContributionMap":{"nanditaselvaraju":20}},{"path":"src/main/java/bork/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nanditaselvaraju"},"content":"package bork.command;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.task.Task;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.task.TaskList;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.ui.UserInterface;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.storage.Storage;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.exception.BorkException;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nanditaselvaraju"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nanditaselvaraju"},"content":"    private int taskIndex;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nanditaselvaraju"},"content":"     * Constructs a {@code MarkCommand} by parsing the provided argument as a task index.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nanditaselvaraju"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param arguments The command argument containing the index of the task to mark as done.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nanditaselvaraju"},"content":"     * @throws BorkException If the argument is not a valid integer.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nanditaselvaraju"},"content":"    public MarkCommand(String arguments) throws BorkException {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nanditaselvaraju"},"content":"        try {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nanditaselvaraju"},"content":"            this.taskIndex \u003d Integer.parseInt(arguments) - 1;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nanditaselvaraju"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nanditaselvaraju"},"content":"            throw new BorkException(\"Invalid bork.task number.\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nanditaselvaraju"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nanditaselvaraju"},"content":"     * Executes the command by marking the specified task as done.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nanditaselvaraju"},"content":"     * The updated task status is displayed to the user and the changes are saved to storage.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nanditaselvaraju"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param tasks The list of tasks to operate on.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param ui The user interface to display messages.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param storage The storage system to save or load tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nanditaselvaraju"},"content":"     * @throws BorkException If the task index is out of bounds.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nanditaselvaraju"},"content":"    @Override","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nanditaselvaraju"},"content":"    public void execute(TaskList tasks, UserInterface ui, Storage storage) throws BorkException {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nanditaselvaraju"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nanditaselvaraju"},"content":"            throw new BorkException(\"Invalid bork.task number.\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nanditaselvaraju"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nanditaselvaraju"},"content":"        Task task \u003d tasks.get(taskIndex);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nanditaselvaraju"},"content":"        task.markAsDone();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nanditaselvaraju"},"content":"        ui.showMarkedTask(task);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nanditaselvaraju"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nanditaselvaraju"},"content":"}","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false}],"authorContributionMap":{"nanditaselvaraju":48}},{"path":"src/main/java/bork/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nanditaselvaraju"},"content":"package bork.command;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.exception.BorkException;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nanditaselvaraju"},"content":"public class Parser {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nanditaselvaraju"},"content":"     * Parses the user input and returns the corresponding Command object.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nanditaselvaraju"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param input The raw input string entered by the user.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nanditaselvaraju"},"content":"     * @return The corresponding Command object based on the input.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nanditaselvaraju"},"content":"     * @throws BorkException If the input command is not recognised.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nanditaselvaraju"},"content":"    public static Command parse(String input) throws BorkException {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nanditaselvaraju"},"content":"        String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nanditaselvaraju"},"content":"        String command \u003d parts[0].toLowerCase();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nanditaselvaraju"},"content":"        String arguments \u003d parts.length \u003e 1 ? parts[1] : \"\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nanditaselvaraju"},"content":"        switch (command) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nanditaselvaraju"},"content":"            case \"reset\":","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nanditaselvaraju"},"content":"                return new ResetCommand();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nanditaselvaraju"},"content":"            case \"bye\":","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nanditaselvaraju"},"content":"                return new ExitCommand();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nanditaselvaraju"},"content":"            case \"list\":","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nanditaselvaraju"},"content":"                return new ListCommand();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nanditaselvaraju"},"content":"            case \"mark\":","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nanditaselvaraju"},"content":"                return new MarkCommand(arguments);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nanditaselvaraju"},"content":"            case \"unmark\":","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nanditaselvaraju"},"content":"                return new UnmarkCommand(arguments);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nanditaselvaraju"},"content":"            case \"todo\":","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nanditaselvaraju"},"content":"                return new AddToDoCommand(arguments);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nanditaselvaraju"},"content":"            case \"deadline\":","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nanditaselvaraju"},"content":"                return new AddDeadlineCommand(arguments);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nanditaselvaraju"},"content":"            case \"event\":","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nanditaselvaraju"},"content":"                return new AddEventCommand(arguments);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nanditaselvaraju"},"content":"            case \"delete\":","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nanditaselvaraju"},"content":"                return new DeleteCommand(arguments);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nanditaselvaraju"},"content":"            default:","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nanditaselvaraju"},"content":"                throw new BorkException(\"Unknown bork.command.\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nanditaselvaraju"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nanditaselvaraju"},"content":"}","lastModifiedDate":"2025-02-20","isFullCredit":false}],"authorContributionMap":{"nanditaselvaraju":42}},{"path":"src/main/java/bork/command/ResetCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nanditaselvaraju"},"content":"package bork.command;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.task.TaskList;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.ui.UserInterface;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.storage.Storage;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.exception.BorkException;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nanditaselvaraju"},"content":"public class ResetCommand extends Command {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nanditaselvaraju"},"content":"     * Executes the reset command by clearing all tasks from the task list,","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nanditaselvaraju"},"content":"     * saving the empty task list to storage, and displaying a reset message to the user.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nanditaselvaraju"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param tasks The list of tasks to operate on.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param ui The user interface to display messages.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param storage The storage system to save or load tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nanditaselvaraju"},"content":"     * @throws BorkException If an error occurs while saving the task list.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nanditaselvaraju"},"content":"    @Override","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nanditaselvaraju"},"content":"    public void execute(TaskList tasks, UserInterface ui, Storage storage) throws BorkException {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nanditaselvaraju"},"content":"        tasks.reset();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nanditaselvaraju"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nanditaselvaraju"},"content":"        ui.showResetMessage();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nanditaselvaraju"},"content":"     * Indicates that this command does not exit the application.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nanditaselvaraju"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nanditaselvaraju"},"content":"     * @return {@code false}, indicating that the application should continue running.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nanditaselvaraju"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nanditaselvaraju"},"content":"        return false;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nanditaselvaraju"},"content":"}","lastModifiedDate":"2025-02-20","isFullCredit":false}],"authorContributionMap":{"nanditaselvaraju":35}},{"path":"src/main/java/bork/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nanditaselvaraju"},"content":"package bork.command;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.task.Task;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.task.TaskList;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.ui.UserInterface;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.storage.Storage;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.exception.BorkException;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nanditaselvaraju"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nanditaselvaraju"},"content":"    private int taskIndex;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nanditaselvaraju"},"content":"     * Constructs an {@code UnmarkCommand} by parsing the provided arguments.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nanditaselvaraju"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param arguments The command argument containing the index of the task to unmark.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nanditaselvaraju"},"content":"     * @throws BorkException If the argument is not a valid integer.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nanditaselvaraju"},"content":"    public UnmarkCommand(String arguments) throws BorkException {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nanditaselvaraju"},"content":"        try {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nanditaselvaraju"},"content":"            this.taskIndex \u003d Integer.parseInt(arguments) - 1;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nanditaselvaraju"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nanditaselvaraju"},"content":"            throw new BorkException(\"Invalid bork.task number.\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nanditaselvaraju"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nanditaselvaraju"},"content":"     * Executes the command by marking the specified task as not done.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nanditaselvaraju"},"content":"     * The updated task status is displayed to the user, and the changes are saved to storage.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nanditaselvaraju"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param tasks The list of tasks to operate on.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param ui The user interface to display messages.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param storage The storage system to save or load tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nanditaselvaraju"},"content":"     * @throws BorkException If the task index is out of bounds.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nanditaselvaraju"},"content":"    @Override","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nanditaselvaraju"},"content":"    public void execute(TaskList tasks, UserInterface ui, Storage storage) throws BorkException {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nanditaselvaraju"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nanditaselvaraju"},"content":"            throw new BorkException(\"Invalid bork.task number.\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nanditaselvaraju"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nanditaselvaraju"},"content":"        Task task \u003d tasks.get(taskIndex);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nanditaselvaraju"},"content":"        task.markAsNotDone();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nanditaselvaraju"},"content":"        ui.showUnmarkedTask(task);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nanditaselvaraju"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nanditaselvaraju"},"content":"}","lastModifiedDate":"2025-02-20","isFullCredit":false}],"authorContributionMap":{"nanditaselvaraju":45}},{"path":"src/main/java/bork/core/Bork.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nanditaselvaraju"},"content":"package bork.core;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.command.Command;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.command.Parser;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.task.TaskList;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.exception.BorkException;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.storage.Storage;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.ui.UserInterface;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nanditaselvaraju"},"content":"public class Bork {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nanditaselvaraju"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nanditaselvaraju"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nanditaselvaraju"},"content":"    private UserInterface ui;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nanditaselvaraju"},"content":"     * Constructs a new Bork instance.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nanditaselvaraju"},"content":"     * Initialises the user interface, loads tasks from storage, and handles","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nanditaselvaraju"},"content":"     * any potential loading errors.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nanditaselvaraju"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param filePath The file path where task data is stored.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nanditaselvaraju"},"content":"    public Bork(String filePath) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nanditaselvaraju"},"content":"        ui \u003d new UserInterface();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nanditaselvaraju"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nanditaselvaraju"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nanditaselvaraju"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nanditaselvaraju"},"content":"        } catch (BorkException e) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nanditaselvaraju"},"content":"            ui.showLoadingError();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nanditaselvaraju"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nanditaselvaraju"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nanditaselvaraju"},"content":"     * Runs the Bork application.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nanditaselvaraju"},"content":"     * Displays a welcome message and continuously reads user commands","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nanditaselvaraju"},"content":"     * until an exit command is encountered.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nanditaselvaraju"},"content":"    public void run() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nanditaselvaraju"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nanditaselvaraju"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nanditaselvaraju"},"content":"        while (!isExit) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nanditaselvaraju"},"content":"            try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nanditaselvaraju"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nanditaselvaraju"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nanditaselvaraju"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nanditaselvaraju"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nanditaselvaraju"},"content":"            } catch (BorkException e) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nanditaselvaraju"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nanditaselvaraju"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nanditaselvaraju"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nanditaselvaraju"},"content":"     * the main methods to start the Bork application.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nanditaselvaraju"},"content":"     * Initialises and runs the application with the specified file path.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nanditaselvaraju"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param args Command line arguments","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nanditaselvaraju"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nanditaselvaraju"},"content":"        new Bork(\"data/bork.txt\").run();","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nanditaselvaraju"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"nanditaselvaraju":64}},{"path":"src/main/java/bork/exception/BorkException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nanditaselvaraju"},"content":"package bork.exception;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nanditaselvaraju"},"content":"public class BorkException extends Exception {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nanditaselvaraju"},"content":"    public BorkException(String message) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nanditaselvaraju"},"content":"        super(message);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nanditaselvaraju"},"content":"}","lastModifiedDate":"2025-02-20","isFullCredit":false}],"authorContributionMap":{"nanditaselvaraju":7}},{"path":"src/main/java/bork/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nanditaselvaraju"},"content":"package bork.storage;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.task.Task;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.task.TaskList;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.exception.BorkException;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nanditaselvaraju"},"content":"import java.io.File;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nanditaselvaraju"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nanditaselvaraju"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nanditaselvaraju"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nanditaselvaraju"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nanditaselvaraju"},"content":"import java.util.List;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nanditaselvaraju"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nanditaselvaraju"},"content":"public class Storage {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nanditaselvaraju"},"content":"    private String filePath;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nanditaselvaraju"},"content":"    public Storage (String filePath) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nanditaselvaraju"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nanditaselvaraju"},"content":"     * Loads tasks from the specified file.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nanditaselvaraju"},"content":"     * If the file does not exist, an empty list is returned.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nanditaselvaraju"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nanditaselvaraju"},"content":"     * @return A list of tasks loaded from the file.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nanditaselvaraju"},"content":"     * @throws BorkException If an error occurs while loading tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nanditaselvaraju"},"content":"    public List\u003cTask\u003e load() throws BorkException {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nanditaselvaraju"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nanditaselvaraju"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nanditaselvaraju"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nanditaselvaraju"},"content":"            new File(\"data\").mkdirs();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nanditaselvaraju"},"content":"            return tasks;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nanditaselvaraju"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nanditaselvaraju"},"content":"        try (Scanner scanner \u003d new Scanner(file)) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nanditaselvaraju"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nanditaselvaraju"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nanditaselvaraju"},"content":"                Task task \u003d Task.fromFileString(line);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nanditaselvaraju"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nanditaselvaraju"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nanditaselvaraju"},"content":"                }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nanditaselvaraju"},"content":"            }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nanditaselvaraju"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nanditaselvaraju"},"content":"            throw new BorkException(\"Error loading tasks from file.\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nanditaselvaraju"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nanditaselvaraju"},"content":"        return tasks;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nanditaselvaraju"},"content":"     * Saves the given list of tasks to the file.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nanditaselvaraju"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param tasks The TaskList containing tasks to be saved.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nanditaselvaraju"},"content":"     * @throws BorkException If an error occurs while writing to the file.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nanditaselvaraju"},"content":"    public void save(TaskList tasks) throws BorkException {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nanditaselvaraju"},"content":"        try (FileWriter writer \u003d new FileWriter(filePath)) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nanditaselvaraju"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nanditaselvaraju"},"content":"                writer.write(task.toFileString() + System.lineSeparator());","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nanditaselvaraju"},"content":"            }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nanditaselvaraju"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nanditaselvaraju"},"content":"            throw new BorkException(\"Error saving tasks to file.\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nanditaselvaraju"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nanditaselvaraju"},"content":"}","lastModifiedDate":"2025-02-20","isFullCredit":false}],"authorContributionMap":{"nanditaselvaraju":66}},{"path":"src/main/java/bork/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nanditaselvaraju"},"content":"package bork.task;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nanditaselvaraju"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nanditaselvaraju"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nanditaselvaraju"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nanditaselvaraju"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nanditaselvaraju"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nanditaselvaraju"},"content":"    private static final DateTimeFormatter OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mm a\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nanditaselvaraju"},"content":"     * Constructs a Deadline task with the given description and deadline.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nanditaselvaraju"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param deadline The date and time by which the task must be completed.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nanditaselvaraju"},"content":"    public Deadline(String description, LocalDateTime deadline) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nanditaselvaraju"},"content":"        super(description);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nanditaselvaraju"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nanditaselvaraju"},"content":"     * Converts the Deadline task to a formatted string suitable for file storage.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nanditaselvaraju"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nanditaselvaraju"},"content":"     * @return A string representation of the task in a format suitable for saving to a file.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nanditaselvaraju"},"content":"    @Override","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nanditaselvaraju"},"content":"    public String toFileString() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nanditaselvaraju"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + deadline.format(INPUT_FORMAT);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nanditaselvaraju"},"content":"     * Returns a string representation of the Deadline task.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nanditaselvaraju"},"content":"     * Includes the task type, status, description, and formatted deadline.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nanditaselvaraju"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nanditaselvaraju"},"content":"     * @return A string representation of the Deadline task.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nanditaselvaraju"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nanditaselvaraju"},"content":"    public String toString() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nanditaselvaraju"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadline.format(OUTPUT_FORMAT) + \")\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nanditaselvaraju"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"nanditaselvaraju":42}},{"path":"src/main/java/bork/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nanditaselvaraju"},"content":"package bork.task;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nanditaselvaraju"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nanditaselvaraju"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nanditaselvaraju"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nanditaselvaraju"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nanditaselvaraju"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nanditaselvaraju"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nanditaselvaraju"},"content":"    private static final DateTimeFormatter OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mm a\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nanditaselvaraju"},"content":"     * Constructs an Event task with the given description, start time, and end time.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nanditaselvaraju"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param start The start time of the event.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param end The end time of the event.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nanditaselvaraju"},"content":"    public Event(String description, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nanditaselvaraju"},"content":"        super(description);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nanditaselvaraju"},"content":"        this.start \u003d start;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nanditaselvaraju"},"content":"        this.end \u003d end;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nanditaselvaraju"},"content":"    @Override","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nanditaselvaraju"},"content":"    public String toFileString() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nanditaselvaraju"},"content":"        String startStr \u003d (start !\u003d null) ? start.format(INPUT_FORMAT) : \"N/A\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nanditaselvaraju"},"content":"        String endStr \u003d (end !\u003d null) ? end.format(INPUT_FORMAT) : \"N/A\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nanditaselvaraju"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + start.format(INPUT_FORMAT) + \" | \" + end.format(INPUT_FORMAT);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nanditaselvaraju"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nanditaselvaraju"},"content":"    public String toString() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nanditaselvaraju"},"content":"        String startStr \u003d (start !\u003d null) ? start.format(OUTPUT_FORMAT) : \"N/A\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nanditaselvaraju"},"content":"        String endStr \u003d (end !\u003d null) ? end.format(OUTPUT_FORMAT) : \"N/A\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nanditaselvaraju"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start.format(OUTPUT_FORMAT) + \" to: \" + end.format(OUTPUT_FORMAT) + \")\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nanditaselvaraju"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"nanditaselvaraju":38}},{"path":"src/main/java/bork/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nanditaselvaraju"},"content":"package bork.task;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nanditaselvaraju"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nanditaselvaraju"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nanditaselvaraju"},"content":"public abstract class Task {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nanditaselvaraju"},"content":"    protected String description;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nanditaselvaraju"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nanditaselvaraju"},"content":"     * Constructs a Task with the specified description.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nanditaselvaraju"},"content":"     * The task is initially not marked as done.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nanditaselvaraju"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nanditaselvaraju"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nanditaselvaraju"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nanditaselvaraju"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nanditaselvaraju"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nanditaselvaraju"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nanditaselvaraju"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nanditaselvaraju"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nanditaselvaraju"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nanditaselvaraju"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nanditaselvaraju"},"content":"     * Returns the status of the task.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nanditaselvaraju"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nanditaselvaraju"},"content":"     * @return \"X\" if the task is done, otherwise a space (\" \").","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nanditaselvaraju"},"content":"    public String getStatus() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nanditaselvaraju"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nanditaselvaraju"},"content":"     * Creates a Task object from a string representation stored in a file.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nanditaselvaraju"},"content":"     * The method parses the task type and details from the file format.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nanditaselvaraju"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param fileString The string representation of the task from a file.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nanditaselvaraju"},"content":"     * @return A corresponding Task object, or {@code null} if the format is invalid.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nanditaselvaraju"},"content":"    public static Task fromFileString(String fileString) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nanditaselvaraju"},"content":"        String[] parts \u003d fileString.split(\" \\\\| \");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nanditaselvaraju"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nanditaselvaraju"},"content":"            return null;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nanditaselvaraju"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nanditaselvaraju"},"content":"        Task task;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nanditaselvaraju"},"content":"        switch (parts[0]) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nanditaselvaraju"},"content":"            case \"T\":","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nanditaselvaraju"},"content":"                task \u003d new ToDo(parts[2]);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nanditaselvaraju"},"content":"                break;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nanditaselvaraju"},"content":"            case \"D\":","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nanditaselvaraju"},"content":"                if (parts.length \u003c 4) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nanditaselvaraju"},"content":"                    return null;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nanditaselvaraju"},"content":"                }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nanditaselvaraju"},"content":"                task \u003d new Deadline(parts[2], LocalDateTime.parse(parts[3], DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nanditaselvaraju"},"content":"                break;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nanditaselvaraju"},"content":"            case \"E\":","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nanditaselvaraju"},"content":"                if (parts.length \u003c 5) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nanditaselvaraju"},"content":"                    return null;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nanditaselvaraju"},"content":"                }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nanditaselvaraju"},"content":"                task \u003d new Event(parts[2], LocalDateTime.parse(parts[3], DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")),","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nanditaselvaraju"},"content":"                        LocalDateTime.parse(parts[4], DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nanditaselvaraju"},"content":"                break;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nanditaselvaraju"},"content":"            default:","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nanditaselvaraju"},"content":"                return null;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nanditaselvaraju"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nanditaselvaraju"},"content":"        if (parts[1].equals(\"1\")) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nanditaselvaraju"},"content":"            task.markAsDone();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nanditaselvaraju"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nanditaselvaraju"},"content":"        return task;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nanditaselvaraju"},"content":"    public abstract String toFileString();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nanditaselvaraju"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nanditaselvaraju"},"content":"    public String toString() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nanditaselvaraju"},"content":"        return \"[\" + getStatus() + \"] \" + description;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nanditaselvaraju"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"nanditaselvaraju":90}},{"path":"src/main/java/bork/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nanditaselvaraju"},"content":"package bork.task;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nanditaselvaraju"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nanditaselvaraju"},"content":"import java.util.Iterator;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nanditaselvaraju"},"content":"import java.util.List;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nanditaselvaraju"},"content":"public class TaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nanditaselvaraju"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nanditaselvaraju"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nanditaselvaraju"},"content":"    public TaskList() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nanditaselvaraju"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nanditaselvaraju"},"content":"     * Constructs a TaskList with a given list of tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nanditaselvaraju"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param tasks The list of tasks to initialise the TaskList with.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nanditaselvaraju"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nanditaselvaraju"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nanditaselvaraju"},"content":"     * Returns an iterator over the tasks in the TaskList.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nanditaselvaraju"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nanditaselvaraju"},"content":"     * @return An iterator over the tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nanditaselvaraju"},"content":"    @Override","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nanditaselvaraju"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nanditaselvaraju"},"content":"        return tasks.iterator();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nanditaselvaraju"},"content":"     * Clears all the tasks from the TaskList.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nanditaselvaraju"},"content":"    public void reset() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nanditaselvaraju"},"content":"        this.tasks.clear();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nanditaselvaraju"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nanditaselvaraju"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param task The task to be added.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nanditaselvaraju"},"content":"    public void add(Task task) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nanditaselvaraju"},"content":"        tasks.add(task);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nanditaselvaraju"},"content":"     * Removes and returns a task at the specified index.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nanditaselvaraju"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nanditaselvaraju"},"content":"     * @return The removed task.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nanditaselvaraju"},"content":"    public Task remove(int index) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nanditaselvaraju"},"content":"        return tasks.remove(index);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nanditaselvaraju"},"content":"     * Retrieves a task at the specified index.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nanditaselvaraju"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nanditaselvaraju"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nanditaselvaraju"},"content":"    public Task get(int index) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nanditaselvaraju"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nanditaselvaraju"},"content":"     * Returns the number of tasks in the TaskList.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nanditaselvaraju"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nanditaselvaraju"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nanditaselvaraju"},"content":"    public int size() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nanditaselvaraju"},"content":"        return tasks.size();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nanditaselvaraju"},"content":"     * Checks if the TaskList is empty.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nanditaselvaraju"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nanditaselvaraju"},"content":"     * @return {@code true} if the list is empty, otherwise {@code false}.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nanditaselvaraju"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nanditaselvaraju"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nanditaselvaraju"},"content":"     * Returns the list of all tasks in the TaskList.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nanditaselvaraju"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nanditaselvaraju"},"content":"     * @return A list of tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nanditaselvaraju"},"content":"    public List\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nanditaselvaraju"},"content":"        return tasks;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nanditaselvaraju"},"content":"}","lastModifiedDate":"2025-02-20","isFullCredit":false}],"authorContributionMap":{"nanditaselvaraju":98}},{"path":"src/main/java/bork/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nanditaselvaraju"},"content":"package bork.task;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nanditaselvaraju"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nanditaselvaraju"},"content":"     * Constructs a ToDo task with the given description.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nanditaselvaraju"},"content":"    public ToDo(String description) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nanditaselvaraju"},"content":"        super(description);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nanditaselvaraju"},"content":"    @Override","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nanditaselvaraju"},"content":"    public String toFileString() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nanditaselvaraju"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nanditaselvaraju"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nanditaselvaraju"},"content":"    public String toString() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nanditaselvaraju"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nanditaselvaraju"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"nanditaselvaraju":22}},{"path":"src/main/java/bork/ui/UserInterface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nanditaselvaraju"},"content":"package bork.ui;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.task.Task;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.task.TaskList;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nanditaselvaraju"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nanditaselvaraju"},"content":"public class UserInterface {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nanditaselvaraju"},"content":"    private Scanner scanner;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nanditaselvaraju"},"content":"     * Constructs a {@code UserInterface} and initialises the input scanner.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nanditaselvaraju"},"content":"    public UserInterface() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nanditaselvaraju"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nanditaselvaraju"},"content":"     * Displays the welcome message when the application starts.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nanditaselvaraju"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nanditaselvaraju"},"content":"        System.out.println(\"Hello! I\u0027m Bork\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nanditaselvaraju"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nanditaselvaraju"},"content":"     * Displays a message when the task list is reset.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nanditaselvaraju"},"content":"    public void showResetMessage() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nanditaselvaraju"},"content":"        System.out.println(\"Task list has been reset. Starting fresh!\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nanditaselvaraju"},"content":"     * Reads and returns a command entered by the user.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nanditaselvaraju"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nanditaselvaraju"},"content":"     * @return The trimmed command input from the user.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nanditaselvaraju"},"content":"    public String readCommand() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nanditaselvaraju"},"content":"        return scanner.nextLine().trim();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nanditaselvaraju"},"content":"     * Displays an error message.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nanditaselvaraju"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param message THe error message to be displayed.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nanditaselvaraju"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nanditaselvaraju"},"content":"        System.out.println(\"Error: \" + message);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nanditaselvaraju"},"content":"     * Displays an error message if there is an issue loading tasks from storage.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nanditaselvaraju"},"content":"    public void showLoadingError() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nanditaselvaraju"},"content":"        System.out.println(\"Error loading tasks. Starting with an empty bork.task list.\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nanditaselvaraju"},"content":"     * Displays a message confirming that a task has been added.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nanditaselvaraju"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param task The task that was added/","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param taskCount The total number of tasks after adding the new task.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nanditaselvaraju"},"content":"    public void showTaskAdded(Task task, int taskCount) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nanditaselvaraju"},"content":"        System.out.println(\"Got it. I\u0027ve added this bork.task:\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nanditaselvaraju"},"content":"        System.out.println(\" \" + task);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nanditaselvaraju"},"content":"        System.out.println(\"Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nanditaselvaraju"},"content":"     * Displays a message confirming that a task has been removed.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nanditaselvaraju"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param task The task that was removed.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param taskCount THe total number of tasks remaining after removing the task.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nanditaselvaraju"},"content":"    public void showTaskRemoved(Task task, int taskCount) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nanditaselvaraju"},"content":"        System.out.println(\"Noted. I\u0027ve removed this bork.task:\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nanditaselvaraju"},"content":"        System.out.println(\" \" + task);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nanditaselvaraju"},"content":"        System.out.println(\"Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nanditaselvaraju"},"content":"     * Displays the list of tasks.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nanditaselvaraju"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param tasks The list of tasks to be displayed.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nanditaselvaraju"},"content":"    public void showTaskList(TaskList tasks) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nanditaselvaraju"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nanditaselvaraju"},"content":"            System.out.println(\"No tasks added yet.\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nanditaselvaraju"},"content":"            return;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nanditaselvaraju"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nanditaselvaraju"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nanditaselvaraju"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nanditaselvaraju"},"content":"            System.out.println((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nanditaselvaraju"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nanditaselvaraju"},"content":"     * Displays a message confirmed that a task has been marked as done.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nanditaselvaraju"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param task THe task that has been marked as done.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nanditaselvaraju"},"content":"    public void showMarkedTask(Task task) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nanditaselvaraju"},"content":"        System.out.println(\"Nice! I\u0027ve marked this bork.task as done:\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nanditaselvaraju"},"content":"        System.out.println(\" \" + task);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"nanditaselvaraju"},"content":"     * Displays a message confirming that a task has been marked as not done.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"nanditaselvaraju"},"content":"     *","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"nanditaselvaraju"},"content":"     * @param task The task that has been marked as not done.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"nanditaselvaraju"},"content":"    public void showUnmarkedTask(Task task) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"nanditaselvaraju"},"content":"        System.out.println(\"OK, I\u0027ve marked this bork.task as not done yet:\");","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"nanditaselvaraju"},"content":"        System.out.println(\" \" + task);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"nanditaselvaraju"},"content":"    /**","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"nanditaselvaraju"},"content":"     * Displays the goodbye message when the application is exiting.","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"nanditaselvaraju"},"content":"     */","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"nanditaselvaraju"},"content":"    public void showGoodbye() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"nanditaselvaraju"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"nanditaselvaraju"},"content":"}","lastModifiedDate":"2025-02-20","isFullCredit":false}],"authorContributionMap":{"nanditaselvaraju":124}},{"path":"src/test/java/bork/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nanditaselvaraju"},"content":"package bork.storage;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.task.Task;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.task.TaskList;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.task.ToDo;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nanditaselvaraju"},"content":"import bork.exception.BorkException;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nanditaselvaraju"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nanditaselvaraju"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nanditaselvaraju"},"content":"import java.io.File;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nanditaselvaraju"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nanditaselvaraju"},"content":"import java.util.List;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nanditaselvaraju"},"content":"public class StorageTest {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nanditaselvaraju"},"content":"    @Test","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nanditaselvaraju"},"content":"    public void testSaveAndLoadTasks() throws BorkException, IOException {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nanditaselvaraju"},"content":"        File tempFile \u003d File.createTempFile(\"test\", \".txt\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nanditaselvaraju"},"content":"        tempFile.deleteOnExit();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nanditaselvaraju"},"content":"        Storage storage \u003d new Storage(tempFile.getAbsolutePath());","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nanditaselvaraju"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nanditaselvaraju"},"content":"        Task task \u003d new ToDo(\"Test Task\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nanditaselvaraju"},"content":"        taskList.add(task);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nanditaselvaraju"},"content":"        storage.save(taskList);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nanditaselvaraju"},"content":"        List\u003cTask\u003e loadedTaskList \u003d storage.load();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nanditaselvaraju"},"content":"        assertEquals(1, loadedTaskList.size(), \"Loaded TaskList should have 1 task.\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nanditaselvaraju"},"content":"        assertEquals(task.toString(), loadedTaskList.get(0).toString(), \"The loaded task should match the saved task.\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nanditaselvaraju"},"content":"}","lastModifiedDate":"2025-02-25","isFullCredit":false}],"authorContributionMap":{"nanditaselvaraju":33}},{"path":"src/test/java/bork/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nanditaselvaraju"},"content":"package bork.task;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nanditaselvaraju"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nanditaselvaraju"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nanditaselvaraju"},"content":"public class TaskListTest {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nanditaselvaraju"},"content":"    @Test","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nanditaselvaraju"},"content":"    public void testAddTask() {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nanditaselvaraju"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nanditaselvaraju"},"content":"        Task task \u003d new ToDo(\"Test Task\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nanditaselvaraju"},"content":"        taskList.add(task);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nanditaselvaraju"},"content":"        assertEquals(1, taskList.size(), \"TaskList should have 1 task after adding.\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nanditaselvaraju"},"content":"        assertEquals(task, taskList.get(0), \"The added task should match the retrieved task.\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nanditaselvaraju"},"content":"    @Test","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nanditaselvaraju"},"content":"    public void testRemoveTask() {","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nanditaselvaraju"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nanditaselvaraju"},"content":"        Task task \u003d new ToDo(\"Test Task\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nanditaselvaraju"},"content":"        taskList.add(task);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nanditaselvaraju"},"content":"        Task removedTask \u003d taskList.remove(0);","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nanditaselvaraju"},"content":"        assertEquals(0, taskList.size(), \"TaskList should be empty after removing the task.\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nanditaselvaraju"},"content":"        assertEquals(task, removedTask, \"The removed task should match the added task.\");","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nanditaselvaraju"},"content":"    }","lastModifiedDate":"2025-02-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nanditaselvaraju"},"content":"}","lastModifiedDate":"2025-02-25","isFullCredit":false}],"authorContributionMap":{"nanditaselvaraju":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nanditaselvaraju"},"content":"todo buy groceries","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nanditaselvaraju"},"content":"todo read book","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nanditaselvaraju"},"content":"deadline submit report /by 2025-10-15 1800","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nanditaselvaraju"},"content":"event team meeting /from 2025-10-10 1400 /to 2023-10-10 1500","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nanditaselvaraju"},"content":"list","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nanditaselvaraju"},"content":"mark 1","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nanditaselvaraju"},"content":"unmark 2","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nanditaselvaraju"},"content":"list","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nanditaselvaraju"},"content":"delete 3","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nanditaselvaraju"},"content":"list","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nanditaselvaraju"},"content":"bye","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nanditaselvaraju"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"nanditaselvaraju":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nanditaselvaraju"},"content":"java -classpath ..\\bin Bork \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"nanditaselvaraju":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nanditaselvaraju"},"content":"java -classpath ../bin Bork \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"nanditaselvaraju":1,"-":37}}]
