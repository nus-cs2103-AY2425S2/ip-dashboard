[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChauuuLe"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChauuuLe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChauuuLe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChauuuLe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChauuuLe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChauuuLe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChauuuLe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChauuuLe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChauuuLe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChauuuLe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChauuuLe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChauuuLe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChauuuLe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChauuuLe"},"content":"    mainClass.set(\"dak.Launcher\")","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChauuuLe"},"content":"    archiveBaseName \u003d \"dak\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"ChauuuLe":17,"-":39}},{"path":"src/main/java/dak/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChauuuLe"},"content":"package dak;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChauuuLe"},"content":"public class Launcher {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChauuuLe"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChauuuLe"},"content":"        dak.ui.MainApp.main(args);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChauuuLe"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"ChauuuLe":7}},{"path":"src/main/java/dak/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChauuuLe"},"content":"package dak.command;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChauuuLe"},"content":"import dak.task.Task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChauuuLe"},"content":"import dak.task.Todo;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChauuuLe"},"content":"import dak.task.Deadline;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChauuuLe"},"content":"import dak.task.Event;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChauuuLe"},"content":"import dak.task.TaskList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChauuuLe"},"content":"import dak.storage.Storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChauuuLe"},"content":"import dak.ui.Ui;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChauuuLe"},"content":"import dak.exceptions.DukeException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChauuuLe"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChauuuLe"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChauuuLe"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChauuuLe"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChauuuLe"},"content":" * Adds a new task to the task list.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChauuuLe"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChauuuLe"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChauuuLe"},"content":"    private final String input;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChauuuLe"},"content":"     * Constructs an AddCommand with the user input.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChauuuLe"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChauuuLe"},"content":"     * @param input The user input string.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChauuuLe"},"content":"    public AddCommand(String input) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChauuuLe"},"content":"        this.input \u003d input;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChauuuLe"},"content":"     * Add task to the task list.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChauuuLe"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChauuuLe"},"content":"     * @param tasks The task list.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChauuuLe"},"content":"     * @param ui The Ui object to interact with the user.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChauuuLe"},"content":"     * @param storage The Storage object to handle file operations.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChauuuLe"},"content":"     * @throws DukeException If there is an error during execution.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChauuuLe"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChauuuLe"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChauuuLe"},"content":"        Task task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChauuuLe"},"content":"        if (input.startsWith(\"todo \")) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChauuuLe"},"content":"            String description \u003d input.substring(5).trim();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChauuuLe"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChauuuLe"},"content":"                throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChauuuLe"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChauuuLe"},"content":"            task \u003d new Todo(description);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChauuuLe"},"content":"        } else if (input.startsWith(\"deadline \")) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChauuuLe"},"content":"            String[] parts \u003d input.substring(9).split(\" /by \");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChauuuLe"},"content":"            if (parts.length \u003c 2) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ChauuuLe"},"content":"                throw new DukeException(\"Invalid format. Use: deadline \u003cdescription\u003e /by \u003cd/M/yyyy HHmm\u003e\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChauuuLe"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ChauuuLe"},"content":"            String description \u003d parts[0].trim();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ChauuuLe"},"content":"            String by \u003d parts[1].trim();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ChauuuLe"},"content":"            if (description.isEmpty() || by.isEmpty()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ChauuuLe"},"content":"                throw new DukeException(\"Both the description and deadline date-time must be provided.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ChauuuLe"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ChauuuLe"},"content":"            task \u003d new Deadline(description, by);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ChauuuLe"},"content":"        } else if (input.startsWith(\"event \")) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ChauuuLe"},"content":"            String[] parts \u003d input.substring(6).split(\" /from \");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ChauuuLe"},"content":"            if (parts.length \u003c 2) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ChauuuLe"},"content":"                throw new DukeException(\"Invalid format. Use: event \u003cdescription\u003e /from \u003cd/M/yyyy HHmm\u003e /to \u003cd/M/yyyy HHmm\u003e\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ChauuuLe"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ChauuuLe"},"content":"            String description \u003d parts[0].trim();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ChauuuLe"},"content":"            String[] timeParts \u003d parts[1].split(\" /to \");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ChauuuLe"},"content":"            if (timeParts.length \u003c 2) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ChauuuLe"},"content":"                throw new DukeException(\"Invalid format. Use: event \u003cdescription\u003e /from \u003cd/M/yyyy HHmm\u003e /to \u003cd/M/yyyy HHmm\u003e\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ChauuuLe"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ChauuuLe"},"content":"            String from \u003d timeParts[0].trim();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ChauuuLe"},"content":"            String to \u003d timeParts[1].trim();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ChauuuLe"},"content":"            if (description.isEmpty() || from.isEmpty() || to.isEmpty()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ChauuuLe"},"content":"                throw new DukeException(\"All event details must be provided.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ChauuuLe"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ChauuuLe"},"content":"            task \u003d new Event(description, from, to);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ChauuuLe"},"content":"        } else {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ChauuuLe"},"content":"            throw new DukeException(\"Unknown task type.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ChauuuLe"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ChauuuLe"},"content":"        tasks.addTask(task);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ChauuuLe"},"content":"        ui.printMessage(\"Got it. I\u0027ve added this task:\\n  \" + task + \"\\n  Now you have \" + tasks.getTasks().size() + \" tasks in the list.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ChauuuLe"},"content":"        try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ChauuuLe"},"content":"            storage.save(tasks.getTasks());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ChauuuLe"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ChauuuLe"},"content":"            throw new DukeException(\"Failed to save task: \" + e.getMessage());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ChauuuLe"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ChauuuLe"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"ChauuuLe":93}},{"path":"src/main/java/dak/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChauuuLe"},"content":"package dak.command;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChauuuLe"},"content":"import dak.task.TaskList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChauuuLe"},"content":"import dak.storage.Storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChauuuLe"},"content":"import dak.ui.Ui;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChauuuLe"},"content":"import dak.exceptions.DukeException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChauuuLe"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChauuuLe"},"content":" * Represents a command that can be executed.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChauuuLe"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChauuuLe"},"content":"public abstract class Command {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChauuuLe"},"content":"     * Executes the command.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChauuuLe"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChauuuLe"},"content":"     * @param tasks The task list.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChauuuLe"},"content":"     * @param ui The Ui object to interact with the user.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChauuuLe"},"content":"     * @param storage The Storage object to handle file operations.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChauuuLe"},"content":"     * @throws DukeException If there is an error during execution.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChauuuLe"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChauuuLe"},"content":"     * Returns whether this command will exit the application.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChauuuLe"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChauuuLe"},"content":"     * @return True if the command is an exit command, false otherwise.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChauuuLe"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChauuuLe"},"content":"        return false;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChauuuLe"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"ChauuuLe":31}},{"path":"src/main/java/dak/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChauuuLe"},"content":"package dak.command;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChauuuLe"},"content":"import dak.task.Task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChauuuLe"},"content":"import dak.task.TaskList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChauuuLe"},"content":"import dak.storage.Storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChauuuLe"},"content":"import dak.ui.Ui;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChauuuLe"},"content":"import dak.exceptions.DukeException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChauuuLe"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChauuuLe"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChauuuLe"},"content":" * Deletes a task from the task list.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChauuuLe"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChauuuLe"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChauuuLe"},"content":"    private final int taskIndex;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChauuuLe"},"content":"     * Constructs a DeleteCommand with the task index.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChauuuLe"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChauuuLe"},"content":"     * @param taskIndex The index of the task to delete.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChauuuLe"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChauuuLe"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChauuuLe"},"content":"     * Delete task from the task list.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChauuuLe"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChauuuLe"},"content":"     * @param tasks The task list.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChauuuLe"},"content":"     * @param ui The Ui object to interact with the user.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChauuuLe"},"content":"     * @param storage The Storage object to handle file operations.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChauuuLe"},"content":"     * @throws DukeException If there is an error during execution.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChauuuLe"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChauuuLe"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChauuuLe"},"content":"        if (taskIndex \u003c 1 || taskIndex \u003e tasks.getTasks().size()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChauuuLe"},"content":"            throw new DukeException(\"Invalid task number.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChauuuLe"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChauuuLe"},"content":"        Task removedTask \u003d tasks.getTasks().remove(taskIndex - 1);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChauuuLe"},"content":"        ui.printMessage(\"Noted. I\u0027ve removed this task:\\n  \" + removedTask);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChauuuLe"},"content":"        try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChauuuLe"},"content":"            storage.save(tasks.getTasks());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChauuuLe"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChauuuLe"},"content":"            throw new DukeException(\"Failed to save tasks: \" + e.getMessage());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChauuuLe"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChauuuLe"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"ChauuuLe":48}},{"path":"src/main/java/dak/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChauuuLe"},"content":"package dak.command;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChauuuLe"},"content":"import dak.task.TaskList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChauuuLe"},"content":"import dak.storage.Storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChauuuLe"},"content":"import dak.ui.Ui;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChauuuLe"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChauuuLe"},"content":" * Exits the chatbot.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChauuuLe"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChauuuLe"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChauuuLe"},"content":"     * Exit from chatbot","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChauuuLe"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChauuuLe"},"content":"     * @param tasks The task list.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChauuuLe"},"content":"     * @param ui The Ui object to interact with the user.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChauuuLe"},"content":"     * @param storage The Storage object to handle file operations.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChauuuLe"},"content":"     * @throws DukeException If there is an error during execution.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChauuuLe"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChauuuLe"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChauuuLe"},"content":"        ui.showGoodbye();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChauuuLe"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChauuuLe"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChauuuLe"},"content":"        return true;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChauuuLe"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"ChauuuLe":29}},{"path":"src/main/java/dak/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChauuuLe"},"content":"package dak.command;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChauuuLe"},"content":"import dak.task.TaskList;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChauuuLe"},"content":"import dak.task.Task;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChauuuLe"},"content":"import dak.ui.Ui;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChauuuLe"},"content":"import dak.storage.Storage;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChauuuLe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChauuuLe"},"content":"/**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChauuuLe"},"content":" * Find command with given keyword.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChauuuLe"},"content":" */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChauuuLe"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChauuuLe"},"content":"    private final String keyword;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChauuuLe"},"content":"     * Constructs an FindCommand with the keyword that user input.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChauuuLe"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChauuuLe"},"content":"     * @param keyword The user input string.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChauuuLe"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChauuuLe"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChauuuLe"},"content":"     * Listing all commands that contain the given keyword.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChauuuLe"},"content":"     * ","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChauuuLe"},"content":"     * @param tasks The task list.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChauuuLe"},"content":"     * @param ui The Ui object to interact with the user.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChauuuLe"},"content":"     * @param storage The Storage object to handle file operations.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChauuuLe"},"content":"    @Override","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChauuuLe"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChauuuLe"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d tasks.findTasksWithKeyword(this.keyword);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChauuuLe"},"content":"        ","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChauuuLe"},"content":"        if (foundTasks.isEmpty() \u003d\u003d false) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChauuuLe"},"content":"            StringBuilder listMessage \u003d new StringBuilder(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChauuuLe"},"content":"            for (int i \u003d 0; i \u003c foundTasks.size(); i++) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChauuuLe"},"content":"                listMessage.append(\"\\n  \").append(i + 1).append(\". \").append(foundTasks.get(i));","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChauuuLe"},"content":"            }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChauuuLe"},"content":"            ui.printMessage(listMessage.toString());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChauuuLe"},"content":"        } else {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChauuuLe"},"content":"            ui.printMessage(\"There is no matched command to your keyword.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChauuuLe"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChauuuLe"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"ChauuuLe":46}},{"path":"src/main/java/dak/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChauuuLe"},"content":"package dak.command;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChauuuLe"},"content":"import dak.task.TaskList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChauuuLe"},"content":"import dak.ui.Ui;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChauuuLe"},"content":"import dak.storage.Storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChauuuLe"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChauuuLe"},"content":" * Lists all tasks in the task list.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChauuuLe"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChauuuLe"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChauuuLe"},"content":"     * Show tasks in the task list.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChauuuLe"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChauuuLe"},"content":"     * @param tasks The task list.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChauuuLe"},"content":"     * @param ui The Ui object to interact with the user.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChauuuLe"},"content":"     * @param storage The Storage object to handle file operations.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChauuuLe"},"content":"     * @throws DukeException If there is an error during execution.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChauuuLe"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChauuuLe"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChauuuLe"},"content":"        tasks.listTasks(ui);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChauuuLe"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"ChauuuLe":24}},{"path":"src/main/java/dak/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChauuuLe"},"content":"package dak.command;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChauuuLe"},"content":"import dak.task.TaskList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChauuuLe"},"content":"import dak.task.Task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChauuuLe"},"content":"import dak.ui.Ui;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChauuuLe"},"content":"import dak.storage.Storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChauuuLe"},"content":"import dak.exceptions.DukeException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChauuuLe"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChauuuLe"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChauuuLe"},"content":" * Marks a task as done.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChauuuLe"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChauuuLe"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChauuuLe"},"content":"    private final int taskIndex;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChauuuLe"},"content":"     * Constructs a MarkCommand.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChauuuLe"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChauuuLe"},"content":"     * @param taskIndex The index of the task to mark.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChauuuLe"},"content":"    public MarkCommand(int taskIndex) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChauuuLe"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChauuuLe"},"content":"     * Mark a task as done.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChauuuLe"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChauuuLe"},"content":"     * @param tasks The task list.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChauuuLe"},"content":"     * @param ui The Ui object to interact with the user.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChauuuLe"},"content":"     * @param storage The Storage object to handle file operations.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChauuuLe"},"content":"     * @throws DukeException If there is an error during execution.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChauuuLe"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChauuuLe"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChauuuLe"},"content":"        if (taskIndex \u003c 1 || taskIndex \u003e tasks.getTasks().size()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChauuuLe"},"content":"            throw new DukeException(\"Invalid task number. Please provide a valid task number.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChauuuLe"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChauuuLe"},"content":"        Task task \u003d tasks.getTasks().get(taskIndex - 1);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChauuuLe"},"content":"        task.markAsDone();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChauuuLe"},"content":"        ui.printMessage(\"Nice! I\u0027ve marked this task as done:\\n  \" + task);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChauuuLe"},"content":"        try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChauuuLe"},"content":"            storage.save(tasks.getTasks());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChauuuLe"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChauuuLe"},"content":"            throw new DukeException(\"Failed to save tasks: \" + e.getMessage());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChauuuLe"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChauuuLe"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"ChauuuLe":49}},{"path":"src/main/java/dak/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChauuuLe"},"content":"package dak.command;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChauuuLe"},"content":"import dak.task.TaskList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChauuuLe"},"content":"import dak.task.Task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChauuuLe"},"content":"import dak.ui.Ui;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChauuuLe"},"content":"import dak.storage.Storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChauuuLe"},"content":"import dak.exceptions.DukeException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChauuuLe"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChauuuLe"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChauuuLe"},"content":" * Marks a task as not done.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChauuuLe"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChauuuLe"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChauuuLe"},"content":"    private final int taskIndex;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChauuuLe"},"content":"     * Constructs an UnmarkCommand.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChauuuLe"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChauuuLe"},"content":"     * @param taskIndex The index of the task to unmark.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChauuuLe"},"content":"    public UnmarkCommand(int taskIndex) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChauuuLe"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChauuuLe"},"content":"     * unmark a task as done.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChauuuLe"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChauuuLe"},"content":"     * @param tasks The task list.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChauuuLe"},"content":"     * @param ui The Ui object to interact with the user.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChauuuLe"},"content":"     * @param storage The Storage object to handle file operations.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChauuuLe"},"content":"     * @throws DukeException If there is an error during execution.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChauuuLe"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChauuuLe"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChauuuLe"},"content":"        if (taskIndex \u003c 1 || taskIndex \u003e tasks.getTasks().size()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChauuuLe"},"content":"            throw new DukeException(\"Invalid task number. Please provide a valid task number.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChauuuLe"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChauuuLe"},"content":"        Task task \u003d tasks.getTasks().get(taskIndex - 1);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChauuuLe"},"content":"        task.markAsNotDone();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChauuuLe"},"content":"        ui.printMessage(\"OK, I\u0027ve marked this task as not done yet:\\n  \" + task);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChauuuLe"},"content":"        try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChauuuLe"},"content":"            storage.save(tasks.getTasks());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChauuuLe"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChauuuLe"},"content":"            throw new DukeException(\"Failed to save tasks: \" + e.getMessage());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChauuuLe"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChauuuLe"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"ChauuuLe":49}},{"path":"src/main/java/dak/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChauuuLe"},"content":"package dak.exceptions;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChauuuLe"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChauuuLe"},"content":" * Handle exception error specify for chatbot","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChauuuLe"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChauuuLe"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChauuuLe"},"content":"     * Create Exception with error message","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChauuuLe"},"content":"     * @param message The error message","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChauuuLe"},"content":"    public DukeException(String message) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChauuuLe"},"content":"        super(message);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChauuuLe"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"ChauuuLe":14}},{"path":"src/main/java/dak/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChauuuLe"},"content":"package dak.parser;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChauuuLe"},"content":"import dak.command.Command;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChauuuLe"},"content":"import dak.command.ExitCommand;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChauuuLe"},"content":"import dak.command.ListCommand;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChauuuLe"},"content":"import dak.command.MarkCommand;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChauuuLe"},"content":"import dak.command.DeleteCommand;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChauuuLe"},"content":"import dak.command.AddCommand;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChauuuLe"},"content":"import dak.command.UnmarkCommand;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChauuuLe"},"content":"import dak.command.FindCommand;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChauuuLe"},"content":"import dak.exceptions.DukeException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChauuuLe"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChauuuLe"},"content":" * Parses user input and returns the appropriate command.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChauuuLe"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChauuuLe"},"content":"public class Parser {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChauuuLe"},"content":"     * Parses a user input string.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChauuuLe"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChauuuLe"},"content":"     * @param input The user input string.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChauuuLe"},"content":"     * @return The corresponding Command object.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChauuuLe"},"content":"     * @throws DukeException If the command is invalid.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChauuuLe"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChauuuLe"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChauuuLe"},"content":"            return new ExitCommand();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChauuuLe"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChauuuLe"},"content":"            return new ListCommand();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChauuuLe"},"content":"        } else if (input.startsWith(\"mark \")) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChauuuLe"},"content":"            try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChauuuLe"},"content":"                int taskIndex \u003d Integer.parseInt(input.substring(5).trim());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChauuuLe"},"content":"                return new MarkCommand(taskIndex);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChauuuLe"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChauuuLe"},"content":"                throw new DukeException(\"Please provide a valid task number for the mark command.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChauuuLe"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChauuuLe"},"content":"        } else if (input.startsWith(\"unmark \")) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChauuuLe"},"content":"            try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChauuuLe"},"content":"                int taskIndex \u003d Integer.parseInt(input.substring(7).trim());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChauuuLe"},"content":"                return new UnmarkCommand(taskIndex);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChauuuLe"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChauuuLe"},"content":"                throw new DukeException(\"Please provide a valid task number for the unmark command.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChauuuLe"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChauuuLe"},"content":"        } else if (input.startsWith(\"todo \") || input.startsWith(\"deadline \") || input.startsWith(\"event \")) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChauuuLe"},"content":"            return new AddCommand(input);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChauuuLe"},"content":"        } else if (input.startsWith(\"delete \")) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChauuuLe"},"content":"            try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChauuuLe"},"content":"                int taskIndex \u003d Integer.parseInt(input.substring(7).trim());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChauuuLe"},"content":"                return new DeleteCommand(taskIndex);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChauuuLe"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChauuuLe"},"content":"                throw new DukeException(\"Please provide a valid task number for the delete command.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ChauuuLe"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChauuuLe"},"content":"        } else if (input.startsWith(\"find \")) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ChauuuLe"},"content":"            String keyword \u003d input.substring(5).trim();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ChauuuLe"},"content":"            if (keyword.isEmpty()) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ChauuuLe"},"content":"                throw new DukeException(\"Please provide a non-empty keyword for the find command.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ChauuuLe"},"content":"            } else {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ChauuuLe"},"content":"                return new FindCommand(keyword);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ChauuuLe"},"content":"            }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ChauuuLe"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ChauuuLe"},"content":"        throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ChauuuLe"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"ChauuuLe":64}},{"path":"src/main/java/dak/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChauuuLe"},"content":"package dak.storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChauuuLe"},"content":"import dak.task.Task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChauuuLe"},"content":"import dak.task.Todo;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChauuuLe"},"content":"import dak.task.Deadline;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChauuuLe"},"content":"import dak.task.Event;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChauuuLe"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChauuuLe"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChauuuLe"},"content":"import java.io.File;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChauuuLe"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChauuuLe"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChauuuLe"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChauuuLe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChauuuLe"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChauuuLe"},"content":" * Handles storage for loading and saving tasks to a file.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChauuuLe"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChauuuLe"},"content":"public class Storage {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChauuuLe"},"content":"    private final String filePath;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChauuuLe"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChauuuLe"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChauuuLe"},"content":"     * Loads tasks from the file. Creates an empty list if the file does not exist.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChauuuLe"},"content":"     * @return The list of tasks loaded from the file.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChauuuLe"},"content":"     * @throws IOException If an error occurs while reading the file.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChauuuLe"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChauuuLe"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChauuuLe"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChauuuLe"},"content":"        // Check if the file exists; if not, return an empty list","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChauuuLe"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChauuuLe"},"content":"            file.getParentFile().mkdirs(); // Create parent directory if it doesn\u0027t exist","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChauuuLe"},"content":"            file.createNewFile();          // Create the file","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChauuuLe"},"content":"            return tasks;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChauuuLe"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChauuuLe"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChauuuLe"},"content":"            String line;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChauuuLe"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChauuuLe"},"content":"                tasks.add(parseTask(line));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChauuuLe"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChauuuLe"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChauuuLe"},"content":"        return tasks;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChauuuLe"},"content":"     * Saves the current list of tasks to the file.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ChauuuLe"},"content":"     * @param tasks The list of tasks to save.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChauuuLe"},"content":"     * @throws IOException If an error occurs while writing to the file.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ChauuuLe"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ChauuuLe"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath))) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ChauuuLe"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ChauuuLe"},"content":"                writer.write(task.toDataString());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ChauuuLe"},"content":"                writer.newLine();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ChauuuLe"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ChauuuLe"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ChauuuLe"},"content":"     * Parses a line from the file and converts it into a Task object.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ChauuuLe"},"content":"     * @param line The line to parse.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ChauuuLe"},"content":"     * @return The corresponding Task object.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ChauuuLe"},"content":"    private Task parseTask(String line) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ChauuuLe"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ChauuuLe"},"content":"        String taskType \u003d parts[0];","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ChauuuLe"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ChauuuLe"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ChauuuLe"},"content":"        switch (taskType) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ChauuuLe"},"content":"            case \"T\":","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ChauuuLe"},"content":"                Task todo \u003d new Todo(description);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ChauuuLe"},"content":"                if (isDone) todo.markAsDone();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ChauuuLe"},"content":"                return todo;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ChauuuLe"},"content":"            case \"D\":","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ChauuuLe"},"content":"                Task deadline \u003d new Deadline(description, parts[3]);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ChauuuLe"},"content":"                if (isDone) deadline.markAsDone();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ChauuuLe"},"content":"                return deadline;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ChauuuLe"},"content":"            case \"E\":","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ChauuuLe"},"content":"                Task event \u003d new Event(description, parts[3], parts[4]);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ChauuuLe"},"content":"                if (isDone) event.markAsDone();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ChauuuLe"},"content":"                return event;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ChauuuLe"},"content":"            default:","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ChauuuLe"},"content":"                throw new IllegalArgumentException(\"Invalid task type in file: \" + taskType);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ChauuuLe"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ChauuuLe"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"ChauuuLe":92}},{"path":"src/main/java/dak/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChauuuLe"},"content":"package dak.task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChauuuLe"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChauuuLe"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChauuuLe"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChauuuLe"},"content":" * Represents a Deadline task in the chatbot.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChauuuLe"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChauuuLe"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChauuuLe"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChauuuLe"},"content":"    // Define the custom date-time format","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChauuuLe"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChauuuLe"},"content":"    private static final DateTimeFormatter OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mm a\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChauuuLe"},"content":"     * Constructs a Deadline task with the given description and due date-time.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChauuuLe"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChauuuLe"},"content":"     * @param description The task description.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChauuuLe"},"content":"     * @param by          The due date-time in the format d/M/yyyy HHmm.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChauuuLe"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChauuuLe"},"content":"        super(description);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChauuuLe"},"content":"        this.by \u003d LocalDateTime.parse(by, INPUT_FORMAT);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChauuuLe"},"content":"     * Returns the string representation of the Deadline task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChauuuLe"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChauuuLe"},"content":"     * @return The string representation of the Deadline task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChauuuLe"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChauuuLe"},"content":"    public String toString() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChauuuLe"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formatBy() + \")\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChauuuLe"},"content":"     * Formats the due date-time to a more readable format (e.g., Dec 2 2019, 6:00 PM).","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChauuuLe"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChauuuLe"},"content":"     * @return The formatted due date-time.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChauuuLe"},"content":"    protected String formatBy() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChauuuLe"},"content":"        return by.format(OUTPUT_FORMAT);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChauuuLe"},"content":"     * Converts the Deadline task to a formatted string for saving to a file.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChauuuLe"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChauuuLe"},"content":"     * @return The Deadline task in a save-friendly format.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChauuuLe"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ChauuuLe"},"content":"    public String toDataString() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChauuuLe"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + by.format(INPUT_FORMAT);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ChauuuLe"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"ChauuuLe":55}},{"path":"src/main/java/dak/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChauuuLe"},"content":"package dak.task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChauuuLe"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChauuuLe"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChauuuLe"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChauuuLe"},"content":" * Represents an Event task in the chatbot.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChauuuLe"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChauuuLe"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChauuuLe"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChauuuLe"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChauuuLe"},"content":"    // Define the custom date-time format","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChauuuLe"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChauuuLe"},"content":"    private static final DateTimeFormatter OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mm a\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChauuuLe"},"content":"     * Constructs an Event task with the given description, start time, and end time.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChauuuLe"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChauuuLe"},"content":"     * @param description The task description.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChauuuLe"},"content":"     * @param from        The start time in the format d/M/yyyy HHmm.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChauuuLe"},"content":"     * @param to          The end time in the format d/M/yyyy HHmm.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChauuuLe"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChauuuLe"},"content":"        super(description);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChauuuLe"},"content":"        this.from \u003d LocalDateTime.parse(from, INPUT_FORMAT);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChauuuLe"},"content":"        this.to \u003d LocalDateTime.parse(to, INPUT_FORMAT);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChauuuLe"},"content":"     * Returns the string representation of the Event task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChauuuLe"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChauuuLe"},"content":"     * @return The string representation of the Event task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChauuuLe"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChauuuLe"},"content":"    public String toString() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChauuuLe"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + formatFrom() + \" to: \" + formatTo() + \")\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChauuuLe"},"content":"     * Formats the start time to a more readable format.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChauuuLe"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChauuuLe"},"content":"     * @return The formatted start time.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChauuuLe"},"content":"    protected String formatFrom() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChauuuLe"},"content":"        return from.format(OUTPUT_FORMAT);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChauuuLe"},"content":"     * Formats the end time to a more readable format.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChauuuLe"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ChauuuLe"},"content":"     * @return The formatted end time.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ChauuuLe"},"content":"    protected String formatTo() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ChauuuLe"},"content":"        return to.format(OUTPUT_FORMAT);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ChauuuLe"},"content":"     * Converts the Event task to a formatted string for saving to a file.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ChauuuLe"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ChauuuLe"},"content":"     * @return The Event task in a save-friendly format.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ChauuuLe"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ChauuuLe"},"content":"    public String toDataString() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ChauuuLe"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + from.format(INPUT_FORMAT) + \" | \" + to.format(INPUT_FORMAT);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ChauuuLe"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"ChauuuLe":67}},{"path":"src/main/java/dak/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChauuuLe"},"content":"package dak.task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChauuuLe"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChauuuLe"},"content":" * Represents a task in the chatbot.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChauuuLe"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChauuuLe"},"content":"public class Task {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChauuuLe"},"content":"    protected String description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChauuuLe"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChauuuLe"},"content":"     * Constructs a Task with the given description.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChauuuLe"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChauuuLe"},"content":"     * @param description The task description.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChauuuLe"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChauuuLe"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChauuuLe"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChauuuLe"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChauuuLe"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChauuuLe"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChauuuLe"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChauuuLe"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChauuuLe"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChauuuLe"},"content":"     * Gets the task description.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChauuuLe"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChauuuLe"},"content":"     * @return The task description.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChauuuLe"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChauuuLe"},"content":"        return this.description;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChauuuLe"},"content":"     * Checks if the task is done.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChauuuLe"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChauuuLe"},"content":"     * @return True if the task is done, false otherwise.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChauuuLe"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChauuuLe"},"content":"        return isDone;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChauuuLe"},"content":"     * Checks if a keyword is contained in the description.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ChauuuLe"},"content":"     * ","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ChauuuLe"},"content":"     * @param keyword The keyword that need to be checked.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ChauuuLe"},"content":"     * @return True if the description contains the keyword.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ChauuuLe"},"content":"    public boolean containsKeyword(String keyword) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ChauuuLe"},"content":"        return this.description.toLowerCase().contains(keyword.toLowerCase());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ChauuuLe"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ChauuuLe"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ChauuuLe"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ChauuuLe"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ChauuuLe"},"content":"    public String toString() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ChauuuLe"},"content":"        return (isDone ? \"[X] \" : \"[ ] \") + description;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ChauuuLe"},"content":"     * Converts the task to a formatted string for saving to a file.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ChauuuLe"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ChauuuLe"},"content":"     * @return The task in a save-friendly format.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ChauuuLe"},"content":"    public String toDataString() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ChauuuLe"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ChauuuLe"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"ChauuuLe":80}},{"path":"src/main/java/dak/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChauuuLe"},"content":"package dak.task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChauuuLe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChauuuLe"},"content":"import dak.ui.Ui;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChauuuLe"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChauuuLe"},"content":" * Manages the list of tasks.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChauuuLe"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChauuuLe"},"content":"public class TaskList {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChauuuLe"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChauuuLe"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChauuuLe"},"content":"    public TaskList() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChauuuLe"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChauuuLe"},"content":"     * Constructs a TaskList with pre-loaded tasks.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChauuuLe"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChauuuLe"},"content":"     * @param tasks The pre-loaded tasks.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChauuuLe"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChauuuLe"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChauuuLe"},"content":"     * Adds a task to the list.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChauuuLe"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChauuuLe"},"content":"     * @param task The task to add.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChauuuLe"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChauuuLe"},"content":"        tasks.add(task);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChauuuLe"},"content":"     * Lists all tasks.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChauuuLe"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChauuuLe"},"content":"     * @param ui The Ui object to handle printing.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChauuuLe"},"content":"    public void listTasks(Ui ui) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChauuuLe"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChauuuLe"},"content":"            ui.printMessage(\"You have no tasks in your list.\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChauuuLe"},"content":"        } else {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChauuuLe"},"content":"            StringBuilder listMessage \u003d new StringBuilder(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChauuuLe"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChauuuLe"},"content":"                listMessage.append(\"\\n  \").append(i + 1).append(\". \").append(tasks.get(i));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChauuuLe"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChauuuLe"},"content":"            ui.printMessage(listMessage.toString());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChauuuLe"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ChauuuLe"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ChauuuLe"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ChauuuLe"},"content":"     * @return The list of tasks.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ChauuuLe"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ChauuuLe"},"content":"        return tasks;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ChauuuLe"},"content":"    ","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ChauuuLe"},"content":"     * Finds and returns a list of tasks that contain the given keyword.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ChauuuLe"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ChauuuLe"},"content":"     * @param keyword The keyword to search for in tasks.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ChauuuLe"},"content":"     * @return A list of tasks that contain the given keyword.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ChauuuLe"},"content":"    public ArrayList\u003cTask\u003e findTasksWithKeyword(String keyword) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ChauuuLe"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ChauuuLe"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ChauuuLe"},"content":"            if (task.containsKeyword(keyword)) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ChauuuLe"},"content":"                foundTasks.add(task);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ChauuuLe"},"content":"            }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ChauuuLe"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ChauuuLe"},"content":"        return foundTasks;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ChauuuLe"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"ChauuuLe":80}},{"path":"src/main/java/dak/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChauuuLe"},"content":"package dak.task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChauuuLe"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChauuuLe"},"content":" * Represents a Todo task in the chatbot.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChauuuLe"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChauuuLe"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChauuuLe"},"content":"     * Constructs a Todo task with the given description.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChauuuLe"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChauuuLe"},"content":"     * @param description The task description.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChauuuLe"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChauuuLe"},"content":"        super(description);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChauuuLe"},"content":"     * Returns the string representation of the Todo task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChauuuLe"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChauuuLe"},"content":"     * @return The string representation of the Todo task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChauuuLe"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChauuuLe"},"content":"    public String toString() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChauuuLe"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChauuuLe"},"content":"     * Converts the Todo task to a formatted string for saving to a file.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChauuuLe"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChauuuLe"},"content":"     * @return The Todo task in a save-friendly format.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChauuuLe"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChauuuLe"},"content":"    public String toDataString() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChauuuLe"},"content":"        return \"T | \" + (isDone() ? \"1\" : \"0\") + \" | \" + getDescription();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChauuuLe"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"ChauuuLe":36}},{"path":"src/main/java/dak/ui/Dak.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChauuuLe"},"content":"package dak.ui;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChauuuLe"},"content":"import dak.storage.Storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChauuuLe"},"content":"import dak.parser.Parser;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChauuuLe"},"content":"import dak.task.TaskList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChauuuLe"},"content":"import dak.exceptions.DukeException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChauuuLe"},"content":"import dak.command.Command;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChauuuLe"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChauuuLe"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChauuuLe"},"content":" * The main chatbot logic for processing user input.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChauuuLe"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChauuuLe"},"content":"public class Dak {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChauuuLe"},"content":"    private static final String FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChauuuLe"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChauuuLe"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChauuuLe"},"content":"    private Ui ui;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChauuuLe"},"content":"     * Constructs the Dak chatbot.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChauuuLe"},"content":"    public Dak(Ui ui) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChauuuLe"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChauuuLe"},"content":"        storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChauuuLe"},"content":"        try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChauuuLe"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChauuuLe"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChauuuLe"},"content":"            ui.showError(\"Failed to load tasks.\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChauuuLe"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChauuuLe"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChauuuLe"},"content":"     * Processes user input and response the message.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChauuuLe"},"content":"     * @param input The user input string.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChauuuLe"},"content":"    public void response(String input) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChauuuLe"},"content":"        try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChauuuLe"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChauuuLe"},"content":"            command.execute(tasks, ui, storage);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChauuuLe"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChauuuLe"},"content":"            ui.printMessage(\"OOPS! \" + e.getMessage());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChauuuLe"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChauuuLe"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"ChauuuLe":45}},{"path":"src/main/java/dak/ui/MainApp.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChauuuLe"},"content":"package dak.ui;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChauuuLe"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChauuuLe"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChauuuLe"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChauuuLe"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChauuuLe"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChauuuLe"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChauuuLe"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChauuuLe"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChauuuLe"},"content":"/**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChauuuLe"},"content":" * The JavaFX application for the Dak chatbot.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChauuuLe"},"content":" */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChauuuLe"},"content":"public class MainApp extends Application {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChauuuLe"},"content":"    private Ui ui;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChauuuLe"},"content":"    private Dak dak;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChauuuLe"},"content":"    private TextArea chatHistory;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChauuuLe"},"content":"    @Override","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChauuuLe"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChauuuLe"},"content":"        chatHistory \u003d new TextArea();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChauuuLe"},"content":"        chatHistory.setEditable(false);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChauuuLe"},"content":"        TextField userInput \u003d new TextField();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChauuuLe"},"content":"        Button sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChauuuLe"},"content":"        sendButton.setOnAction(e -\u003e {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChauuuLe"},"content":"            String input \u003d userInput.getText();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChauuuLe"},"content":"            if (!input.isEmpty()) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChauuuLe"},"content":"                displayMessage(\"You: \" + input);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChauuuLe"},"content":"                dak.response(input);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChauuuLe"},"content":"                userInput.clear();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChauuuLe"},"content":"                if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChauuuLe"},"content":"                    stage.close();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChauuuLe"},"content":"                }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChauuuLe"},"content":"            }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChauuuLe"},"content":"        });","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChauuuLe"},"content":"        VBox layout \u003d new VBox(10);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChauuuLe"},"content":"        layout.getChildren().addAll(chatHistory, userInput, sendButton);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChauuuLe"},"content":"        Scene scene \u003d new Scene(layout, 500, 400);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChauuuLe"},"content":"        stage.setTitle(\"Dak - Your Chatbot\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChauuuLe"},"content":"        stage.setScene(scene);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChauuuLe"},"content":"        stage.show();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChauuuLe"},"content":"        // Initialize chatbot logic","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChauuuLe"},"content":"        ui \u003d new Ui(this);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChauuuLe"},"content":"        dak \u003d new Dak(ui);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ChauuuLe"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ChauuuLe"},"content":"     * Displays a message in the chat history.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ChauuuLe"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ChauuuLe"},"content":"     * @param message The message to display.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ChauuuLe"},"content":"    public void displayMessage(String message) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ChauuuLe"},"content":"        chatHistory.appendText(message + \"\\n\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ChauuuLe"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ChauuuLe"},"content":"        launch(args);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ChauuuLe"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"ChauuuLe":67}},{"path":"src/main/java/dak/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChauuuLe"},"content":"package dak.ui;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChauuuLe"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChauuuLe"},"content":" * Handles user interaction via JavaFX.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChauuuLe"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChauuuLe"},"content":"public class Ui {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChauuuLe"},"content":"    private MainApp mainApp; // Reference to JavaFX UI","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChauuuLe"},"content":"     * Constructs a Ui object.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChauuuLe"},"content":"    public Ui(MainApp mainApp) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChauuuLe"},"content":"        this.mainApp \u003d mainApp;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChauuuLe"},"content":"     * Sends a message to be displayed in the JavaFX UI.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChauuuLe"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChauuuLe"},"content":"     * @param message The message to display.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChauuuLe"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChauuuLe"},"content":"        mainApp.displayMessage(\"Dak: \" + message);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChauuuLe"},"content":"     * Shows an error message.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChauuuLe"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChauuuLe"},"content":"     * @param message The error message.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChauuuLe"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChauuuLe"},"content":"        mainApp.displayMessage(\"OOPS!!! \" + message);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChauuuLe"},"content":"     * Shows the welcome message.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChauuuLe"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChauuuLe"},"content":"        mainApp.displayMessage(\"Hello, I\u0027m Dak 🤖\\nWhat can I do for you?\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChauuuLe"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChauuuLe"},"content":"     * Shows the goodbye message.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChauuuLe"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChauuuLe"},"content":"    public void showGoodbye() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChauuuLe"},"content":"        mainApp.displayMessage(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChauuuLe"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"ChauuuLe":48}},{"path":"src/test/data/test.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ChauuuLe"},"content":"T | 1 | Read book","lastModifiedDate":"2025-02-14","isFullCredit":false}],"authorContributionMap":{"ChauuuLe":1}},{"path":"src/test/java/dak/command/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChauuuLe"},"content":"package dak.command;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChauuuLe"},"content":"import dak.task.TaskList;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChauuuLe"},"content":"import dak.storage.Storage;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChauuuLe"},"content":"import dak.ui.Ui;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChauuuLe"},"content":"import dak.exceptions.DukeException;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChauuuLe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChauuuLe"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChauuuLe"},"content":"/**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChauuuLe"},"content":" * Test AddCommand functionality.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChauuuLe"},"content":" */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChauuuLe"},"content":"class AddCommandTest {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChauuuLe"},"content":"    @Test","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChauuuLe"},"content":"    void execute_todoTask_addsSuccessfully() throws DukeException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChauuuLe"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChauuuLe"},"content":"        Storage storage \u003d new Storage(\"./src/test/data/test.txt\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChauuuLe"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChauuuLe"},"content":"        ","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChauuuLe"},"content":"        AddCommand command \u003d new AddCommand(\"todo Read book\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChauuuLe"},"content":"        command.execute(taskList, ui, storage);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChauuuLe"},"content":"        ","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChauuuLe"},"content":"        assertEquals(1, taskList.getTasks().size());","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChauuuLe"},"content":"        assertEquals(\"Read book\", taskList.getTasks().get(0).getDescription());","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChauuuLe"},"content":"}","lastModifiedDate":"2025-02-14","isFullCredit":false}],"authorContributionMap":{"ChauuuLe":27}},{"path":"src/test/java/dak/command/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChauuuLe"},"content":"package dak.command;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChauuuLe"},"content":"import dak.task.TaskList;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChauuuLe"},"content":"import dak.task.Todo;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChauuuLe"},"content":"import dak.storage.Storage;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChauuuLe"},"content":"import dak.ui.Ui;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChauuuLe"},"content":"import dak.exceptions.DukeException;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChauuuLe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChauuuLe"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChauuuLe"},"content":"/**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChauuuLe"},"content":" * Test DeleteCommand functionality.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChauuuLe"},"content":" */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChauuuLe"},"content":"class DeleteCommandTest {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChauuuLe"},"content":"    @Test","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChauuuLe"},"content":"    void execute_validIndex_deletesTask() throws DukeException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChauuuLe"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChauuuLe"},"content":"        Storage storage \u003d new Storage(\"test.txt\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChauuuLe"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChauuuLe"},"content":"        taskList.addTask(new Todo(\"Read book\"));","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChauuuLe"},"content":"        ","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChauuuLe"},"content":"        DeleteCommand command \u003d new DeleteCommand(1);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChauuuLe"},"content":"        command.execute(taskList, ui, storage);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChauuuLe"},"content":"        ","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChauuuLe"},"content":"        assertEquals(0, taskList.getTasks().size());","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChauuuLe"},"content":"    ","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChauuuLe"},"content":"    @Test","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChauuuLe"},"content":"    void execute_invalidIndex_throwsException() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChauuuLe"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChauuuLe"},"content":"        Storage storage \u003d new Storage(\"./src/test/data/test.txt\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChauuuLe"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChauuuLe"},"content":"        ","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChauuuLe"},"content":"        DeleteCommand command \u003d new DeleteCommand(5);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChauuuLe"},"content":"        ","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChauuuLe"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChauuuLe"},"content":"            command.execute(taskList, ui, storage);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChauuuLe"},"content":"        });","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChauuuLe"},"content":"}","lastModifiedDate":"2025-02-14","isFullCredit":false}],"authorContributionMap":{"ChauuuLe":41}},{"path":"src/test/java/dak/command/ListCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChauuuLe"},"content":"package dak.command;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChauuuLe"},"content":"import dak.task.TaskList;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChauuuLe"},"content":"import dak.storage.Storage;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChauuuLe"},"content":"import dak.ui.Ui;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChauuuLe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChauuuLe"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChauuuLe"},"content":"/**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChauuuLe"},"content":" * Test ListCommand functionality.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChauuuLe"},"content":" */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChauuuLe"},"content":"class ListCommandTest {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChauuuLe"},"content":"    ","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChauuuLe"},"content":"    @Test","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChauuuLe"},"content":"    void execute_emptyTaskList_shouldShowNoTasksMessage() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChauuuLe"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChauuuLe"},"content":"        Storage storage \u003d new Storage(\"./src/test/data/test.txt\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChauuuLe"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChauuuLe"},"content":"        ","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChauuuLe"},"content":"        ListCommand command \u003d new ListCommand();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChauuuLe"},"content":"        command.execute(taskList, ui, storage);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChauuuLe"},"content":"        assertEquals(0, taskList.getTasks().size());","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChauuuLe"},"content":"}","lastModifiedDate":"2025-02-14","isFullCredit":false}],"authorContributionMap":{"ChauuuLe":25}},{"path":"src/test/java/dak/command/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChauuuLe"},"content":"package dak.command;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChauuuLe"},"content":"import dak.task.TaskList;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChauuuLe"},"content":"import dak.task.Todo;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChauuuLe"},"content":"import dak.storage.Storage;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChauuuLe"},"content":"import dak.ui.Ui;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChauuuLe"},"content":"import dak.exceptions.DukeException;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChauuuLe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChauuuLe"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChauuuLe"},"content":"/**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChauuuLe"},"content":" * Test MarkCommand functionality.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChauuuLe"},"content":" */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChauuuLe"},"content":"class MarkCommandTest {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChauuuLe"},"content":"    ","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChauuuLe"},"content":"    @Test","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChauuuLe"},"content":"    void execute_validIndex_marksTaskAsDone() throws DukeException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChauuuLe"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChauuuLe"},"content":"        Storage storage \u003d new Storage(\"./src/test/data/test.txt\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChauuuLe"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChauuuLe"},"content":"        taskList.addTask(new Todo(\"Read book\"));","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChauuuLe"},"content":"        ","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChauuuLe"},"content":"        MarkCommand command \u003d new MarkCommand(1);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChauuuLe"},"content":"        command.execute(taskList, ui, storage);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChauuuLe"},"content":"        ","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChauuuLe"},"content":"        assertTrue(taskList.getTasks().get(0).isDone());","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChauuuLe"},"content":"    ","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChauuuLe"},"content":"    @Test","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChauuuLe"},"content":"    void execute_invalidIndex_throwsException() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChauuuLe"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChauuuLe"},"content":"        Storage storage \u003d new Storage(\"test.txt\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChauuuLe"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChauuuLe"},"content":"        ","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChauuuLe"},"content":"        MarkCommand command \u003d new MarkCommand(5);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChauuuLe"},"content":"        ","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChauuuLe"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChauuuLe"},"content":"            command.execute(taskList, ui, storage);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChauuuLe"},"content":"        });","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChauuuLe"},"content":"}","lastModifiedDate":"2025-02-14","isFullCredit":false}],"authorContributionMap":{"ChauuuLe":41}},{"path":"src/test/java/dak/command/UnMarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChauuuLe"},"content":"package dak.command;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChauuuLe"},"content":"import dak.task.TaskList;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChauuuLe"},"content":"import dak.task.Todo;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChauuuLe"},"content":"import dak.storage.Storage;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChauuuLe"},"content":"import dak.ui.Ui;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChauuuLe"},"content":"import dak.exceptions.DukeException;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChauuuLe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChauuuLe"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChauuuLe"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChauuuLe"},"content":"/**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChauuuLe"},"content":" * Test UnmarkCommand functionality.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChauuuLe"},"content":" */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChauuuLe"},"content":"class UnmarkCommandTest {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChauuuLe"},"content":"    ","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChauuuLe"},"content":"    @Test","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChauuuLe"},"content":"    void execute_validIndex_unmarksTask() throws DukeException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChauuuLe"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChauuuLe"},"content":"        Storage storage \u003d new Storage(\"test.txt\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChauuuLe"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChauuuLe"},"content":"        taskList.addTask(new Todo(\"Read book\"));","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChauuuLe"},"content":"        taskList.getTasks().get(0).markAsDone(); // Mark as done initially","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChauuuLe"},"content":"        ","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChauuuLe"},"content":"        UnmarkCommand command \u003d new UnmarkCommand(1);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChauuuLe"},"content":"        command.execute(taskList, ui, storage);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChauuuLe"},"content":"        ","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChauuuLe"},"content":"        assertFalse(taskList.getTasks().get(0).isDone());","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChauuuLe"},"content":"    ","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChauuuLe"},"content":"    @Test","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChauuuLe"},"content":"    void execute_invalidIndex_throwsException() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChauuuLe"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChauuuLe"},"content":"        Storage storage \u003d new Storage(\"./src/test/data/test.txt\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChauuuLe"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChauuuLe"},"content":"        ","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChauuuLe"},"content":"        UnmarkCommand command \u003d new UnmarkCommand(5);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChauuuLe"},"content":"        ","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChauuuLe"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChauuuLe"},"content":"            command.execute(taskList, ui, storage);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChauuuLe"},"content":"        });","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChauuuLe"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChauuuLe"},"content":"}","lastModifiedDate":"2025-02-14","isFullCredit":false}],"authorContributionMap":{"ChauuuLe":42}},{"path":"test.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ChauuuLe"},"content":"T | 0 | Read book","lastModifiedDate":"2025-02-14","isFullCredit":false}],"authorContributionMap":{"ChauuuLe":1}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ChauuuLe"},"content":"T | 0 | read book","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChauuuLe"},"content":"D | 1 | return book | 2/12/2019 1800","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"ChauuuLe":2}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ChauuuLe"},"content":"todo read book","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChauuuLe"},"content":"deadline return book /by 2/12/2019 1800","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChauuuLe"},"content":"event project meeting /from 2/12/2019 1400 /to 2/12/2019 1600","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChauuuLe"},"content":"list","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChauuuLe"},"content":"mark 2","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChauuuLe"},"content":"unmark 1","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChauuuLe"},"content":"delete 3","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChauuuLe"},"content":"list","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChauuuLe"},"content":"bye","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"ChauuuLe":9}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChauuuLe"},"content":"# Compile the code into the bin folder, terminate if an error occurs","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChauuuLe"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/dak/**/*.java; then","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChauuuLe"},"content":"java -classpath ../bin dak.ui.Dak \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"ChauuuLe":3,"-":34}}]
