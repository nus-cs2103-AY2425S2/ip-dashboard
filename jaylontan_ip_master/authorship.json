[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jaylontan"},"content":"# Teddy project template","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jaylontan"},"content":"1. After that, locate the `src/main/java/Teddy.java` file, right-click it, and choose `Run Teddy.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false}],"authorContributionMap":{"jaylontan":2,"-":24}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jaylontan"},"content":"# Teddy User Guide","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"jaylontan":1,"-":29}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaylontan"},"content":"public enum Command{","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jaylontan"},"content":"    TODO,","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jaylontan"},"content":"    DEADLINE,","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jaylontan"},"content":"    EVENT,","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jaylontan"},"content":"    LIST,","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jaylontan"},"content":"    MARK,","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jaylontan"},"content":"    UNMARK,","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jaylontan"},"content":"    DELETE,","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jaylontan"},"content":"    BYE;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jaylontan"},"content":"    public static Command fromString(String command) throws TeddyException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jaylontan"},"content":"        try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jaylontan"},"content":"            return Command.valueOf(command.toUpperCase());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jaylontan"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jaylontan"},"content":"            throw new TeddyException(\"I don\u0027t understand the command: \" + command);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jaylontan"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jaylontan"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jaylontan"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"jaylontan":18}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaylontan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jaylontan"},"content":"    private final String time;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jaylontan"},"content":"    public Deadline(String input, String time) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jaylontan"},"content":"        super(input);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jaylontan"},"content":"        this.time \u003d time;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jaylontan"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jaylontan"},"content":"    public String getTime() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jaylontan"},"content":"        return this.time;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jaylontan"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jaylontan"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jaylontan"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jaylontan"},"content":"        return \"D | \" + (isDone() ? \"1\" : \"0\") + \" | \" + getTask() + \" | \" + time;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jaylontan"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jaylontan"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jaylontan"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jaylontan"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.time + \")\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jaylontan"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jaylontan"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"jaylontan":23}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaylontan"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jaylontan"},"content":"    private final String start;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jaylontan"},"content":"    private final String end;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jaylontan"},"content":"    public Event(String input, String start, String end) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jaylontan"},"content":"        super(input);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jaylontan"},"content":"        this.start \u003d start;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jaylontan"},"content":"        this.end \u003d end;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jaylontan"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jaylontan"},"content":"    public String getStart() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jaylontan"},"content":"        return this.start;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jaylontan"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jaylontan"},"content":"    public String getEnd() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jaylontan"},"content":"        return this.end;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jaylontan"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jaylontan"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jaylontan"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jaylontan"},"content":"        return \"E | \" + (isDone() ? \"1\" : \"0\") + \" | \" + getTask() + \" | \" + start + \" | \" + end;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jaylontan"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jaylontan"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jaylontan"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jaylontan"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jaylontan"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jaylontan"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"jaylontan":29}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaylontan"},"content":"public class Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jaylontan"},"content":"    private final String task;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jaylontan"},"content":"    private boolean done;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jaylontan"},"content":"    public Task(String task) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jaylontan"},"content":"        this.task \u003d task;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jaylontan"},"content":"        this.done \u003d false;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jaylontan"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jaylontan"},"content":"    public void mark() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jaylontan"},"content":"        this.done \u003d true;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jaylontan"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jaylontan"},"content":"    public void unmark() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jaylontan"},"content":"        this.done \u003d false;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jaylontan"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jaylontan"},"content":"    public String getTask() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jaylontan"},"content":"        return this.task;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jaylontan"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jaylontan"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jaylontan"},"content":"        return this.done;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jaylontan"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jaylontan"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jaylontan"},"content":"        return \"T | \" + (done ? \"1\" : \"0\") + \" | \" + task;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jaylontan"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jaylontan"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jaylontan"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jaylontan"},"content":"        if (this.done) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jaylontan"},"content":"            return \"[X] \" + this.task;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jaylontan"},"content":"        } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jaylontan"},"content":"            return \"[ ] \" + this.task;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jaylontan"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jaylontan"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jaylontan"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"jaylontan":39}},{"path":"src/main/java/Teddy.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaylontan"},"content":"import java.io.*;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jaylontan"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jaylontan"},"content":"import java.util.List;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jaylontan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jaylontan"},"content":"public class Teddy {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jaylontan"},"content":"    private static final String SEPERATOR \u003d  \"_\".repeat(60);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jaylontan"},"content":"    private static final String FILE_PATH \u003d \"./data/teddy.txt\";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jaylontan"},"content":"    private static final List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jaylontan"},"content":"        // load file contents into list","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jaylontan"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jaylontan"},"content":"            loadFileContents();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jaylontan"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jaylontan"},"content":"            System.out.println(\"File not found\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jaylontan"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jaylontan"},"content":"        // chatbot greeting","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jaylontan"},"content":"        System.out.println(SEPERATOR + \"\\nHello! I\u0027m Teddy\\nWhat can I do for you?\\n\" + SEPERATOR);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jaylontan"},"content":"        // reading input from user","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jaylontan"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jaylontan"},"content":"        while (true) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jaylontan"},"content":"            try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jaylontan"},"content":"                String input \u003d sc.nextLine();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jaylontan"},"content":"                String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jaylontan"},"content":"                Command command \u003d Command.fromString(parts[0]);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jaylontan"},"content":"                switch (command) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jaylontan"},"content":"                    case BYE:","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jaylontan"},"content":"                        System.out.println(SEPERATOR + \"\\nBye! Hope to see you again soon!\\n\" + SEPERATOR);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jaylontan"},"content":"                        return;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jaylontan"},"content":"                    case LIST:","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jaylontan"},"content":"                        listTasks();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jaylontan"},"content":"                        break;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jaylontan"},"content":"                    case MARK:","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jaylontan"},"content":"                        markAsDone(parts);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jaylontan"},"content":"                        break;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jaylontan"},"content":"                    case UNMARK:","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jaylontan"},"content":"                        unmark(parts);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jaylontan"},"content":"                        break;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jaylontan"},"content":"                    case TODO:","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jaylontan"},"content":"                        addTodo(parts);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jaylontan"},"content":"                        break;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jaylontan"},"content":"                    case DEADLINE:","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jaylontan"},"content":"                        addDeadline(parts);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jaylontan"},"content":"                        break;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jaylontan"},"content":"                    case EVENT:","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jaylontan"},"content":"                        addEvent(parts[1]);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jaylontan"},"content":"                        break;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jaylontan"},"content":"                    case DELETE:","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jaylontan"},"content":"                        deleteTask(parts);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jaylontan"},"content":"                        break;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jaylontan"},"content":"                    default:","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jaylontan"},"content":"                        throw new TeddyException(\"I don\u0027t understand the command: \" + parts[0]);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jaylontan"},"content":"                }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jaylontan"},"content":"            } catch (TeddyException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jaylontan"},"content":"                System.out.println(SEPERATOR + \"\\n\" + e.getMessage() + \"\\n\" + SEPERATOR);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jaylontan"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jaylontan"},"content":"                System.out.println(SEPERATOR + \"\\nSomething went wrong. Please try again.\\n\" + SEPERATOR);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jaylontan"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jaylontan"},"content":"    public static void listTasks() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jaylontan"},"content":"        System.out.println(SEPERATOR + \"\\nHere are the tasks in your list:\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jaylontan"},"content":"        int count \u003d 1;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jaylontan"},"content":"        for (Task task : list) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jaylontan"},"content":"            System.out.println(count + \". \" + task);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jaylontan"},"content":"            count++;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jaylontan"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jaylontan"},"content":"        System.out.println(SEPERATOR);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jaylontan"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jaylontan"},"content":"    public static void markAsDone(String[] parts) throws TeddyException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jaylontan"},"content":"        if (parts.length \u003c\u003d 1 || parts[1].isBlank()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jaylontan"},"content":"            throw new TeddyException(\"Please specify the task number to mark as done.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jaylontan"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jaylontan"},"content":"        try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jaylontan"},"content":"            int index \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jaylontan"},"content":"            list.get(index - 1).mark();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jaylontan"},"content":"            updateTaskInFile(index - 1);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jaylontan"},"content":"            System.out.println(SEPERATOR + \"\\nNice! I\u0027ve marked this task as done:\\n   \" +","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jaylontan"},"content":"                    list.get(index - 1).toString() + \"\\n\" + SEPERATOR);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jaylontan"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jaylontan"},"content":"            throw new TeddyException(\"Task number \" + parts[1] + \" does not exist.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jaylontan"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jaylontan"},"content":"            throw new TeddyException(\"Task number must be a valid integer.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jaylontan"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jaylontan"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jaylontan"},"content":"    public static void unmark(String[] parts) throws TeddyException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jaylontan"},"content":"        if (parts.length \u003c\u003d 1 || parts[1].isBlank()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jaylontan"},"content":"            throw new TeddyException(\"Please specify the task number to marked as not done.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jaylontan"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jaylontan"},"content":"        try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jaylontan"},"content":"            int index \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jaylontan"},"content":"            list.get(index - 1).unmark();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jaylontan"},"content":"            updateTaskInFile(index - 1);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jaylontan"},"content":"            System.out.println(SEPERATOR + \"\\nOK, I\u0027ve marked this task as not done yet:\\n   \" +","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jaylontan"},"content":"                    list.get(index - 1).toString() + \"\\n\" + SEPERATOR);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jaylontan"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jaylontan"},"content":"            throw new TeddyException(\"Task number \" + parts[1] + \" does not exist.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jaylontan"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jaylontan"},"content":"            throw new TeddyException(\"Task number must be a valid integer.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jaylontan"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jaylontan"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jaylontan"},"content":"    public static void addTodo(String[] parts) throws TeddyException{","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jaylontan"},"content":"        if (parts.length \u003c\u003d 1 || parts[1].isBlank()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jaylontan"},"content":"            throw new TeddyException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jaylontan"},"content":"        } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"jaylontan"},"content":"            Todo todo \u003d new Todo(parts[1]);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"jaylontan"},"content":"            list.add(todo);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"jaylontan"},"content":"            try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"jaylontan"},"content":"                writeToFile(\"T|\" + (todo.isDone() ? \"1|\" : \"0|\" + todo.getTask()));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"jaylontan"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"jaylontan"},"content":"                System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"jaylontan"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"jaylontan"},"content":"            System.out.println(SEPERATOR + \"\\nGot it, I\u0027ve added this task:\\n  \" + todo","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"jaylontan"},"content":"                    + \"\\nNow you have \" + list.size() + (list.size() \u003e 1 ? \" tasks\" : \" task\") + \" in the list.\\n\" + SEPERATOR);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"jaylontan"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"jaylontan"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"jaylontan"},"content":"    public static void addDeadline(String[] parts) throws TeddyException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"jaylontan"},"content":"        Deadline deadline \u003d getDeadline(parts);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"jaylontan"},"content":"        list.add(deadline);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"jaylontan"},"content":"        System.out.println(SEPERATOR + \"\\nGot it, I\u0027ve added this task:\\n  \" + deadline","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"jaylontan"},"content":"                + \"\\nNow you have \" + list.size() + (list.size() \u003e 1 ? \" tasks\" : \" task\") + \" in the list.\\n\" + SEPERATOR);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"jaylontan"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"jaylontan"},"content":"            writeToFile(\"D|\" + (deadline.isDone() ? \"1|\" : \"0|\") + deadline.getTask() + \"|\" + deadline.getTime());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"jaylontan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"jaylontan"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"jaylontan"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"jaylontan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"jaylontan"},"content":"    private static Deadline getDeadline(String[] parts) throws TeddyException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"jaylontan"},"content":"        if (parts.length \u003c\u003d 1 || parts[1].isBlank()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"jaylontan"},"content":"            throw new TeddyException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"jaylontan"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"jaylontan"},"content":"        if (!parts[1].contains(\"/by\")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"jaylontan"},"content":"            throw new TeddyException(\"A deadline must have a \u0027/by\u0027 followed by the time (e.g., \u0027deadline task /by time\u0027).\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"jaylontan"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"jaylontan"},"content":"        String[] split \u003d parts[1].split(\"/by\", 2);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"jaylontan"},"content":"        if (split.length \u003c 2 || split[1].isBlank()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"jaylontan"},"content":"            throw new TeddyException(\"The time for a deadline cannot be empty.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"jaylontan"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"jaylontan"},"content":"        return new Deadline(split[0].trim(), split[1].trim());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"jaylontan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"jaylontan"},"content":"    public static void addEvent(String input) throws TeddyException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"jaylontan"},"content":"        Event event \u003d getEvent(input);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"jaylontan"},"content":"        list.add(event);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"jaylontan"},"content":"        System.out.println(SEPERATOR + \"\\nGot it, I\u0027ve added this task:\\n  \" + event","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"jaylontan"},"content":"                + \"\\nNow you have \" + list.size() + (list.size() \u003e 1 ? \" tasks\" : \" task\") + \" in the list.\\n\" + SEPERATOR);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"jaylontan"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"jaylontan"},"content":"            writeToFile(\"E|\" + (event.isDone() ? \"1|\" : \"0|\") + event.getTask() +","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"jaylontan"},"content":"                    \"|from:\" + event.getStart() + \"|to:\" + event.getEnd());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"jaylontan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"jaylontan"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"jaylontan"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"jaylontan"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"jaylontan"},"content":"    private static Event getEvent(String input) throws TeddyException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"jaylontan"},"content":"        if (input \u003d\u003d null || input.isBlank()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"jaylontan"},"content":"            throw new TeddyException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"jaylontan"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"jaylontan"},"content":"        if (!input.contains(\"/from\") || !input.contains(\"/to\")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"jaylontan"},"content":"            throw new TeddyException(\"An event must have \u0027/from\u0027 and \u0027/to\u0027 followed by the start and end times.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"jaylontan"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"jaylontan"},"content":"        String[] split \u003d input.split(\"/\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"jaylontan"},"content":"        if (split.length \u003c 3) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"jaylontan"},"content":"            throw new TeddyException(\"The start and end times for an event cannot be empty.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"jaylontan"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"jaylontan"},"content":"        String task \u003d split[0].trim();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"jaylontan"},"content":"        String start \u003d split[1].split(\" \", 2)[1].trim();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"jaylontan"},"content":"        String end \u003d split[2].split(\" \", 2)[1].trim();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"jaylontan"},"content":"        return new Event(task, start, end);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"jaylontan"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"jaylontan"},"content":"    public static void deleteTask(String[] parts) throws TeddyException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"jaylontan"},"content":"        try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"jaylontan"},"content":"            if (parts.length \u003c\u003d 1 || parts[1].isBlank()) { // check if index is provided","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"jaylontan"},"content":"                throw new TeddyException(\"Please specify the task number to delete.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"jaylontan"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"jaylontan"},"content":"            int index \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"jaylontan"},"content":"            if (index \u003c 1 || index \u003e list.size()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"jaylontan"},"content":"                throw new TeddyException(\"Task number \" + index + \" does not exist in the list.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"jaylontan"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"jaylontan"},"content":"            System.out.println(SEPERATOR + \"\\nNoted. I\u0027ve removed this task:\\n  \" + list.get(index - 1));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"jaylontan"},"content":"            list.remove(index - 1);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"jaylontan"},"content":"            rewriteFile();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"jaylontan"},"content":"            System.out.println(\"Now you have \" + list.size() + (list.size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\\n\" + SEPERATOR);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"jaylontan"},"content":"        } catch (NumberFormatException e) { // handle non integer input","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"jaylontan"},"content":"            throw new TeddyException(\"Task number must be a valid integer.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"jaylontan"},"content":"        } catch (IndexOutOfBoundsException e) { //handle index out of range errors","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"jaylontan"},"content":"            throw new TeddyException(\"Task number is out of range. Please try again.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"jaylontan"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"jaylontan"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"jaylontan"},"content":"    private static void loadFileContents() throws FileNotFoundException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"jaylontan"},"content":"        File f \u003d new File(FILE_PATH);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"jaylontan"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"jaylontan"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"jaylontan"},"content":"            String task \u003d s.nextLine();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"jaylontan"},"content":"            list.add(parseTask(task));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"jaylontan"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"jaylontan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"jaylontan"},"content":"    private static void writeToFile(String textToAdd) throws IOException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"jaylontan"},"content":"        FileWriter fw \u003d new FileWriter(FILE_PATH, true);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"jaylontan"},"content":"        fw.write(textToAdd + System.lineSeparator());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"jaylontan"},"content":"        fw.close();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"jaylontan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"jaylontan"},"content":"    private static Task parseTask(String line) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"jaylontan"},"content":"        String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"jaylontan"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"jaylontan"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"jaylontan"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"jaylontan"},"content":"        switch (type) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"jaylontan"},"content":"            case \"T\":","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"jaylontan"},"content":"                Todo todo \u003d new Todo(description);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"jaylontan"},"content":"                if (isDone) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"jaylontan"},"content":"                    todo.mark();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"jaylontan"},"content":"                }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"jaylontan"},"content":"                return todo;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"jaylontan"},"content":"            case \"D\":","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"jaylontan"},"content":"                String by \u003d parts[3].trim(); // Deadline time","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"jaylontan"},"content":"                Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"jaylontan"},"content":"                if (isDone) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"jaylontan"},"content":"                    deadline.mark();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"jaylontan"},"content":"                }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"jaylontan"},"content":"                return deadline;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"jaylontan"},"content":"            case \"E\":","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"jaylontan"},"content":"                String start \u003d parts[3].trim().substring(5); // Extract \"from:\" value","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"jaylontan"},"content":"                String end \u003d parts[4].trim().substring(3);   // Extract \"to:\" value","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"jaylontan"},"content":"                Event event \u003d new Event(description, start, end);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"jaylontan"},"content":"                if (isDone) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"jaylontan"},"content":"                    event.mark();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"jaylontan"},"content":"                }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"jaylontan"},"content":"                return event;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"jaylontan"},"content":"            default:","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"jaylontan"},"content":"                throw new IllegalArgumentException(\"Invalid task type in file: \" + type);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"jaylontan"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"jaylontan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"jaylontan"},"content":"    private static void updateTaskInFile(int taskIndex) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"jaylontan"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"jaylontan"},"content":"            File file \u003d new File(FILE_PATH);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"jaylontan"},"content":"            List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"jaylontan"},"content":"            try (BufferedReader br \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"jaylontan"},"content":"                String line;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"jaylontan"},"content":"                while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"jaylontan"},"content":"                    lines.add(line);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"jaylontan"},"content":"                }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"jaylontan"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"jaylontan"},"content":"            if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c lines.size()) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"jaylontan"},"content":"                String updatedLine \u003d getUpdatedLine(taskIndex);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"jaylontan"},"content":"                lines.set(taskIndex, updatedLine);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"jaylontan"},"content":"            } else {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"jaylontan"},"content":"                throw new IndexOutOfBoundsException(\"Task index out of range.\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"jaylontan"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"jaylontan"},"content":"            // Write the updated lines back to the file","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"jaylontan"},"content":"            try (BufferedWriter bw \u003d new BufferedWriter(new FileWriter(file))) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"jaylontan"},"content":"                for (String line : lines) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"jaylontan"},"content":"                    bw.write(line);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"jaylontan"},"content":"                    bw.newLine();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"jaylontan"},"content":"                }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"jaylontan"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"jaylontan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"jaylontan"},"content":"            System.out.println(\"Something went wrong while updating the file: \" + e.getMessage());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"jaylontan"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"jaylontan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"jaylontan"},"content":"    private static String getUpdatedLine(int taskIndex) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"jaylontan"},"content":"        Task task \u003d list.get(taskIndex);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"jaylontan"},"content":"        String updatedLine;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"jaylontan"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"jaylontan"},"content":"            updatedLine \u003d \"T|\" + (task.isDone() ? \"1|\" : \"0|\") + task.getTask();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"jaylontan"},"content":"        } else if (task instanceof Deadline deadline) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"jaylontan"},"content":"            updatedLine \u003d \"D|\" + (task.isDone() ? \"1|\" : \"0|\") + deadline.getTask() + \"|\" + deadline.getTime();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"jaylontan"},"content":"        } else if (task instanceof Event event) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"jaylontan"},"content":"            updatedLine \u003d \"E|\" + (task.isDone() ? \"1|\" : \"0|\") + event.getTask() + \"|from:\" + event.getStart() + \"|to:\" + event.getEnd();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"jaylontan"},"content":"        } else {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"jaylontan"},"content":"            throw new IllegalArgumentException(\"Unknown task type.\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"jaylontan"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"jaylontan"},"content":"        return updatedLine;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"jaylontan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"jaylontan"},"content":"    private static void rewriteFile() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"jaylontan"},"content":"        try (BufferedWriter bw \u003d new BufferedWriter(new FileWriter(FILE_PATH))) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"jaylontan"},"content":"            for (Task task : list) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"jaylontan"},"content":"                String line;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"jaylontan"},"content":"                if (task instanceof Todo) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"jaylontan"},"content":"                    line \u003d \"T|\" + (task.isDone() ? \"1|\" : \"0|\") + task.getTask();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"jaylontan"},"content":"                } else if (task instanceof Deadline deadline) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"jaylontan"},"content":"                    line \u003d \"D|\" + (task.isDone() ? \"1|\" : \"0|\") + deadline.getTask() + \"|\" + deadline.getTime();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"jaylontan"},"content":"                } else if (task instanceof Event event) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"jaylontan"},"content":"                    line \u003d \"E|\" + (task.isDone() ? \"1|\" : \"0|\") + event.getTask() + \"|from:\" + event.getStart() + \"|to:\" + event.getEnd();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"jaylontan"},"content":"                } else {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"jaylontan"},"content":"                    throw new IllegalArgumentException(\"Unknown task type.\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"jaylontan"},"content":"                }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"jaylontan"},"content":"                bw.write(line);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"jaylontan"},"content":"                bw.newLine();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"jaylontan"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"jaylontan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"jaylontan"},"content":"            System.out.println(\"Something went wrong while rewriting the file: \" + e.getMessage());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"jaylontan"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"jaylontan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"jaylontan"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"jaylontan":331,"-":3}},{"path":"src/main/java/TeddyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaylontan"},"content":"public class TeddyException extends Exception {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jaylontan"},"content":"    public TeddyException(String message) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jaylontan"},"content":"        super(message);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jaylontan"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jaylontan"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"jaylontan":5}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaylontan"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jaylontan"},"content":"    public Todo(String task) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jaylontan"},"content":"        super(task);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jaylontan"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jaylontan"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jaylontan"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jaylontan"},"content":"        return \"T | \" + (isDone() ? \"1\" : \"0\") + \" | \" + getTask();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jaylontan"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jaylontan"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jaylontan"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jaylontan"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jaylontan"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jaylontan"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"jaylontan":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jaylontan"},"content":"todo borrow book","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jaylontan"},"content":"todo read book","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jaylontan"},"content":"deadline return book /by 2025-01-25","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jaylontan"},"content":"event project meeting /from 2025-01-23 /to 2025-01-24","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jaylontan"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jaylontan"},"content":"mark 2","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jaylontan"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jaylontan"},"content":"unmark 2","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jaylontan"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jaylontan"},"content":"bye","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jaylontan"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"jaylontan":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jaylontan"},"content":"java -classpath ..\\bin Teddy \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":20,"jaylontan":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jaylontan"},"content":"java -classpath ../out Teddy \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":37,"jaylontan":1}}]
