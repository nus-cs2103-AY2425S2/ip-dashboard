[{"path":"AI.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"advaypakhale"},"content":"# AI Tool Usage Log","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"advaypakhale"},"content":"___","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"advaypakhale"},"content":"## Week 2","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"advaypakhale"},"content":"### Claude 3.5 Sonnet","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"advaypakhale"},"content":"- **Used for**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"advaypakhale"},"content":"    - Generating a simple `AI.md` file for the project.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"advaypakhale"},"content":"    - Generating sample test cases for the project.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"advaypakhale"},"content":"- **Effectiveness**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"advaypakhale"},"content":"    - The tool was effective in generating the initial structure of the `AI.md` file.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"advaypakhale"},"content":"    - The tool was effective in generating sample test cases for the project.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"advaypakhale"},"content":"- **Time Impact**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"advaypakhale"},"content":"    - The tool saved time in generating the initial structure of the `AI.md` file.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"advaypakhale"},"content":"    - The tool saved time in generating sample test cases for the project.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"advaypakhale"},"content":"- **Challenges**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"advaypakhale"},"content":"    - The tool was not able to generate all the test cases required for the project. Some human oversight was still","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"advaypakhale"},"content":"      required.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"advaypakhale"},"content":"### GitHub Copilot","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"advaypakhale"},"content":"- **Used for**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"advaypakhale"},"content":"    - Auto-completing code snippets throughout the project, although generally _minimally_ method signatures were still","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"advaypakhale"},"content":"      manually written.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"advaypakhale"},"content":"- **Effectiveness**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"advaypakhale"},"content":"    - The tool was effective in auto-completing basic logic and boilerplate, such as the error messages for exceptions.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"advaypakhale"},"content":"- **Time Impact**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"advaypakhale"},"content":"    - The tool saved time in writing boilerplate code.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"advaypakhale"},"content":"- **Challenges**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"advaypakhale"},"content":"    - The tool often suggested code that was not relevant to the current context, which required manual filtering.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"advaypakhale"},"content":"    - The tool often generated code that did not align with the architecture of the project I had in mind.","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"advaypakhale":33}},{"path":"CONTRIBUTORS.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Contributors","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":" Display                                                      |        Name         |            Github Profile             |                      Homepage                      ","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"advaypakhale"},"content":"--------------------------------------------------------------|:-------------------:|:-------------------------------------:|:--------------------------------------------------:","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":" ![](https://avatars0.githubusercontent.com/u/22460123?s\u003d100) |     Jeffry Lum      |  [Github](https://github.com/j-lum/)  |        [Homepage](https://se.kasugano.moe)         ","lastModifiedDate":"2019-08-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":" ![](https://avatars0.githubusercontent.com/u/1673303?s\u003d100)  | Damith C. Rajapakse | [Github](https://github.com/damithc/) | [Homepage](https://www.comp.nus.edu.sg/~damithch/) ","lastModifiedDate":"2019-08-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"# I would like to join this list. How can I help the project","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"For more information, please refer to our [contributor\u0027s guide](https://oss-generic.github.io/process/).","lastModifiedDate":"2019-07-29","isFullCredit":false}],"authorContributionMap":{"advaypakhale":2,"-":8}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"advaypakhale"},"content":"# bob.Bob project template","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"advaypakhale"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"advaypakhale"},"content":"instructions on how to use it.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"advaypakhale"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"advaypakhale"},"content":"   first)","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"advaypakhale"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"advaypakhale"},"content":"   in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"advaypakhale"},"content":"1. After that, locate the `src/main/java/bob.Bob.java` file, right-click it, and choose `Run bob.Bob.main()` (if the","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"advaypakhale"},"content":"   code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"advaypakhale"},"content":"   like the below as the output:","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"advaypakhale"},"content":"        ____        __  ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"advaypakhale"},"content":"       / __ )____  / /_","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"advaypakhale"},"content":"      / __  / __ \\/ __ \\","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"advaypakhale"},"content":"     / /_/ / /_/ / /_/ /","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"advaypakhale"},"content":"    /_____/\\____/_.___/ ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"advaypakhale"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"advaypakhale"},"content":"Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle)","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"advaypakhale"},"content":"expect to find Java files.","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"advaypakhale":18,"-":15}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"advaypakhale"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"advaypakhale"},"content":"    testImplementation \u0027org.mockito:mockito-core:5.10.0\u0027","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"advaypakhale"},"content":"    testImplementation \u0027org.mockito:mockito-junit-jupiter:5.10.0\u0027","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"advaypakhale"},"content":"    mainClass.set(\"bob.Bob\")","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"advaypakhale"},"content":"    archiveBaseName \u003d \"bob\"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"advaypakhale"},"content":"checkstyle {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"advaypakhale"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"advaypakhale"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"advaypakhale":10,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"advaypakhale"},"content":"# bob.Bob User Guide","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"advaypakhale":1,"-":28}},{"path":"src/main/java/bob/Bob.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"advaypakhale"},"content":"package bob;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"advaypakhale"},"content":"import bob.command.Command;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"advaypakhale"},"content":"import bob.command.ExitCommand;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"advaypakhale"},"content":"import bob.parser.Parser;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"advaypakhale"},"content":"import bob.storage.Storage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"advaypakhale"},"content":"import bob.task.TaskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"advaypakhale"},"content":"import bob.ui.Ui;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"advaypakhale"},"content":"/**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"advaypakhale"},"content":" * Main class that serves as the entry point and controller for the Bob task management application.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"advaypakhale"},"content":" * Coordinates between the UI, storage, parser and task components to provide task management functionality.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"advaypakhale"},"content":" */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"advaypakhale"},"content":"public class Bob {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"advaypakhale"},"content":"     * File path where tasks are persisted","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"advaypakhale"},"content":"    private static final String FILE_PATH \u003d \"./data/tasks.txt\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"advaypakhale"},"content":"     * List containing all tasks","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"advaypakhale"},"content":"    private final TaskList tasks;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"advaypakhale"},"content":"     * Handles user interface interactions","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"advaypakhale"},"content":"    private final Ui ui;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"advaypakhale"},"content":"     * Parses user input into commands","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"advaypakhale"},"content":"    private final Parser parser;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"advaypakhale"},"content":"     * Manages saving and loading of tasks","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"advaypakhale"},"content":"    private final Storage storage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"advaypakhale"},"content":"     * Flag indicating if the application is still running","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"advaypakhale"},"content":"    private Boolean isActive;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"advaypakhale"},"content":"     * Creates a new Bob application instance.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"advaypakhale"},"content":"     * Initializes all components (UI, storage, parser, task list) and loads any existing tasks.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"advaypakhale"},"content":"    public Bob() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"advaypakhale"},"content":"        this.isActive \u003d true;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"advaypakhale"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"advaypakhale"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"advaypakhale"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"advaypakhale"},"content":"        this.storage \u003d new Storage(FILE_PATH, tasks);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"advaypakhale"},"content":"     * Entry point of the application.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"advaypakhale"},"content":"     * Creates a Bob instance and starts the application loop.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"advaypakhale"},"content":"     * @param args command line arguments (not used)","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"advaypakhale"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"advaypakhale"},"content":"        Bob bob \u003d new Bob();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"advaypakhale"},"content":"        bob.run();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"advaypakhale"},"content":"     * Main application loop.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"advaypakhale"},"content":"     * Displays welcome message and repeatedly:","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"advaypakhale"},"content":"     * 1. Gets user input","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"advaypakhale"},"content":"     * 2. Parses input into a command","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"advaypakhale"},"content":"     * 3. Executes the command","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"advaypakhale"},"content":"     * 4. Exits if an ExitCommand is received","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"advaypakhale"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"advaypakhale"},"content":"     * Any exceptions during execution are caught and their messages displayed to the user.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"advaypakhale"},"content":"    public void run() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"advaypakhale"},"content":"        ui.greet();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"advaypakhale"},"content":"        while (isActive) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"advaypakhale"},"content":"            try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"advaypakhale"},"content":"                String[] userInput \u003d ui.getUserInput();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"advaypakhale"},"content":"                Command cmd \u003d parser.parseUserInput(userInput);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"advaypakhale"},"content":"                cmd.execute(tasks, ui, storage);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"advaypakhale"},"content":"                if (cmd instanceof ExitCommand) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"advaypakhale"},"content":"                    isActive \u003d false;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"advaypakhale"},"content":"                }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"advaypakhale"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"advaypakhale"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"advaypakhale"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"advaypakhale"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"advaypakhale":88}},{"path":"src/main/java/bob/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"advaypakhale"},"content":"package bob.command;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"advaypakhale"},"content":"import bob.exceptions.IllegalCommandException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"advaypakhale"},"content":"import bob.storage.Storage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"advaypakhale"},"content":"import bob.task.TaskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"advaypakhale"},"content":"import bob.ui.Ui;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"advaypakhale"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"advaypakhale"},"content":"/**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"advaypakhale"},"content":" * Represents an abstract command that can be executed.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"advaypakhale"},"content":" * Each command has a message output and user input associated with it.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"advaypakhale"},"content":" */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"advaypakhale"},"content":"public abstract class Command {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"advaypakhale"},"content":"    protected StringBuilder message;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"advaypakhale"},"content":"    protected String[] userInput;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"advaypakhale"},"content":"     * Constructs a Command object with the specified user input.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"advaypakhale"},"content":"     * @param userInput An array of strings representing the user\u0027s input.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"advaypakhale"},"content":"    public Command(String[] userInput) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"advaypakhale"},"content":"        this.message \u003d new StringBuilder();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"advaypakhale"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"advaypakhale"},"content":"     * Executes the command with the given task list, UI, and storage.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"advaypakhale"},"content":"     * @param tasks   The task list to be manipulated by the command.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"advaypakhale"},"content":"     * @param ui      The UI to interact with the user.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"advaypakhale"},"content":"     * @param storage The storage to save or load data.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"advaypakhale"},"content":"     * @throws IOException             If an input or output error occurs.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"advaypakhale"},"content":"     * @throws IllegalCommandException If the command is illegal or cannot be executed.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"advaypakhale"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws IOException, IllegalCommandException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"advaypakhale"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"advaypakhale":39}},{"path":"src/main/java/bob/command/CreateDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"advaypakhale"},"content":"package bob.command;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"advaypakhale"},"content":"import bob.exceptions.IllegalCommandException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"advaypakhale"},"content":"import bob.storage.Storage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"advaypakhale"},"content":"import bob.task.Deadline;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"advaypakhale"},"content":"import bob.task.Task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"advaypakhale"},"content":"import bob.task.TaskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"advaypakhale"},"content":"import bob.ui.Ui;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"advaypakhale"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"advaypakhale"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"advaypakhale"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"advaypakhale"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"advaypakhale"},"content":"/**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"advaypakhale"},"content":" * Represents a command to create a new deadline task.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"advaypakhale"},"content":" * This command expects the user input to contain a description and a due date in the format \u0027YYYY-MM-DD\u0027.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"advaypakhale"},"content":" * The command will parse the user input, create a new Deadline task, add it to the task list, and save the updated task list to storage.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"advaypakhale"},"content":" * If the user input is invalid, an IllegalCommandException will be thrown.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"advaypakhale"},"content":" */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"advaypakhale"},"content":"public class CreateDeadlineCommand extends Command {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"advaypakhale"},"content":"     * Constructs a CreateDeadlineCommand with the specified user input.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"advaypakhale"},"content":"     * @param userInput The array of strings representing the user\u0027s input.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"advaypakhale"},"content":"    public CreateDeadlineCommand(String[] userInput) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"advaypakhale"},"content":"        super(userInput);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"advaypakhale"},"content":"     * Executes the CreateDeadlineCommand by parsing the user input to create a new Deadline task.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"advaypakhale"},"content":"     * The command expects the input to be in the format: \"deadline \u003cdescription\u003e /by \u003cdue\u003e\".","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"advaypakhale"},"content":"     * The due date must be in the format YYYY-MM-DD.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"advaypakhale"},"content":"     * @param tasks   The TaskList object that stores all tasks.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"advaypakhale"},"content":"     * @param ui      The Ui object that handles user interaction.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"advaypakhale"},"content":"     * @param storage The Storage object that handles saving and loading tasks from the file.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"advaypakhale"},"content":"     * @throws IOException             If there is an error during saving tasks to the file.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"advaypakhale"},"content":"     * @throws IllegalCommandException If the user input is invalid or the date format is incorrect.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"advaypakhale"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"advaypakhale"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException, IllegalCommandException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"advaypakhale"},"content":"        String arguments \u003d \"\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"advaypakhale"},"content":"        for (int i \u003d 1; i \u003c userInput.length; i++) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"advaypakhale"},"content":"            arguments +\u003d userInput[i] + \" \";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"advaypakhale"},"content":"        arguments \u003d arguments.trim();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"advaypakhale"},"content":"        String[] splitArguments \u003d arguments.split(\"/by\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"advaypakhale"},"content":"        if (splitArguments.length !\u003d 2) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"advaypakhale"},"content":"            throw new IllegalCommandException(","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"advaypakhale"},"content":"                    \"I\u0027m sorry, the proper usage of the deadline bob.command is \u0027deadline \u003cdescription\u003e /by \u003cdue\u003e\u0027. Please try again!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"advaypakhale"},"content":"        String description \u003d splitArguments[0].trim();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"advaypakhale"},"content":"        String dateStr \u003d splitArguments[1].trim();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"advaypakhale"},"content":"        LocalDate dueDate;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"advaypakhale"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"advaypakhale"},"content":"            dueDate \u003d LocalDate.parse(dateStr, DateTimeFormatter.ISO_LOCAL_DATE);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"advaypakhale"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"advaypakhale"},"content":"            throw new IllegalCommandException(","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"advaypakhale"},"content":"                    \"I\u0027m sorry, the date must be in YYYY-MM-DD format. For example: 2025-12-31. Please try again!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"advaypakhale"},"content":"        Task newTask \u003d new Deadline(description, dueDate);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"advaypakhale"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"advaypakhale"},"content":"        message.append(\"I have added a new deadline to your calendar: \\n\").append(newTask);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"advaypakhale"},"content":"        storage.save();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"advaypakhale"},"content":"        ui.wrapText(message);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"advaypakhale"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"advaypakhale":74}},{"path":"src/main/java/bob/command/CreateEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"advaypakhale"},"content":"package bob.command;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"advaypakhale"},"content":"import bob.exceptions.IllegalCommandException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"advaypakhale"},"content":"import bob.storage.Storage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"advaypakhale"},"content":"import bob.task.Event;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"advaypakhale"},"content":"import bob.task.Task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"advaypakhale"},"content":"import bob.task.TaskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"advaypakhale"},"content":"import bob.ui.Ui;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"advaypakhale"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"advaypakhale"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"advaypakhale"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"advaypakhale"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"advaypakhale"},"content":"/**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"advaypakhale"},"content":" * Represents a command to create an event task.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"advaypakhale"},"content":" * This command parses user input to extract the event description, start date, and end date,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"advaypakhale"},"content":" * and then adds the event to the task list if the input is valid.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"advaypakhale"},"content":" */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"advaypakhale"},"content":"public class CreateEventCommand extends Command {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"advaypakhale"},"content":"     * Creates a new CreateEventCommand instance.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"advaypakhale"},"content":"     * @param userInput An array of strings containing the user\u0027s input parameters for creating an event","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"advaypakhale"},"content":"    public CreateEventCommand(String[] userInput) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"advaypakhale"},"content":"        super(userInput);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"advaypakhale"},"content":"     * Executes the create event command by parsing the user input and creating a new Event task.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"advaypakhale"},"content":"     * The event requires a description and start/end dates in ISO format (YYYY-MM-DD).","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"advaypakhale"},"content":"     * @param tasks   The task list to add the new event to","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"advaypakhale"},"content":"     * @param ui      The UI handler for displaying messages","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"advaypakhale"},"content":"     * @param storage The storage handler for saving tasks","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"advaypakhale"},"content":"     * @throws IOException             If there is an error saving to storage","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"advaypakhale"},"content":"     * @throws IllegalCommandException If the command format is invalid, dates are in wrong format,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"advaypakhale"},"content":"     *                                 or end date is before start date","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"advaypakhale"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"advaypakhale"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException, IllegalCommandException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"advaypakhale"},"content":"        String arguments \u003d \"\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"advaypakhale"},"content":"        for (int i \u003d 1; i \u003c userInput.length; i++) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"advaypakhale"},"content":"            arguments +\u003d userInput[i] + \" \";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"advaypakhale"},"content":"        arguments \u003d arguments.trim();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"advaypakhale"},"content":"        String[] splitArguments \u003d arguments.split(\"/from\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"advaypakhale"},"content":"        if (splitArguments.length !\u003d 2) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"advaypakhale"},"content":"            throw new IllegalCommandException(","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"advaypakhale"},"content":"                    \"I\u0027m sorry, the proper usage of the event bob.command is \u0027event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\u0027. Please try again!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"advaypakhale"},"content":"        String description \u003d splitArguments[0].trim();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"advaypakhale"},"content":"        String[] startEnd \u003d splitArguments[1].split(\"/to\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"advaypakhale"},"content":"        if (startEnd.length !\u003d 2) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"advaypakhale"},"content":"            throw new IllegalCommandException(","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"advaypakhale"},"content":"                    \"I\u0027m sorry, the proper usage of the event bob.command is \u0027event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\u0027. Please try again!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"advaypakhale"},"content":"        String startDateStr \u003d startEnd[0].trim();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"advaypakhale"},"content":"        String endDateStr \u003d startEnd[1].trim();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"advaypakhale"},"content":"        LocalDate startDate;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"advaypakhale"},"content":"        LocalDate endDate;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"advaypakhale"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"advaypakhale"},"content":"            startDate \u003d LocalDate.parse(startDateStr, DateTimeFormatter.ISO_LOCAL_DATE);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"advaypakhale"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"advaypakhale"},"content":"            throw new IllegalCommandException(","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"advaypakhale"},"content":"                    \"I\u0027m sorry, the start date must be in YYYY-MM-DD format. For example: 2025-12-31. Please try again!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"advaypakhale"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"advaypakhale"},"content":"            endDate \u003d LocalDate.parse(endDateStr, DateTimeFormatter.ISO_LOCAL_DATE);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"advaypakhale"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"advaypakhale"},"content":"            throw new IllegalCommandException(","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"advaypakhale"},"content":"                    \"I\u0027m sorry, the end date must be in YYYY-MM-DD format. For example: 2025-12-31. Please try again!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"advaypakhale"},"content":"        if (endDate.isBefore(startDate)) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"advaypakhale"},"content":"            throw new IllegalCommandException(","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"advaypakhale"},"content":"                    \"I\u0027m sorry, the end date cannot be before the start date. Please try again!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"advaypakhale"},"content":"        Task newTask \u003d new Event(description, startDate, endDate);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"advaypakhale"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"advaypakhale"},"content":"        message.append(\"I have added a new event to your calendar: \\n\").append(newTask);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"advaypakhale"},"content":"        storage.save();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"advaypakhale"},"content":"        ui.wrapText(message);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"advaypakhale"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"advaypakhale":94}},{"path":"src/main/java/bob/command/CreateTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"advaypakhale"},"content":"package bob.command;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"advaypakhale"},"content":"import bob.exceptions.IllegalCommandException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"advaypakhale"},"content":"import bob.storage.Storage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"advaypakhale"},"content":"import bob.task.Task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"advaypakhale"},"content":"import bob.task.TaskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"advaypakhale"},"content":"import bob.task.Todo;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"advaypakhale"},"content":"import bob.ui.Ui;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"advaypakhale"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"advaypakhale"},"content":"/**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"advaypakhale"},"content":" * Represents a command to create a new Todo task.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"advaypakhale"},"content":" * This command processes user input to create and add a Todo task to the task list.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"advaypakhale"},"content":" */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"advaypakhale"},"content":"public class CreateTodoCommand extends Command {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"advaypakhale"},"content":"     * Constructs a new CreateTodoCommand with the given user input.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"advaypakhale"},"content":"     * @param userInput Array of strings containing the command and task description","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"advaypakhale"},"content":"    public CreateTodoCommand(String[] userInput) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"advaypakhale"},"content":"        super(userInput);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"advaypakhale"},"content":"     * Executes the create todo command by creating a new Todo task and adding it to the task list.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"advaypakhale"},"content":"     * The task description is constructed from the user input, excluding the command word.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"advaypakhale"},"content":"     * The new task is then saved to storage and a confirmation message is displayed to the user.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"advaypakhale"},"content":"     * @param tasks   The task list to add the new todo task to","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"advaypakhale"},"content":"     * @param ui      The user interface to display messages","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"advaypakhale"},"content":"     * @param storage The storage system to save the updated task list","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"advaypakhale"},"content":"     * @throws IOException             If there\u0027s an error saving to storage","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"advaypakhale"},"content":"     * @throws IllegalCommandException If the todo description is empty","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"advaypakhale"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"advaypakhale"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException, IllegalCommandException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"advaypakhale"},"content":"        String description \u003d \"\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"advaypakhale"},"content":"        for (int i \u003d 1; i \u003c userInput.length; i++) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"advaypakhale"},"content":"            description +\u003d userInput[i] + \" \";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"advaypakhale"},"content":"        description \u003d description.trim();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"advaypakhale"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"advaypakhale"},"content":"            throw new IllegalCommandException(","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"advaypakhale"},"content":"                    \"I\u0027m sorry, the description of a to-do item cannot be empty. The proper usage of the todo bob.command is \u0027todo \u003cdescription\u003e\u0027. Please try again!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"advaypakhale"},"content":"        Task newTask \u003d new Todo(description);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"advaypakhale"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"advaypakhale"},"content":"        message.append(\"I\u0027ve added a to-do item: \\n\").append(newTask);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"advaypakhale"},"content":"        storage.save();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"advaypakhale"},"content":"        ui.wrapText(message);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"advaypakhale"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"advaypakhale":57}},{"path":"src/main/java/bob/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"advaypakhale"},"content":"package bob.command;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"advaypakhale"},"content":"import bob.exceptions.IllegalCommandException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"advaypakhale"},"content":"import bob.storage.Storage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"advaypakhale"},"content":"import bob.task.TaskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"advaypakhale"},"content":"import bob.ui.Ui;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"advaypakhale"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"advaypakhale"},"content":"/**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"advaypakhale"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"advaypakhale"},"content":" * The command requires an index parameter to specify which task to delete.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"advaypakhale"},"content":" */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"advaypakhale"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"advaypakhale"},"content":"     * Constructs a DeleteCommand with the given user input array.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"advaypakhale"},"content":"     * @param userInput An array of strings containing the command parameters.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"advaypakhale"},"content":"     *                  The first element is the command name,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"advaypakhale"},"content":"     *                  and subsequent elements are the command arguments.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"advaypakhale"},"content":"    public DeleteCommand(String[] userInput) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"advaypakhale"},"content":"        super(userInput);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"advaypakhale"},"content":"     * Executes the delete command to remove a task from the task list.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"advaypakhale"},"content":"     * The command format should be \"delete \u003cindex\u003e\" where index is a valid task number.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"advaypakhale"},"content":"     * @param tasks   The TaskList containing all tasks","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"advaypakhale"},"content":"     * @param ui      The Ui object to handle user interaction","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"advaypakhale"},"content":"     * @param storage The Storage object to save changes to file","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"advaypakhale"},"content":"     * @throws IOException             If there is an error saving to storage","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"advaypakhale"},"content":"     * @throws IllegalCommandException If the command format is invalid, index is not a number,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"advaypakhale"},"content":"     *                                 task list is empty, or index is out of bounds","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"advaypakhale"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"advaypakhale"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException, IllegalCommandException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"advaypakhale"},"content":"        if (userInput.length !\u003d 2) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"advaypakhale"},"content":"            throw new IllegalCommandException(","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"advaypakhale"},"content":"                    \"I\u0027m sorry, the proper usage of the delete bob.command is \u0027delete \u003cindex\u003e\u0027. Please try again!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"advaypakhale"},"content":"        int idx;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"advaypakhale"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"advaypakhale"},"content":"            idx \u003d Integer.parseInt(userInput[1]) - 1;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"advaypakhale"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"advaypakhale"},"content":"            throw new IllegalCommandException(\"I\u0027m sorry, the index of the bob.task to delete must be a number. The proper usage of the delete bob.command is \u0027delete \u003cindex\u003e\u0027. Please try again!\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"advaypakhale"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"advaypakhale"},"content":"            throw new IllegalCommandException(","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"advaypakhale"},"content":"                    \"I\u0027m sorry, you have no tasks in your list to delete. Please add some tasks first!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"advaypakhale"},"content":"        if (idx \u003c 0 || idx \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"advaypakhale"},"content":"            throw new IllegalCommandException(\"I\u0027m sorry, the number of the bob.task to delete must be within 1 and \"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"advaypakhale"},"content":"                    + tasks.size() + \". Please try again!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"advaypakhale"},"content":"        String removedTask \u003d tasks.deleteTask(idx);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"advaypakhale"},"content":"        message.append(\"I have removed this bob.task from your list:\\n\").append(removedTask);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"advaypakhale"},"content":"        storage.save();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"advaypakhale"},"content":"        ui.wrapText(message);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"advaypakhale"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"advaypakhale":66}},{"path":"src/main/java/bob/command/EchoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"advaypakhale"},"content":"package bob.command;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"advaypakhale"},"content":"import bob.exceptions.IllegalCommandException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"advaypakhale"},"content":"import bob.storage.Storage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"advaypakhale"},"content":"import bob.task.TaskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"advaypakhale"},"content":"import bob.ui.Ui;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"advaypakhale"},"content":"/**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"advaypakhale"},"content":" * A command that echoes back the user\u0027s input text.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"advaypakhale"},"content":" * Simply joins all input words with spaces and displays them through the UI.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"advaypakhale"},"content":" */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"advaypakhale"},"content":"public class EchoCommand extends Command {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"advaypakhale"},"content":"     * Creates a new echo command with the given user input.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"advaypakhale"},"content":"     * @param userInput array of strings containing the text to echo","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"advaypakhale"},"content":"    public EchoCommand(String[] userInput) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"advaypakhale"},"content":"        super(userInput);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"advaypakhale"},"content":"     * Executes the echo command by joining all input words and displaying them.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"advaypakhale"},"content":"     * The output is wrapped according to the UI\u0027s text wrapping settings.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"advaypakhale"},"content":"     * @param tasks   the task list (unused for this command)","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"advaypakhale"},"content":"     * @param ui      the UI object used to display the echoed text","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"advaypakhale"},"content":"     * @param storage the storage object (unused for this command)","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"advaypakhale"},"content":"     * @throws IllegalCommandException if there is an error executing the command","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"advaypakhale"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"advaypakhale"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IllegalCommandException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"advaypakhale"},"content":"        ui.wrapText(String.join(\" \", userInput));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"advaypakhale"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"advaypakhale":36}},{"path":"src/main/java/bob/command/EmptyInputCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"advaypakhale"},"content":"package bob.command;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"advaypakhale"},"content":"import bob.storage.Storage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"advaypakhale"},"content":"import bob.task.TaskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"advaypakhale"},"content":"import bob.ui.Ui;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"advaypakhale"},"content":"/**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"advaypakhale"},"content":" * A command class that handles empty user input.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"advaypakhale"},"content":" * This command is triggered when the user enters nothing or only whitespace.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"advaypakhale"},"content":" */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"advaypakhale"},"content":"public class EmptyInputCommand extends Command {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"advaypakhale"},"content":"     * A command that handles empty input from the user.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"advaypakhale"},"content":"     * Extends the base Command class.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"advaypakhale"},"content":"     * @param userInput Array of strings containing the user\u0027s input tokens","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"advaypakhale"},"content":"    public EmptyInputCommand(String[] userInput) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"advaypakhale"},"content":"        super(userInput);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"advaypakhale"},"content":"     * Executes the empty input command by displaying a message prompting the user to enter a command.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"advaypakhale"},"content":"     * @param tasks   The task list containing all tasks","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"advaypakhale"},"content":"     * @param ui      The user interface used to display messages","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"advaypakhale"},"content":"     * @param storage The storage object used to save/load tasks","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"advaypakhale"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"advaypakhale"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"advaypakhale"},"content":"        ui.wrapText(\"Please enter a bob.command. I\u0027m happy to help!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"advaypakhale"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"advaypakhale":33}},{"path":"src/main/java/bob/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"advaypakhale"},"content":"package bob.command;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"advaypakhale"},"content":"import bob.exceptions.IllegalCommandException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"advaypakhale"},"content":"import bob.storage.Storage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"advaypakhale"},"content":"import bob.task.TaskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"advaypakhale"},"content":"import bob.ui.Ui;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"advaypakhale"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"advaypakhale"},"content":"/**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"advaypakhale"},"content":" * Represents a command to exit the application.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"advaypakhale"},"content":" * This command saves all tasks and terminates the program.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"advaypakhale"},"content":" */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"advaypakhale"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"advaypakhale"},"content":"     * Constructs a new ExitCommand with the given user input.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"advaypakhale"},"content":"     * @param userInput Array of strings containing the command and its arguments","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"advaypakhale"},"content":"    public ExitCommand(String[] userInput) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"advaypakhale"},"content":"        super(userInput);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"advaypakhale"},"content":"     * Executes the exit command. Saves all tasks and displays goodbye message.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"advaypakhale"},"content":"     * Throws an exception if any arguments are provided with the \u0027bye\u0027 command.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"advaypakhale"},"content":"     * @param tasks   The task list containing all tasks","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"advaypakhale"},"content":"     * @param ui      The user interface for displaying messages","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"advaypakhale"},"content":"     * @param storage The storage object for saving tasks","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"advaypakhale"},"content":"     * @throws IOException             If there is an error saving the tasks","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"advaypakhale"},"content":"     * @throws IllegalCommandException If arguments are provided with the exit command","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"advaypakhale"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"advaypakhale"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException, IllegalCommandException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"advaypakhale"},"content":"        if (userInput.length !\u003d 1) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"advaypakhale"},"content":"            throw new IllegalCommandException(","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"advaypakhale"},"content":"                    \"I\u0027m sorry, the bob.command \u0027bye\u0027 does not take any arguments. Please try again!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"advaypakhale"},"content":"        message.append(\"Goodbye! Have a great day!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"advaypakhale"},"content":"        storage.save();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"advaypakhale"},"content":"        ui.wrapText(message);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"advaypakhale"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"advaypakhale":44}},{"path":"src/main/java/bob/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"advaypakhale"},"content":"package bob.command;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"advaypakhale"},"content":"import bob.storage.Storage;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"advaypakhale"},"content":"import bob.task.Task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"advaypakhale"},"content":"import bob.task.TaskList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"advaypakhale"},"content":"import bob.ui.Ui;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"advaypakhale"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"advaypakhale"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"advaypakhale"},"content":"    public FindCommand(String[] userInput) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"advaypakhale"},"content":"        super(userInput);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"advaypakhale"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IllegalArgumentException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"advaypakhale"},"content":"        String query \u003d \"\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"advaypakhale"},"content":"        for (int i \u003d 1; i \u003c userInput.length; i++) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"advaypakhale"},"content":"            query +\u003d userInput[i] + \" \";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"advaypakhale"},"content":"        query \u003d query.trim();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"advaypakhale"},"content":"        if (query.isEmpty()) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"advaypakhale"},"content":"            throw new IllegalArgumentException(\"I\u0027m sorry, the proper usage of the find command is \u0027find \u003cquery\u003e. Please try again.\u0027\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"advaypakhale"},"content":"        ArrayList\u003cTask\u003e matchedTasks \u003d tasks.findTask(query);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"advaypakhale"},"content":"        if (matchedTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"advaypakhale"},"content":"            message.append(\"I\u0027m sorry, no tasks matched with the given query. Please try again with another query.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"advaypakhale"},"content":"        } else {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"advaypakhale"},"content":"            message.append(\"I found \" + matchedTasks.size() + \" matching task(s), here they are below!\\n\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"advaypakhale"},"content":"            for (Task task : matchedTasks) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"advaypakhale"},"content":"                message.append(task.toString() + \"\\n\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"advaypakhale"},"content":"            }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"advaypakhale"},"content":"        ui.wrapText(message);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"advaypakhale"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"advaypakhale":37}},{"path":"src/main/java/bob/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"advaypakhale"},"content":"package bob.command;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"advaypakhale"},"content":"import bob.exceptions.IllegalCommandException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"advaypakhale"},"content":"import bob.storage.Storage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"advaypakhale"},"content":"import bob.task.TaskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"advaypakhale"},"content":"import bob.ui.Ui;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"advaypakhale"},"content":"/**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"advaypakhale"},"content":" * Represents a command to display all tasks in the task list.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"advaypakhale"},"content":" * This command does not take any additional arguments.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"advaypakhale"},"content":" */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"advaypakhale"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"advaypakhale"},"content":"     * Constructs a new ListCommand with the given user input.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"advaypakhale"},"content":"     * @param userInput Array of strings containing the command and its arguments","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"advaypakhale"},"content":"    public ListCommand(String[] userInput) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"advaypakhale"},"content":"        super(userInput);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"advaypakhale"},"content":"     * Executes the list command to display all tasks in the task list.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"advaypakhale"},"content":"     * If the list is empty, displays a message indicating no tasks.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"advaypakhale"},"content":"     * Otherwise, displays a numbered list of all tasks.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"advaypakhale"},"content":"     * @param tasks   The TaskList containing all tasks","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"advaypakhale"},"content":"     * @param ui      The user interface to display messages","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"advaypakhale"},"content":"     * @param storage The storage manager for tasks","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"advaypakhale"},"content":"     * @throws IllegalCommandException If the command is used with arguments","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"advaypakhale"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"advaypakhale"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IllegalCommandException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"advaypakhale"},"content":"        if (userInput.length !\u003d 1) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"advaypakhale"},"content":"            throw new IllegalCommandException(","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"advaypakhale"},"content":"                    \"I\u0027m sorry, the bob.command \u0027list\u0027 does not take any arguments. Please try again!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"advaypakhale"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"advaypakhale"},"content":"            message.append(","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"advaypakhale"},"content":"                    \"You have no tasks in your list! Use the \u0027todo\u0027, \u0027deadline\u0027, or \u0027event\u0027 commands to add a bob.task.\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"advaypakhale"},"content":"        } else {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"advaypakhale"},"content":"            message.append(\"Here are the items in your list:\\n\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"advaypakhale"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); ++i) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"advaypakhale"},"content":"                message.append(i + 1).append(\". \").append(tasks.getTaskString(i)).append(\"\\n\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"advaypakhale"},"content":"            }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"advaypakhale"},"content":"        ui.wrapText(message);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"advaypakhale"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"advaypakhale":51}},{"path":"src/main/java/bob/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"advaypakhale"},"content":"package bob.command;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"advaypakhale"},"content":"import bob.exceptions.IllegalCommandException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"advaypakhale"},"content":"import bob.storage.Storage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"advaypakhale"},"content":"import bob.task.TaskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"advaypakhale"},"content":"import bob.ui.Ui;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"advaypakhale"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"advaypakhale"},"content":"/**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"advaypakhale"},"content":" * Represents a command to mark a task as done in the task list.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"advaypakhale"},"content":" * This command allows users to mark a specific task as completed by providing its index.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"advaypakhale"},"content":" */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"advaypakhale"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"advaypakhale"},"content":"     * Creates a new MarkCommand with the specified user input.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"advaypakhale"},"content":"     * This command is used to mark tasks as done/completed.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"advaypakhale"},"content":"     * @param userInput An array of strings containing the command parameters","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"advaypakhale"},"content":"    public MarkCommand(String[] userInput) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"advaypakhale"},"content":"        super(userInput);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"advaypakhale"},"content":"     * Executes the mark command to mark a task as done in the task list.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"advaypakhale"},"content":"     * The command format should be \u0027mark \u003cindex\u003e\u0027.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"advaypakhale"},"content":"     * @param tasks   The task list containing all tasks","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"advaypakhale"},"content":"     * @param ui      The UI handler for displaying messages","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"advaypakhale"},"content":"     * @param storage The storage handler for saving tasks","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"advaypakhale"},"content":"     * @throws IOException             If there is an error saving to storage","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"advaypakhale"},"content":"     * @throws IllegalCommandException If the command format is invalid, if the index is not a number,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"advaypakhale"},"content":"     *                                 if the task is already marked as done, or if the index is out of bounds","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"advaypakhale"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"advaypakhale"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException, IllegalCommandException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"advaypakhale"},"content":"        if (userInput.length !\u003d 2) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"advaypakhale"},"content":"            throw new IllegalCommandException(","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"advaypakhale"},"content":"                    \"I\u0027m sorry, the proper usage of the mark bob.command is \u0027mark \u003cindex\u003e\u0027. Please try again!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"advaypakhale"},"content":"        int idx;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"advaypakhale"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"advaypakhale"},"content":"            idx \u003d Integer.parseInt(userInput[1]) - 1;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"advaypakhale"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"advaypakhale"},"content":"            throw new IllegalCommandException(","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"advaypakhale"},"content":"                    \"I\u0027m sorry, the index of the bob.task to mark must be a number. The proper usage of the mark bob.command is \u0027mark \u003cindex\u003e\u0027. Please try again!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"advaypakhale"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"advaypakhale"},"content":"            boolean valid \u003d tasks.markAsDone(idx);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"advaypakhale"},"content":"            if (!valid) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"advaypakhale"},"content":"                throw new IllegalCommandException(","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"advaypakhale"},"content":"                        \"I\u0027m sorry, the bob.task you are trying to mark as done is already done. You can mark it as undone or enter another bob.command!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"advaypakhale"},"content":"            }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"advaypakhale"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"advaypakhale"},"content":"            if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"advaypakhale"},"content":"                throw new IllegalCommandException(","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"advaypakhale"},"content":"                        \"I\u0027m sorry, you have no tasks in your list to mark as done. Please add some tasks first!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"advaypakhale"},"content":"            } else {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"advaypakhale"},"content":"                throw new IllegalCommandException(\"I\u0027m sorry, the number of the bob.task to mark must be within 1 and \"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"advaypakhale"},"content":"                        + tasks.size() + \". Please try again!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"advaypakhale"},"content":"            }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"advaypakhale"},"content":"        message.append(\"Nice! I\u0027ve marked this bob.task as done:\\n\").append(tasks.getTaskString(idx));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"advaypakhale"},"content":"        storage.save();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"advaypakhale"},"content":"        ui.wrapText(message);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"advaypakhale"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"advaypakhale":71}},{"path":"src/main/java/bob/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"advaypakhale"},"content":"package bob.command;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"advaypakhale"},"content":"import bob.exceptions.IllegalCommandException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"advaypakhale"},"content":"import bob.storage.Storage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"advaypakhale"},"content":"import bob.task.TaskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"advaypakhale"},"content":"import bob.ui.Ui;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"advaypakhale"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"advaypakhale"},"content":"/**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"advaypakhale"},"content":" * Represents a command to unmark a task as done in the task list.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"advaypakhale"},"content":" * This command takes an index as input and marks the corresponding task as undone.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"advaypakhale"},"content":" */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"advaypakhale"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"advaypakhale"},"content":"     * Constructor for UnmarkCommand to unmark a task as done.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"advaypakhale"},"content":"     * @param userInput Array of strings containing the command and its parameters","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"advaypakhale"},"content":"    public UnmarkCommand(String[] userInput) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"advaypakhale"},"content":"        super(userInput);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"advaypakhale"},"content":"     * Executes the unmark command which marks a task as not done.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"advaypakhale"},"content":"     * The command format should be \u0027unmark \u003cindex\u003e\u0027.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"advaypakhale"},"content":"     * @param tasks   The task list containing all tasks","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"advaypakhale"},"content":"     * @param ui      The user interface to display messages","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"advaypakhale"},"content":"     * @param storage The storage to save tasks","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"advaypakhale"},"content":"     * @throws IOException             If there\u0027s an error saving to storage","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"advaypakhale"},"content":"     * @throws IllegalCommandException If the command format is invalid, if the index is not a number,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"advaypakhale"},"content":"     *                                 if the task is already undone, if the task list is empty, or if the index is out of bounds","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"advaypakhale"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"advaypakhale"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException, IllegalCommandException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"advaypakhale"},"content":"        if (userInput.length !\u003d 2) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"advaypakhale"},"content":"            throw new IllegalCommandException(","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"advaypakhale"},"content":"                    \"I\u0027m sorry, the proper usage of the unmark bob.command is \u0027unmark \u003cindex\u003e\u0027. Please try again!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"advaypakhale"},"content":"        int idx;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"advaypakhale"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"advaypakhale"},"content":"            idx \u003d Integer.parseInt(userInput[1]) - 1;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"advaypakhale"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"advaypakhale"},"content":"            throw new IllegalCommandException(","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"advaypakhale"},"content":"                    \"I\u0027m sorry, the index of the bob.task to unmark must be a number. The proper usage of the unmark bob.command is \u0027unmark \u003cindex\u003e\u0027. Please try again!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"advaypakhale"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"advaypakhale"},"content":"            boolean valid \u003d tasks.markAsUndone(idx);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"advaypakhale"},"content":"            if (!valid) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"advaypakhale"},"content":"                throw new IllegalCommandException(","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"advaypakhale"},"content":"                        \"I\u0027m sorry, the bob.task you are trying to mark as undone is already not done. You can mark it as done or enter another bob.command!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"advaypakhale"},"content":"            }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"advaypakhale"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"advaypakhale"},"content":"            if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"advaypakhale"},"content":"                throw new IllegalCommandException(","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"advaypakhale"},"content":"                        \"I\u0027m sorry, you have no tasks in your list to mark as undone. Please add some tasks first!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"advaypakhale"},"content":"            } else {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"advaypakhale"},"content":"                throw new IllegalCommandException(\"I\u0027m sorry, the number of the bob.task to mark must be within 1 and \"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"advaypakhale"},"content":"                        + tasks.size() + \". Please try again!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"advaypakhale"},"content":"            }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"advaypakhale"},"content":"        message.append(\"I have marked this bob.task as not done, get on it!\\n\").append(tasks.getTaskString(idx));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"advaypakhale"},"content":"        storage.save();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"advaypakhale"},"content":"        ui.wrapText(message);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"advaypakhale"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"advaypakhale":70}},{"path":"src/main/java/bob/exceptions/IllegalCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"advaypakhale"},"content":"package bob.exceptions;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"advaypakhale"},"content":"/**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"advaypakhale"},"content":" * Exception thrown when an illegal or unrecognized command is encountered.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"advaypakhale"},"content":" * This exception decorates the error message with horizontal lines for better visibility","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"advaypakhale"},"content":" * in the console output.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"advaypakhale"},"content":" */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"advaypakhale"},"content":"public class IllegalCommandException extends Exception {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"advaypakhale"},"content":"     * Constructs a new IllegalCommandException with a decorated message.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"advaypakhale"},"content":"     * The provided message is wrapped with horizontal lines above and below.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"advaypakhale"},"content":"     * @param message the error message describing the illegal command","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"advaypakhale"},"content":"    public IllegalCommandException(String message) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"advaypakhale"},"content":"        super(\"-----------------------------\\n\" + message + \"\\n-----------------------------\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"advaypakhale"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"advaypakhale":19}},{"path":"src/main/java/bob/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"advaypakhale"},"content":"package bob.parser;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"advaypakhale"},"content":"import bob.command.*;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"advaypakhale"},"content":"import bob.exceptions.IllegalCommandException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"advaypakhale"},"content":"/**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"advaypakhale"},"content":" * Parses user input strings into executable Command objects.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"advaypakhale"},"content":" * Validates and interprets user commands, creating the appropriate command object","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"advaypakhale"},"content":" * based on the command type specified in the input.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"advaypakhale"},"content":" */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"advaypakhale"},"content":"public class Parser {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"advaypakhale"},"content":"     * Converts user input into a concrete Command object for execution.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"advaypakhale"},"content":"     * The first word in the input array determines the type of command created:","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"advaypakhale"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"advaypakhale"},"content":"     *   \u003cli\u003ebye - Creates ExitCommand to terminate the program\u003c/li\u003e","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"advaypakhale"},"content":"     *   \u003cli\u003elist - Creates ListCommand to display all tasks\u003c/li\u003e","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"advaypakhale"},"content":"     *   \u003cli\u003emark - Creates MarkCommand to mark a task as complete\u003c/li\u003e","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"advaypakhale"},"content":"     *   \u003cli\u003eunmark - Creates UnmarkCommand to mark a task as incomplete\u003c/li\u003e","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"advaypakhale"},"content":"     *   \u003cli\u003etodo - Creates CreateTodoCommand to add a new todo task\u003c/li\u003e","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"advaypakhale"},"content":"     *   \u003cli\u003edeadline - Creates CreateDeadlineCommand to add a new deadline task\u003c/li\u003e","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"advaypakhale"},"content":"     *   \u003cli\u003eevent - Creates CreateEventCommand to add a new event task\u003c/li\u003e","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"advaypakhale"},"content":"     *   \u003cli\u003edelete - Creates DeleteCommand to remove a task\u003c/li\u003e","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"advaypakhale"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"advaypakhale"},"content":"     * Empty input creates an EmptyInputCommand.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"advaypakhale"},"content":"     * @param userInput array containing the command type as first element followed by any parameters","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"advaypakhale"},"content":"     * @return appropriate Command object based on the input","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"advaypakhale"},"content":"     * @throws IllegalCommandException if the command type is not recognized","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"advaypakhale"},"content":"    public Command parseUserInput(String[] userInput) throws IllegalCommandException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"advaypakhale"},"content":"        if (userInput.length \u003d\u003d 0) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"advaypakhale"},"content":"            return new EmptyInputCommand(userInput);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"advaypakhale"},"content":"        String commandString \u003d userInput[0];","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"advaypakhale"},"content":"        return switch (commandString) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"advaypakhale"},"content":"            case \"bye\" -\u003e new ExitCommand(userInput);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"advaypakhale"},"content":"            case \"list\" -\u003e new ListCommand(userInput);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"advaypakhale"},"content":"            case \"mark\" -\u003e new MarkCommand(userInput);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"advaypakhale"},"content":"            case \"unmark\" -\u003e new UnmarkCommand(userInput);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"advaypakhale"},"content":"            case \"todo\" -\u003e new CreateTodoCommand(userInput);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"advaypakhale"},"content":"            case \"deadline\" -\u003e new CreateDeadlineCommand(userInput);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"advaypakhale"},"content":"            case \"event\" -\u003e new CreateEventCommand(userInput);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"advaypakhale"},"content":"            case \"delete\" -\u003e new DeleteCommand(userInput);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"advaypakhale"},"content":"            case \"find\" -\u003e new FindCommand(userInput);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"advaypakhale"},"content":"            default -\u003e","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"advaypakhale"},"content":"                    throw new IllegalCommandException(\"I\u0027m sorry, I don\u0027t understand that bob.command. Please try with one of the following commands: bye, list, mark, unmark, todo, deadline, event.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"advaypakhale"},"content":"        };","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"advaypakhale"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"advaypakhale":52}},{"path":"src/main/java/bob/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"advaypakhale"},"content":"package bob.storage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"advaypakhale"},"content":"import bob.task.*;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"advaypakhale"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"advaypakhale"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"advaypakhale"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"advaypakhale"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"advaypakhale"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"advaypakhale"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"advaypakhale"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"advaypakhale"},"content":"import java.util.List;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"advaypakhale"},"content":"/**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"advaypakhale"},"content":" * Manages the persistence of tasks to and from a file storage system.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"advaypakhale"},"content":" * Tasks are stored in a text file with one task per line using the following formats:","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"advaypakhale"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"advaypakhale"},"content":" *   \u003cli\u003eTodo tasks: \"T | [Y/N] | description\"\u003c/li\u003e","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"advaypakhale"},"content":" *   \u003cli\u003eDeadline tasks: \"D | [Y/N] | description | YYYY-MM-DD\"\u003c/li\u003e","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"advaypakhale"},"content":" *   \u003cli\u003eEvent tasks: \"E | [Y/N] | description | YYYY-MM-DD | YYYY-MM-DD\"\u003c/li\u003e","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"advaypakhale"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"advaypakhale"},"content":" * where Y/N indicates completion status (Y\u003dcompleted, N\u003dincomplete)","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"advaypakhale"},"content":" */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"advaypakhale"},"content":"public class Storage {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"advaypakhale"},"content":"     * The path to the file where tasks are stored","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"advaypakhale"},"content":"    private final String filePath;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"advaypakhale"},"content":"     * The task list containing all tasks to be managed","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"advaypakhale"},"content":"    private final TaskList tasks;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"advaypakhale"},"content":"     * Creates a new Storage instance and immediately loads any existing tasks.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"advaypakhale"},"content":"     * @param filePath the path to the file where tasks will be stored","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"advaypakhale"},"content":"     * @param tasks    the TaskList that will contain the loaded tasks","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"advaypakhale"},"content":"    public Storage(String filePath, TaskList tasks) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"advaypakhale"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"advaypakhale"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"advaypakhale"},"content":"        load();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"advaypakhale"},"content":"     * Saves all tasks from the task list to the storage file.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"advaypakhale"},"content":"     * Creates any necessary parent directories if they don\u0027t exist.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"advaypakhale"},"content":"     * Overwrites the existing file if it already exists.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"advaypakhale"},"content":"     * @throws IOException if there is an error writing to the file or creating directories","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"advaypakhale"},"content":"    public void save() throws IOException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"advaypakhale"},"content":"        Path path \u003d Path.of(filePath);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"advaypakhale"},"content":"        Files.createDirectories(path.getParent());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"advaypakhale"},"content":"        List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"advaypakhale"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"advaypakhale"},"content":"            lines.add(task.toFileString());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"advaypakhale"},"content":"        Files.write(path, lines, StandardOpenOption.CREATE,","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"advaypakhale"},"content":"                StandardOpenOption.TRUNCATE_EXISTING);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"advaypakhale"},"content":"     * Loads tasks from the storage file into the task list.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"advaypakhale"},"content":"     * Skips any malformed lines in the file with a warning message.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"advaypakhale"},"content":"     * The file should contain one task per line in the following format:","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"advaypakhale"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"advaypakhale"},"content":"     * TYPE | COMPLETION_STATUS | DESCRIPTION [| DATE1 [| DATE2]]","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"advaypakhale"},"content":"     * \u003c/pre\u003e","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"advaypakhale"},"content":"     * where:","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"advaypakhale"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"advaypakhale"},"content":"     *   \u003cli\u003eTYPE is T (Todo), D (Deadline), or E (Event)\u003c/li\u003e","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"advaypakhale"},"content":"     *   \u003cli\u003eCOMPLETION_STATUS is Y (completed) or N (incomplete)\u003c/li\u003e","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"advaypakhale"},"content":"     *   \u003cli\u003eDESCRIPTION is the task description\u003c/li\u003e","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"advaypakhale"},"content":"     *   \u003cli\u003eDATE1 is required for Deadline (due date) and Event (start date)\u003c/li\u003e","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"advaypakhale"},"content":"     *   \u003cli\u003eDATE2 is required for Event (end date)\u003c/li\u003e","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"advaypakhale"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"advaypakhale"},"content":"     * @throws RuntimeException if there is an error reading the file","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"advaypakhale"},"content":"    public void load() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"advaypakhale"},"content":"        Path path \u003d Path.of(filePath);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"advaypakhale"},"content":"        if (!Files.exists(path)) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"advaypakhale"},"content":"            return;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"advaypakhale"},"content":"        List\u003cString\u003e lines \u003d null;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"advaypakhale"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"advaypakhale"},"content":"            lines \u003d Files.readAllLines(path);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"advaypakhale"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"advaypakhale"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"advaypakhale"},"content":"        for (String line : lines) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"advaypakhale"},"content":"            try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"advaypakhale"},"content":"                String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"advaypakhale"},"content":"                if (parts.length \u003c 3) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"advaypakhale"},"content":"                    continue;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"advaypakhale"},"content":"                }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"advaypakhale"},"content":"                String type \u003d parts[0];","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"advaypakhale"},"content":"                boolean isComplete \u003d parts[1].equals(\"Y\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"advaypakhale"},"content":"                String description \u003d parts[2];","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"advaypakhale"},"content":"                Task task \u003d switch (type) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"advaypakhale"},"content":"                    case \"T\" -\u003e new Todo(description);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"advaypakhale"},"content":"                    case \"D\" -\u003e {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"advaypakhale"},"content":"                        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"advaypakhale"},"content":"                            LocalDate deadline \u003d LocalDate.parse(parts[3]);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"advaypakhale"},"content":"                            yield new Deadline(description, deadline);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"advaypakhale"},"content":"                        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"advaypakhale"},"content":"                            System.err.println(\"Warning: Skipping malformed deadline date in file: \" + parts[3]);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"advaypakhale"},"content":"                            yield null;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"advaypakhale"},"content":"                        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"advaypakhale"},"content":"                    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"advaypakhale"},"content":"                    case \"E\" -\u003e {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"advaypakhale"},"content":"                        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"advaypakhale"},"content":"                            LocalDate startDate \u003d LocalDate.parse(parts[3]);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"advaypakhale"},"content":"                            LocalDate endDate \u003d LocalDate.parse(parts[4]);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"advaypakhale"},"content":"                            yield new Event(description, startDate, endDate);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"advaypakhale"},"content":"                        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"advaypakhale"},"content":"                            System.err.println(\"Warning: Skipping malformed event dates in file: \" +","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"advaypakhale"},"content":"                                    parts[3] + \" to \" + parts[4]);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"advaypakhale"},"content":"                            yield null;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"advaypakhale"},"content":"                        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"advaypakhale"},"content":"                    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"advaypakhale"},"content":"                    default -\u003e null;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"advaypakhale"},"content":"                };","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"advaypakhale"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"advaypakhale"},"content":"                    if (isComplete) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"advaypakhale"},"content":"                        task.markAsDone();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"advaypakhale"},"content":"                    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"advaypakhale"},"content":"                    tasks.addTask(task);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"advaypakhale"},"content":"                }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"advaypakhale"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"advaypakhale"},"content":"                System.err.println(\"Warning: Skipping malformed line in file: \" + line);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"advaypakhale"},"content":"            }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"advaypakhale"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"advaypakhale":143}},{"path":"src/main/java/bob/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"advaypakhale"},"content":"package bob.task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"advaypakhale"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"advaypakhale"},"content":"/**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"advaypakhale"},"content":" * Represents a task with a specific deadline date.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"advaypakhale"},"content":" * Extends the base Task class by adding due date functionality.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"advaypakhale"},"content":" */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"advaypakhale"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"advaypakhale"},"content":"     * The due date for this deadline task","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"advaypakhale"},"content":"    private final LocalDate due;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"advaypakhale"},"content":"     * Creates a new Deadline task with the specified description and due date.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"advaypakhale"},"content":"     * @param description the description of the task","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"advaypakhale"},"content":"     * @param due         the date by which the task must be completed","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"advaypakhale"},"content":"    public Deadline(String description, LocalDate due) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"advaypakhale"},"content":"        super(description);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"advaypakhale"},"content":"        this.due \u003d due;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"advaypakhale"},"content":"     * Returns a string representation of this Deadline task.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"advaypakhale"},"content":"     * The format is: [D][Status] Description (Deadline: formatted_date)","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"advaypakhale"},"content":"     * @return formatted string representation of the deadline task","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"advaypakhale"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"advaypakhale"},"content":"    public String toString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"advaypakhale"},"content":"        return \"[D]\" + super.toString() + \" (Deadline: \" + formatDate(due) + \")\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"advaypakhale"},"content":"     * Converts this Deadline task to a string format suitable for file storage.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"advaypakhale"},"content":"     * The format is: D | completion_status | description | ISO_date","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"advaypakhale"},"content":"     * @return string representation for file storage","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"advaypakhale"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"advaypakhale"},"content":"    public String toFileString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"advaypakhale"},"content":"        return \"D | \" + (isComplete ? \"Y\" : \"N\") + \" | \" + description + \" | \" + due.toString();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"advaypakhale"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"advaypakhale":47}},{"path":"src/main/java/bob/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"advaypakhale"},"content":"package bob.task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"advaypakhale"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"advaypakhale"},"content":"/**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"advaypakhale"},"content":" * Represents a task that occurs over a specific time period with start and end dates.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"advaypakhale"},"content":" * Extends the base Task class by adding event duration functionality.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"advaypakhale"},"content":" */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"advaypakhale"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"advaypakhale"},"content":"     * The start date of the event","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"advaypakhale"},"content":"    private final LocalDate begin;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"advaypakhale"},"content":"     * The end date of the event","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"advaypakhale"},"content":"    private final LocalDate end;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"advaypakhale"},"content":"     * Creates a new Event task with the specified description and date range.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"advaypakhale"},"content":"     * @param description the description of the event","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"advaypakhale"},"content":"     * @param begin       the start date of the event","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"advaypakhale"},"content":"     * @param end         the end date of the event","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"advaypakhale"},"content":"    public Event(String description, LocalDate begin, LocalDate end) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"advaypakhale"},"content":"        super(description);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"advaypakhale"},"content":"        this.begin \u003d begin;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"advaypakhale"},"content":"        this.end \u003d end;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"advaypakhale"},"content":"     * Returns a string representation of this Event task.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"advaypakhale"},"content":"     * The format is: [E][Status] Description (Event start: formatted_start_date | Event end: formatted_end_date)","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"advaypakhale"},"content":"     * @return formatted string representation of the event task","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"advaypakhale"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"advaypakhale"},"content":"    public String toString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"advaypakhale"},"content":"        return \"[E]\" + super.toString() + \" (Event start: \" + formatDate(begin) + \" | Event end: \" + formatDate(end)","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"advaypakhale"},"content":"                + \")\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"advaypakhale"},"content":"     * Converts this Event task to a string format suitable for file storage.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"advaypakhale"},"content":"     * The format is: E | completion_status | description | ISO_start_date | ISO_end_date","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"advaypakhale"},"content":"     * @return string representation for file storage","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"advaypakhale"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"advaypakhale"},"content":"    public String toFileString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"advaypakhale"},"content":"        return \"E | \" + (isComplete ? \"Y\" : \"N\") + \" | \" + description + \" | \" + begin.toString() + \" | \"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"advaypakhale"},"content":"                + end.toString();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"advaypakhale"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"advaypakhale":56}},{"path":"src/main/java/bob/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"advaypakhale"},"content":"package bob.task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"advaypakhale"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"advaypakhale"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"advaypakhale"},"content":"/**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"advaypakhale"},"content":" * Abstract base class for all task types in the system.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"advaypakhale"},"content":" * Provides common functionality for task management including completion status,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"advaypakhale"},"content":" * description, and date formatting.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"advaypakhale"},"content":" */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"advaypakhale"},"content":"public abstract class Task {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"advaypakhale"},"content":"     * Formatter for converting dates to string representation","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"advaypakhale"},"content":"    private static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"advaypakhale"},"content":"     * The description of the task","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"advaypakhale"},"content":"    protected String description;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"advaypakhale"},"content":"     * The completion status of the task","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"advaypakhale"},"content":"    protected boolean isComplete;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"advaypakhale"},"content":"     * Creates a new task with the given description.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"advaypakhale"},"content":"     * Tasks are initialized as incomplete.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"advaypakhale"},"content":"     * @param description the description of the task","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"advaypakhale"},"content":"    public Task(String description) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"advaypakhale"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"advaypakhale"},"content":"        this.isComplete \u003d false;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"advaypakhale"},"content":"     * Returns the status icon for the task\u0027s completion state.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"advaypakhale"},"content":"     * \"X\" for completed tasks, space for incomplete tasks.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"advaypakhale"},"content":"     * @return the status icon string","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"advaypakhale"},"content":"    protected String getStatusIcon() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"advaypakhale"},"content":"        return (isComplete ? \"X\" : \" \");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"advaypakhale"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"advaypakhale"},"content":"     * The format is: [Status] Description","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"advaypakhale"},"content":"     * @return formatted string representation of the task","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"advaypakhale"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"advaypakhale"},"content":"    public String toString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"advaypakhale"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"advaypakhale"},"content":"     * Marks the task as complete if it is not already completed.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"advaypakhale"},"content":"     * @return true if the task was successfully marked as complete,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"advaypakhale"},"content":"     * false if it was already complete","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"advaypakhale"},"content":"    public boolean markAsDone() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"advaypakhale"},"content":"        if (this.isComplete) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"advaypakhale"},"content":"            return false;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"advaypakhale"},"content":"        } else {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"advaypakhale"},"content":"            this.isComplete \u003d true;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"advaypakhale"},"content":"            return true;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"advaypakhale"},"content":"     * Marks the task as incomplete if it is currently completed.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"advaypakhale"},"content":"     * @return true if the task was successfully marked as incomplete,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"advaypakhale"},"content":"     * false if it was already incomplete","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"advaypakhale"},"content":"    public boolean markAsUndone() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"advaypakhale"},"content":"        if (!this.isComplete) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"advaypakhale"},"content":"            return false;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"advaypakhale"},"content":"        } else {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"advaypakhale"},"content":"            this.isComplete \u003d false;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"advaypakhale"},"content":"            return true;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"advaypakhale"},"content":"     * Formats a date using the system\u0027s standard date format (dd MMM yyyy).","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"advaypakhale"},"content":"     * @param date the date to format","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"advaypakhale"},"content":"     * @return formatted string representation of the date","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"advaypakhale"},"content":"    protected String formatDate(LocalDate date) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"advaypakhale"},"content":"        return date.format(DATE_FORMATTER);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"advaypakhale"},"content":"     * Converts the task to a string format suitable for file storage.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"advaypakhale"},"content":"     * Implementation varies by task type.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"advaypakhale"},"content":"     * @return string representation for file storage","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"advaypakhale"},"content":"    public abstract String toFileString();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"advaypakhale"},"content":"     * Returns the description of the task.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"advaypakhale"},"content":"     * @return description of task","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"advaypakhale"},"content":"    public String getDescription() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"advaypakhale"},"content":"        return description;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"advaypakhale"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"advaypakhale":114}},{"path":"src/main/java/bob/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"advaypakhale"},"content":"package bob.task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"advaypakhale"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"advaypakhale"},"content":"import java.util.Iterator;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"advaypakhale"},"content":"/**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"advaypakhale"},"content":" * A container class that manages a collection of tasks.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"advaypakhale"},"content":" * Provides methods for adding, removing, and manipulating tasks.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"advaypakhale"},"content":" * Implements Iterable to allow iteration over the contained tasks.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"advaypakhale"},"content":" */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"advaypakhale"},"content":"public class TaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"advaypakhale"},"content":"     * The underlying list storing all tasks","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"advaypakhale"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"advaypakhale"},"content":"     * Creates a new empty task list.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"advaypakhale"},"content":"    public TaskList() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"advaypakhale"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"advaypakhale"},"content":"     * Adds a new task to the list.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"advaypakhale"},"content":"     * @param task the task to add","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"advaypakhale"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"advaypakhale"},"content":"        tasks.add(task);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"advaypakhale"},"content":"     * Gets the string representation of a task at the specified index.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"advaypakhale"},"content":"     * @param index the index of the task","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"advaypakhale"},"content":"     * @return string representation of the task","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"advaypakhale"},"content":"     * @throws IndexOutOfBoundsException if index is out of range","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"advaypakhale"},"content":"    public String getTaskString(int index) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"advaypakhale"},"content":"        return tasks.get(index).toString();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"advaypakhale"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"advaypakhale"},"content":"     * @return the size of the task list","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"advaypakhale"},"content":"    public int size() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"advaypakhale"},"content":"        return tasks.size();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"advaypakhale"},"content":"     * Marks the task at the specified index as complete.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"advaypakhale"},"content":"     * @param index the index of the task to mark as complete","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"advaypakhale"},"content":"     * @return true if the task was successfully marked as complete,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"advaypakhale"},"content":"     * false if it was already complete","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"advaypakhale"},"content":"     * @throws IndexOutOfBoundsException if index is out of range","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"advaypakhale"},"content":"    public boolean markAsDone(int index) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"advaypakhale"},"content":"        return tasks.get(index).markAsDone();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"advaypakhale"},"content":"     * Marks the task at the specified index as incomplete.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"advaypakhale"},"content":"     * @param index the index of the task to mark as incomplete","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"advaypakhale"},"content":"     * @return true if the task was successfully marked as incomplete,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"advaypakhale"},"content":"     * false if it was already incomplete","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"advaypakhale"},"content":"     * @throws IndexOutOfBoundsException if index is out of range","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"advaypakhale"},"content":"    public boolean markAsUndone(int index) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"advaypakhale"},"content":"        return tasks.get(index).markAsUndone();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"advaypakhale"},"content":"     * Removes and returns the task at the specified index.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"advaypakhale"},"content":"     * @param index the index of the task to remove","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"advaypakhale"},"content":"     * @return string representation of the removed task","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"advaypakhale"},"content":"     * @throws IndexOutOfBoundsException if index is out of range","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"advaypakhale"},"content":"    public String deleteTask(int index) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"advaypakhale"},"content":"        return tasks.remove(index).toString();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"advaypakhale"},"content":"     * Removes all tasks from the list.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"advaypakhale"},"content":"    public void clear() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"advaypakhale"},"content":"        tasks.clear();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"advaypakhale"},"content":"     * Returns an iterator over the tasks in this list.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"advaypakhale"},"content":"     * @return an iterator over the tasks","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"advaypakhale"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"advaypakhale"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"advaypakhale"},"content":"        return tasks.iterator();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"advaypakhale"},"content":"     * Searches for tasks whose descriptions contain the specified query string.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"advaypakhale"},"content":"     * The search is case-insensitive.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"advaypakhale"},"content":"     * @param query The search string to match against task descriptions","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"advaypakhale"},"content":"     * @return An ArrayList containing all tasks whose descriptions contain the query string","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"advaypakhale"},"content":"     * Returns an empty ArrayList if no matching tasks are found","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"advaypakhale"},"content":"     * @throws NullPointerException if the query parameter is null","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"advaypakhale"},"content":"     * @see Task","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"advaypakhale"},"content":"    public ArrayList\u003cTask\u003e findTask(String query) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"advaypakhale"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"advaypakhale"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"advaypakhale"},"content":"            if (task.getDescription().toLowerCase().contains(query.toLowerCase())) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"advaypakhale"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"advaypakhale"},"content":"            }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"advaypakhale"},"content":"        return matchingTasks;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"advaypakhale"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"advaypakhale":124}},{"path":"src/main/java/bob/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"advaypakhale"},"content":"package bob.task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"advaypakhale"},"content":"/**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"advaypakhale"},"content":" * Represents a basic todo task without any date constraints.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"advaypakhale"},"content":" * Extends the base Task class with simple todo-specific formatting.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"advaypakhale"},"content":" */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"advaypakhale"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"advaypakhale"},"content":"     * Creates a new Todo task with the specified description.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"advaypakhale"},"content":"     * @param description the description of the todo task","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"advaypakhale"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"advaypakhale"},"content":"        super(description);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"advaypakhale"},"content":"     * Returns a string representation of this Todo task.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"advaypakhale"},"content":"     * The format is: [T][Status] Description","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"advaypakhale"},"content":"     * @return formatted string representation of the todo task","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"advaypakhale"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"advaypakhale"},"content":"    public String toString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"advaypakhale"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"advaypakhale"},"content":"     * Converts this Todo task to a string format suitable for file storage.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"advaypakhale"},"content":"     * The format is: T | completion_status | description","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"advaypakhale"},"content":"     * @return string representation for file storage","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"advaypakhale"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"advaypakhale"},"content":"    public String toFileString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"advaypakhale"},"content":"        return \"T | \" + (isComplete ? \"Y\" : \"N\") + \" | \" + description;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"advaypakhale"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"advaypakhale":39}},{"path":"src/main/java/bob/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"advaypakhale"},"content":"package bob.ui;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"advaypakhale"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"advaypakhale"},"content":"/**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"advaypakhale"},"content":" * Handles all user interface interactions including input/output formatting","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"advaypakhale"},"content":" * and display of the application\u0027s ASCII art logo.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"advaypakhale"},"content":" */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"advaypakhale"},"content":"public class Ui {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"advaypakhale"},"content":"     * Scanner object for reading user input","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"advaypakhale"},"content":"    private final Scanner sc;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"advaypakhale"},"content":"     * Creates a new UI instance with a Scanner for System.in.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"advaypakhale"},"content":"    public Ui() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"advaypakhale"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"advaypakhale"},"content":"     * Reads and processes the next line of user input.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"advaypakhale"},"content":"     * Displays a prompt (\"\u003e\u003e\u003e \") and waits for user input.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"advaypakhale"},"content":"     * @return array of strings split on spaces, or empty array if input is empty","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"advaypakhale"},"content":"    public String[] getUserInput() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"advaypakhale"},"content":"        String[] userInput;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"advaypakhale"},"content":"        System.out.print(\"\u003e\u003e\u003e \");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"advaypakhale"},"content":"        String nextInput \u003d sc.nextLine();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"advaypakhale"},"content":"        if (nextInput.isEmpty()) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"advaypakhale"},"content":"            userInput \u003d new String[0];","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"advaypakhale"},"content":"        } else {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"advaypakhale"},"content":"            userInput \u003d nextInput.split(\" \");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"advaypakhale"},"content":"        return userInput;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"advaypakhale"},"content":"     * Displays a message surrounded by decorative lines.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"advaypakhale"},"content":"     * @param message the StringBuilder containing the text to display","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"advaypakhale"},"content":"    public void wrapText(StringBuilder message) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"advaypakhale"},"content":"        System.out.println(\"-----------------------------\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"advaypakhale"},"content":"        System.out.println(message.toString());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"advaypakhale"},"content":"        System.out.println(\"-----------------------------\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"advaypakhale"},"content":"     * Displays a message surrounded by decorative lines.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"advaypakhale"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"advaypakhale"},"content":"     * @param message the String containing the text to display","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"advaypakhale"},"content":"    public void wrapText(String message) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"advaypakhale"},"content":"        System.out.println(\"-----------------------------\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"advaypakhale"},"content":"        System.out.println(message);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"advaypakhale"},"content":"        System.out.println(\"-----------------------------\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"advaypakhale"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"advaypakhale"},"content":"     * Displays the welcome message with ASCII art logo.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"advaypakhale"},"content":"     * Shows the application\u0027s logo and a greeting message to the user.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"advaypakhale"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"advaypakhale"},"content":"    public void greet() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"advaypakhale"},"content":"        String message \u003d \"\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"advaypakhale"},"content":"        String logo \u003d \"\"\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"advaypakhale"},"content":"                    ____        __","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"advaypakhale"},"content":"                   / ** )**__  / /_\\s","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"advaypakhale"},"content":"                  / **  / ** \\\\/ __ \\\\","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"advaypakhale"},"content":"                 / /_/ / /_/ / /_/ /","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"advaypakhale"},"content":"                /_____/\\\\____/_.___/\\s","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"advaypakhale"},"content":"                \"\"\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"advaypakhale"},"content":"        message +\u003d logo;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"advaypakhale"},"content":"        message +\u003d \"Hello! I\u0027m bob.Bob, but you can call me bob.Bob.\\n\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"advaypakhale"},"content":"        message +\u003d \"What can I do for you on this fine day?\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"advaypakhale"},"content":"        wrapText(message);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"advaypakhale"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"advaypakhale":80}},{"path":"src/test/java/bob/command/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"advaypakhale"},"content":"package bob.command;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"advaypakhale"},"content":"import bob.exceptions.IllegalCommandException;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"advaypakhale"},"content":"import bob.storage.Storage;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"advaypakhale"},"content":"import bob.task.Deadline;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"advaypakhale"},"content":"import bob.task.Event;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"advaypakhale"},"content":"import bob.task.TaskList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"advaypakhale"},"content":"import bob.task.Todo;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"advaypakhale"},"content":"import bob.ui.Ui;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"advaypakhale"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"advaypakhale"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"advaypakhale"},"content":"import org.mockito.Mock;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"advaypakhale"},"content":"import org.mockito.MockitoAnnotations;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"advaypakhale"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"advaypakhale"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"advaypakhale"},"content":"import static org.mockito.ArgumentMatchers.any;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"advaypakhale"},"content":"import static org.mockito.Mockito.verify;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"advaypakhale"},"content":"import static org.mockito.Mockito.when;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"advaypakhale"},"content":"class CommandTest {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"advaypakhale"},"content":"    @Mock","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"advaypakhale"},"content":"    private TaskList mockTaskList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"advaypakhale"},"content":"    @Mock","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"advaypakhale"},"content":"    private Ui mockUi;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"advaypakhale"},"content":"    @Mock","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"advaypakhale"},"content":"    private Storage mockStorage;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"advaypakhale"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"advaypakhale"},"content":"    void setUp() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"advaypakhale"},"content":"        MockitoAnnotations.openMocks(this);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"advaypakhale"},"content":"    void testCreateTodoCommand() throws IOException, IllegalCommandException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"advaypakhale"},"content":"        // Test valid todo creation","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"advaypakhale"},"content":"        String[] validInput \u003d {\"todo\", \"Buy groceries\"};","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"advaypakhale"},"content":"        CreateTodoCommand command \u003d new CreateTodoCommand(validInput);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"advaypakhale"},"content":"        command.execute(mockTaskList, mockUi, mockStorage);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"advaypakhale"},"content":"        verify(mockTaskList).addTask(any(Todo.class));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"advaypakhale"},"content":"        verify(mockStorage).save();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"advaypakhale"},"content":"        verify(mockUi).wrapText(any(StringBuilder.class));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"advaypakhale"},"content":"        // Test empty todo description","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"advaypakhale"},"content":"        String[] emptyInput \u003d {\"todo\"};","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"advaypakhale"},"content":"        CreateTodoCommand emptyCommand \u003d new CreateTodoCommand(emptyInput);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"advaypakhale"},"content":"        assertThrows(IllegalCommandException.class,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"advaypakhale"},"content":"                () -\u003e emptyCommand.execute(mockTaskList, mockUi, mockStorage));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"advaypakhale"},"content":"    void testCreateDeadlineCommand() throws IOException, IllegalCommandException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"advaypakhale"},"content":"        // Test valid deadline creation","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"advaypakhale"},"content":"        String[] validInput \u003d {\"deadline\", \"Submit report\", \"/by\", \"2025-12-31\"};","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"advaypakhale"},"content":"        CreateDeadlineCommand command \u003d new CreateDeadlineCommand(validInput);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"advaypakhale"},"content":"        command.execute(mockTaskList, mockUi, mockStorage);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"advaypakhale"},"content":"        verify(mockTaskList).addTask(any(Deadline.class));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"advaypakhale"},"content":"        verify(mockStorage).save();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"advaypakhale"},"content":"        verify(mockUi).wrapText(any(StringBuilder.class));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"advaypakhale"},"content":"        // Test invalid date format","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"advaypakhale"},"content":"        String[] invalidDateInput \u003d {\"deadline\", \"Submit report\", \"/by\", \"31-12-2025\"};","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"advaypakhale"},"content":"        CreateDeadlineCommand invalidCommand \u003d new CreateDeadlineCommand(invalidDateInput);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"advaypakhale"},"content":"        assertThrows(IllegalCommandException.class,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"advaypakhale"},"content":"                () -\u003e invalidCommand.execute(mockTaskList, mockUi, mockStorage));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"advaypakhale"},"content":"        // Test missing /by","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"advaypakhale"},"content":"        String[] missingByInput \u003d {\"deadline\", \"Submit report\", \"2025-12-31\"};","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"advaypakhale"},"content":"        CreateDeadlineCommand missingByCommand \u003d new CreateDeadlineCommand(missingByInput);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"advaypakhale"},"content":"        assertThrows(IllegalCommandException.class,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"advaypakhale"},"content":"                () -\u003e missingByCommand.execute(mockTaskList, mockUi, mockStorage));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"advaypakhale"},"content":"    void testCreateEventCommand() throws IOException, IllegalCommandException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"advaypakhale"},"content":"        // Test valid event creation","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"advaypakhale"},"content":"        String[] validInput \u003d {\"event\", \"Team meeting\", \"/from\", \"2025-12-01\", \"/to\", \"2025-12-02\"};","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"advaypakhale"},"content":"        CreateEventCommand command \u003d new CreateEventCommand(validInput);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"advaypakhale"},"content":"        command.execute(mockTaskList, mockUi, mockStorage);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"advaypakhale"},"content":"        verify(mockTaskList).addTask(any(Event.class));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"advaypakhale"},"content":"        verify(mockStorage).save();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"advaypakhale"},"content":"        verify(mockUi).wrapText(any(StringBuilder.class));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"advaypakhale"},"content":"        // Test invalid date order (end before start)","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"advaypakhale"},"content":"        String[] invalidDateOrderInput \u003d {\"event\", \"Team meeting\", \"/from\", \"2025-12-02\", \"/to\",","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"advaypakhale"},"content":"                \"2025-12-01\"};","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"advaypakhale"},"content":"        CreateEventCommand invalidCommand \u003d new CreateEventCommand(invalidDateOrderInput);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"advaypakhale"},"content":"        assertThrows(IllegalCommandException.class,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"advaypakhale"},"content":"                () -\u003e invalidCommand.execute(mockTaskList, mockUi, mockStorage));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"advaypakhale"},"content":"        // Test missing /from or /to","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"advaypakhale"},"content":"        String[] missingFromToInput \u003d {\"event\", \"Team meeting\", \"2025-12-01\", \"2025-12-02\"};","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"advaypakhale"},"content":"        CreateEventCommand missingCommand \u003d new CreateEventCommand(missingFromToInput);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"advaypakhale"},"content":"        assertThrows(IllegalCommandException.class,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"advaypakhale"},"content":"                () -\u003e missingCommand.execute(mockTaskList, mockUi, mockStorage));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"advaypakhale"},"content":"    void testListCommand() throws IllegalCommandException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"advaypakhale"},"content":"        // Test empty list","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"advaypakhale"},"content":"        when(mockTaskList.size()).thenReturn(0);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"advaypakhale"},"content":"        String[] input \u003d {\"list\"};","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"advaypakhale"},"content":"        ListCommand command \u003d new ListCommand(input);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"advaypakhale"},"content":"        command.execute(mockTaskList, mockUi, mockStorage);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"advaypakhale"},"content":"        verify(mockUi).wrapText(any(StringBuilder.class));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"advaypakhale"},"content":"        // Test list with extra arguments","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"advaypakhale"},"content":"        String[] invalidInput \u003d {\"list\", \"extra\", \"args\"};","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"advaypakhale"},"content":"        ListCommand invalidCommand \u003d new ListCommand(invalidInput);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"advaypakhale"},"content":"        assertThrows(IllegalCommandException.class,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"advaypakhale"},"content":"                () -\u003e invalidCommand.execute(mockTaskList, mockUi, mockStorage));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"advaypakhale"},"content":"    void testMarkCommand() throws IOException, IllegalCommandException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"advaypakhale"},"content":"        // Test valid marking","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"advaypakhale"},"content":"        when(mockTaskList.size()).thenReturn(1);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"advaypakhale"},"content":"        when(mockTaskList.markAsDone(0)).thenReturn(true);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"advaypakhale"},"content":"        String[] validInput \u003d {\"mark\", \"1\"};","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"advaypakhale"},"content":"        MarkCommand command \u003d new MarkCommand(validInput);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"advaypakhale"},"content":"        command.execute(mockTaskList, mockUi, mockStorage);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"advaypakhale"},"content":"        verify(mockTaskList).markAsDone(0);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"advaypakhale"},"content":"        verify(mockStorage).save();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"advaypakhale"},"content":"        verify(mockUi).wrapText(any(StringBuilder.class));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"advaypakhale"},"content":"        // Test marking already marked task","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"advaypakhale"},"content":"        when(mockTaskList.markAsDone(0)).thenReturn(false);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"advaypakhale"},"content":"        assertThrows(IllegalCommandException.class, () -\u003e command.execute(mockTaskList, mockUi, mockStorage));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"advaypakhale"},"content":"        // Test invalid index","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"advaypakhale"},"content":"        String[] invalidInput \u003d {\"mark\", \"abc\"};","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"advaypakhale"},"content":"        MarkCommand invalidCommand \u003d new MarkCommand(invalidInput);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"advaypakhale"},"content":"        assertThrows(IllegalCommandException.class,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"advaypakhale"},"content":"                () -\u003e invalidCommand.execute(mockTaskList, mockUi, mockStorage));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"advaypakhale"},"content":"    void testUnmarkCommand() throws IOException, IllegalCommandException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"advaypakhale"},"content":"        // Test valid unmarking","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"advaypakhale"},"content":"        when(mockTaskList.size()).thenReturn(1);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"advaypakhale"},"content":"        when(mockTaskList.markAsUndone(0)).thenReturn(true);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"advaypakhale"},"content":"        String[] validInput \u003d {\"unmark\", \"1\"};","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"advaypakhale"},"content":"        UnmarkCommand command \u003d new UnmarkCommand(validInput);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"advaypakhale"},"content":"        command.execute(mockTaskList, mockUi, mockStorage);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"advaypakhale"},"content":"        verify(mockTaskList).markAsUndone(0);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"advaypakhale"},"content":"        verify(mockStorage).save();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"advaypakhale"},"content":"        verify(mockUi).wrapText(any(StringBuilder.class));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"advaypakhale"},"content":"        // Test unmarking already unmarked task","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"advaypakhale"},"content":"        when(mockTaskList.markAsUndone(0)).thenReturn(false);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"advaypakhale"},"content":"        assertThrows(IllegalCommandException.class, () -\u003e command.execute(mockTaskList, mockUi, mockStorage));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"advaypakhale"},"content":"    void testDeleteCommand() throws IOException, IllegalCommandException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"advaypakhale"},"content":"        // Test valid deletion","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"advaypakhale"},"content":"        when(mockTaskList.size()).thenReturn(1);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"advaypakhale"},"content":"        when(mockTaskList.deleteTask(0)).thenReturn(\"Deleted task\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"advaypakhale"},"content":"        String[] validInput \u003d {\"delete\", \"1\"};","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"advaypakhale"},"content":"        DeleteCommand command \u003d new DeleteCommand(validInput);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"advaypakhale"},"content":"        command.execute(mockTaskList, mockUi, mockStorage);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"advaypakhale"},"content":"        verify(mockTaskList).deleteTask(0);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"advaypakhale"},"content":"        verify(mockStorage).save();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"advaypakhale"},"content":"        verify(mockUi).wrapText(any(StringBuilder.class));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"advaypakhale"},"content":"        // Test invalid index","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"advaypakhale"},"content":"        String[] invalidInput \u003d {\"delete\", \"0\"};","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"advaypakhale"},"content":"        DeleteCommand invalidCommand \u003d new DeleteCommand(invalidInput);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"advaypakhale"},"content":"        when(mockTaskList.size()).thenReturn(0);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"advaypakhale"},"content":"        assertThrows(IllegalCommandException.class,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"advaypakhale"},"content":"                () -\u003e invalidCommand.execute(mockTaskList, mockUi, mockStorage));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"advaypakhale"},"content":"    void testExitCommand() throws IOException, IllegalCommandException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"advaypakhale"},"content":"        // Test valid exit","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"advaypakhale"},"content":"        String[] validInput \u003d {\"bye\"};","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"advaypakhale"},"content":"        ExitCommand command \u003d new ExitCommand(validInput);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"advaypakhale"},"content":"        command.execute(mockTaskList, mockUi, mockStorage);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"advaypakhale"},"content":"        verify(mockStorage).save();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"advaypakhale"},"content":"        verify(mockUi).wrapText(any(StringBuilder.class));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"advaypakhale"},"content":"        // Test exit with arguments","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"advaypakhale"},"content":"        String[] invalidInput \u003d {\"bye\", \"extra\"};","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"advaypakhale"},"content":"        ExitCommand invalidCommand \u003d new ExitCommand(invalidInput);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"advaypakhale"},"content":"        assertThrows(IllegalCommandException.class,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"advaypakhale"},"content":"                () -\u003e invalidCommand.execute(mockTaskList, mockUi, mockStorage));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"advaypakhale"},"content":"    void testEchoCommand() throws IllegalCommandException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"advaypakhale"},"content":"        String[] input \u003d {\"echo\", \"Hello\", \"World\"};","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"advaypakhale"},"content":"        EchoCommand command \u003d new EchoCommand(input);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"advaypakhale"},"content":"        command.execute(mockTaskList, mockUi, mockStorage);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"advaypakhale"},"content":"        verify(mockUi).wrapText(\"echo Hello World\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"advaypakhale"},"content":"    void testEmptyInputCommand() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"advaypakhale"},"content":"        String[] input \u003d {\"\"};","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"advaypakhale"},"content":"        EmptyInputCommand command \u003d new EmptyInputCommand(input);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"advaypakhale"},"content":"        command.execute(mockTaskList, mockUi, mockStorage);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"advaypakhale"},"content":"        verify(mockUi).wrapText(\"Please enter a bob.command. I\u0027m happy to help!\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"advaypakhale"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"advaypakhale":219}},{"path":"src/test/java/bob/exceptions/IllegalCommandExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"advaypakhale"},"content":"package bob.exceptions;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"advaypakhale"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"advaypakhale"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"advaypakhale"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"advaypakhale"},"content":"class IllegalCommandExceptionTest {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"advaypakhale"},"content":"    void shouldFormatMessageWithDashes() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"advaypakhale"},"content":"        // Given","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"advaypakhale"},"content":"        String errorMessage \u003d \"Invalid command format\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"advaypakhale"},"content":"        String expectedFormattedMessage \u003d","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"advaypakhale"},"content":"                \"-----------------------------\\n\" +","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"advaypakhale"},"content":"                        \"Invalid command format\\n\" +","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"advaypakhale"},"content":"                        \"-----------------------------\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"advaypakhale"},"content":"        // When","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"advaypakhale"},"content":"        IllegalCommandException exception \u003d new IllegalCommandException(errorMessage);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"advaypakhale"},"content":"        // Then","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"advaypakhale"},"content":"        assertEquals(expectedFormattedMessage, exception.getMessage());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"advaypakhale"},"content":"    void shouldHandleEmptyMessage() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"advaypakhale"},"content":"        // Given","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"advaypakhale"},"content":"        String errorMessage \u003d \"\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"advaypakhale"},"content":"        String expectedFormattedMessage \u003d","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"advaypakhale"},"content":"                \"-----------------------------\\n\" +","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"advaypakhale"},"content":"                        \"\\n\" +","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"advaypakhale"},"content":"                        \"-----------------------------\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"advaypakhale"},"content":"        // When","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"advaypakhale"},"content":"        IllegalCommandException exception \u003d new IllegalCommandException(errorMessage);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"advaypakhale"},"content":"        // Then","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"advaypakhale"},"content":"        assertEquals(expectedFormattedMessage, exception.getMessage());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"advaypakhale"},"content":"    void shouldHandleMultilineMessage() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"advaypakhale"},"content":"        // Given","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"advaypakhale"},"content":"        String errorMessage \u003d \"Line 1\\nLine 2\\nLine 3\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"advaypakhale"},"content":"        String expectedFormattedMessage \u003d","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"advaypakhale"},"content":"                \"-----------------------------\\n\" +","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"advaypakhale"},"content":"                        \"Line 1\\nLine 2\\nLine 3\\n\" +","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"advaypakhale"},"content":"                        \"-----------------------------\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"advaypakhale"},"content":"        // When","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"advaypakhale"},"content":"        IllegalCommandException exception \u003d new IllegalCommandException(errorMessage);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"advaypakhale"},"content":"        // Then","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"advaypakhale"},"content":"        assertEquals(expectedFormattedMessage, exception.getMessage());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"advaypakhale"},"content":"    void shouldPreserveMessageInCause() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"advaypakhale"},"content":"        // Given","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"advaypakhale"},"content":"        String errorMessage \u003d \"Test message\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"advaypakhale"},"content":"        Exception cause \u003d new RuntimeException(\"Original cause\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"advaypakhale"},"content":"        // When","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"advaypakhale"},"content":"        IllegalCommandException exception \u003d new IllegalCommandException(errorMessage);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"advaypakhale"},"content":"        exception.initCause(cause);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"advaypakhale"},"content":"        // Then","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"advaypakhale"},"content":"        assertNotNull(exception.getCause());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"advaypakhale"},"content":"        assertEquals(\"Original cause\", exception.getCause().getMessage());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"advaypakhale"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"advaypakhale":72}},{"path":"src/test/java/bob/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"advaypakhale"},"content":"package bob.parser;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"advaypakhale"},"content":"import bob.command.*;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"advaypakhale"},"content":"import bob.exceptions.IllegalCommandException;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"advaypakhale"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"advaypakhale"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"advaypakhale"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"advaypakhale"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"advaypakhale"},"content":"public class ParserTest {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"advaypakhale"},"content":"    private Parser parser;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"advaypakhale"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"advaypakhale"},"content":"    void setUp() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"advaypakhale"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"advaypakhale"},"content":"    void parseUserInput_emptyInput_returnsEmptyInputCommand() throws IllegalCommandException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"advaypakhale"},"content":"        String[] emptyInput \u003d new String[0];","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"advaypakhale"},"content":"        Command result \u003d parser.parseUserInput(emptyInput);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"advaypakhale"},"content":"        assertInstanceOf(EmptyInputCommand.class, result);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"advaypakhale"},"content":"    void parseUserInput_exitCommand_returnsExitCommand() throws IllegalCommandException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"advaypakhale"},"content":"        String[] input \u003d {\"bye\"};","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"advaypakhale"},"content":"        Command result \u003d parser.parseUserInput(input);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"advaypakhale"},"content":"        assertInstanceOf(ExitCommand.class, result);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"advaypakhale"},"content":"    void parseUserInput_listCommand_returnsListCommand() throws IllegalCommandException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"advaypakhale"},"content":"        String[] input \u003d {\"list\"};","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"advaypakhale"},"content":"        Command result \u003d parser.parseUserInput(input);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"advaypakhale"},"content":"        assertInstanceOf(ListCommand.class, result);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"advaypakhale"},"content":"    void parseUserInput_markCommand_returnsMarkCommand() throws IllegalCommandException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"advaypakhale"},"content":"        String[] input \u003d {\"mark\", \"1\"};","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"advaypakhale"},"content":"        Command result \u003d parser.parseUserInput(input);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"advaypakhale"},"content":"        assertInstanceOf(MarkCommand.class, result);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"advaypakhale"},"content":"    void parseUserInput_unmarkCommand_returnsUnmarkCommand() throws IllegalCommandException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"advaypakhale"},"content":"        String[] input \u003d {\"unmark\", \"1\"};","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"advaypakhale"},"content":"        Command result \u003d parser.parseUserInput(input);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"advaypakhale"},"content":"        assertInstanceOf(UnmarkCommand.class, result);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"advaypakhale"},"content":"    void parseUserInput_todoCommand_returnsCreateTodoCommand() throws IllegalCommandException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"advaypakhale"},"content":"        String[] input \u003d {\"todo\", \"Buy groceries\"};","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"advaypakhale"},"content":"        Command result \u003d parser.parseUserInput(input);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"advaypakhale"},"content":"        assertInstanceOf(CreateTodoCommand.class, result);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"advaypakhale"},"content":"    void parseUserInput_deadlineCommand_returnsCreateDeadlineCommand() throws IllegalCommandException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"advaypakhale"},"content":"        String[] input \u003d {\"deadline\", \"Submit report\", \"2025-02-15\"};","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"advaypakhale"},"content":"        Command result \u003d parser.parseUserInput(input);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"advaypakhale"},"content":"        assertInstanceOf(CreateDeadlineCommand.class, result);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"advaypakhale"},"content":"    void parseUserInput_eventCommand_returnsCreateEventCommand() throws IllegalCommandException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"advaypakhale"},"content":"        String[] input \u003d {\"event\", \"Team meeting\", \"2025-02-15\", \"2025-02-16\"};","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"advaypakhale"},"content":"        Command result \u003d parser.parseUserInput(input);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"advaypakhale"},"content":"        assertInstanceOf(CreateEventCommand.class, result);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"advaypakhale"},"content":"    void parseUserInput_deleteCommand_returnsDeleteCommand() throws IllegalCommandException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"advaypakhale"},"content":"        String[] input \u003d {\"delete\", \"1\"};","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"advaypakhale"},"content":"        Command result \u003d parser.parseUserInput(input);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"advaypakhale"},"content":"        assertInstanceOf(DeleteCommand.class, result);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"advaypakhale"},"content":"    void parseUserInput_invalidCommand_throwsIllegalCommandException() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"advaypakhale"},"content":"        String[] input \u003d {\"invalid\"};","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"advaypakhale"},"content":"        assertThrows(IllegalCommandException.class, () -\u003e parser.parseUserInput(input));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"advaypakhale"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"advaypakhale":87}},{"path":"src/test/java/bob/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"advaypakhale"},"content":"package bob.storage;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"advaypakhale"},"content":"import bob.task.Deadline;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"advaypakhale"},"content":"import bob.task.Event;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"advaypakhale"},"content":"import bob.task.TaskList;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"advaypakhale"},"content":"import bob.task.Todo;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"advaypakhale"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"advaypakhale"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"advaypakhale"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"advaypakhale"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"advaypakhale"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"advaypakhale"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"advaypakhale"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"advaypakhale"},"content":"import java.util.List;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"advaypakhale"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"advaypakhale"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"advaypakhale"},"content":"class StorageTest {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"advaypakhale"},"content":"    @TempDir","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"advaypakhale"},"content":"    Path tempDir;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"advaypakhale"},"content":"    private Path storageFile;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"advaypakhale"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"advaypakhale"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"advaypakhale"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"advaypakhale"},"content":"    void setUp() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"advaypakhale"},"content":"        storageFile \u003d tempDir.resolve(\"tasks.txt\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"advaypakhale"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"advaypakhale"},"content":"        storage \u003d new Storage(storageFile.toString(), taskList);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"advaypakhale"},"content":"    void save_withTodoTask_writesCorrectFormat() throws IOException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"advaypakhale"},"content":"        Todo todo \u003d new Todo(\"Buy groceries\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"advaypakhale"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"advaypakhale"},"content":"        storage.save();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"advaypakhale"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(storageFile);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"advaypakhale"},"content":"        assertEquals(1, lines.size());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"advaypakhale"},"content":"        assertEquals(\"T | N | Buy groceries\", lines.get(0));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"advaypakhale"},"content":"    void save_withDeadlineTask_writesCorrectFormat() throws IOException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"advaypakhale"},"content":"        LocalDate deadline \u003d LocalDate.of(2025, 2, 15);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"advaypakhale"},"content":"        Deadline deadlineTask \u003d new Deadline(\"Submit report\", deadline);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"advaypakhale"},"content":"        taskList.addTask(deadlineTask);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"advaypakhale"},"content":"        storage.save();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"advaypakhale"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(storageFile);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"advaypakhale"},"content":"        assertEquals(1, lines.size());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"advaypakhale"},"content":"        assertEquals(\"D | N | Submit report | 2025-02-15\", lines.get(0));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"advaypakhale"},"content":"    void save_withEventTask_writesCorrectFormat() throws IOException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"advaypakhale"},"content":"        LocalDate startDate \u003d LocalDate.of(2025, 2, 15);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"advaypakhale"},"content":"        LocalDate endDate \u003d LocalDate.of(2025, 2, 16);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"advaypakhale"},"content":"        Event event \u003d new Event(\"Team meeting\", startDate, endDate);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"advaypakhale"},"content":"        taskList.addTask(event);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"advaypakhale"},"content":"        storage.save();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"advaypakhale"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(storageFile);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"advaypakhale"},"content":"        assertEquals(1, lines.size());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"advaypakhale"},"content":"        assertEquals(\"E | N | Team meeting | 2025-02-15 | 2025-02-16\", lines.get(0));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"advaypakhale"},"content":"    void load_withValidTodoTask_loadsCorrectly() throws IOException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"advaypakhale"},"content":"        Files.write(storageFile, List.of(\"T | N | Buy groceries\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"advaypakhale"},"content":"        storage.load();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"advaypakhale"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"advaypakhale"},"content":"        assertTrue(taskList.getTaskString(0).contains(\"Buy groceries\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"advaypakhale"},"content":"    void load_withValidDeadlineTask_loadsCorrectly() throws IOException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"advaypakhale"},"content":"        Files.write(storageFile, List.of(\"D | N | Submit report | 2025-02-15\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"advaypakhale"},"content":"        storage.load();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"advaypakhale"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"advaypakhale"},"content":"        assertTrue(taskList.getTaskString(0).contains(\"Submit report\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"advaypakhale"},"content":"        assertTrue(taskList.getTaskString(0).contains(\"15 Feb 2025\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"advaypakhale"},"content":"    void load_withValidEventTask_loadsCorrectly() throws IOException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"advaypakhale"},"content":"        Files.write(storageFile, List.of(\"E | N | Team meeting | 2025-02-15 | 2025-02-16\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"advaypakhale"},"content":"        storage.load();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"advaypakhale"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"advaypakhale"},"content":"        assertTrue(taskList.getTaskString(0).contains(\"Team meeting\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"advaypakhale"},"content":"        assertTrue(taskList.getTaskString(0).contains(\"15 Feb 2025\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"advaypakhale"},"content":"        assertTrue(taskList.getTaskString(0).contains(\"16 Feb 2025\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"advaypakhale"},"content":"    void load_withMalformedLine_skipsLine() throws IOException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"advaypakhale"},"content":"        Files.write(storageFile, List.of(","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"advaypakhale"},"content":"                \"T | N | Valid todo\",","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"advaypakhale"},"content":"                \"Invalid line\",","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"advaypakhale"},"content":"                \"T | N | Another valid todo\"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"advaypakhale"},"content":"        ));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"advaypakhale"},"content":"        storage.load();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"advaypakhale"},"content":"        assertEquals(2, taskList.size());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"advaypakhale"},"content":"    void load_withMalformedDate_skipsTask() throws IOException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"advaypakhale"},"content":"        Files.write(storageFile, List.of(","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"advaypakhale"},"content":"                \"D | N | Report | invalid-date\",","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"advaypakhale"},"content":"                \"T | N | Valid todo\"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"advaypakhale"},"content":"        ));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"advaypakhale"},"content":"        storage.load();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"advaypakhale"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"advaypakhale"},"content":"        assertTrue(taskList.getTaskString(0).contains(\"Valid todo\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"advaypakhale"},"content":"    void load_withCompletedTask_setsCorrectStatus() throws IOException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"advaypakhale"},"content":"        Files.write(storageFile, List.of(\"T | Y | Completed todo\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"advaypakhale"},"content":"        storage.load();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"advaypakhale"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"advaypakhale"},"content":"        assertTrue(taskList.getTaskString(0).contains(\"[X]\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"advaypakhale"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"advaypakhale":142}},{"path":"src/test/java/bob/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"advaypakhale"},"content":"package bob.task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"advaypakhale"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"advaypakhale"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"advaypakhale"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"advaypakhale"},"content":"class TaskListTest {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"advaypakhale"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"advaypakhale"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"advaypakhale"},"content":"    void setUp() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"advaypakhale"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"advaypakhale"},"content":"    void addTask_withValidTask_increasesSize() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"advaypakhale"},"content":"        Todo task \u003d new Todo(\"Test task\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"advaypakhale"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"advaypakhale"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"advaypakhale"},"content":"    void getTaskString_withValidIndex_returnsCorrectString() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"advaypakhale"},"content":"        Todo task \u003d new Todo(\"Test task\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"advaypakhale"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"advaypakhale"},"content":"        String taskString \u003d taskList.getTaskString(0);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"advaypakhale"},"content":"        assertTrue(taskString.contains(\"Test task\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"advaypakhale"},"content":"        assertTrue(taskString.contains(\"[T]\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"advaypakhale"},"content":"    void markAsDone_withValidIndex_marksTask() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"advaypakhale"},"content":"        Todo task \u003d new Todo(\"Test task\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"advaypakhale"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"advaypakhale"},"content":"        assertTrue(taskList.markAsDone(0));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"advaypakhale"},"content":"        assertTrue(taskList.getTaskString(0).contains(\"[X]\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"advaypakhale"},"content":"    void markAsDone_withAlreadyDoneTask_returnsFalse() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"advaypakhale"},"content":"        Todo task \u003d new Todo(\"Test task\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"advaypakhale"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"advaypakhale"},"content":"        taskList.markAsDone(0);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"advaypakhale"},"content":"        assertFalse(taskList.markAsDone(0));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"advaypakhale"},"content":"    void markAsUndone_withValidIndex_unmarksTask() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"advaypakhale"},"content":"        Todo task \u003d new Todo(\"Test task\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"advaypakhale"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"advaypakhale"},"content":"        taskList.markAsDone(0);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"advaypakhale"},"content":"        assertTrue(taskList.markAsUndone(0));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"advaypakhale"},"content":"        assertTrue(taskList.getTaskString(0).contains(\"[ ]\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"advaypakhale"},"content":"    void markAsUndone_withAlreadyUndoneTask_returnsFalse() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"advaypakhale"},"content":"        Todo task \u003d new Todo(\"Test task\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"advaypakhale"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"advaypakhale"},"content":"        assertFalse(taskList.markAsUndone(0));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"advaypakhale"},"content":"    void deleteTask_withValidIndex_removesTask() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"advaypakhale"},"content":"        Todo task \u003d new Todo(\"Test task\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"advaypakhale"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"advaypakhale"},"content":"        String deletedTask \u003d taskList.deleteTask(0);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"advaypakhale"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"advaypakhale"},"content":"        assertTrue(deletedTask.contains(\"Test task\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"advaypakhale"},"content":"    void clear_withTasks_removesAllTasks() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"advaypakhale"},"content":"        taskList.addTask(new Todo(\"Task 1\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"advaypakhale"},"content":"        taskList.addTask(new Todo(\"Task 2\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"advaypakhale"},"content":"        taskList.addTask(new Todo(\"Task 3\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"advaypakhale"},"content":"        taskList.clear();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"advaypakhale"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"advaypakhale"},"content":"    void iterator_returnsCorrectNumberOfTasks() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"advaypakhale"},"content":"        taskList.addTask(new Todo(\"Task 1\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"advaypakhale"},"content":"        taskList.addTask(new Todo(\"Task 2\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"advaypakhale"},"content":"        int count \u003d 0;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"advaypakhale"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"advaypakhale"},"content":"            count++;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"advaypakhale"},"content":"        assertEquals(2, count);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"advaypakhale"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"advaypakhale":99}},{"path":"src/test/java/bob/task/TaskTests.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"advaypakhale"},"content":"package bob.task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"advaypakhale"},"content":"import org.junit.jupiter.api.Nested;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"advaypakhale"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"advaypakhale"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"advaypakhale"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"advaypakhale"},"content":"class TaskTests {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"advaypakhale"},"content":"    @Nested","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"advaypakhale"},"content":"    class TodoTest {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"advaypakhale"},"content":"        @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"advaypakhale"},"content":"        void constructor_setsDescription() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"advaypakhale"},"content":"            Todo todo \u003d new Todo(\"Test todo\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"advaypakhale"},"content":"            assertTrue(todo.toString().contains(\"Test todo\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"advaypakhale"},"content":"        @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"advaypakhale"},"content":"        void toString_containsCorrectFormat() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"advaypakhale"},"content":"            Todo todo \u003d new Todo(\"Test todo\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"advaypakhale"},"content":"            String expected \u003d \"[T][ ] Test todo\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"advaypakhale"},"content":"            assertEquals(expected, todo.toString());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"advaypakhale"},"content":"        @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"advaypakhale"},"content":"        void toFileString_unmarkedTask_returnsCorrectFormat() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"advaypakhale"},"content":"            Todo todo \u003d new Todo(\"Test todo\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"advaypakhale"},"content":"            assertEquals(\"T | N | Test todo\", todo.toFileString());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"advaypakhale"},"content":"        @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"advaypakhale"},"content":"        void toFileString_markedTask_returnsCorrectFormat() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"advaypakhale"},"content":"            Todo todo \u003d new Todo(\"Test todo\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"advaypakhale"},"content":"            todo.markAsDone();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"advaypakhale"},"content":"            assertEquals(\"T | Y | Test todo\", todo.toFileString());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"advaypakhale"},"content":"    @Nested","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"advaypakhale"},"content":"    class DeadlineTest {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"advaypakhale"},"content":"        @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"advaypakhale"},"content":"        void constructor_setsDescriptionAndDate() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"advaypakhale"},"content":"            LocalDate deadline \u003d LocalDate.of(2025, 2, 15);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"advaypakhale"},"content":"            Deadline task \u003d new Deadline(\"Test deadline\", deadline);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"advaypakhale"},"content":"            String taskString \u003d task.toString();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"advaypakhale"},"content":"            assertTrue(taskString.contains(\"Test deadline\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"advaypakhale"},"content":"            assertTrue(taskString.contains(\"15 Feb 2025\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"advaypakhale"},"content":"        @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"advaypakhale"},"content":"        void toString_containsCorrectFormat() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"advaypakhale"},"content":"            LocalDate deadline \u003d LocalDate.of(2025, 2, 15);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"advaypakhale"},"content":"            Deadline task \u003d new Deadline(\"Test deadline\", deadline);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"advaypakhale"},"content":"            String expected \u003d \"[D][ ] Test deadline (Deadline: 15 Feb 2025)\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"advaypakhale"},"content":"            assertEquals(expected, task.toString());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"advaypakhale"},"content":"        @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"advaypakhale"},"content":"        void toFileString_unmarkedTask_returnsCorrectFormat() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"advaypakhale"},"content":"            LocalDate deadline \u003d LocalDate.of(2025, 2, 15);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"advaypakhale"},"content":"            Deadline task \u003d new Deadline(\"Test deadline\", deadline);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"advaypakhale"},"content":"            assertEquals(\"D | N | Test deadline | 2025-02-15\", task.toFileString());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"advaypakhale"},"content":"        @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"advaypakhale"},"content":"        void toFileString_markedTask_returnsCorrectFormat() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"advaypakhale"},"content":"            LocalDate deadline \u003d LocalDate.of(2025, 2, 15);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"advaypakhale"},"content":"            Deadline task \u003d new Deadline(\"Test deadline\", deadline);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"advaypakhale"},"content":"            task.markAsDone();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"advaypakhale"},"content":"            assertEquals(\"D | Y | Test deadline | 2025-02-15\", task.toFileString());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"advaypakhale"},"content":"    @Nested","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"advaypakhale"},"content":"    class EventTest {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"advaypakhale"},"content":"        private final LocalDate startDate \u003d LocalDate.of(2025, 2, 15);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"advaypakhale"},"content":"        private final LocalDate endDate \u003d LocalDate.of(2025, 2, 16);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"advaypakhale"},"content":"        @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"advaypakhale"},"content":"        void constructor_setsDescriptionAndDates() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"advaypakhale"},"content":"            Event event \u003d new Event(\"Test event\", startDate, endDate);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"advaypakhale"},"content":"            String eventString \u003d event.toString();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"advaypakhale"},"content":"            assertTrue(eventString.contains(\"Test event\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"advaypakhale"},"content":"            assertTrue(eventString.contains(\"15 Feb 2025\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"advaypakhale"},"content":"            assertTrue(eventString.contains(\"16 Feb 2025\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"advaypakhale"},"content":"        @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"advaypakhale"},"content":"        void toString_containsCorrectFormat() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"advaypakhale"},"content":"            Event event \u003d new Event(\"Test event\", startDate, endDate);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"advaypakhale"},"content":"            String expected \u003d \"[E][ ] Test event (Event start: 15 Feb 2025 | Event end: 16 Feb 2025)\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"advaypakhale"},"content":"            assertEquals(expected, event.toString());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"advaypakhale"},"content":"        @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"advaypakhale"},"content":"        void toFileString_unmarkedTask_returnsCorrectFormat() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"advaypakhale"},"content":"            Event event \u003d new Event(\"Test event\", startDate, endDate);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"advaypakhale"},"content":"            assertEquals(\"E | N | Test event | 2025-02-15 | 2025-02-16\", event.toFileString());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"advaypakhale"},"content":"        @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"advaypakhale"},"content":"        void toFileString_markedTask_returnsCorrectFormat() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"advaypakhale"},"content":"            Event event \u003d new Event(\"Test event\", startDate, endDate);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"advaypakhale"},"content":"            event.markAsDone();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"advaypakhale"},"content":"            assertEquals(\"E | Y | Test event | 2025-02-15 | 2025-02-16\", event.toFileString());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"advaypakhale"},"content":"    @Nested","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"advaypakhale"},"content":"    class TaskCommonBehaviorTest {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"advaypakhale"},"content":"        @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"advaypakhale"},"content":"        void markAsDone_unmarkedTask_returnsTrue() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"advaypakhale"},"content":"            Task task \u003d new TestTask(\"Test task\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"advaypakhale"},"content":"            assertTrue(task.markAsDone());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"advaypakhale"},"content":"        @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"advaypakhale"},"content":"        void markAsDone_alreadyMarkedTask_returnsFalse() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"advaypakhale"},"content":"            Task task \u003d new TestTask(\"Test task\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"advaypakhale"},"content":"            task.markAsDone();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"advaypakhale"},"content":"            assertFalse(task.markAsDone());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"advaypakhale"},"content":"        @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"advaypakhale"},"content":"        void markAsUndone_markedTask_returnsTrue() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"advaypakhale"},"content":"            Task task \u003d new TestTask(\"Test task\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"advaypakhale"},"content":"            task.markAsDone();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"advaypakhale"},"content":"            assertTrue(task.markAsUndone());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"advaypakhale"},"content":"        @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"advaypakhale"},"content":"        void markAsUndone_unmarkedTask_returnsFalse() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"advaypakhale"},"content":"            Task task \u003d new TestTask(\"Test task\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"advaypakhale"},"content":"            assertFalse(task.markAsUndone());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"advaypakhale"},"content":"        @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"advaypakhale"},"content":"        void toString_reflectsCompletionStatus() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"advaypakhale"},"content":"            Task task \u003d new TestTask(\"Test task\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"advaypakhale"},"content":"            assertTrue(task.toString().contains(\"[ ]\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"advaypakhale"},"content":"            task.markAsDone();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"advaypakhale"},"content":"            assertTrue(task.toString().contains(\"[X]\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"advaypakhale"},"content":"        private static class TestTask extends Task {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"advaypakhale"},"content":"            public TestTask(String description) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"advaypakhale"},"content":"                super(description);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"advaypakhale"},"content":"            }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"advaypakhale"},"content":"            @Override","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"advaypakhale"},"content":"            public String toFileString() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"advaypakhale"},"content":"                return null;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"advaypakhale"},"content":"            }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"advaypakhale"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"advaypakhale"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"advaypakhale":157}},{"path":"src/test/java/bob/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"advaypakhale"},"content":"package bob.ui;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"advaypakhale"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"advaypakhale"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"advaypakhale"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"advaypakhale"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"advaypakhale"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"advaypakhale"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"advaypakhale"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"advaypakhale"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"advaypakhale"},"content":"class UiTest {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"advaypakhale"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"advaypakhale"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"advaypakhale"},"content":"    private Ui ui;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"advaypakhale"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"advaypakhale"},"content":"    void setUp() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"advaypakhale"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"advaypakhale"},"content":"    @AfterEach","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"advaypakhale"},"content":"    void restoreStreams() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"advaypakhale"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"advaypakhale"},"content":"    private void provideInput(String data) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"advaypakhale"},"content":"        ByteArrayInputStream testIn \u003d new ByteArrayInputStream(data.getBytes());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"advaypakhale"},"content":"        System.setIn(testIn);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"advaypakhale"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"advaypakhale"},"content":"    void getUserInput_emptyInput_returnsEmptyArray() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"advaypakhale"},"content":"        provideInput(\"\\n\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"advaypakhale"},"content":"        String[] result \u003d ui.getUserInput();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"advaypakhale"},"content":"        assertEquals(0, result.length);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"advaypakhale"},"content":"    void getUserInput_singleWord_returnsArrayWithOneElement() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"advaypakhale"},"content":"        provideInput(\"test\\n\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"advaypakhale"},"content":"        String[] result \u003d ui.getUserInput();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"advaypakhale"},"content":"        assertEquals(1, result.length);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"advaypakhale"},"content":"        assertEquals(\"test\", result[0]);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"advaypakhale"},"content":"    void getUserInput_multipleWords_returnsArrayWithCorrectElements() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"advaypakhale"},"content":"        provideInput(\"todo Buy groceries\\n\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"advaypakhale"},"content":"        String[] result \u003d ui.getUserInput();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"advaypakhale"},"content":"        assertEquals(3, result.length);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"advaypakhale"},"content":"        assertEquals(\"todo\", result[0]);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"advaypakhale"},"content":"        assertEquals(\"Buy\", result[1]);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"advaypakhale"},"content":"        assertEquals(\"groceries\", result[2]);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"advaypakhale"},"content":"    void wrapText_stringBuilder_printsWithBorders() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"advaypakhale"},"content":"        StringBuilder message \u003d new StringBuilder(\"Test message\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"advaypakhale"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"advaypakhale"},"content":"        ui.wrapText(message);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"advaypakhale"},"content":"        String output \u003d outContent.toString();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"advaypakhale"},"content":"        assertTrue(output.contains(\"-----------------------------\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"advaypakhale"},"content":"        assertTrue(output.contains(\"Test message\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"advaypakhale"},"content":"        assertTrue(output.trim().split(\"\\n\").length \u003e\u003d 3);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"advaypakhale"},"content":"    void wrapText_string_printsWithBorders() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"advaypakhale"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"advaypakhale"},"content":"        ui.wrapText(\"Test message\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"advaypakhale"},"content":"        String output \u003d outContent.toString();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"advaypakhale"},"content":"        assertTrue(output.contains(\"-----------------------------\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"advaypakhale"},"content":"        assertTrue(output.contains(\"Test message\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"advaypakhale"},"content":"        assertTrue(output.trim().split(\"\\n\").length \u003e\u003d 3);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"advaypakhale"},"content":"    void greet_printsWelcomeMessage() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"advaypakhale"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"advaypakhale"},"content":"        ui.greet();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"advaypakhale"},"content":"        String output \u003d outContent.toString();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"advaypakhale"},"content":"        assertTrue(output.contains(\"Bob\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"advaypakhale"},"content":"        assertTrue(output.contains(\"Hello\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"advaypakhale"},"content":"        assertTrue(output.contains(\"What can I do for you\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"advaypakhale"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"advaypakhale"},"content":"    @Test","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"advaypakhale"},"content":"    void getUserInput_promptDisplayed() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"advaypakhale"},"content":"        provideInput(\"test\\n\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"advaypakhale"},"content":"        ui.getUserInput();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"advaypakhale"},"content":"        assertTrue(outContent.toString().contains(\"\u003e\u003e\u003e\"));","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"advaypakhale"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"advaypakhale"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"advaypakhale":100}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"advaypakhale"},"content":"todo a","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"advaypakhale"},"content":"todo b","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"advaypakhale"},"content":"deadline ten /by friday","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"advaypakhale"},"content":"event party /from morning /to evening","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"advaypakhale"},"content":"mark 3","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"advaypakhale"},"content":"list","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"advaypakhale"},"content":"mark 2","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"advaypakhale"},"content":"unmark 3","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"advaypakhale"},"content":"list","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"advaypakhale"},"content":"bye","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"advaypakhale":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"advaypakhale"},"content":"REM run the program, feed bob.command from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"advaypakhale"},"content":"java -classpath ..\\bin bob.Bob \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"advaypakhale":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"advaypakhale"},"content":"java -classpath ../bin Bob \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"advaypakhale":1,"-":37}}]
