[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"MrAsparag00se"},"content":"# Vegetables project template","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"MrAsparag00se"},"content":"1. After that, locate the `src/main/java/Vegetables.java` file, right-click it, and choose `Run Vegetables.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false}],"authorContributionMap":{"-":24,"MrAsparag00se":2}},{"path":"SHOPPING/list.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"MrAsparag00se"},"content":"TODO | 0 | add later","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"MrAsparag00se"},"content":"EVENT | 0 | there | 1212-12-12 12:12 | 1212-12-12 13:12","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"MrAsparag00se"},"content":"EVENT | 0 | this thing | 2025-04-04 12:00 | 2025-04-04 15:00","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"MrAsparag00se"},"content":"EVENT | 0 | overlapping thing | 2025-04-04 12:15 | 2025-04-04 12:30","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"MrAsparag00se":4}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"MrAsparag00se"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"MrAsparag00se"},"content":"javafx {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"MrAsparag00se"},"content":"    version \u003d \"17.0.14\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"MrAsparag00se"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027, \u0027javafx.graphics\u0027 ]","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"MrAsparag00se"},"content":"dependencies {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"MrAsparag00se"},"content":"    implementation \"org.openjfx:javafx-base:17.0.14:win\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"MrAsparag00se"},"content":"    implementation \"org.openjfx:javafx-controls:17.0.14:win\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"MrAsparag00se"},"content":"    implementation \"org.openjfx:javafx-fxml:17.0.14:win\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"MrAsparag00se"},"content":"    implementation \"org.openjfx:javafx-graphics:17.0.14:win\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"MrAsparag00se"},"content":"    mainClass \u003d \u0027vegetables.gui.Launcher\u0027","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"MrAsparag00se"},"content":"    archiveBaseName \u003d \u0027veggie\u0027","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"MrAsparag00se"},"content":"    mergeServiceFiles()","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"MrAsparag00se"},"content":"    ","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"MrAsparag00se"},"content":"    exclude \u0027module-info.class\u0027","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"MrAsparag00se"},"content":"    manifest {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"MrAsparag00se"},"content":"        attributes \u0027Main-Class\u0027: \u0027vegetables.gui.Launcher\u0027","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":22,"MrAsparag00se":16}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"MrAsparag00se"},"content":"# Vegetables User Guide","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"-":29,"MrAsparag00se":1}},{"path":"src/main/java/vegetables/Vegetables.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrAsparag00se"},"content":"package vegetables;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"MrAsparag00se"},"content":"import vegetables.command.CommandHandler;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"MrAsparag00se"},"content":"import vegetables.manager.TaskManager;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"MrAsparag00se"},"content":"import vegetables.task.Task;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"MrAsparag00se"},"content":"import vegetables.storage.TaskStorage;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"MrAsparag00se"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"MrAsparag00se"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"MrAsparag00se"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"MrAsparag00se"},"content":" * Runs the Vegetables program, that supports creating, listing,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"MrAsparag00se"},"content":" * marking, unmarking, deleting, and finding tasks.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"MrAsparag00se"},"content":" * Tasks can be of type ToDo, Deadline, or Event.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"MrAsparag00se"},"content":" * The program uses a file to persist tasks between sessions.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"MrAsparag00se"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"MrAsparag00se"},"content":"public class Vegetables {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"MrAsparag00se"},"content":"     * Entry point of the Vegetables program.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"MrAsparag00se"},"content":"     * Displays a welcome message and runs a command loop to process user input.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"MrAsparag00se"},"content":"     * @param args Command-line arguments (not used).","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"MrAsparag00se"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"MrAsparag00se"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"MrAsparag00se"},"content":"        TaskStorage taskStorage \u003d new TaskStorage();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"MrAsparag00se"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskStorage.loadTasks();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"MrAsparag00se"},"content":"        TaskManager taskManager \u003d new TaskManager(tasks);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"MrAsparag00se"},"content":"        String veggieLogo \u003d","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"MrAsparag00se"},"content":"                \" _  _  ____  ___  ____  ____   __    ____  __    ____  ___ \\n\"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"MrAsparag00se"},"content":"                        + \"( \\\\/ )( ___)/ __)( ___)(_  _) /__\\\\  (  _ \\\\(  )  ( ___)/ __)\\n\"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"MrAsparag00se"},"content":"                        + \" \\\\  /  )__)( (_-. )__)   )(  /(__)\\\\  ) _ \u003c )(__  )__) \\\\__ \\\\\\n\"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"MrAsparag00se"},"content":"                        + \"  \\\\/  (____)\\\\___/(____) (__)(__)(__)(____/(____)(____)(___/ \\n\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"MrAsparag00se"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"MrAsparag00se"},"content":"        System.out.println(\" Hello! I\u0027m Vegetables\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"MrAsparag00se"},"content":"        System.out.println(veggieLogo);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"MrAsparag00se"},"content":"        System.out.println(\" What can I do for you?\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"MrAsparag00se"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"MrAsparag00se"},"content":"        CommandHandler commandHandler \u003d new CommandHandler(taskManager, taskStorage);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"MrAsparag00se"},"content":"        while (true) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"MrAsparag00se"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"MrAsparag00se"},"content":"            commandHandler.executeCommand(userInput);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"MrAsparag00se"},"content":"            if (userInput.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"MrAsparag00se"},"content":"                break; // Exit the program","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"MrAsparag00se"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"MrAsparag00se"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"MrAsparag00se"},"content":"        scanner.close();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"MrAsparag00se"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"MrAsparag00se":54}},{"path":"src/main/java/vegetables/command/CommandHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrAsparag00se"},"content":"package vegetables.command;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"MrAsparag00se"},"content":"import vegetables.task.Task;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"MrAsparag00se"},"content":"import vegetables.manager.TaskManager;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"MrAsparag00se"},"content":"import vegetables.storage.TaskStorage;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"MrAsparag00se"},"content":"import vegetables.exception.VeggieException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"MrAsparag00se"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"MrAsparag00se"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"MrAsparag00se"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"MrAsparag00se"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"MrAsparag00se"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"MrAsparag00se"},"content":" * CommandHandler is responsible for processing and executing user commands","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"MrAsparag00se"},"content":" * related to task management. It interacts with the TaskManager and TaskStorage","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"MrAsparag00se"},"content":" * to perform operations such as adding tasks, listing tasks, marking tasks,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"MrAsparag00se"},"content":" * and saving/loading tasks to/from a file.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"MrAsparag00se"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"MrAsparag00se"},"content":"public class CommandHandler {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"MrAsparag00se"},"content":"    private final TaskManager taskManager;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"MrAsparag00se"},"content":"    private final TaskStorage taskStorage;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"MrAsparag00se"},"content":"     * Constructs a CommandHandler instance with the specified TaskManager and TaskStorage.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"MrAsparag00se"},"content":"     * @param taskManager The TaskManager that handles task-related operations.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"MrAsparag00se"},"content":"     * @param taskStorage The TaskStorage used for saving and loading tasks from a file.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"MrAsparag00se"},"content":"    public CommandHandler(TaskManager taskManager, TaskStorage taskStorage) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"MrAsparag00se"},"content":"        this.taskManager \u003d taskManager;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"MrAsparag00se"},"content":"        this.taskStorage \u003d taskStorage;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"MrAsparag00se"},"content":"     * Executes a command based on the user input.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"MrAsparag00se"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"MrAsparag00se"},"content":"     * This method interprets the user\u0027s input and executes the corresponding command.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"MrAsparag00se"},"content":"     * It supports the following commands:","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"MrAsparag00se"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"MrAsparag00se"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"MrAsparag00se"},"content":"     *     \u003cli\u003e\u003cb\u003e\"help\"\u003c/b\u003e - Displays a list of available commands.\u003c/li\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"MrAsparag00se"},"content":"     *     \u003cli\u003e\u003cb\u003e\"list\"\u003c/b\u003e - Lists all tasks.\u003c/li\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"MrAsparag00se"},"content":"     *     \u003cli\u003e\u003cb\u003e\"todo [description]\"\u003c/b\u003e - Adds a new to-do task.\u003c/li\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"MrAsparag00se"},"content":"     *     \u003cli\u003e\u003cb\u003e\"deadline [description] /by [date]\"\u003c/b\u003e - Adds a new deadline task.\u003c/li\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"MrAsparag00se"},"content":"     *     \u003cli\u003e\u003cb\u003e\"event [description] /at [date]\"\u003c/b\u003e - Adds a new event task.\u003c/li\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"MrAsparag00se"},"content":"     *     \u003cli\u003e\u003cb\u003e\"mark [task number]\"\u003c/b\u003e - Marks a task as completed.\u003c/li\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"MrAsparag00se"},"content":"     *     \u003cli\u003e\u003cb\u003e\"unmark [task number]\"\u003c/b\u003e - Marks a task as incomplete.\u003c/li\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"MrAsparag00se"},"content":"     *     \u003cli\u003e\u003cb\u003e\"find [keyword]\"\u003c/b\u003e - Searches for tasks containing the given keyword.\u003c/li\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"MrAsparag00se"},"content":"     *     \u003cli\u003e\u003cb\u003e\"delete [task number]\"\u003c/b\u003e - Removes a task from the list.\u003c/li\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"MrAsparag00se"},"content":"     *     \u003cli\u003e\u003cb\u003e\"bye\"\u003c/b\u003e - Saves tasks and exits the application.\u003c/li\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"MrAsparag00se"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"MrAsparag00se"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"MrAsparag00se"},"content":"     * If the input does not match any known command, an error message is returned.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"MrAsparag00se"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"MrAsparag00se"},"content":"     * @param userInput The command input provided by the user.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"MrAsparag00se"},"content":"     * @return A response message indicating the result of executing the command.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"MrAsparag00se"},"content":"    public String executeCommand(String userInput) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"MrAsparag00se"},"content":"        String result;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"MrAsparag00se"},"content":"        if (userInput.equalsIgnoreCase(\"help\")) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"MrAsparag00se"},"content":"            result \u003d displayHelp();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"MrAsparag00se"},"content":"        } else if (userInput.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"MrAsparag00se"},"content":"            result \u003d listTasks();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"MrAsparag00se"},"content":"        } else if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"MrAsparag00se"},"content":"            result \u003d handleAddToDo(userInput);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"MrAsparag00se"},"content":"        } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"MrAsparag00se"},"content":"            result \u003d handleAddDeadline(userInput);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"MrAsparag00se"},"content":"        } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"MrAsparag00se"},"content":"            result \u003d handleAddEvent(userInput, taskManager);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"MrAsparag00se"},"content":"        } else if (userInput.startsWith(\"mark\")) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"MrAsparag00se"},"content":"            result \u003d handleMarkTask(userInput);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"MrAsparag00se"},"content":"        } else if (userInput.startsWith(\"unmark\")) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"MrAsparag00se"},"content":"            result \u003d handleUnmarkTask(userInput);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"MrAsparag00se"},"content":"        } else if (userInput.startsWith(\"find\")) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"MrAsparag00se"},"content":"            result \u003d handleFindTask(userInput);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"MrAsparag00se"},"content":"        } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"MrAsparag00se"},"content":"            result \u003d handleDeleteTask(userInput);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"MrAsparag00se"},"content":"        } else if (userInput.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"MrAsparag00se"},"content":"            taskStorage.saveTasks(taskManager.getTasks());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"MrAsparag00se"},"content":"            result \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"MrAsparag00se"},"content":"        } else {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"MrAsparag00se"},"content":"            result \u003d \"Unrecognised command!\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"MrAsparag00se"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"MrAsparag00se"},"content":"        return result;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"MrAsparag00se"},"content":"    private String displayHelp() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"MrAsparag00se"},"content":"        return \" Available Commands:\\n\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"MrAsparag00se"},"content":"                + \" - todo [Task description]: Adds a task without a deadline.\\n\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"MrAsparag00se"},"content":"                + \" - deadline [Task description] /by [Date/time]: Adds a task with a deadline.\\n\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"MrAsparag00se"},"content":"                + \" - event [Task description] /from [Start time] /to [End time]: Adds an event task.\\n\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"MrAsparag00se"},"content":"                + \" - list: Displays all tasks in the list.\\n\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"MrAsparag00se"},"content":"                + \" - mark [Task number]: Marks a task as done.\\n\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"MrAsparag00se"},"content":"                + \" - unmark [Task number]: Unmarks a task as not done.\\n\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"MrAsparag00se"},"content":"                + \" - find [Keyword]: Finds a task by its keyword.\\n\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"MrAsparag00se"},"content":"                + \" - delete [Task number]: Deletes a task from the list.\\n\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"MrAsparag00se"},"content":"                + \" - bye: Exits the program.\\n\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"MrAsparag00se"},"content":"    private String listTasks() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"MrAsparag00se"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"MrAsparag00se"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskManager.getTasks();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"MrAsparag00se"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"MrAsparag00se"},"content":"            result.append(\"No tasks added.\\n\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"MrAsparag00se"},"content":"        } else {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"MrAsparag00se"},"content":"            result.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"MrAsparag00se"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"MrAsparag00se"},"content":"                // Add 1 for 1-indexing","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"MrAsparag00se"},"content":"                result.append((i + 1) + \".\" + tasks.get(i) + \"\\n\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"MrAsparag00se"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"MrAsparag00se"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"MrAsparag00se"},"content":"        return result.toString();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"MrAsparag00se"},"content":"    private String handleAddToDo(String userInput) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"MrAsparag00se"},"content":"        String taskDescription \u003d userInput.substring(5).trim();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"MrAsparag00se"},"content":"        if (taskManager.taskExists(taskDescription)) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"MrAsparag00se"},"content":"            return \"Duplicate task detected! Task already exists.\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"MrAsparag00se"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"MrAsparag00se"},"content":"        taskManager.addToDoTask(taskDescription);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"MrAsparag00se"},"content":"        taskStorage.saveTasks(taskManager.getTasks()); // Save tasks after adding","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"MrAsparag00se"},"content":"        return \"Got it. I\u0027ve added this task: \" + taskDescription;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"MrAsparag00se"},"content":"    private String handleAddDeadline(String userInput) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"MrAsparag00se"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"MrAsparag00se"},"content":"            if (!userInput.contains(\"/by\")) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"MrAsparag00se"},"content":"                throw new VeggieException(\"Correct format: deadline [Task description] /by [yyyy-MM-dd HH:mm]\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"MrAsparag00se"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"MrAsparag00se"},"content":"            String[] parts \u003d userInput.split(\"/by\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"MrAsparag00se"},"content":"            String taskDescription \u003d parts[0].substring(9).trim();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"MrAsparag00se"},"content":"            String by \u003d parts[1].trim();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"MrAsparag00se"},"content":"            // Convert deadline string to LocalDateTime","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"MrAsparag00se"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"MrAsparag00se"},"content":"            LocalDateTime deadlineDateTime \u003d LocalDateTime.parse(by, formatter);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"MrAsparag00se"},"content":"            // Check if deadline is in the past","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"MrAsparag00se"},"content":"            if (deadlineDateTime.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"MrAsparag00se"},"content":"                return \"Error: Deadline cannot be in the past!\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"MrAsparag00se"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"MrAsparag00se"},"content":"            if (taskManager.taskExists(taskDescription)) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"MrAsparag00se"},"content":"                return \"Duplicate task detected! Task already exists.\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"MrAsparag00se"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"MrAsparag00se"},"content":"            taskManager.addDeadlineTask(taskDescription, by);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"MrAsparag00se"},"content":"            taskStorage.saveTasks(taskManager.getTasks());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"MrAsparag00se"},"content":"            return \"Got it. I\u0027ve added this deadline task: \" + taskDescription;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"MrAsparag00se"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"MrAsparag00se"},"content":"            return \"Error: Invalid time or time format. Use: yyyy-MM-dd HH:mm\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"MrAsparag00se"},"content":"        } catch (VeggieException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"MrAsparag00se"},"content":"            return \"Error adding deadline task: \" + e.getMessage();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"MrAsparag00se"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"MrAsparag00se"},"content":"    private String handleAddEvent(String userInput, TaskManager taskManager) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"MrAsparag00se"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"MrAsparag00se"},"content":"            if (!userInput.contains(\"/from\") || !userInput.contains(\"/to\")) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"MrAsparag00se"},"content":"                throw new VeggieException(\"Correct format: event [Task description] /from [Start time] /to [End time]\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"MrAsparag00se"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"MrAsparag00se"},"content":"            String[] parts \u003d userInput.split(\"/from\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"MrAsparag00se"},"content":"            String taskDescription \u003d parts[0].substring(6).trim();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"MrAsparag00se"},"content":"            String from \u003d parts.length \u003e 1 ? parts[1].split(\"/to\")[0].trim() : \"\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"MrAsparag00se"},"content":"            String to \u003d parts.length \u003e 1 ? parts[1].split(\"/to\")[1].trim() : \"\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"MrAsparag00se"},"content":"            // Convert start and end time strings to LocalDateTime","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"MrAsparag00se"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"MrAsparag00se"},"content":"            LocalDateTime fromDateTime \u003d LocalDateTime.parse(from, formatter);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"MrAsparag00se"},"content":"            LocalDateTime toDateTime \u003d LocalDateTime.parse(to, formatter);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"MrAsparag00se"},"content":"            // Check for event clash using the abstracted method","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"MrAsparag00se"},"content":"            StringBuilder warningMessage \u003d taskManager.checkEventClash(fromDateTime, toDateTime);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"MrAsparag00se"},"content":"            // Check if start or end time is in the past","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"MrAsparag00se"},"content":"            if (fromDateTime.isBefore(LocalDateTime.now()) || toDateTime.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"MrAsparag00se"},"content":"                return \"Error: Event times cannot be in the past!\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"MrAsparag00se"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"MrAsparag00se"},"content":"            // Check if start time is after end time","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"MrAsparag00se"},"content":"            if (fromDateTime.isAfter(toDateTime)) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"MrAsparag00se"},"content":"                return \"Error: Start time cannot be after end time!\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"MrAsparag00se"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"MrAsparag00se"},"content":"            if (taskManager.taskExists(taskDescription)) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"MrAsparag00se"},"content":"                return \"Duplicate task detected! Task already exists.\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"MrAsparag00se"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"MrAsparag00se"},"content":"            taskManager.addEventTask(taskDescription, from, to);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"MrAsparag00se"},"content":"            taskStorage.saveTasks(taskManager.getTasks());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"MrAsparag00se"},"content":"            if (warningMessage !\u003d null) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"MrAsparag00se"},"content":"                return \"Event added with a warning:\\n\" + warningMessage.toString() +","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"MrAsparag00se"},"content":"                        \"\\nNew event added: \" + taskDescription +","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"MrAsparag00se"},"content":"                        \"\\nNow you have \" + taskManager.getTasks().size() + \" tasks in the list.\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"MrAsparag00se"},"content":"            } else {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"MrAsparag00se"},"content":"                return \"Got it. I\u0027ve added this event task:\\n\" + taskDescription +","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"MrAsparag00se"},"content":"                        \"\\nNow you have \" + taskManager.getTasks().size() + \" tasks in the list.\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"MrAsparag00se"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"MrAsparag00se"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"MrAsparag00se"},"content":"            return \"Error: Invalid time or time format. Use: yyyy-MM-dd HH:mm\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"MrAsparag00se"},"content":"        } catch (VeggieException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"MrAsparag00se"},"content":"            return \"Error adding event task: \" + e.getMessage();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"MrAsparag00se"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"MrAsparag00se"},"content":"    private String handleMarkTask(String userInput) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"MrAsparag00se"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"MrAsparag00se"},"content":"            int taskNumber \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"MrAsparag00se"},"content":"            taskManager.markTaskAsDone(taskNumber);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"MrAsparag00se"},"content":"            taskStorage.saveTasks(taskManager.getTasks());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"MrAsparag00se"},"content":"            return \"Task marked as done.\\n\" + listTasks(); // Return the updated task list","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"MrAsparag00se"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"MrAsparag00se"},"content":"            return \"Error: \" + e.getMessage();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"MrAsparag00se"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"MrAsparag00se"},"content":"    private String handleUnmarkTask(String userInput) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"MrAsparag00se"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"MrAsparag00se"},"content":"            int taskNumber \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"MrAsparag00se"},"content":"            taskManager.unmarkTask(taskNumber);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"MrAsparag00se"},"content":"            taskStorage.saveTasks(taskManager.getTasks());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"MrAsparag00se"},"content":"            return \"Task marked as not done.\\n\" + listTasks(); // Return the updated task list","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"MrAsparag00se"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"MrAsparag00se"},"content":"            return \"Error: \" + e.getMessage();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"MrAsparag00se"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"MrAsparag00se"},"content":"    private String handleFindTask(String userInput) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"MrAsparag00se"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"MrAsparag00se"},"content":"            if (userInput.length() \u003c\u003d 5) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"MrAsparag00se"},"content":"                throw new VeggieException(\"Please provide a keyword to search. Correct format: find [keyword]\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"MrAsparag00se"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"MrAsparag00se"},"content":"            String keyword \u003d userInput.substring(5).trim();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"MrAsparag00se"},"content":"            // Delegate the task searching to TaskManager","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"MrAsparag00se"},"content":"            ArrayList\u003cTask\u003e matchingTasks \u003d taskManager.findTasksBySubstring(keyword);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"MrAsparag00se"},"content":"            StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"MrAsparag00se"},"content":"            if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"MrAsparag00se"},"content":"                result.append(\"No matching tasks found.\\n\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"MrAsparag00se"},"content":"            } else {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"MrAsparag00se"},"content":"                result.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"MrAsparag00se"},"content":"                for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"MrAsparag00se"},"content":"                    result.append((i + 1) + \".\" + matchingTasks.get(i) + \"\\n\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"MrAsparag00se"},"content":"                }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"MrAsparag00se"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"MrAsparag00se"},"content":"            return result.toString();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"MrAsparag00se"},"content":"        } catch (VeggieException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"MrAsparag00se"},"content":"            return \"Error: \" + e.getMessage();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"MrAsparag00se"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"MrAsparag00se"},"content":"    private String handleDeleteTask(String userInput) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"MrAsparag00se"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"MrAsparag00se"},"content":"            int taskNumber \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"MrAsparag00se"},"content":"            taskManager.deleteTask(taskNumber);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"MrAsparag00se"},"content":"            taskStorage.saveTasks(taskManager.getTasks());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"MrAsparag00se"},"content":"            return \"Task deleted.\\n\" + listTasks(); // Return the updated task list","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"MrAsparag00se"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"MrAsparag00se"},"content":"            return \"Error: \" + e.getMessage();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"MrAsparag00se"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"MrAsparag00se"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"MrAsparag00se":271}},{"path":"src/main/java/vegetables/exception/VeggieException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrAsparag00se"},"content":"package vegetables.exception;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"MrAsparag00se"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"MrAsparag00se"},"content":" * Custom exception class for input validation.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"MrAsparag00se"},"content":" * This exception is used to handle errors specific to the application\u0027s logic.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"MrAsparag00se"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"MrAsparag00se"},"content":"public class VeggieException extends Exception {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"MrAsparag00se"},"content":"     * Constructs a new {@code VeggieException} with the specified detail message.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"MrAsparag00se"},"content":"     * The message provides additional information about the exception cause.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"MrAsparag00se"},"content":"     * @param message the detail message describing the exception.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"MrAsparag00se"},"content":"    public VeggieException(String message) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"MrAsparag00se"},"content":"        super(message);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"MrAsparag00se"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"MrAsparag00se":17}},{"path":"src/main/java/vegetables/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrAsparag00se"},"content":"package vegetables.gui;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"MrAsparag00se"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"MrAsparag00se"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"MrAsparag00se"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"MrAsparag00se"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"MrAsparag00se"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"MrAsparag00se"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"MrAsparag00se"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"MrAsparag00se"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"MrAsparag00se"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"MrAsparag00se"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"MrAsparag00se"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"MrAsparag00se"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"MrAsparag00se"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"MrAsparag00se"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"MrAsparag00se"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"MrAsparag00se"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"MrAsparag00se"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"MrAsparag00se"},"content":"    @FXML","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"MrAsparag00se"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"MrAsparag00se"},"content":"    @FXML","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"MrAsparag00se"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"MrAsparag00se"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"MrAsparag00se"},"content":"        try {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"MrAsparag00se"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(getClass().getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"MrAsparag00se"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"MrAsparag00se"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"MrAsparag00se"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"MrAsparag00se"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"MrAsparag00se"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"MrAsparag00se"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"MrAsparag00se"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"MrAsparag00se"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"MrAsparag00se"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"MrAsparag00se"},"content":"    private void flip() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"MrAsparag00se"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"MrAsparag00se"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"MrAsparag00se"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"MrAsparag00se"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"MrAsparag00se"},"content":"     * Creates a dialog box for the user, with the given text and image.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"MrAsparag00se"},"content":"     * @param text The text message from the user.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"MrAsparag00se"},"content":"     * @param img  The image representing the user.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"MrAsparag00se"},"content":"     * @return A DialogBox instance displaying the user\u0027s message.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"MrAsparag00se"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"MrAsparag00se"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"MrAsparag00se"},"content":"     * Creates a dialog box for the system (Veggie), with the given text and image.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"MrAsparag00se"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"MrAsparag00se"},"content":"     * The dialog box is flipped so that the system\u0027s messages appear distinct from the user\u0027s.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"MrAsparag00se"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"MrAsparag00se"},"content":"     * @param text The text message from the system (Veggie).","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"MrAsparag00se"},"content":"     * @param img  The image representing the system.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"MrAsparag00se"},"content":"     * @return A DialogBox instance displaying the system\u0027s message.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"MrAsparag00se"},"content":"    public static DialogBox getVeggieDialog(String text, Image img) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"MrAsparag00se"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"MrAsparag00se"},"content":"        db.flip();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"MrAsparag00se"},"content":"        return db;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"MrAsparag00se"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"MrAsparag00se":77}},{"path":"src/main/java/vegetables/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrAsparag00se"},"content":"package vegetables.gui;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"MrAsparag00se"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"MrAsparag00se"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"MrAsparag00se"},"content":" * The entry point of the application.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"MrAsparag00se"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"MrAsparag00se"},"content":" * This class serves as a workaround for launching JavaFX applications","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"MrAsparag00se"},"content":" * when using certain build tools that require a separate main class.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"MrAsparag00se"},"content":" * It delegates the application startup to {@link Main}.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"MrAsparag00se"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"MrAsparag00se"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"MrAsparag00se"},"content":"public class Launcher {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"MrAsparag00se"},"content":"     * The main method that starts the JavaFX application.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"MrAsparag00se"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"MrAsparag00se"},"content":"     * Calls {@link Application#launch(Class, String...)} with {@link Main} as the application class.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"MrAsparag00se"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"MrAsparag00se"},"content":"     * @param args Command-line arguments passed to the application.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"MrAsparag00se"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"MrAsparag00se"},"content":"        Application.launch(vegetables.gui.Main.class, args);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"MrAsparag00se"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"MrAsparag00se":25}},{"path":"src/main/java/vegetables/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrAsparag00se"},"content":"package vegetables.gui;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"MrAsparag00se"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"MrAsparag00se"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"MrAsparag00se"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"MrAsparag00se"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"MrAsparag00se"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"MrAsparag00se"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"MrAsparag00se"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"MrAsparag00se"},"content":" * The main entry point for the JavaFX application.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"MrAsparag00se"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"MrAsparag00se"},"content":" * This class initializes and launches the GUI for the Vegetables application.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"MrAsparag00se"},"content":" * It loads the {@code MainWindow.fxml} file and sets up the primary stage.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"MrAsparag00se"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"MrAsparag00se"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"MrAsparag00se"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"MrAsparag00se"},"content":"    private VegetablesGUI vegetablesGUI \u003d new VegetablesGUI();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"MrAsparag00se"},"content":"     * Starts the JavaFX application by setting up the primary stage.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"MrAsparag00se"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"MrAsparag00se"},"content":"     * Loads the {@code MainWindow.fxml} layout, sets the scene, and initializes the","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"MrAsparag00se"},"content":"     * {@link VegetablesGUI} instance for handling interactions.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"MrAsparag00se"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"MrAsparag00se"},"content":"     * @param stage The primary stage for the JavaFX application.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"MrAsparag00se"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"MrAsparag00se"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"MrAsparag00se"},"content":"        try {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"MrAsparag00se"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(getClass().getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"MrAsparag00se"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"MrAsparag00se"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"MrAsparag00se"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"MrAsparag00se"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setVegetablesGUI(vegetablesGUI);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"MrAsparag00se"},"content":"            stage.show();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"MrAsparag00se"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"MrAsparag00se"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"MrAsparag00se"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"MrAsparag00se"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"MrAsparag00se":42}},{"path":"src/main/java/vegetables/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrAsparag00se"},"content":"package vegetables.gui;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"MrAsparag00se"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"MrAsparag00se"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"MrAsparag00se"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"MrAsparag00se"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"MrAsparag00se"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"MrAsparag00se"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"MrAsparag00se"},"content":" * The controller for the main GUI window of the Vegetables application.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"MrAsparag00se"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"MrAsparag00se"},"content":" * This class manages user interactions, displaying dialog boxes for both user input","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"MrAsparag00se"},"content":" * and system responses. It extends {@link ScrollPane} and contains an interactive","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"MrAsparag00se"},"content":" * text field for user input.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"MrAsparag00se"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"MrAsparag00se"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"MrAsparag00se"},"content":"public class MainWindow extends ScrollPane {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"MrAsparag00se"},"content":"    @FXML private VBox dialogContainer;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"MrAsparag00se"},"content":"    @FXML private TextField userInput;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"MrAsparag00se"},"content":"    private VegetablesGUI vegetablesGUI;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"MrAsparag00se"},"content":"    private Image userImage \u003d new Image(getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"MrAsparag00se"},"content":"    private Image veggieImage \u003d new Image(getClass().getResourceAsStream(\"/images/Vegetables.png\"));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"MrAsparag00se"},"content":"     * Sets the instance of {@link VegetablesGUI} that handles user input and responses.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"MrAsparag00se"},"content":"     * @param vegetablesGUI The instance of {@link VegetablesGUI} to be linked to this window.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"MrAsparag00se"},"content":"    public void setVegetablesGUI(VegetablesGUI vegetablesGUI) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"MrAsparag00se"},"content":"        this.vegetablesGUI \u003d vegetablesGUI;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"MrAsparag00se"},"content":"    @FXML","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"MrAsparag00se"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"MrAsparag00se"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"MrAsparag00se"},"content":"        String response \u003d vegetablesGUI.getResponse(input);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"MrAsparag00se"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"MrAsparag00se"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"MrAsparag00se"},"content":"                DialogBox.getVeggieDialog(response, veggieImage)","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"MrAsparag00se"},"content":"        );","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"MrAsparag00se"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"MrAsparag00se"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"MrAsparag00se":45}},{"path":"src/main/java/vegetables/gui/VegetablesGUI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrAsparag00se"},"content":"package vegetables.gui;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"MrAsparag00se"},"content":"import vegetables.task.Task;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"MrAsparag00se"},"content":"import vegetables.manager.TaskManager;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"MrAsparag00se"},"content":"import vegetables.storage.TaskStorage;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"MrAsparag00se"},"content":"import vegetables.command.CommandHandler;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"MrAsparag00se"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"MrAsparag00se"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"MrAsparag00se"},"content":" * The main logic handler for the Vegetables application.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"MrAsparag00se"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"MrAsparag00se"},"content":" * This class initializes the application\u0027s core components, including {@link TaskStorage},","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"MrAsparag00se"},"content":" * {@link TaskManager}, and {@link CommandHandler}. It processes user input and returns","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"MrAsparag00se"},"content":" * appropriate responses.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"MrAsparag00se"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"MrAsparag00se"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"MrAsparag00se"},"content":"public class VegetablesGUI {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"MrAsparag00se"},"content":"    private final CommandHandler commandHandler;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"MrAsparag00se"},"content":"     * Constructs a {@code VegetablesGUI} instance and initializes the necessary components.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"MrAsparag00se"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"MrAsparag00se"},"content":"     * This includes loading tasks from storage, managing them through {@link TaskManager},","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"MrAsparag00se"},"content":"     * and setting up a {@link CommandHandler} to process user commands.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"MrAsparag00se"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"MrAsparag00se"},"content":"    public VegetablesGUI() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"MrAsparag00se"},"content":"        TaskStorage taskStorage \u003d new TaskStorage();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"MrAsparag00se"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskStorage.loadTasks();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"MrAsparag00se"},"content":"        TaskManager taskManager \u003d new TaskManager(tasks);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"MrAsparag00se"},"content":"        this.commandHandler \u003d new CommandHandler(taskManager, taskStorage);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"MrAsparag00se"},"content":"     * Processes user input and returns the corresponding response.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"MrAsparag00se"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"MrAsparag00se"},"content":"     * Delegates command execution to the {@link CommandHandler}, which interprets the input","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"MrAsparag00se"},"content":"     * and performs the necessary actions.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"MrAsparag00se"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"MrAsparag00se"},"content":"     * @param input The user\u0027s input command.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"MrAsparag00se"},"content":"     * @return The response message generated by executing the command.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"MrAsparag00se"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"MrAsparag00se"},"content":"        return commandHandler.executeCommand(input);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"MrAsparag00se"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"MrAsparag00se":47}},{"path":"src/main/java/vegetables/manager/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrAsparag00se"},"content":"package vegetables.manager;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"MrAsparag00se"},"content":"import vegetables.task.Task;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"MrAsparag00se"},"content":"import vegetables.task.ToDo;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"MrAsparag00se"},"content":"import vegetables.task.Deadline;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"MrAsparag00se"},"content":"import vegetables.task.Event;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"MrAsparag00se"},"content":"import vegetables.exception.VeggieException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"MrAsparag00se"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"MrAsparag00se"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"MrAsparag00se"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"MrAsparag00se"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"MrAsparag00se"},"content":" * TaskManager is responsible for managing a list of tasks. It supports adding various","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"MrAsparag00se"},"content":" * types of tasks (To-Do, Deadline, Event), marking tasks as done or not done, deleting tasks,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"MrAsparag00se"},"content":" * and searching tasks by their description. It also ensures the validity of inputs such as deadlines","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"MrAsparag00se"},"content":" * and event times.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"MrAsparag00se"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"MrAsparag00se"},"content":"public class TaskManager {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"MrAsparag00se"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"MrAsparag00se"},"content":"     * Constructs a TaskManager instance with an initial list of tasks.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"MrAsparag00se"},"content":"     * @param tasks The list of tasks to initialize the TaskManager with.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"MrAsparag00se"},"content":"    public TaskManager(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"MrAsparag00se"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"MrAsparag00se"},"content":"     * Checks if a task with the given description already exists in the task list.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"MrAsparag00se"},"content":"     * @param description The description of the task to check for duplicates.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"MrAsparag00se"},"content":"     * @return true if a task with the same description exists, false otherwise.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"MrAsparag00se"},"content":"    public boolean taskExists(String description) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"MrAsparag00se"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"MrAsparag00se"},"content":"            if (task.getDescription().equalsIgnoreCase(description)) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"MrAsparag00se"},"content":"                return true;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"MrAsparag00se"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"MrAsparag00se"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"MrAsparag00se"},"content":"        return false;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"MrAsparag00se"},"content":"     * Adds a To-Do task to the task list with the provided description.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"MrAsparag00se"},"content":"     * @param description The description of the To-Do task to be added.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"MrAsparag00se"},"content":"    public void addToDoTask(String description) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"MrAsparag00se"},"content":"        Task newTask \u003d new ToDo(description);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"MrAsparag00se"},"content":"        tasks.add(newTask);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"MrAsparag00se"},"content":"     * Adds a Deadline task to the task list with the provided description and deadline.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"MrAsparag00se"},"content":"     * The deadline must be in the format yyyy-MM-dd HH:mm.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"MrAsparag00se"},"content":"     * @param description The description of the Deadline task to be added.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"MrAsparag00se"},"content":"     * @param deadline The deadline for the task, in the format yyyy-MM-dd HH:mm.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"MrAsparag00se"},"content":"     * @throws VeggieException If the description is empty or the deadline format is incorrect.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"MrAsparag00se"},"content":"    public void addDeadlineTask(String description, String deadline) throws VeggieException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"MrAsparag00se"},"content":"        if (description \u003d\u003d null || description.trim().isEmpty()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"MrAsparag00se"},"content":"            throw new VeggieException(\"Task description cannot be empty.\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"MrAsparag00se"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"MrAsparag00se"},"content":"        if (!deadline.matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d{2}:\\\\d{2}\")) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"MrAsparag00se"},"content":"            throw new VeggieException(\"Invalid deadline format. Use: yyyy-MM-dd HH:mm\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"MrAsparag00se"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"MrAsparag00se"},"content":"        Task newTask \u003d new Deadline(description, deadline);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"MrAsparag00se"},"content":"        tasks.add(newTask);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"MrAsparag00se"},"content":"     * Adds an Event task to the task list with the provided description, start time, and end time.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"MrAsparag00se"},"content":"     * Both start time and end time must be in the format yyyy-MM-dd HH:mm.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"MrAsparag00se"},"content":"     * @param description The description of the Event task to be added.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"MrAsparag00se"},"content":"     * @param from The start time of the event, in the format yyyy-MM-dd HH:mm.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"MrAsparag00se"},"content":"     * @param to The end time of the event, in the format yyyy-MM-dd HH:mm.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"MrAsparag00se"},"content":"     * @throws VeggieException If the description, start time, or end time is empty, or if the date/time format is incorrect.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"MrAsparag00se"},"content":"    public void addEventTask(String description, String from, String to) throws VeggieException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"MrAsparag00se"},"content":"        // Check if the description, from, or to is missing","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"MrAsparag00se"},"content":"        if (description \u003d\u003d null || description.trim().isEmpty()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"MrAsparag00se"},"content":"            throw new VeggieException(\"Event description cannot be empty.\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"MrAsparag00se"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"MrAsparag00se"},"content":"        if (from \u003d\u003d null || from.trim().isEmpty() || to \u003d\u003d null || to.trim().isEmpty()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"MrAsparag00se"},"content":"            throw new VeggieException(\"Both start time (/from) and end time (/to) must be provided.\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"MrAsparag00se"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"MrAsparag00se"},"content":"        if (!from.matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d{2}:\\\\d{2}\") || !to.matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d{2}:\\\\d{2}\")) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"MrAsparag00se"},"content":"            throw new VeggieException(\"Invalid time format. Correct format: yyyy-MM-dd HH:mm\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"MrAsparag00se"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"MrAsparag00se"},"content":"        Task newTask \u003d new Event(description, from, to);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"MrAsparag00se"},"content":"        tasks.add(newTask);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"MrAsparag00se"},"content":"     * Checks if the new event clashes with any existing events.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"MrAsparag00se"},"content":"     * @param newFrom The start time of the new event.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"MrAsparag00se"},"content":"     * @param newTo The end time of the new event.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"MrAsparag00se"},"content":"     * @return A StringBuilder containing any warnings about overlapping events.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"MrAsparag00se"},"content":"    public StringBuilder checkEventClash(LocalDateTime newFrom, LocalDateTime newTo) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"MrAsparag00se"},"content":"        StringBuilder warningMessage \u003d new StringBuilder();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"MrAsparag00se"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"MrAsparag00se"},"content":"            if (task instanceof Event) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"MrAsparag00se"},"content":"                Event existingEvent \u003d (Event) task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"MrAsparag00se"},"content":"                LocalDateTime existingFrom \u003d LocalDateTime.parse(existingEvent.getFrom(), DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"MrAsparag00se"},"content":"                LocalDateTime existingTo \u003d LocalDateTime.parse(existingEvent.getTo(), DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"MrAsparag00se"},"content":"                // Check if there\u0027s an overlap","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"MrAsparag00se"},"content":"                if ((newFrom.isBefore(existingTo) \u0026\u0026 newTo.isAfter(existingFrom))) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"MrAsparag00se"},"content":"                    warningMessage.append(\"Warning: The event \\\"\")","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"MrAsparag00se"},"content":"                            .append(existingEvent.getDescription())","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"MrAsparag00se"},"content":"                            .append(\"\\\" overlaps with the new event.\\n\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"MrAsparag00se"},"content":"                }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"MrAsparag00se"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"MrAsparag00se"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"MrAsparag00se"},"content":"        return warningMessage.length() \u003e 0 ? warningMessage : null;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"MrAsparag00se"},"content":"     * Marks a task as done by updating its status.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"MrAsparag00se"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"MrAsparag00se"},"content":"     * The task number is 1-based, meaning the first task in the list has taskNumber \u003d 1.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"MrAsparag00se"},"content":"     * If the provided task number is out of range, an exception is thrown.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"MrAsparag00se"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"MrAsparag00se"},"content":"     * @param taskNumber The number of the task to be marked as done (1-based index).","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"MrAsparag00se"},"content":"     * @return A confirmation message indicating the task has been marked as done.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"MrAsparag00se"},"content":"     * @throws VeggieException If the task number is out of range or invalid.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"MrAsparag00se"},"content":"    public String markTaskAsDone(int taskNumber) throws VeggieException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"MrAsparag00se"},"content":"        if (taskNumber \u003c 1 || taskNumber \u003e tasks.size()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"MrAsparag00se"},"content":"            throw new VeggieException(\"Task number out of range.\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"MrAsparag00se"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"MrAsparag00se"},"content":"        Task task \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"MrAsparag00se"},"content":"        task.markAsDone(); // Mark the task as done","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"MrAsparag00se"},"content":"        return \"Task marked as done: \" + task; // Return message","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"MrAsparag00se"},"content":"     * Unmarks a task by updating its status to \"not done\".","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"MrAsparag00se"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"MrAsparag00se"},"content":"     * The task number is 1-based, meaning the first task in the list has taskNumber \u003d 1.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"MrAsparag00se"},"content":"     * If the provided task number is out of range, an exception is thrown.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"MrAsparag00se"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"MrAsparag00se"},"content":"     * @param taskNumber The number of the task to be unmarked (1-based index).","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"MrAsparag00se"},"content":"     * @return A confirmation message indicating the task has been marked as not done.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"MrAsparag00se"},"content":"     * @throws VeggieException If the task number is out of range or invalid.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"MrAsparag00se"},"content":"    public String unmarkTask(int taskNumber) throws VeggieException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"MrAsparag00se"},"content":"        if (taskNumber \u003c 1 || taskNumber \u003e tasks.size()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"MrAsparag00se"},"content":"            throw new VeggieException(\"Task number out of range.\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"MrAsparag00se"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"MrAsparag00se"},"content":"        Task task \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"MrAsparag00se"},"content":"        task.markAsNotDone(); // Unmark the task","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"MrAsparag00se"},"content":"        return \"Task marked as not done: \" + task; // Return message","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"MrAsparag00se"},"content":"     * Deletes a task from the task list by its number.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"MrAsparag00se"},"content":"     * @param taskNumber The number of the task to be deleted. The task number starts from 1.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"MrAsparag00se"},"content":"     * @throws VeggieException If the task number is out of range or invalid.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"MrAsparag00se"},"content":"    public void deleteTask(int taskNumber) throws VeggieException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"MrAsparag00se"},"content":"        if (taskNumber \u003c 1 || taskNumber \u003e tasks.size()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"MrAsparag00se"},"content":"            throw new VeggieException(\"Task number out of range.\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"MrAsparag00se"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"MrAsparag00se"},"content":"        tasks.remove(taskNumber - 1);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"MrAsparag00se"},"content":"     * Finds tasks in the list that match a given substring in their description.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"MrAsparag00se"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"MrAsparag00se"},"content":"     * @return A list of tasks whose descriptions contain the substring.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"MrAsparag00se"},"content":"    public ArrayList\u003cTask\u003e findTasksBySubstring(String keyword) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"MrAsparag00se"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();  // List for storing matching tasks","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"MrAsparag00se"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"MrAsparag00se"},"content":"            if (task.getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"MrAsparag00se"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"MrAsparag00se"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"MrAsparag00se"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"MrAsparag00se"},"content":"        return matchingTasks;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"MrAsparag00se"},"content":"     * Returns the list of all tasks managed by the TaskManager.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"MrAsparag00se"},"content":"     * @return The list of tasks.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"MrAsparag00se"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"MrAsparag00se"},"content":"        return tasks;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"MrAsparag00se"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"MrAsparag00se":209}},{"path":"src/main/java/vegetables/storage/TaskStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrAsparag00se"},"content":"package vegetables.storage;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"MrAsparag00se"},"content":"import vegetables.task.Task;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"MrAsparag00se"},"content":"import vegetables.exception.VeggieException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"MrAsparag00se"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"MrAsparag00se"},"content":"import java.io.File;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"MrAsparag00se"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"MrAsparag00se"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"MrAsparag00se"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"MrAsparag00se"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"MrAsparag00se"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"MrAsparag00se"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"MrAsparag00se"},"content":" * The TaskStorage class is responsible for saving and loading tasks to and from a file.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"MrAsparag00se"},"content":" * It ensures that tasks are persisted across program executions and handles file I/O operations.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"MrAsparag00se"},"content":" * If the file or necessary directories don\u0027t exist, it will create them.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"MrAsparag00se"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"MrAsparag00se"},"content":"public class TaskStorage {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"MrAsparag00se"},"content":"    private static final String FILE_PATH \u003d \"./SHOPPING/list.txt\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"MrAsparag00se"},"content":"     * Saves the given list of tasks to a file. If the required directories do not exist,","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"MrAsparag00se"},"content":"     * they will be created automatically. If the file already exists, it will be overwritten","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"MrAsparag00se"},"content":"     * with the current list of tasks.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"MrAsparag00se"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"MrAsparag00se"},"content":"     * Each task is written to the file using its {@link Task#toFileString()} method.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"MrAsparag00se"},"content":"     * If a null task is encountered, a warning message is printed to the console.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"MrAsparag00se"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"MrAsparag00se"},"content":"     * @param tasks The list of tasks to be saved to the file. Each task must implement","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"MrAsparag00se"},"content":"     *             the {@link Task#toFileString()} method to ensure correct formatting.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"MrAsparag00se"},"content":"     * @return A message indicating whether the tasks were successfully saved or if an error occurred.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"MrAsparag00se"},"content":"    public String saveTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"MrAsparag00se"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"MrAsparag00se"},"content":"        // Ensure the directory exists","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"MrAsparag00se"},"content":"        createParentDirectories(file);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"MrAsparag00se"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file))) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"MrAsparag00se"},"content":"            writeTasksToFile(writer, tasks);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"MrAsparag00se"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"MrAsparag00se"},"content":"            return handleSaveError(e);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"MrAsparag00se"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"MrAsparag00se"},"content":"        return \"Tasks have been successfully saved to the file.\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"MrAsparag00se"},"content":"    private void createParentDirectories(File file) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"MrAsparag00se"},"content":"        file.getParentFile().mkdirs();  // Create parent directories if they don\u0027t exist","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"MrAsparag00se"},"content":"    private void writeTasksToFile(BufferedWriter writer, ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"MrAsparag00se"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"MrAsparag00se"},"content":"            if (task !\u003d null) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"MrAsparag00se"},"content":"                writer.write(task.toFileString());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"MrAsparag00se"},"content":"                writer.newLine();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"MrAsparag00se"},"content":"            } else {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"MrAsparag00se"},"content":"                System.out.println(\"Warning: Encountered a null task while saving.\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"MrAsparag00se"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"MrAsparag00se"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"MrAsparag00se"},"content":"    private String handleSaveError(IOException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"MrAsparag00se"},"content":"        return \"Error saving tasks to file: \" + e.getMessage();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"MrAsparag00se"},"content":"     * Loads tasks from a file. If the file does not exist, it returns an empty list.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"MrAsparag00se"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"MrAsparag00se"},"content":"     * Each line in the file is parsed into a {@link Task} object using {@link Task#fromFileString(String)}.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"MrAsparag00se"},"content":"     * Any errors encountered during task parsing are logged.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"MrAsparag00se"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"MrAsparag00se"},"content":"     * @return An {@link ArrayList} of tasks loaded from the file. If the file doesn\u0027t exist, returns an empty list.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"MrAsparag00se"},"content":"    public ArrayList\u003cTask\u003e loadTasks() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"MrAsparag00se"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"MrAsparag00se"},"content":"        // Check if the file exists and load the tasks","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"MrAsparag00se"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"MrAsparag00se"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"MrAsparag00se"},"content":"            return tasks;  // Return empty list if the file doesn\u0027t exist","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"MrAsparag00se"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"MrAsparag00se"},"content":"        try (Scanner fileScanner \u003d new Scanner(file)) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"MrAsparag00se"},"content":"            loadTasksFromFile(fileScanner, tasks);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"MrAsparag00se"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"MrAsparag00se"},"content":"            handleFileLoadingError(e);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"MrAsparag00se"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"MrAsparag00se"},"content":"        return tasks;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"MrAsparag00se"},"content":"    private void loadTasksFromFile(Scanner fileScanner, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"MrAsparag00se"},"content":"        while (fileScanner.hasNextLine()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"MrAsparag00se"},"content":"            String line \u003d fileScanner.nextLine();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"MrAsparag00se"},"content":"            try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"MrAsparag00se"},"content":"                Task task \u003d Task.fromFileString(line);  // This can throw VeggieException","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"MrAsparag00se"},"content":"                tasks.add(task);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"MrAsparag00se"},"content":"            } catch (VeggieException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"MrAsparag00se"},"content":"                System.out.println(\"Error parsing task from file: \" + e.getMessage());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"MrAsparag00se"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"MrAsparag00se"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"MrAsparag00se"},"content":"    private void handleFileLoadingError(FileNotFoundException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"MrAsparag00se"},"content":"        System.out.println(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"MrAsparag00se"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"MrAsparag00se":110}},{"path":"src/main/java/vegetables/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrAsparag00se"},"content":"package vegetables.task;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"MrAsparag00se"},"content":"import vegetables.exception.VeggieException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"MrAsparag00se"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"MrAsparag00se"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"MrAsparag00se"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"MrAsparag00se"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"MrAsparag00se"},"content":" * Represents a \u0027Deadline\u0027 task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"MrAsparag00se"},"content":" * The deadline is stored as a LocalDateTime object.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"MrAsparag00se"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"MrAsparag00se"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"MrAsparag00se"},"content":"    private final LocalDateTime by;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"MrAsparag00se"},"content":"    private static final DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"MrAsparag00se"},"content":"    private static final DateTimeFormatter displayFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"MrAsparag00se"},"content":"     * Constructs a new Deadline task with the specified description and deadline.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"MrAsparag00se"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"MrAsparag00se"},"content":"     * @param by          The deadline in the format \"yyyy-MM-dd HH:mm\" (e.g., \"2025-01-22 18:00\").","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"MrAsparag00se"},"content":"     * @throws VeggieException If the provided deadline is not in the expected format.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"MrAsparag00se"},"content":"    public Deadline(String description, String by) throws VeggieException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"MrAsparag00se"},"content":"        super(description);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"MrAsparag00se"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"MrAsparag00se"},"content":"            this.by \u003d LocalDateTime.parse(by, inputFormatter);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"MrAsparag00se"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"MrAsparag00se"},"content":"            throw new VeggieException(\"Invalid date format! Use yyyy-MM-dd HH:mm (e.g., 2023-01-22 18:00)\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"MrAsparag00se"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"MrAsparag00se"},"content":"     * Constructs a new Deadline task with the specified description, deadline, and completion status.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"MrAsparag00se"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"MrAsparag00se"},"content":"     * @param by          The deadline in the format \"yyyy-MM-dd HH:mm\".","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"MrAsparag00se"},"content":"     * @param isDone      The completion status of the deadline task. {@code true} if the task is done, {@code false} otherwise.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"MrAsparag00se"},"content":"     * @throws VeggieException If the provided deadline is not in the expected format.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"MrAsparag00se"},"content":"    public Deadline(String description, String by, boolean isDone) throws VeggieException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"MrAsparag00se"},"content":"        this(description, by);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"MrAsparag00se"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"MrAsparag00se"},"content":"     * Returns a string representation of the Deadline task, including its type, completion status, description, and deadline.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"MrAsparag00se"},"content":"     * The format is: \"D [status] description (by: formatted deadline)\".","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"MrAsparag00se"},"content":"     * @return A string representation of the Deadline task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"MrAsparag00se"},"content":"    @Override","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"MrAsparag00se"},"content":"    public String toString() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"MrAsparag00se"},"content":"        return \"D [\" + (isDone ? \"X\" : \" \") + \"] \" + description + \" (by: \" + by.format(displayFormatter) + \")\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"MrAsparag00se"},"content":"     * Converts the Deadline task to a string representation suitable for saving to a file.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"MrAsparag00se"},"content":"     * The format is: \"DEADLINE | status | description | deadline\".","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"MrAsparag00se"},"content":"     * - `status`: \"X\" if the task is done, \"0\" otherwise.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"MrAsparag00se"},"content":"     * @return A string representation of the Deadline task in file format.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"MrAsparag00se"},"content":"    @Override","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"MrAsparag00se"},"content":"    public String toFileString() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"MrAsparag00se"},"content":"        return \"DEADLINE | \" + (isDone ? \"X\" : \"0\") + \" | \" + description + \" | \" + by.format(inputFormatter);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"MrAsparag00se"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"MrAsparag00se":69}},{"path":"src/main/java/vegetables/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrAsparag00se"},"content":"package vegetables.task;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"MrAsparag00se"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"MrAsparag00se"},"content":" * Represents an \u0027Event\u0027 task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"MrAsparag00se"},"content":" * An event has a start time and an end time.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"MrAsparag00se"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"MrAsparag00se"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"MrAsparag00se"},"content":"    private final String from;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"MrAsparag00se"},"content":"    private final String to;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"MrAsparag00se"},"content":"     * Constructs a new Event task with the specified description, start time, and end time.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"MrAsparag00se"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"MrAsparag00se"},"content":"     * @param from        The start time of the event.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"MrAsparag00se"},"content":"     * @param to          The end time of the event.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"MrAsparag00se"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"MrAsparag00se"},"content":"        super(description);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"MrAsparag00se"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"MrAsparag00se"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"MrAsparag00se"},"content":"     * Getters for from and to properties of Event.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"MrAsparag00se"},"content":"     * Only for use by testers.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"MrAsparag00se"},"content":"     * @return from / to.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"MrAsparag00se"},"content":"    public String getFrom() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"MrAsparag00se"},"content":"        return from;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"MrAsparag00se"},"content":"    public String getTo() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"MrAsparag00se"},"content":"        return to;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"MrAsparag00se"},"content":"     * Constructs a new Event task with the specified description, start time, end time, and completion status.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"MrAsparag00se"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"MrAsparag00se"},"content":"     * @param from        The start time of the event.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"MrAsparag00se"},"content":"     * @param to          The end time of the event.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"MrAsparag00se"},"content":"     * @param isDone      The completion status of the event. {@code true} if the task is done, {@code false} otherwise.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"MrAsparag00se"},"content":"    public Event(String description, String from, String to, boolean isDone) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"MrAsparag00se"},"content":"        super(description);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"MrAsparag00se"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"MrAsparag00se"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"MrAsparag00se"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"MrAsparag00se"},"content":"     * Returns a string representation of the Event task, including its type, completion status, description, start time, and end time.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"MrAsparag00se"},"content":"     * The format is: \"E [status] description from: start time to: end time\".","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"MrAsparag00se"},"content":"     * @return A string representation of the Event task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"MrAsparag00se"},"content":"    @Override","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"MrAsparag00se"},"content":"    public String toString() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"MrAsparag00se"},"content":"        return \"E [\" + (isDone ? \"X\" : \" \") + \"] \" + description + \" from: \" + from + \" to: \" + to;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"MrAsparag00se"},"content":"     * Converts the Event task to a string representation suitable for saving to a file.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"MrAsparag00se"},"content":"     * The format is: \"EVENT | status | description | start time | end time\".","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"MrAsparag00se"},"content":"     * - `status`: \"X\" if the task is done, \"0\" otherwise.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"MrAsparag00se"},"content":"     * @return A string representation of the Event task in file format.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"MrAsparag00se"},"content":"    @Override","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"MrAsparag00se"},"content":"    public String toFileString() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"MrAsparag00se"},"content":"        return \"EVENT | \" + (isDone ? \"X\" : \"0\") + \" | \" + description + \" | \" + from + \" | \" + to;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"MrAsparag00se"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"MrAsparag00se":76}},{"path":"src/main/java/vegetables/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrAsparag00se"},"content":"package vegetables.task;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"MrAsparag00se"},"content":"import vegetables.exception.VeggieException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"MrAsparag00se"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"MrAsparag00se"},"content":" * Abstract class representing a task with a description and a completion status.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"MrAsparag00se"},"content":" * Provides methods for marking a task as done or not done, converting tasks to a file string,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"MrAsparag00se"},"content":" * and reconstructing tasks from a file string.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"MrAsparag00se"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"MrAsparag00se"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"MrAsparag00se"},"content":"    protected String description;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"MrAsparag00se"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"MrAsparag00se"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"MrAsparag00se"},"content":"        return description;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"MrAsparag00se"},"content":"     * Constructs a new Task with the specified description.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"MrAsparag00se"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"MrAsparag00se"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"MrAsparag00se"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"MrAsparag00se"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"MrAsparag00se"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"MrAsparag00se"},"content":"     * Converts the task to a string representation suitable for saving to a file.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"MrAsparag00se"},"content":"     * @return A string representation of the task in the file\u0027s format.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"MrAsparag00se"},"content":"    public abstract String toFileString(); // Save task to file","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"MrAsparag00se"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"MrAsparag00se"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"MrAsparag00se"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"MrAsparag00se"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"MrAsparag00se"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"MrAsparag00se"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"MrAsparag00se"},"content":"     * Returns a string representation of the task, including its completion status and description.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"MrAsparag00se"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"MrAsparag00se"},"content":"    @Override","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"MrAsparag00se"},"content":"    public String toString() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"MrAsparag00se"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + description;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"MrAsparag00se"},"content":"     * Reconstructs a task from its string representation in file format.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"MrAsparag00se"},"content":"     * The format of the string is expected to be \"TYPE | STATUS | DESCRIPTION [| ADDITIONAL INFO...]\".","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"MrAsparag00se"},"content":"     * @param taskString The string representation of the task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"MrAsparag00se"},"content":"     * @return A reconstructed Task object.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"MrAsparag00se"},"content":"     * @throws VeggieException If the string format is invalid or the task type is unrecognized.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"MrAsparag00se"},"content":"    public static Task fromFileString(String taskString) throws VeggieException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"MrAsparag00se"},"content":"        String[] parts \u003d taskString.split(\" \\\\| \");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"MrAsparag00se"},"content":"        String taskType \u003d parts[0];","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"MrAsparag00se"},"content":"        boolean isDone \u003d parts[1].equals(\"X\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"MrAsparag00se"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"MrAsparag00se"},"content":"        return switch (taskType) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"MrAsparag00se"},"content":"            case \"TODO\" -\u003e new ToDo(description, isDone);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"MrAsparag00se"},"content":"            case \"DEADLINE\" -\u003e new Deadline(description, parts[3], isDone);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"MrAsparag00se"},"content":"            case \"EVENT\" -\u003e new Event(description, parts[3], parts[4], isDone);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"MrAsparag00se"},"content":"            default -\u003e null;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"MrAsparag00se"},"content":"        };","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"MrAsparag00se"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"MrAsparag00se":80}},{"path":"src/main/java/vegetables/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrAsparag00se"},"content":"package vegetables.task;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"MrAsparag00se"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"MrAsparag00se"},"content":" * Represents a \"ToDo\" task, which has no associated time constraints.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"MrAsparag00se"},"content":" * This class is a subclass of the abstract Task class.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"MrAsparag00se"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"MrAsparag00se"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"MrAsparag00se"},"content":"     * Constructs a new ToDo task with the specified description.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"MrAsparag00se"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"MrAsparag00se"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"MrAsparag00se"},"content":"    public ToDo(String description) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"MrAsparag00se"},"content":"        super(description);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"MrAsparag00se"},"content":"     * Constructs a new ToDo task with the specified description and completion status.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"MrAsparag00se"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"MrAsparag00se"},"content":"     * @param isDone      The completion status of the ToDo task. {@code true} if the task is done,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"MrAsparag00se"},"content":"     *                    {@code false} otherwise.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"MrAsparag00se"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"MrAsparag00se"},"content":"        super(description);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"MrAsparag00se"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"MrAsparag00se"},"content":"     * Returns a string representation of the ToDo task, including its type, completion status, and description.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"MrAsparag00se"},"content":"     * The format is: \"T [status] description\".","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"MrAsparag00se"},"content":"     * @return A string representation of the ToDo task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"MrAsparag00se"},"content":"    @Override","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"MrAsparag00se"},"content":"    public String toString() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"MrAsparag00se"},"content":"        return \"T [\" + (isDone ? \"X\" : \" \") + \"] \" + description;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"MrAsparag00se"},"content":"     * Converts the ToDo task to a string representation suitable for saving to a file.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"MrAsparag00se"},"content":"     * The format is: \"TODO | status | description\".","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"MrAsparag00se"},"content":"     * - `status`: \"X\" if the task is done, \"0\" otherwise.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"MrAsparag00se"},"content":"     * @return A string representation of the ToDo task in file format.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"MrAsparag00se"},"content":"    @Override","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"MrAsparag00se"},"content":"    public String toFileString() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"MrAsparag00se"},"content":"        return \"TODO | \" + (isDone ? \"X\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"MrAsparag00se"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"MrAsparag00se":54}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"MrAsparag00se"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"MrAsparag00se"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"MrAsparag00se"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"MrAsparag00se"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"MrAsparag00se"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"MrAsparag00se"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"MrAsparag00se"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"MrAsparag00se"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"MrAsparag00se"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"MrAsparag00se"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"MrAsparag00se"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"MrAsparag00se"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"MrAsparag00se"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"MrAsparag00se"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"MrAsparag00se"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"MrAsparag00se"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"MrAsparag00se"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"MrAsparag00se"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"MrAsparag00se"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"MrAsparag00se"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"MrAsparag00se":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"MrAsparag00se"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"MrAsparag00se"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"MrAsparag00se"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"MrAsparag00se"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"MrAsparag00se"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"MrAsparag00se"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"MrAsparag00se"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"MrAsparag00se"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"MrAsparag00se"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"MrAsparag00se"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17.0.14\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"MrAsparag00se"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"MrAsparag00se"},"content":"            fx:controller\u003d\"vegetables.gui.MainWindow\"\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"MrAsparag00se"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"MrAsparag00se"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"MrAsparag00se"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"MrAsparag00se"},"content":"                   prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"MrAsparag00se"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"MrAsparag00se"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"MrAsparag00se"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"MrAsparag00se"},"content":"                layoutX\u003d\"324.0\" layoutY\u003d\"558.0\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"MrAsparag00se"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"MrAsparag00se"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"MrAsparag00se"},"content":"                text\u003d\"Send\"/\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"MrAsparag00se"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"MrAsparag00se"},"content":"                    hbarPolicy\u003d\"NEVER\" vvalue\u003d\"1.0\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"MrAsparag00se"},"content":"                    prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\"\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"MrAsparag00se"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"MrAsparag00se"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"MrAsparag00se"},"content":"                      prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"MrAsparag00se"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"MrAsparag00se"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"MrAsparag00se"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"MrAsparag00se"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"MrAsparag00se":37}},{"path":"src/test/java/vegetables/Vegetables.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrAsparag00se"},"content":"package vegetables;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"MrAsparag00se"},"content":"import vegetables.command.CommandHandler;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"MrAsparag00se"},"content":"import vegetables.manager.TaskManager;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"MrAsparag00se"},"content":"import vegetables.task.Task;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"MrAsparag00se"},"content":"import vegetables.storage.TaskStorage;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"MrAsparag00se"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"MrAsparag00se"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"MrAsparag00se"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"MrAsparag00se"},"content":" * Runs the Vegetables program, that supports creating, listing,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"MrAsparag00se"},"content":" * marking, unmarking, deleting, and finding tasks.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"MrAsparag00se"},"content":" * Tasks can be of type ToDo, Deadline, or Event.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"MrAsparag00se"},"content":" * The program uses a file to persist tasks between sessions.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"MrAsparag00se"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"MrAsparag00se"},"content":"public class Vegetables {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"MrAsparag00se"},"content":"     * Entry point of the Vegetables program.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"MrAsparag00se"},"content":"     * Displays a welcome message and runs a command loop to process user input.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"MrAsparag00se"},"content":"     * @param args Command-line arguments (not used).","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"MrAsparag00se"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"MrAsparag00se"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"MrAsparag00se"},"content":"        TaskStorage taskStorage \u003d new TaskStorage();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"MrAsparag00se"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskStorage.loadTasks();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"MrAsparag00se"},"content":"        TaskManager taskManager \u003d new TaskManager(tasks);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"MrAsparag00se"},"content":"        String veggieLogo \u003d","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"MrAsparag00se"},"content":"                \" _  _  ____  ___  ____  ____   __    ____  __    ____  ___ \\n\"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"MrAsparag00se"},"content":"                        + \"( \\\\/ )( ___)/ __)( ___)(_  _) /__\\\\  (  _ \\\\(  )  ( ___)/ __)\\n\"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"MrAsparag00se"},"content":"                        + \" \\\\  /  )__)( (_-. )__)   )(  /(__)\\\\  ) _ \u003c )(__  )__) \\\\__ \\\\\\n\"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"MrAsparag00se"},"content":"                        + \"  \\\\/  (____)\\\\___/(____) (__)(__)(__)(____/(____)(____)(___/ \\n\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"MrAsparag00se"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"MrAsparag00se"},"content":"        System.out.println(\" Hello! I\u0027m Vegetables\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"MrAsparag00se"},"content":"        System.out.println(veggieLogo);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"MrAsparag00se"},"content":"        System.out.println(\" What can I do for you?\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"MrAsparag00se"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"MrAsparag00se"},"content":"        CommandHandler commandHandler \u003d new CommandHandler(taskManager, taskStorage);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"MrAsparag00se"},"content":"        while (true) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"MrAsparag00se"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"MrAsparag00se"},"content":"            commandHandler.executeCommand(userInput);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"MrAsparag00se"},"content":"            if (userInput.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"MrAsparag00se"},"content":"                break; // Exit the program","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"MrAsparag00se"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"MrAsparag00se"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"MrAsparag00se"},"content":"        scanner.close();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"MrAsparag00se"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"MrAsparag00se":54}},{"path":"src/test/java/vegetables/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrAsparag00se"},"content":"package vegetables.task;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"MrAsparag00se"},"content":"import vegetables.manager.TaskManager;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"MrAsparag00se"},"content":"import vegetables.exception.VeggieException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"MrAsparag00se"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"MrAsparag00se"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"MrAsparag00se"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"MrAsparag00se"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"MrAsparag00se"},"content":"public class EventTest {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"MrAsparag00se"},"content":"    // Scenario 1: Description is empty, should throw VeggieException","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"MrAsparag00se"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"MrAsparag00se"},"content":"    public void testEventEmptyDescription() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"MrAsparag00se"},"content":"        // Try to create an Event with an empty description","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"MrAsparag00se"},"content":"        assertThrows(VeggieException.class, () -\u003e new Event(\"\", \"2025-01-01 10:00\", \"2025-01-01 12:00\"));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"MrAsparag00se"},"content":"    // Scenario 2: Date format is incorrect, should throw VeggieException","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"MrAsparag00se"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"MrAsparag00se"},"content":"    public void testEventInvalidDateFormat() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"MrAsparag00se"},"content":"        // Try to create an Event with an invalid date format for the \u0027from\u0027 time","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"MrAsparag00se"},"content":"        assertThrows(VeggieException.class, () -\u003e {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"MrAsparag00se"},"content":"            new Event(\"Meeting\", \"2025-01-01 10:00\", \"2025-01-01 25:00\");  // Invalid \u0027to\u0027 time","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"MrAsparag00se"},"content":"        });","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"MrAsparag00se"},"content":"    // Scenario 3: All parameters are correct, Event should be added to list","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"MrAsparag00se"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"MrAsparag00se"},"content":"    public void testEventAddedToList() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"MrAsparag00se"},"content":"        // Create a new Event instance to be added","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"MrAsparag00se"},"content":"        Event eventToAdd \u003d new Event(\"Meeting\", \"2025-01-28 10:00\", \"2025-01-28 11:00\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"MrAsparag00se"},"content":"        // Add the event to the list","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"MrAsparag00se"},"content":"        TaskManager taskManager \u003d new TaskManager(new ArrayList\u003c\u003e());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"MrAsparag00se"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"MrAsparag00se"},"content":"            taskManager.addEventTask(eventToAdd.getDescription(), eventToAdd.getFrom(), eventToAdd.getTo());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"MrAsparag00se"},"content":"        } catch (VeggieException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"MrAsparag00se"},"content":"            System.out.println(\"Error: Unable to add event task. \" + e.getMessage());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"MrAsparag00se"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"MrAsparag00se"},"content":"        // Verify if the event has been added to the task list","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"MrAsparag00se"},"content":"        assertEquals(1, taskManager.getTasks().size());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"MrAsparag00se"},"content":"        assertEquals(eventToAdd, taskManager.getTasks().get(0));  // Verify if the added event is the same as the created one","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"MrAsparag00se"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"MrAsparag00se":46}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"MrAsparag00se"},"content":"hello","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"MrAsparag00se"},"content":"help","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"MrAsparag00se"},"content":"todo","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"MrAsparag00se"},"content":"event","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"MrAsparag00se"},"content":"deadline","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"MrAsparag00se"},"content":"todo test","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"MrAsparag00se"},"content":"event test /from now /to later","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"MrAsparag00se"},"content":"deadline test /by later","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"MrAsparag00se"},"content":"list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"MrAsparag00se"},"content":"mark 1","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"MrAsparag00se"},"content":"unmark 2","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"MrAsparag00se"},"content":"unmark 1","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"MrAsparag00se"},"content":"delete 1","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"MrAsparag00se"},"content":"delete 5","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"MrAsparag00se"},"content":"bye","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"MrAsparag00se":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"MrAsparag00se"},"content":"java -classpath ..\\bin Vegetables \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":20,"MrAsparag00se":1}}]
