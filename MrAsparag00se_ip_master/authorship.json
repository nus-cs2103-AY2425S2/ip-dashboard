[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"MrAsparag00se"},"content":"# Vegetables project template","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"MrAsparag00se"},"content":"1. After that, locate the `src/main/java/Vegetables.java` file, right-click it, and choose `Run Vegetables.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false}],"authorContributionMap":{"-":24,"MrAsparag00se":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"MrAsparag00se"},"content":"# Vegetables User Guide","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"-":29,"MrAsparag00se":1}},{"path":"src/main/java/Vegetables.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrAsparag00se"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"MrAsparag00se"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"MrAsparag00se"},"content":"import java.io.File;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"MrAsparag00se"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"MrAsparag00se"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"MrAsparag00se"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"MrAsparag00se"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"MrAsparag00se"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"MrAsparag00se"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"MrAsparag00se"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"MrAsparag00se"},"content":"public class TaskManager {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"MrAsparag00se"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"MrAsparag00se"},"content":"    public TaskManager(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"MrAsparag00se"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"MrAsparag00se"},"content":"    public void addToDoTask(String description) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"MrAsparag00se"},"content":"        Task newTask \u003d new ToDo(description);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"MrAsparag00se"},"content":"        tasks.add(newTask);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"MrAsparag00se"},"content":"    public void addDeadlineTask(String description, String deadline) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"MrAsparag00se"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"MrAsparag00se"},"content":"            Task newTask \u003d new Deadline(description, deadline);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"MrAsparag00se"},"content":"            tasks.add(newTask);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"MrAsparag00se"},"content":"        } catch (VeggieException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"MrAsparag00se"},"content":"            System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"MrAsparag00se"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"MrAsparag00se"},"content":"    public void addEventTask(String description, String from, String to) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"MrAsparag00se"},"content":"        Task newTask \u003d new Event(description, from, to);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"MrAsparag00se"},"content":"        tasks.add(newTask);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"MrAsparag00se"},"content":"    public void markTaskAsDone(int taskNumber) throws VeggieException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"MrAsparag00se"},"content":"        if (taskNumber \u003c 1 || taskNumber \u003e tasks.size()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"MrAsparag00se"},"content":"            throw new VeggieException(\"Task number out of range.\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"MrAsparag00se"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"MrAsparag00se"},"content":"        tasks.get(taskNumber - 1).markAsDone();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"MrAsparag00se"},"content":"    public void unmarkTask(int taskNumber) throws VeggieException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"MrAsparag00se"},"content":"        if (taskNumber \u003c 1 || taskNumber \u003e tasks.size()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"MrAsparag00se"},"content":"            throw new VeggieException(\"Task number out of range.\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"MrAsparag00se"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"MrAsparag00se"},"content":"        tasks.get(taskNumber - 1).markAsNotDone();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"MrAsparag00se"},"content":"    public void deleteTask(int taskNumber) throws VeggieException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"MrAsparag00se"},"content":"        if (taskNumber \u003c 1 || taskNumber \u003e tasks.size()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"MrAsparag00se"},"content":"            throw new VeggieException(\"Task number out of range.\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"MrAsparag00se"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"MrAsparag00se"},"content":"        tasks.remove(taskNumber - 1);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"MrAsparag00se"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"MrAsparag00se"},"content":"        return tasks;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"MrAsparag00se"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"MrAsparag00se"},"content":"public class TaskStorage {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"MrAsparag00se"},"content":"    private static final String FILE_PATH \u003d \"./tasklist/veggied.txt\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"MrAsparag00se"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"MrAsparag00se"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(FILE_PATH))) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"MrAsparag00se"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"MrAsparag00se"},"content":"                writer.write(task.toFileString());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"MrAsparag00se"},"content":"                writer.newLine();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"MrAsparag00se"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"MrAsparag00se"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"MrAsparag00se"},"content":"            System.out.println(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"MrAsparag00se"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"MrAsparag00se"},"content":"    public ArrayList\u003cTask\u003e loadTasks() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"MrAsparag00se"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"MrAsparag00se"},"content":"        try (Scanner fileScanner \u003d new Scanner(new File(FILE_PATH))) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"MrAsparag00se"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"MrAsparag00se"},"content":"                String line \u003d fileScanner.nextLine();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"MrAsparag00se"},"content":"                try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"MrAsparag00se"},"content":"                    Task task \u003d Task.fromFileString(line);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"MrAsparag00se"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"MrAsparag00se"},"content":"                } catch (VeggieException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"MrAsparag00se"},"content":"                    System.out.println(\"Error parsing task: \" + e.getMessage());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"MrAsparag00se"},"content":"                }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"MrAsparag00se"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"MrAsparag00se"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"MrAsparag00se"},"content":"            System.out.println(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"MrAsparag00se"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"MrAsparag00se"},"content":"        return tasks;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"MrAsparag00se"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"MrAsparag00se"},"content":"public class CommandHandler {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"MrAsparag00se"},"content":"    private TaskManager taskManager;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"MrAsparag00se"},"content":"    private TaskStorage taskStorage;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"MrAsparag00se"},"content":"    public CommandHandler(TaskManager taskManager, TaskStorage taskStorage) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"MrAsparag00se"},"content":"        this.taskManager \u003d taskManager;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"MrAsparag00se"},"content":"        this.taskStorage \u003d taskStorage;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"MrAsparag00se"},"content":"    public void executeCommand(String userInput) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"MrAsparag00se"},"content":"        if (userInput.equalsIgnoreCase(\"help\")) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"MrAsparag00se"},"content":"            displayHelp();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"MrAsparag00se"},"content":"        } else if (userInput.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"MrAsparag00se"},"content":"            listTasks();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"MrAsparag00se"},"content":"        } else if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"MrAsparag00se"},"content":"            handleAddToDo(userInput);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"MrAsparag00se"},"content":"        } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"MrAsparag00se"},"content":"            handleAddDeadline(userInput);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"MrAsparag00se"},"content":"        } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"MrAsparag00se"},"content":"            handleAddEvent(userInput);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"MrAsparag00se"},"content":"        } else if (userInput.startsWith(\"mark\")) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"MrAsparag00se"},"content":"            handleMarkTask(userInput);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"MrAsparag00se"},"content":"        } else if (userInput.startsWith(\"unmark\")) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"MrAsparag00se"},"content":"            handleUnmarkTask(userInput);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"MrAsparag00se"},"content":"        } else if (userInput.startsWith(\"find\")) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"MrAsparag00se"},"content":"            handleFindTask(userInput);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"MrAsparag00se"},"content":"        } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"MrAsparag00se"},"content":"            handleDeleteTask(userInput);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"MrAsparag00se"},"content":"        } else if (userInput.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"MrAsparag00se"},"content":"            System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"MrAsparag00se"},"content":"            taskStorage.saveTasks(taskManager.getTasks());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"MrAsparag00se"},"content":"        } else {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"MrAsparag00se"},"content":"            System.out.println(\"Unrecognised command!\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"MrAsparag00se"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"MrAsparag00se"},"content":"    private void displayHelp() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"MrAsparag00se"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"MrAsparag00se"},"content":"        System.out.println(\" Available Commands:\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"MrAsparag00se"},"content":"        System.out.println(\" - todo [Task description]: Adds a task without a deadline.\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"MrAsparag00se"},"content":"        System.out.println(\" - deadline [Task description] /by [Date/time]: Adds a task with a deadline.\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"MrAsparag00se"},"content":"        System.out.println(\" - event [Task description] /from [Start time] /to [End time]: Adds an event task.\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"MrAsparag00se"},"content":"        System.out.println(\" - list: Displays all tasks in the list.\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"MrAsparag00se"},"content":"        System.out.println(\" - mark [Task number]: Marks a task as done.\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"MrAsparag00se"},"content":"        System.out.println(\" - unmark [Task number]: Unmarks a task as not done.\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"MrAsparag00se"},"content":"        System.out.println(\" - find [Keyword]: Finds a task by its keyword.\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"MrAsparag00se"},"content":"        System.out.println(\" - delete [Task number]: Deletes a task from the list.\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"MrAsparag00se"},"content":"        System.out.println(\" - bye: Exits the program.\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"MrAsparag00se"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"MrAsparag00se"},"content":"    private void listTasks() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"MrAsparag00se"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"MrAsparag00se"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskManager.getTasks();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"MrAsparag00se"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"MrAsparag00se"},"content":"            System.out.println(\"No tasks added.\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"MrAsparag00se"},"content":"        } else {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"MrAsparag00se"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"MrAsparag00se"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"MrAsparag00se"},"content":"                System.out.println((i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"MrAsparag00se"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"MrAsparag00se"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"MrAsparag00se"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"MrAsparag00se"},"content":"    private void handleAddToDo(String userInput) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"MrAsparag00se"},"content":"        String taskDescription \u003d userInput.substring(5).trim();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"MrAsparag00se"},"content":"        taskManager.addToDoTask(taskDescription);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"MrAsparag00se"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \" + taskDescription);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"MrAsparag00se"},"content":"    private void handleAddDeadline(String userInput) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"MrAsparag00se"},"content":"        String[] parts \u003d userInput.split(\"/by\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"MrAsparag00se"},"content":"        String taskDescription \u003d parts[0].substring(9).trim();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"MrAsparag00se"},"content":"        String by \u003d parts[1].trim();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"MrAsparag00se"},"content":"        taskManager.addDeadlineTask(taskDescription, by);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"MrAsparag00se"},"content":"        System.out.println(\"Got it. I\u0027ve added this deadline task: \" + taskDescription);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"MrAsparag00se"},"content":"    private void handleAddEvent(String userInput) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"MrAsparag00se"},"content":"        String[] parts \u003d userInput.split(\"/from\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"MrAsparag00se"},"content":"        String taskDescription \u003d parts[0].substring(6).trim();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"MrAsparag00se"},"content":"        String from \u003d parts[1].split(\"/to\")[0].trim();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"MrAsparag00se"},"content":"        String to \u003d parts[1].split(\"/to\")[1].trim();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"MrAsparag00se"},"content":"        taskManager.addEventTask(taskDescription, from, to);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"MrAsparag00se"},"content":"        System.out.println(\"Got it. I\u0027ve added this event task: \" + taskDescription);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"MrAsparag00se"},"content":"    private void handleMarkTask(String userInput) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"MrAsparag00se"},"content":"        try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"MrAsparag00se"},"content":"            int taskNumber \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"MrAsparag00se"},"content":"            taskManager.markTaskAsDone(taskNumber);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"MrAsparag00se"},"content":"            System.out.println(\"Task marked as done.\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"MrAsparag00se"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"MrAsparag00se"},"content":"            System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"MrAsparag00se"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"MrAsparag00se"},"content":"    private void handleUnmarkTask(String userInput) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"MrAsparag00se"},"content":"        try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"MrAsparag00se"},"content":"            int taskNumber \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"MrAsparag00se"},"content":"            taskManager.unmarkTask(taskNumber);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"MrAsparag00se"},"content":"            System.out.println(\"Task marked as not done.\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"MrAsparag00se"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"MrAsparag00se"},"content":"            System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"MrAsparag00se"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"MrAsparag00se"},"content":"    private void handleFindTask(String userInput) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"MrAsparag00se"},"content":"        // Implement your find task logic here","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"MrAsparag00se"},"content":"    private void handleDeleteTask(String userInput) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"MrAsparag00se"},"content":"        try {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"MrAsparag00se"},"content":"            int taskNumber \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"MrAsparag00se"},"content":"            taskManager.deleteTask(taskNumber);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"MrAsparag00se"},"content":"            System.out.println(\"Task deleted.\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"MrAsparag00se"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"MrAsparag00se"},"content":"            System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"MrAsparag00se"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"MrAsparag00se"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"MrAsparag00se"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"MrAsparag00se"},"content":" * Abstract class representing a task with a description and a completion status.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"MrAsparag00se"},"content":" * Provides methods for marking a task as done or not done, converting tasks to a file string,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"MrAsparag00se"},"content":" * and reconstructing tasks from a file string.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"MrAsparag00se"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"MrAsparag00se"},"content":"abstract class Task {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"MrAsparag00se"},"content":"    protected String description;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"MrAsparag00se"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"MrAsparag00se"},"content":"     * Constructs a new Task with the specified description.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"MrAsparag00se"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"MrAsparag00se"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"MrAsparag00se"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"MrAsparag00se"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"MrAsparag00se"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"MrAsparag00se"},"content":"     * Converts the task to a string representation suitable for saving to a file.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"MrAsparag00se"},"content":"     * @return A string representation of the task in the file\u0027s format.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"MrAsparag00se"},"content":"    public abstract String toFileString(); // Save task to file","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"MrAsparag00se"},"content":"     /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"MrAsparag00se"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"MrAsparag00se"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"MrAsparag00se"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"MrAsparag00se"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"MrAsparag00se"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"MrAsparag00se"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"MrAsparag00se"},"content":"     * Returns a string representation of the task, including its completion status and description.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"MrAsparag00se"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"MrAsparag00se"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"MrAsparag00se"},"content":"    public String toString() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"MrAsparag00se"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + description;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"MrAsparag00se"},"content":"     * Reconstructs a task from its string representation in file format.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"MrAsparag00se"},"content":"     * The format of the string is expected to be \"TYPE | STATUS | DESCRIPTION [| ADDITIONAL INFO...]\".","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"MrAsparag00se"},"content":"     * @param taskString The string representation of the task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"MrAsparag00se"},"content":"     * @return A reconstructed Task object.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"MrAsparag00se"},"content":"     * @throws VeggieException If the string format is invalid or the task type is unrecognized.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"MrAsparag00se"},"content":"    public static Task fromFileString(String taskString) throws VeggieException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"MrAsparag00se"},"content":"        String[] parts \u003d taskString.split(\" \\\\| \");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"MrAsparag00se"},"content":"        String taskType \u003d parts[0];","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"MrAsparag00se"},"content":"        boolean isDone \u003d parts[1].equals(\"X\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"MrAsparag00se"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"MrAsparag00se"},"content":"        switch (taskType) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"MrAsparag00se"},"content":"            case \"TODO\":","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"MrAsparag00se"},"content":"                return new ToDo(description, isDone);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"MrAsparag00se"},"content":"            case \"DEADLINE\":","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"MrAsparag00se"},"content":"                return new Deadline(description, parts[3], isDone);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"MrAsparag00se"},"content":"            case \"EVENT\":","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"MrAsparag00se"},"content":"                return new Event(description, parts[3], parts[4], isDone);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"MrAsparag00se"},"content":"            default:","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"MrAsparag00se"},"content":"                return null;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"MrAsparag00se"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"MrAsparag00se"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"MrAsparag00se"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"MrAsparag00se"},"content":" * Represents a \"ToDo\" task, which has no associated time constraints.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"MrAsparag00se"},"content":" * This class is a subclass of the abstract Task class.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"MrAsparag00se"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"MrAsparag00se"},"content":"class ToDo extends Task {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"MrAsparag00se"},"content":"     * Constructs a new ToDo task with the specified description.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"MrAsparag00se"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"MrAsparag00se"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"MrAsparag00se"},"content":"    public ToDo(String description) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"MrAsparag00se"},"content":"        super(description);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"MrAsparag00se"},"content":"     * Constructs a new ToDo task with the specified description and completion status.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"MrAsparag00se"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"MrAsparag00se"},"content":"     * @param isDone      The completion status of the ToDo task. {@code true} if the task is done,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"MrAsparag00se"},"content":"     *                    {@code false} otherwise.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"MrAsparag00se"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"MrAsparag00se"},"content":"        super(description);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"MrAsparag00se"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"MrAsparag00se"},"content":"     * Returns a string representation of the ToDo task, including its type, completion status, and description.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"MrAsparag00se"},"content":"     * The format is: \"T [status] description\".","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"MrAsparag00se"},"content":"     * @return A string representation of the ToDo task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"MrAsparag00se"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"MrAsparag00se"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"MrAsparag00se"},"content":"        return \"T [\" + (isDone ? \"X\" : \" \") + \"] \" + description;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"MrAsparag00se"},"content":"     * Converts the ToDo task to a string representation suitable for saving to a file.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"MrAsparag00se"},"content":"     * The format is: \"TODO | status | description\".","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"MrAsparag00se"},"content":"     * - `status`: \"X\" if the task is done, \"0\" otherwise.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"MrAsparag00se"},"content":"     * @return A string representation of the ToDo task in file format.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"MrAsparag00se"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"MrAsparag00se"},"content":"    public String toFileString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"MrAsparag00se"},"content":"        return \"TODO | \" + (isDone ? \"X\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"MrAsparag00se"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"MrAsparag00se"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"MrAsparag00se"},"content":" * Represents a \u0027Deadline\u0027 task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"MrAsparag00se"},"content":" * The deadline is stored as a LocalDateTime object.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"MrAsparag00se"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"MrAsparag00se"},"content":"class Deadline extends Task {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"MrAsparag00se"},"content":"    private LocalDateTime by;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"MrAsparag00se"},"content":"    private static final DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"MrAsparag00se"},"content":"    private static final DateTimeFormatter displayFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"MrAsparag00se"},"content":"     * Constructs a new Deadline task with the specified description and deadline.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"MrAsparag00se"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"MrAsparag00se"},"content":"     * @param by          The deadline in the format \"yyyy-MM-dd HH:mm\" (e.g., \"2025-01-22 18:00\").","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"MrAsparag00se"},"content":"     * @throws VeggieException If the provided deadline is not in the expected format.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"MrAsparag00se"},"content":"    public Deadline(String description, String by) throws VeggieException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"MrAsparag00se"},"content":"        super(description);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"MrAsparag00se"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"MrAsparag00se"},"content":"            this.by \u003d LocalDateTime.parse(by, inputFormatter);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"MrAsparag00se"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"MrAsparag00se"},"content":"            throw new VeggieException(\"Invalid date format! Use yyyy-MM-dd HH:mm (e.g., 2023-01-22 18:00)\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"MrAsparag00se"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"MrAsparag00se"},"content":"     * Constructs a new Deadline task with the specified description, deadline, and completion status.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"MrAsparag00se"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"MrAsparag00se"},"content":"     * @param by          The deadline in the format \"yyyy-MM-dd HH:mm\".","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"MrAsparag00se"},"content":"     * @param isDone      The completion status of the deadline task. {@code true} if the task is done, {@code false} otherwise.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"MrAsparag00se"},"content":"     * @throws VeggieException If the provided deadline is not in the expected format.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"MrAsparag00se"},"content":"    public Deadline(String description, String by, boolean isDone) throws VeggieException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"MrAsparag00se"},"content":"        this(description, by);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"MrAsparag00se"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"MrAsparag00se"},"content":"     * Returns a string representation of the Deadline task, including its type, completion status, description, and deadline.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"MrAsparag00se"},"content":"     * The format is: \"D [status] description (by: formatted deadline)\".","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"MrAsparag00se"},"content":"     * @return A string representation of the Deadline task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"MrAsparag00se"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"MrAsparag00se"},"content":"    public String toString() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"MrAsparag00se"},"content":"        return \"D [\" + (isDone ? \"X\" : \" \") + \"] \" + description + \" (by: \" + by.format(displayFormatter) + \")\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"MrAsparag00se"},"content":"     * Converts the Deadline task to a string representation suitable for saving to a file.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"MrAsparag00se"},"content":"     * The format is: \"DEADLINE | status | description | deadline\".","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"MrAsparag00se"},"content":"     * - `status`: \"X\" if the task is done, \"0\" otherwise.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"MrAsparag00se"},"content":"     * @return A string representation of the Deadline task in file format.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"MrAsparag00se"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"MrAsparag00se"},"content":"    public String toFileString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"MrAsparag00se"},"content":"        return \"DEADLINE | \" + (isDone ? \"X\" : \"0\") + \" | \" + description + \" | \" + by.format(inputFormatter);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"MrAsparag00se"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"MrAsparag00se"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"MrAsparag00se"},"content":" * Represents an \u0027Event\u0027 task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"MrAsparag00se"},"content":" * An event has a start time and an end time.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"MrAsparag00se"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"MrAsparag00se"},"content":"class Event extends Task {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"MrAsparag00se"},"content":"    private String from;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"MrAsparag00se"},"content":"    private String to;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"MrAsparag00se"},"content":"     * Constructs a new Event task with the specified description, start time, and end time.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"MrAsparag00se"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"MrAsparag00se"},"content":"     * @param from        The start time of the event.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"MrAsparag00se"},"content":"     * @param to          The end time of the event.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"MrAsparag00se"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"MrAsparag00se"},"content":"        super(description);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"MrAsparag00se"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"MrAsparag00se"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"MrAsparag00se"},"content":"     * Constructs a new Event task with the specified description, start time, end time, and completion status.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"MrAsparag00se"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"MrAsparag00se"},"content":"     * @param from        The start time of the event.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"MrAsparag00se"},"content":"     * @param to          The end time of the event.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"MrAsparag00se"},"content":"     * @param isDone      The completion status of the event. {@code true} if the task is done, {@code false} otherwise.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"MrAsparag00se"},"content":"    public Event(String description, String from, String to, boolean isDone) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"MrAsparag00se"},"content":"        super(description);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"MrAsparag00se"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"MrAsparag00se"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"MrAsparag00se"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"MrAsparag00se"},"content":"     * Returns a string representation of the Event task, including its type, completion status, description, start time, and end time.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"MrAsparag00se"},"content":"     * The format is: \"E [status] description from: start time to: end time\".","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"MrAsparag00se"},"content":"     * @return A string representation of the Event task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"MrAsparag00se"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"MrAsparag00se"},"content":"    public String toString() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"MrAsparag00se"},"content":"        return \"E [\" + (isDone ? \"X\" : \" \") + \"] \" + description + \" from: \" + from + \" to: \" + to;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"MrAsparag00se"},"content":"     * Converts the Event task to a string representation suitable for saving to a file.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"MrAsparag00se"},"content":"     * The format is: \"EVENT | status | description | start time | end time\".","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"MrAsparag00se"},"content":"     * - `status`: \"X\" if the task is done, \"0\" otherwise.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"MrAsparag00se"},"content":"     * @return A string representation of the Event task in file format.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"MrAsparag00se"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"MrAsparag00se"},"content":"    public String toFileString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"MrAsparag00se"},"content":"        return \"EVENT | \" + (isDone ? \"X\" : \"0\") + \" | \" + description + \" | \" + from + \" | \" + to;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"MrAsparag00se"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"MrAsparag00se"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"MrAsparag00se"},"content":" * Custom exception class for input validation.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"MrAsparag00se"},"content":" * This exception is used to handle errors specific to the application\u0027s logic.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"MrAsparag00se"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"MrAsparag00se"},"content":"class VeggieException extends Exception {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"MrAsparag00se"},"content":"     * Constructs a new {@code VeggieException} with the specified detail message.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"MrAsparag00se"},"content":"     * The message provides additional information about the exception cause.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"MrAsparag00se"},"content":"     * @param message the detail message describing the exception.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"MrAsparag00se"},"content":"    public VeggieException(String message) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"MrAsparag00se"},"content":"        super(message);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"MrAsparag00se"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"MrAsparag00se"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"MrAsparag00se"},"content":" * Runs the Vegetables program, that supports creating, listing,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"MrAsparag00se"},"content":" * marking, unmarking, deleting, and finding tasks.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"MrAsparag00se"},"content":" * Tasks can be of type ToDo, Deadline, or Event.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"MrAsparag00se"},"content":" * The program uses a file to persist tasks between sessions.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"MrAsparag00se"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"MrAsparag00se"},"content":"public class Vegetables {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"MrAsparag00se"},"content":"    private static final String FILE_PATH \u003d \"./tasklist/veggied.txt\";  // File path for storing tasks","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"MrAsparag00se"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"MrAsparag00se"},"content":"     * Entry point of the Vegetables program.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"MrAsparag00se"},"content":"     * Displays a welcome message and runs a command loop to process user input.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"MrAsparag00se"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"MrAsparag00se"},"content":"     * @param args Command-line arguments (not used).","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"MrAsparag00se"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"MrAsparag00se"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"MrAsparag00se"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"MrAsparag00se"},"content":"        TaskStorage taskStorage \u003d new TaskStorage();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"MrAsparag00se"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskStorage.loadTasks();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"MrAsparag00se"},"content":"        TaskManager taskManager \u003d new TaskManager(tasks);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"MrAsparag00se"},"content":"        String veggieLogo \u003d","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"MrAsparag00se"},"content":"                \" _  _  ____  ___  ____  ____   __    ____  __    ____  ___ \\n\"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"MrAsparag00se"},"content":"                        + \"( \\\\/ )( ___)/ __)( ___)(_  _) /__\\\\  (  _ \\\\(  )  ( ___)/ __)\\n\"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"MrAsparag00se"},"content":"                        + \" \\\\  /  )__)( (_-. )__)   )(  /(__)\\\\  ) _ \u003c )(__  )__) \\\\__ \\\\\\n\"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"MrAsparag00se"},"content":"                        + \"  \\\\/  (____)\\\\___/(____) (__)(__)(__)(____/(____)(____)(___/ \\n\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"MrAsparag00se"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"MrAsparag00se"},"content":"        System.out.println(\" Hello! I\u0027m Vegetables\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"MrAsparag00se"},"content":"        System.out.println(veggieLogo);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"MrAsparag00se"},"content":"        System.out.println(\" What can I do for you?\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"MrAsparag00se"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"MrAsparag00se"},"content":"        CommandHandler commandHandler \u003d new CommandHandler(taskManager, taskStorage);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"MrAsparag00se"},"content":"        while (true) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"MrAsparag00se"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"MrAsparag00se"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"MrAsparag00se"},"content":"            commandHandler.executeCommand(userInput);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"MrAsparag00se"},"content":"            if (userInput.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"MrAsparag00se"},"content":"                break; // Exit the program","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"MrAsparag00se"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"MrAsparag00se"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"MrAsparag00se"},"content":"        scanner.close();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"MrAsparag00se"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"MrAsparag00se"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"MrAsparag00se":537}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"MrAsparag00se"},"content":"hello","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"MrAsparag00se"},"content":"help","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"MrAsparag00se"},"content":"todo","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"MrAsparag00se"},"content":"event","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"MrAsparag00se"},"content":"deadline","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"MrAsparag00se"},"content":"todo test","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"MrAsparag00se"},"content":"event test /from now /to later","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"MrAsparag00se"},"content":"deadline test /by later","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"MrAsparag00se"},"content":"list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"MrAsparag00se"},"content":"mark 1","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"MrAsparag00se"},"content":"unmark 2","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"MrAsparag00se"},"content":"unmark 1","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"MrAsparag00se"},"content":"delete 1","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"MrAsparag00se"},"content":"delete 5","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"MrAsparag00se"},"content":"bye","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"MrAsparag00se":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"MrAsparag00se"},"content":"java -classpath ..\\bin Vegetables \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":20,"MrAsparag00se":1}}]
