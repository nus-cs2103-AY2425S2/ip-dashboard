[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SAN-MUYUN"},"content":"    mainClass.set(\"muyunBot.MuyunBot\")","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SAN-MUYUN"},"content":"    archiveBaseName \u003d \"MuyunBot\"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"SAN-MUYUN":2,"-":39}},{"path":"src/data/record.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SAN-MUYUN"},"content":"D|0|return books|2023-02-22","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SAN-MUYUN"},"content":"T|0|buy books","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SAN-MUYUN"},"content":"T|0|buy some groceries","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"SAN-MUYUN":3}},{"path":"src/main/java/muyunBot/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SAN-MUYUN"},"content":"package muyunBot;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SAN-MUYUN"},"content":"import muyunBot.exceptions.NoContentException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SAN-MUYUN"},"content":"import muyunBot.exceptions.OutOfListException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SAN-MUYUN"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SAN-MUYUN"},"content":"public class Command {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SAN-MUYUN"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SAN-MUYUN"},"content":"     * Executes commands according to the comms passed in","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SAN-MUYUN"},"content":"     * @param comm parsed commands","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SAN-MUYUN"},"content":"     * @param taskList taskList to be updated when executing commands","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SAN-MUYUN"},"content":"     * @param parser Parser that is used to understand the commands and create tasks accordingly.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SAN-MUYUN"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SAN-MUYUN"},"content":"    protected void execute(String[] comm, TaskList taskList, Parser parser) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SAN-MUYUN"},"content":"        switch (comm[0]) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SAN-MUYUN"},"content":"        case \"list\":","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SAN-MUYUN"},"content":"            taskList.showList();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SAN-MUYUN"},"content":"            break;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SAN-MUYUN"},"content":"        case \"mark\":","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SAN-MUYUN"},"content":"            try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SAN-MUYUN"},"content":"                int ind \u003d Integer.parseInt(comm[1]);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SAN-MUYUN"},"content":"                taskList.markAsDone(ind);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SAN-MUYUN"},"content":"                break;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SAN-MUYUN"},"content":"            } catch (OutOfListException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SAN-MUYUN"},"content":"                Ui.display(Ui.indent(e.getMessage()));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SAN-MUYUN"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SAN-MUYUN"},"content":"                Ui.display(Ui.indent(\"please enter index after the command \u0027mark\u0027\"));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SAN-MUYUN"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SAN-MUYUN"},"content":"        case \"unmark\":","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SAN-MUYUN"},"content":"            try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SAN-MUYUN"},"content":"                int ind \u003d Integer.parseInt(comm[1]);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SAN-MUYUN"},"content":"                taskList.markAsUndone(ind);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SAN-MUYUN"},"content":"                break;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SAN-MUYUN"},"content":"            } catch (OutOfListException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SAN-MUYUN"},"content":"                Ui.display(Ui.indent(e.getMessage()));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SAN-MUYUN"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SAN-MUYUN"},"content":"                Ui.display(Ui.indent(\"please enter index after the command \u0027unmark\u0027\"));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SAN-MUYUN"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SAN-MUYUN"},"content":"        case \"todo\":","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SAN-MUYUN"},"content":"            try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SAN-MUYUN"},"content":"                taskList.addTask(parser.createTodo(comm));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SAN-MUYUN"},"content":"                break;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SAN-MUYUN"},"content":"            } catch (NoContentException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SAN-MUYUN"},"content":"                Ui.display(Ui.indent(e.getMessage()));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SAN-MUYUN"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SAN-MUYUN"},"content":"        case \"deadline\":","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SAN-MUYUN"},"content":"            try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SAN-MUYUN"},"content":"                taskList.addTask(parser.createDeadline(comm));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SAN-MUYUN"},"content":"                break;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SAN-MUYUN"},"content":"            } catch (NoContentException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SAN-MUYUN"},"content":"                Ui.display(Ui.indent(e.getMessage()));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SAN-MUYUN"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SAN-MUYUN"},"content":"                Ui.display(Ui.indent(\"Please input deadline following format yyyy-mm-dd\"));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SAN-MUYUN"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SAN-MUYUN"},"content":"        case \"event\":","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SAN-MUYUN"},"content":"            try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SAN-MUYUN"},"content":"                taskList.addTask(parser.createEvent(comm));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SAN-MUYUN"},"content":"                break;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SAN-MUYUN"},"content":"            } catch (NoContentException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"SAN-MUYUN"},"content":"                Ui.display(Ui.indent(e.getMessage()));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"SAN-MUYUN"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"SAN-MUYUN"},"content":"                Ui.display(Ui.indent(\"Please input deadline following format yyyy-mm-dd\"));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"SAN-MUYUN"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"SAN-MUYUN"},"content":"                Ui.display(Ui.indent(\"Please input the correct format:\"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"SAN-MUYUN"},"content":"                        + \"event {description} /from {start time} /to {end time}\"));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"SAN-MUYUN"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"SAN-MUYUN"},"content":"        case \"delete\":","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"SAN-MUYUN"},"content":"            try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"SAN-MUYUN"},"content":"                int ind \u003d Integer.parseInt(comm[1]);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"SAN-MUYUN"},"content":"                taskList.delete(ind);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"SAN-MUYUN"},"content":"                break;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"SAN-MUYUN"},"content":"            } catch (OutOfListException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"SAN-MUYUN"},"content":"                Ui.display(Ui.indent(e.getMessage()));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"SAN-MUYUN"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"SAN-MUYUN"},"content":"                Ui.display(Ui.indent(\"please enter index after command \u0027delete\u0027\"));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"SAN-MUYUN"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"SAN-MUYUN"},"content":"        case \"find\":","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"SAN-MUYUN"},"content":"            // find the corresponding element","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"SAN-MUYUN"},"content":"            StringBuilder searchText \u003d new StringBuilder();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"SAN-MUYUN"},"content":"            for (int i \u003d 1; i \u003c comm.length; i++) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"SAN-MUYUN"},"content":"                if (!searchText.isEmpty()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"SAN-MUYUN"},"content":"                    searchText.append(\" \");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"SAN-MUYUN"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"SAN-MUYUN"},"content":"                searchText.append(comm[i]);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"SAN-MUYUN"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"SAN-MUYUN"},"content":"            taskList.find(searchText.toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"SAN-MUYUN"},"content":"            break;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"SAN-MUYUN"},"content":"        default:","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"SAN-MUYUN"},"content":"            Ui.display(Ui.indent(\"Sorry, I have not learnt this command yet :(\"));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"SAN-MUYUN"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"SAN-MUYUN"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"SAN-MUYUN":103}},{"path":"src/main/java/muyunBot/MuyunBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SAN-MUYUN"},"content":"package muyunBot;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SAN-MUYUN"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SAN-MUYUN"},"content":"public class MuyunBot {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SAN-MUYUN"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SAN-MUYUN"},"content":"    private final Storage storage;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SAN-MUYUN"},"content":"    private final Parser parser;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SAN-MUYUN"},"content":"    public MuyunBot() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SAN-MUYUN"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SAN-MUYUN"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SAN-MUYUN"},"content":"        this.taskList \u003d this.storage.sync(this.storage);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SAN-MUYUN"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SAN-MUYUN"},"content":"     * Prints greeting message on commandline","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SAN-MUYUN"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SAN-MUYUN"},"content":"    private void greet() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SAN-MUYUN"},"content":"        String text \u003d Ui.indent(\"Hello! I\u0027m MuyunBot\")","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SAN-MUYUN"},"content":"                + Ui.indent(\"What can I do for you?\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SAN-MUYUN"},"content":"        Ui.display(text);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SAN-MUYUN"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SAN-MUYUN"},"content":"     * Displays end message on the commandline","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SAN-MUYUN"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SAN-MUYUN"},"content":"    private void quit() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SAN-MUYUN"},"content":"        Ui.display(Ui.indent(\"Bye! Hope to see you soon!\"));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SAN-MUYUN"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SAN-MUYUN"},"content":"     * Runs the whole program until user inputs \"bye\" in the commandline.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SAN-MUYUN"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SAN-MUYUN"},"content":"    private void run() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SAN-MUYUN"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SAN-MUYUN"},"content":"        Command c \u003d new Command();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SAN-MUYUN"},"content":"        greet();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SAN-MUYUN"},"content":"        String input \u003d scanner.nextLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SAN-MUYUN"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SAN-MUYUN"},"content":"            String[] comms \u003d parser.generateCommand(input);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SAN-MUYUN"},"content":"            c.execute(comms, this.taskList, this.parser);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SAN-MUYUN"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SAN-MUYUN"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SAN-MUYUN"},"content":"        quit();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SAN-MUYUN"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SAN-MUYUN"},"content":"        MuyunBot bot \u003d new MuyunBot();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SAN-MUYUN"},"content":"        bot.run();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SAN-MUYUN"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"SAN-MUYUN":58}},{"path":"src/main/java/muyunBot/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SAN-MUYUN"},"content":"package muyunBot;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SAN-MUYUN"},"content":"import muyunBot.classes.Deadline;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SAN-MUYUN"},"content":"import muyunBot.classes.Event;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SAN-MUYUN"},"content":"import muyunBot.classes.Todo;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SAN-MUYUN"},"content":"import muyunBot.exceptions.NoContentException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SAN-MUYUN"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SAN-MUYUN"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SAN-MUYUN"},"content":"public class Parser {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SAN-MUYUN"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SAN-MUYUN"},"content":"     * parse the dateString input from user into a LocalDate object","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SAN-MUYUN"},"content":"     * @param dateString user input for datetime","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SAN-MUYUN"},"content":"     * @return a LocalDate object by parsing the dateString","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SAN-MUYUN"},"content":"     * @throws DateTimeParseException if dateString is invalid","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SAN-MUYUN"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SAN-MUYUN"},"content":"    public static LocalDate parseDate(String dateString) throws DateTimeParseException{","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SAN-MUYUN"},"content":"        LocalDate date \u003d LocalDate.parse(dateString);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SAN-MUYUN"},"content":"        return date;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SAN-MUYUN"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SAN-MUYUN"},"content":"     * Creates a new Todo instance using the input from commandline.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SAN-MUYUN"},"content":"     * @param inputArr array of input received from commandline by the user.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SAN-MUYUN"},"content":"     * @return Returns the new MuyunBot.classes.Todo created.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SAN-MUYUN"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SAN-MUYUN"},"content":"    public Todo createTodo(String[] inputArr) throws NoContentException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SAN-MUYUN"},"content":"        StringBuilder descr \u003d new StringBuilder();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SAN-MUYUN"},"content":"        if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SAN-MUYUN"},"content":"            throw new NoContentException(\"I see you want to do something, \" +","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SAN-MUYUN"},"content":"                    \"what exactly is this task about?\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SAN-MUYUN"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SAN-MUYUN"},"content":"        for(int i \u003d 1; i \u003c inputArr.length; i++) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SAN-MUYUN"},"content":"            descr.append(inputArr[i]);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SAN-MUYUN"},"content":"            descr.append(\" \");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SAN-MUYUN"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SAN-MUYUN"},"content":"        return new Todo(descr.toString(), false);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SAN-MUYUN"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SAN-MUYUN"},"content":"     * Creates a new Deadline instance using the input from commandline.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SAN-MUYUN"},"content":"     * @param inputArr array of input received from commandline by the user.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SAN-MUYUN"},"content":"     * @return Returns the new MuyunBot.classes.Deadline created.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SAN-MUYUN"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SAN-MUYUN"},"content":"    public Deadline createDeadline(String[] inputArr) throws NoContentException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SAN-MUYUN"},"content":"        if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SAN-MUYUN"},"content":"            throw new NoContentException(\"I see a deadline is approaching, \" +","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SAN-MUYUN"},"content":"                    \"what exactly is this task about?\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SAN-MUYUN"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SAN-MUYUN"},"content":"        int counter \u003d 1;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SAN-MUYUN"},"content":"        StringBuilder description \u003d new StringBuilder();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SAN-MUYUN"},"content":"        StringBuilder deadLine \u003d new StringBuilder();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SAN-MUYUN"},"content":"        while (counter \u003c inputArr.length \u0026\u0026 !inputArr[counter].equals(\"/by\")) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SAN-MUYUN"},"content":"            description.append(inputArr[counter] + \" \");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SAN-MUYUN"},"content":"            counter++;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SAN-MUYUN"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SAN-MUYUN"},"content":"        if (counter \u003d\u003d inputArr.length) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SAN-MUYUN"},"content":"            throw new NoContentException(\"When is this deadline? \" +","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SAN-MUYUN"},"content":"                    \"add a deadline using format: deadline {task} /by {deadline date and time}\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SAN-MUYUN"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SAN-MUYUN"},"content":"        counter++;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SAN-MUYUN"},"content":"        while (counter \u003c inputArr.length) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SAN-MUYUN"},"content":"            deadLine.append(inputArr[counter] + \" \");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"SAN-MUYUN"},"content":"            counter++;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"SAN-MUYUN"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"SAN-MUYUN"},"content":"        if (description.length() \u003d\u003d 0 || deadLine.length() \u003d\u003d 0) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"SAN-MUYUN"},"content":"            throw new NoContentException(\"Seems like task description or deadline is missing...\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"SAN-MUYUN"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"SAN-MUYUN"},"content":"        return new Deadline(description.toString(), deadLine.toString(), false);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"SAN-MUYUN"},"content":"    public Event createEvent(String[] inputArr) throws NoContentException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"SAN-MUYUN"},"content":"        if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"SAN-MUYUN"},"content":"            throw new NoContentException(\"I see you want to create an event, \" +","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"SAN-MUYUN"},"content":"                    \"what exactly is this task about?\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"SAN-MUYUN"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"SAN-MUYUN"},"content":"        int counter \u003d 1;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"SAN-MUYUN"},"content":"        StringBuilder description \u003d new StringBuilder();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"SAN-MUYUN"},"content":"        StringBuilder startTime \u003d new StringBuilder();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"SAN-MUYUN"},"content":"        StringBuilder endTime \u003d new StringBuilder();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"SAN-MUYUN"},"content":"        while (counter !\u003d inputArr.length \u0026\u0026 !inputArr[counter].equals(\"/from\")) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"SAN-MUYUN"},"content":"            description.append(inputArr[counter] + \" \");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"SAN-MUYUN"},"content":"            counter++;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"SAN-MUYUN"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"SAN-MUYUN"},"content":"        counter++;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"SAN-MUYUN"},"content":"        while (counter !\u003d inputArr.length \u0026\u0026 !inputArr[counter].equals(\"/to\")) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"SAN-MUYUN"},"content":"            startTime.append(inputArr[counter] + \" \");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"SAN-MUYUN"},"content":"            counter++;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"SAN-MUYUN"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"SAN-MUYUN"},"content":"        counter++;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"SAN-MUYUN"},"content":"        while(counter \u003c inputArr.length) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"SAN-MUYUN"},"content":"            endTime.append(inputArr[counter] + \" \");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"SAN-MUYUN"},"content":"            counter++;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"SAN-MUYUN"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"SAN-MUYUN"},"content":"        if (description.length() \u003d\u003d 0 || startTime.length() \u003d\u003d 0 || endTime.length() \u003d\u003d 0) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"SAN-MUYUN"},"content":"            throw new NoContentException(\"description or start time or end time for event is missing\" +","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"SAN-MUYUN"},"content":"                    \"please follow template: event {event description} /from {start time} /to {end time}\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"SAN-MUYUN"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"SAN-MUYUN"},"content":"        return new Event(description.toString(), startTime.toString(), endTime.toString(), false);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"SAN-MUYUN"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"SAN-MUYUN"},"content":"     * Parses the input into a string array.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"SAN-MUYUN"},"content":"     * @param input User input.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"SAN-MUYUN"},"content":"     * @return String array after splitting the input.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"SAN-MUYUN"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"SAN-MUYUN"},"content":"    public String[] generateCommand(String input) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"SAN-MUYUN"},"content":"        return input.split(\" \");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"SAN-MUYUN"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"SAN-MUYUN":115}},{"path":"src/main/java/muyunBot/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SAN-MUYUN"},"content":"package muyunBot;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SAN-MUYUN"},"content":"import muyunBot.classes.*;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SAN-MUYUN"},"content":"import java.io.File;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SAN-MUYUN"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SAN-MUYUN"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SAN-MUYUN"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SAN-MUYUN"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SAN-MUYUN"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SAN-MUYUN"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SAN-MUYUN"},"content":"public class Storage {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SAN-MUYUN"},"content":"    final String FILEPATH \u003d \"src/data/record.txt\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SAN-MUYUN"},"content":"    File file;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SAN-MUYUN"},"content":"    Parser parser;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SAN-MUYUN"},"content":"    public Storage() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SAN-MUYUN"},"content":"        this.file \u003d new File(FILEPATH);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SAN-MUYUN"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SAN-MUYUN"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SAN-MUYUN"},"content":"     * Checks if the required folder path and file path are valid.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SAN-MUYUN"},"content":"     * If required file path and folder path are not present, create the required folder and file path.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SAN-MUYUN"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SAN-MUYUN"},"content":"    public void initFile() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SAN-MUYUN"},"content":"        String directoryPath \u003d \"src/data\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SAN-MUYUN"},"content":"        String filePath \u003d this.FILEPATH;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SAN-MUYUN"},"content":"        // Create folder if it does not exist.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SAN-MUYUN"},"content":"        File f \u003d new File(directoryPath);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SAN-MUYUN"},"content":"        if (!f.exists()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SAN-MUYUN"},"content":"            if(f.mkdirs()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SAN-MUYUN"},"content":"                System.out.println(\"new directory created\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SAN-MUYUN"},"content":"            } else {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SAN-MUYUN"},"content":"                System.out.println(\"Canno create new directory\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SAN-MUYUN"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SAN-MUYUN"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SAN-MUYUN"},"content":"        //create File if it does not exist;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SAN-MUYUN"},"content":"        f \u003d new File(FILEPATH);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SAN-MUYUN"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SAN-MUYUN"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SAN-MUYUN"},"content":"                Ui.display(\"MuyunBot.Storage file was created.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SAN-MUYUN"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SAN-MUYUN"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SAN-MUYUN"},"content":"            System.out.println(\"An error occurred while creating the file: \" + e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SAN-MUYUN"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SAN-MUYUN"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SAN-MUYUN"},"content":"     * Writes content into the record.txt file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SAN-MUYUN"},"content":"     * @param content Content to be written into the file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SAN-MUYUN"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SAN-MUYUN"},"content":"    public void writeFile(String content) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SAN-MUYUN"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SAN-MUYUN"},"content":"            FileWriter fw \u003d new FileWriter(this.FILEPATH, true);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SAN-MUYUN"},"content":"            fw.write(content + System.lineSeparator());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SAN-MUYUN"},"content":"            fw.close();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SAN-MUYUN"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SAN-MUYUN"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SAN-MUYUN"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SAN-MUYUN"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"SAN-MUYUN"},"content":"     * Writes all tasks in the list into the file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"SAN-MUYUN"},"content":"     * @param list a list containing all the tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"SAN-MUYUN"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"SAN-MUYUN"},"content":"    public void updateFile(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"SAN-MUYUN"},"content":"        StringBuilder updatedContent \u003d new StringBuilder();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"SAN-MUYUN"},"content":"        for (Task task : list) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"SAN-MUYUN"},"content":"            updatedContent.append(task.toObjStr() + System.lineSeparator());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"SAN-MUYUN"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"SAN-MUYUN"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"SAN-MUYUN"},"content":"            FileWriter fw \u003d new FileWriter(this.FILEPATH);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"SAN-MUYUN"},"content":"            fw.write(updatedContent.toString());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"SAN-MUYUN"},"content":"            fw.close();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"SAN-MUYUN"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"SAN-MUYUN"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"SAN-MUYUN"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"SAN-MUYUN"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"SAN-MUYUN"},"content":"     * Converts a string into a Task object.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"SAN-MUYUN"},"content":"     * @param content String representation of a Task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"SAN-MUYUN"},"content":"     * @return Task","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"SAN-MUYUN"},"content":"     * @throws DateTimeParseException If datetime in the content cannot be parsed into LocalDate object.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"SAN-MUYUN"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"SAN-MUYUN"},"content":"    public Task strToTask(String content) throws DateTimeParseException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"SAN-MUYUN"},"content":"        String[] parsed \u003d content.split(\"\\\\|\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"SAN-MUYUN"},"content":"        String symbol \u003d parsed[0];","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"SAN-MUYUN"},"content":"        switch(symbol){","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"SAN-MUYUN"},"content":"            case(\"T\"):","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"SAN-MUYUN"},"content":"                return new Todo(parsed[2], Integer.parseInt(parsed[1]) \u003d\u003d 1);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"SAN-MUYUN"},"content":"            case(\"D\"):","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"SAN-MUYUN"},"content":"                return new Deadline(parsed[2], parsed[3], Integer.parseInt(parsed[1]) \u003d\u003d 1);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"SAN-MUYUN"},"content":"            case (\"E\"):","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"SAN-MUYUN"},"content":"                return new Event(parsed[2], parsed[3], parsed[4], Integer.parseInt(parsed[1]) \u003d\u003d 1);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"SAN-MUYUN"},"content":"            default:","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"SAN-MUYUN"},"content":"                return null;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"SAN-MUYUN"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"SAN-MUYUN"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"SAN-MUYUN"},"content":"     * Reads data from the record.txt, convert the text into new Tasks and adds the tasks into a new ArrayList of Task.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"SAN-MUYUN"},"content":"     * Returns the new Arraylist of Tasks in the end.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"SAN-MUYUN"},"content":"     * @return","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"SAN-MUYUN"},"content":"     * @throws FileNotFoundException If the FILEPATH is invalid and cannot be reached","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"SAN-MUYUN"},"content":"     * @throws DateTimeParseException If the DateTime passed in by user cannot be parsed properly","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"SAN-MUYUN"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"SAN-MUYUN"},"content":"    public ArrayList\u003cTask\u003e syncTaskList() throws FileNotFoundException, DateTimeParseException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"SAN-MUYUN"},"content":"        File f \u003d new File(FILEPATH); // create a File for the given file path","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"SAN-MUYUN"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"SAN-MUYUN"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"SAN-MUYUN"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"SAN-MUYUN"},"content":"            Task curr \u003d this.strToTask(s.nextLine());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"SAN-MUYUN"},"content":"            if (curr !\u003d null) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"SAN-MUYUN"},"content":"                result.add(curr);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"SAN-MUYUN"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"SAN-MUYUN"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"SAN-MUYUN"},"content":"        return result;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"SAN-MUYUN"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"SAN-MUYUN"},"content":"     * Deletes and creates a new file in the event that the current record.txt file is corrupted.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"SAN-MUYUN"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"SAN-MUYUN"},"content":"    public void rebuildFile() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"SAN-MUYUN"},"content":"        this.file.delete();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"SAN-MUYUN"},"content":"        initFile();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"SAN-MUYUN"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"SAN-MUYUN"},"content":"     * Returns a new TaskList containing all tasks from the file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"SAN-MUYUN"},"content":"     * @param storage Storage used to initialise a file and creates the new TaskList object.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"SAN-MUYUN"},"content":"     * @return new TaskList.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"SAN-MUYUN"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"SAN-MUYUN"},"content":"    protected TaskList sync (Storage storage) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"SAN-MUYUN"},"content":"        storage.initFile();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"SAN-MUYUN"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"SAN-MUYUN"},"content":"            return new TaskList(storage, syncTaskList());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"SAN-MUYUN"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"SAN-MUYUN"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"SAN-MUYUN"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"SAN-MUYUN"},"content":"            Ui.display(\"File is corrupted, deleting current file and creating new file\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"SAN-MUYUN"},"content":"            this.rebuildFile();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"SAN-MUYUN"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"SAN-MUYUN"},"content":"        return new TaskList(storage);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"SAN-MUYUN"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"SAN-MUYUN":152}},{"path":"src/main/java/muyunBot/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SAN-MUYUN"},"content":"package muyunBot;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SAN-MUYUN"},"content":"import muyunBot.classes.Task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SAN-MUYUN"},"content":"import muyunBot.exceptions.OutOfListException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SAN-MUYUN"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SAN-MUYUN"},"content":"public class TaskList {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SAN-MUYUN"},"content":"    /** ArrayList containing all the tasks */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SAN-MUYUN"},"content":"    private final ArrayList\u003cTask\u003e TASKLIST;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SAN-MUYUN"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SAN-MUYUN"},"content":"    public TaskList(Storage storage) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SAN-MUYUN"},"content":"        this.TASKLIST \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SAN-MUYUN"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SAN-MUYUN"},"content":"    public TaskList(Storage storage, ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SAN-MUYUN"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SAN-MUYUN"},"content":"        this.TASKLIST \u003d list;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SAN-MUYUN"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SAN-MUYUN"},"content":"     * Adds a new task to the tasklist.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SAN-MUYUN"},"content":"     * Updates the storage file accordingly.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SAN-MUYUN"},"content":"     * @param newTask New Task to be added to the task list","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SAN-MUYUN"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SAN-MUYUN"},"content":"    protected void addTask(Task newTask) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SAN-MUYUN"},"content":"        TASKLIST.add(newTask);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SAN-MUYUN"},"content":"        String text \u003d Ui.indent(\"new task is here!\")","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SAN-MUYUN"},"content":"                + Ui.indent(\"added: \" + newTask.toString())","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SAN-MUYUN"},"content":"                + Ui.indent(\"now we have \" + TASKLIST.size() + \" tasks in the list\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SAN-MUYUN"},"content":"        Ui.display(text);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SAN-MUYUN"},"content":"        this.storage.writeFile(newTask.toObjStr());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SAN-MUYUN"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SAN-MUYUN"},"content":"     * Marks a task with index ind in TASKLIST as done. Displays a message after marking as done.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SAN-MUYUN"},"content":"     * @param ind index to be marked as done in the TASKLIST.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SAN-MUYUN"},"content":"     * @exception OutOfListException when index is larger than number of Tasks.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SAN-MUYUN"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SAN-MUYUN"},"content":"    protected void markAsDone(int ind) throws OutOfListException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SAN-MUYUN"},"content":"        if (ind \u003e TASKLIST.size()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SAN-MUYUN"},"content":"            throw new OutOfListException(\"Task number \"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SAN-MUYUN"},"content":"                    + ind","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SAN-MUYUN"},"content":"                    + \" is out of the list of size \"+ TASKLIST.size() +\", please double check your index~\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SAN-MUYUN"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SAN-MUYUN"},"content":"        TASKLIST.get(ind - 1).markAsDone();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SAN-MUYUN"},"content":"        String text \u003d Ui.indent(\"well done, 1 task down!\\n\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SAN-MUYUN"},"content":"        text +\u003d Ui.indent(TASKLIST.get(ind - 1).toString());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SAN-MUYUN"},"content":"        Ui.display(text);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SAN-MUYUN"},"content":"        this.storage.updateFile(TASKLIST);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SAN-MUYUN"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SAN-MUYUN"},"content":"     * Marks a task in TASKLIST as undone. Displays a message after that.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SAN-MUYUN"},"content":"     * @param ind index to be marked as undone in the TASKLIST.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SAN-MUYUN"},"content":"     * @exception OutOfListException when index is larger than number of Tasks.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SAN-MUYUN"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SAN-MUYUN"},"content":"    protected void markAsUndone(int ind) throws OutOfListException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SAN-MUYUN"},"content":"        if (ind \u003e TASKLIST.size()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SAN-MUYUN"},"content":"            throw new OutOfListException(\"index \"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SAN-MUYUN"},"content":"                    + ind","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SAN-MUYUN"},"content":"                    + \" is out of the list, please double check your index~\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"SAN-MUYUN"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"SAN-MUYUN"},"content":"        TASKLIST.get(ind - 1).markNotDone();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"SAN-MUYUN"},"content":"        String text \u003d Ui.indent(\"oops, seems like this task isn\u0027t done yet...\\n\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"SAN-MUYUN"},"content":"        text +\u003d Ui.indent(TASKLIST.get(ind - 1).toString());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"SAN-MUYUN"},"content":"        Ui.display(text);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"SAN-MUYUN"},"content":"        this.storage.updateFile(TASKLIST);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"SAN-MUYUN"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"SAN-MUYUN"},"content":"     * Displays the content in the TASKLIST.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"SAN-MUYUN"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"SAN-MUYUN"},"content":"    protected void showList() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"SAN-MUYUN"},"content":"        StringBuilder listContent \u003d new StringBuilder();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"SAN-MUYUN"},"content":"        for (int i \u003d 0; i \u003c TASKLIST.size(); i++) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"SAN-MUYUN"},"content":"            listContent.append(Ui.indent(","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"SAN-MUYUN"},"content":"                    (i + 1) + \". \" + TASKLIST.get(i).toString()));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"SAN-MUYUN"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"SAN-MUYUN"},"content":"        Ui.display(listContent.toString());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"SAN-MUYUN"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"SAN-MUYUN"},"content":"     * Deletes a task from the TASKLIST.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"SAN-MUYUN"},"content":"     * @param ind task index to be deleted","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"SAN-MUYUN"},"content":"     * @throws OutOfListException if ind exceeds the size of the ArrayList TASKLIST.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"SAN-MUYUN"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"SAN-MUYUN"},"content":"    protected void delete(int ind) throws OutOfListException{","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"SAN-MUYUN"},"content":"        if (ind \u003e TASKLIST.size()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"SAN-MUYUN"},"content":"            throw new OutOfListException(\"index \" + ind + \" is out of the list,\"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"SAN-MUYUN"},"content":"                    + \" please double check your index~\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"SAN-MUYUN"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"SAN-MUYUN"},"content":"        Task toBeRemoved \u003d TASKLIST.get(ind - 1);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"SAN-MUYUN"},"content":"        TASKLIST.remove(ind - 1);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"SAN-MUYUN"},"content":"        String text \u003d Ui.indent(\"I am removing this task:\")","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"SAN-MUYUN"},"content":"                + Ui.indent(toBeRemoved.toString())","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"SAN-MUYUN"},"content":"                + Ui.indent(\"Now there are \" + TASKLIST.size() + \" tasks in the list\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"SAN-MUYUN"},"content":"        Ui.display(text);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"SAN-MUYUN"},"content":"        this.storage.updateFile(TASKLIST);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"SAN-MUYUN"},"content":"    protected void find(String text) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"SAN-MUYUN"},"content":"        StringBuilder listContent \u003d new StringBuilder();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"SAN-MUYUN"},"content":"        for (int i \u003d 0; i \u003c TASKLIST.size(); i++) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"SAN-MUYUN"},"content":"            if (TASKLIST.get(i).describe().contains(text)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"SAN-MUYUN"},"content":"                listContent.append(Ui.indent(","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"SAN-MUYUN"},"content":"                        (i + 1) + \". \" + TASKLIST.get(i).toString()));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"SAN-MUYUN"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"SAN-MUYUN"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"SAN-MUYUN"},"content":"        Ui.display(listContent.toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"SAN-MUYUN"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"SAN-MUYUN":117}},{"path":"src/main/java/muyunBot/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SAN-MUYUN"},"content":"package muyunBot;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SAN-MUYUN"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SAN-MUYUN"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SAN-MUYUN"},"content":"public class Ui {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SAN-MUYUN"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SAN-MUYUN"},"content":"     * Draws a separation line for formatting when displayed on UI.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SAN-MUYUN"},"content":"     * @return A string of indented \"_\" line with a newline character at the end.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SAN-MUYUN"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SAN-MUYUN"},"content":"    public static String dashedLines() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SAN-MUYUN"},"content":"        return (\"    __________\"+\"\\n\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SAN-MUYUN"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SAN-MUYUN"},"content":"     * Adds indentation to a string for formatting.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SAN-MUYUN"},"content":"     * @param text input string","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SAN-MUYUN"},"content":"     * @return Indented string for formatting","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SAN-MUYUN"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SAN-MUYUN"},"content":"    public static String indent(String text) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SAN-MUYUN"},"content":"        return (\"    \" + text + \"\\n\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SAN-MUYUN"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SAN-MUYUN"},"content":"     * Displays the content of a string onto the commandline in a formatted style.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SAN-MUYUN"},"content":"     * @param text A string content to be displayed on the UI.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SAN-MUYUN"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SAN-MUYUN"},"content":"    public static void display(String text) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SAN-MUYUN"},"content":"        // display x in proper style;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SAN-MUYUN"},"content":"        String textToDisplay \u003d Ui.dashedLines()","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SAN-MUYUN"},"content":"                + text","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SAN-MUYUN"},"content":"                + Ui.dashedLines();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SAN-MUYUN"},"content":"        System.out.println(textToDisplay);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SAN-MUYUN"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SAN-MUYUN"},"content":"     * Converts a LocalDate into a string representation of date to be displayed on the screen.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SAN-MUYUN"},"content":"     * @param date LocalDate representation of the user input date.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SAN-MUYUN"},"content":"     * @return A string representation of date to be displayed on the UI.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SAN-MUYUN"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SAN-MUYUN"},"content":"    public static String displayDate(LocalDate date) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SAN-MUYUN"},"content":"        return(date.getDayOfWeek().toString().substring(0, 3) + \" \"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SAN-MUYUN"},"content":"                + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SAN-MUYUN"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"SAN-MUYUN":47}},{"path":"src/main/java/muyunBot/classes/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SAN-MUYUN"},"content":"package muyunBot.classes;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SAN-MUYUN"},"content":"import muyunBot.Parser;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SAN-MUYUN"},"content":"import muyunBot.Ui;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SAN-MUYUN"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SAN-MUYUN"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SAN-MUYUN"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SAN-MUYUN"},"content":"    private static final String SYMBOL \u003d \"D\";","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SAN-MUYUN"},"content":"    private LocalDate deadLine;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SAN-MUYUN"},"content":"    public Deadline(String description, String deadLine, boolean isDone) throws DateTimeParseException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SAN-MUYUN"},"content":"        super(description);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SAN-MUYUN"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SAN-MUYUN"},"content":"        this.deadLine \u003d Parser.parseDate(deadLine.trim());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SAN-MUYUN"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SAN-MUYUN"},"content":"     * Generates a string representation of the task that is stored in the record.txt so that data can be read and","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SAN-MUYUN"},"content":"     * parsed easily when reading the file.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SAN-MUYUN"},"content":"     * @return A string of the task that is kept in the record.txt","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SAN-MUYUN"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SAN-MUYUN"},"content":"    public String toObjStr() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SAN-MUYUN"},"content":"        return (SYMBOL + \"|\" + (this.isDone ? \"1\" : \"0\") + \"|\" + this.description","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SAN-MUYUN"},"content":"            + \"|\" + this.deadLine);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SAN-MUYUN"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SAN-MUYUN"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SAN-MUYUN"},"content":"        return \"[\" + SYMBOL + \"]\" + super.toString() + \" (by: \" + Ui.displayDate(this.deadLine) + \")\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SAN-MUYUN"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"SAN-MUYUN":33}},{"path":"src/main/java/muyunBot/classes/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SAN-MUYUN"},"content":"package muyunBot.classes;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SAN-MUYUN"},"content":"import muyunBot.Parser;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SAN-MUYUN"},"content":"import muyunBot.Ui;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SAN-MUYUN"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SAN-MUYUN"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SAN-MUYUN"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SAN-MUYUN"},"content":"    private LocalDate startTime;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SAN-MUYUN"},"content":"    private LocalDate endTime;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SAN-MUYUN"},"content":"    private static final String SYMBOL \u003d \"E\";","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SAN-MUYUN"},"content":"    public Event(String description, String startTime, String endTime, boolean isDone) throws DateTimeParseException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SAN-MUYUN"},"content":"        super(description);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SAN-MUYUN"},"content":"        this.startTime \u003d Parser.parseDate(startTime.trim());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SAN-MUYUN"},"content":"        this.endTime \u003d Parser.parseDate(endTime.trim());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SAN-MUYUN"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SAN-MUYUN"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SAN-MUYUN"},"content":"     * Generates a string representation of the task that is stored in the record.txt so that data can be read and","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SAN-MUYUN"},"content":"     * parsed easily when reading the file.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SAN-MUYUN"},"content":"     * @return A string of the task that is kept in the record.txt","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SAN-MUYUN"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SAN-MUYUN"},"content":"    public String toObjStr() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SAN-MUYUN"},"content":"        return (SYMBOL + \"|\" + (this.isDone ? \"1\" : \"0\") + \"|\" + this.description","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SAN-MUYUN"},"content":"                + \"|\" + this.startTime + \"|\" + this.endTime);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SAN-MUYUN"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SAN-MUYUN"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SAN-MUYUN"},"content":"        return \"[\" + SYMBOL + \"]\" + super.toString()","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SAN-MUYUN"},"content":"                + \" (from: \" + Ui.displayDate(this.startTime)","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SAN-MUYUN"},"content":"                + \" to: \" + Ui.displayDate(this.endTime) + \")\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SAN-MUYUN"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"SAN-MUYUN":39}},{"path":"src/main/java/muyunBot/classes/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SAN-MUYUN"},"content":"package muyunBot.classes;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SAN-MUYUN"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SAN-MUYUN"},"content":"    protected String description;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SAN-MUYUN"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SAN-MUYUN"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SAN-MUYUN"},"content":"        this.description \u003d description.trim();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SAN-MUYUN"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SAN-MUYUN"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SAN-MUYUN"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SAN-MUYUN"},"content":"    public void markNotDone() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SAN-MUYUN"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SAN-MUYUN"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SAN-MUYUN"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SAN-MUYUN"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SAN-MUYUN"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SAN-MUYUN"},"content":"        // mark done task with X","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SAN-MUYUN"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SAN-MUYUN"},"content":"    public String describe() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SAN-MUYUN"},"content":"        return  this.description;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SAN-MUYUN"},"content":"    public abstract String toObjStr();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SAN-MUYUN"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"SAN-MUYUN":36}},{"path":"src/main/java/muyunBot/classes/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SAN-MUYUN"},"content":"package muyunBot.classes;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SAN-MUYUN"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SAN-MUYUN"},"content":"    private static final String SYMBOL \u003d \"T\";","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SAN-MUYUN"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SAN-MUYUN"},"content":"        super(description);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SAN-MUYUN"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SAN-MUYUN"},"content":"        super(description);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SAN-MUYUN"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SAN-MUYUN"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SAN-MUYUN"},"content":"     * Generates a string representation of the task that is stored in the record.txt so that data can be read and","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SAN-MUYUN"},"content":"     * parsed easily when reading the file.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SAN-MUYUN"},"content":"     * @return A string of the task that is kept in the record.txt","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SAN-MUYUN"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SAN-MUYUN"},"content":"    public String toObjStr() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SAN-MUYUN"},"content":"        return SYMBOL + \"|\" + (this.isDone ? \"1\" : \"0\") + \"|\" + this.description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SAN-MUYUN"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SAN-MUYUN"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SAN-MUYUN"},"content":"        return \"[\" + SYMBOL + \"]\" + super.toString();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SAN-MUYUN"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"SAN-MUYUN":28}},{"path":"src/main/java/muyunBot/exceptions/NoContentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SAN-MUYUN"},"content":"package muyunBot.exceptions;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SAN-MUYUN"},"content":"public class NoContentException extends Exception{","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SAN-MUYUN"},"content":"    public NoContentException(String message) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SAN-MUYUN"},"content":"        super(message);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SAN-MUYUN"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"SAN-MUYUN":7}},{"path":"src/main/java/muyunBot/exceptions/OutOfListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SAN-MUYUN"},"content":"package muyunBot.exceptions;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SAN-MUYUN"},"content":"public class OutOfListException extends Exception{","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SAN-MUYUN"},"content":"    public OutOfListException(String message) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SAN-MUYUN"},"content":"        super(message);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SAN-MUYUN"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"SAN-MUYUN":7}},{"path":"src/test/java/muyunBot/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SAN-MUYUN"},"content":"package muyunBot;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SAN-MUYUN"},"content":"import muyunBot.classes.Todo;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SAN-MUYUN"},"content":"import muyunBot.exceptions.NoContentException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SAN-MUYUN"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SAN-MUYUN"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SAN-MUYUN"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SAN-MUYUN"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SAN-MUYUN"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SAN-MUYUN"},"content":"public class ParserTest {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SAN-MUYUN"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SAN-MUYUN"},"content":"    public void parseDate_validDate_success() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SAN-MUYUN"},"content":"        String testInput \u003d \"2025-01-30\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SAN-MUYUN"},"content":"        LocalDate expected \u003d LocalDate.parse(testInput);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SAN-MUYUN"},"content":"        assertEquals(expected, Parser.parseDate(testInput));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SAN-MUYUN"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SAN-MUYUN"},"content":"    public void parseDate_invalidDateFormat_exceptionThrown() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SAN-MUYUN"},"content":"        String testInput \u003d \"2025-101-30\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SAN-MUYUN"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SAN-MUYUN"},"content":"            Parser.parseDate(testInput);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SAN-MUYUN"},"content":"            fail();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SAN-MUYUN"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SAN-MUYUN"},"content":"            assertEquals(\"Text \u00272025-101-30\u0027 could not be parsed at index 7\", e.getMessage());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SAN-MUYUN"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SAN-MUYUN"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SAN-MUYUN"},"content":"    public void parseDate_invalidMonth_exceptionThrown() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SAN-MUYUN"},"content":"        String testInput \u003d \"2025-13-30\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SAN-MUYUN"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SAN-MUYUN"},"content":"            Parser.parseDate(testInput);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SAN-MUYUN"},"content":"            fail();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SAN-MUYUN"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SAN-MUYUN"},"content":"            assertEquals(\"Text \u00272025-13-30\u0027 could not be parsed\", e.getMessage().substring(0, 37));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SAN-MUYUN"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SAN-MUYUN"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SAN-MUYUN"},"content":"    public void createTodo_validInput_success() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SAN-MUYUN"},"content":"        Parser sut \u003d new Parser();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SAN-MUYUN"},"content":"        Todo expected \u003d new Todo(\"testing\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SAN-MUYUN"},"content":"        String[] testInput \u003d {\"todo\", \"testing\"};","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SAN-MUYUN"},"content":"        // creates a new Todo object using testInput, then test to see if the content of the 2 Todo Objects","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SAN-MUYUN"},"content":"        // have the same String representation and the same ObjStr representation.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SAN-MUYUN"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SAN-MUYUN"},"content":"            Todo output;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SAN-MUYUN"},"content":"            output \u003d sut.createTodo(testInput);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SAN-MUYUN"},"content":"            assertEquals(expected.toString(), output.toString());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SAN-MUYUN"},"content":"            assertEquals(expected.toObjStr(), output.toObjStr());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SAN-MUYUN"},"content":"        } catch (NoContentException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SAN-MUYUN"},"content":"            fail();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SAN-MUYUN"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SAN-MUYUN"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"SAN-MUYUN":60}},{"path":"src/test/java/muyunBot/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SAN-MUYUN"},"content":"package muyunBot;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SAN-MUYUN"},"content":"import muyunBot.classes.Task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SAN-MUYUN"},"content":"import muyunBot.classes.Todo;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SAN-MUYUN"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SAN-MUYUN"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SAN-MUYUN"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SAN-MUYUN"},"content":"public class StorageTest {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SAN-MUYUN"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"SAN-MUYUN":13}},{"path":"src/test/java/muyunBot/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SAN-MUYUN"},"content":"package muyunBot;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SAN-MUYUN"},"content":"import muyunBot.classes.Task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SAN-MUYUN"},"content":"import muyunBot.classes.Todo;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SAN-MUYUN"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SAN-MUYUN"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SAN-MUYUN"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SAN-MUYUN"},"content":"public class TaskListTest {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SAN-MUYUN"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SAN-MUYUN"},"content":"    public void addTask_todo_success() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SAN-MUYUN"},"content":"        ArrayList\u003cTask\u003e testArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SAN-MUYUN"},"content":"        TaskList sut \u003d new TaskList(new Storage(), testArray);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SAN-MUYUN"},"content":"        Todo testTodo \u003d new Todo(\"testing\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SAN-MUYUN"},"content":"        sut.addTask(testTodo);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SAN-MUYUN"},"content":"        // get the task from the testArray, and compare it with the initially created Todo, they should have the","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SAN-MUYUN"},"content":"        // same toString() output.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SAN-MUYUN"},"content":"        Task taskToTest \u003d testArray.get(0);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SAN-MUYUN"},"content":"        assertEquals(testTodo.toString(), taskToTest.toString());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SAN-MUYUN"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"SAN-MUYUN":26}},{"path":"src/test/java/muyunBot/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SAN-MUYUN"},"content":"package muyunBot;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SAN-MUYUN"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SAN-MUYUN"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SAN-MUYUN"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SAN-MUYUN"},"content":"public class UiTest {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SAN-MUYUN"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SAN-MUYUN"},"content":"    public void dashedlines_drawLine(){","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SAN-MUYUN"},"content":"        assertEquals(\"    __________\\n\", Ui.dashedLines());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SAN-MUYUN"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SAN-MUYUN"},"content":"    public void indent_normalText_success(){","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SAN-MUYUN"},"content":"        assertEquals(\"    hi\\n\", Ui.indent(\"hi\"));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SAN-MUYUN"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SAN-MUYUN"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SAN-MUYUN"},"content":"    public void displayDate_validDateInput_success() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SAN-MUYUN"},"content":"        LocalDate testDateInput \u003d LocalDate.parse(\"2025-01-30\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SAN-MUYUN"},"content":"        assertEquals(\"THU Jan 30 2025\", Ui.displayDate(testDateInput));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SAN-MUYUN"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SAN-MUYUN"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"SAN-MUYUN":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SAN-MUYUN"},"content":"add borrow books","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SAN-MUYUN"},"content":"todo borrow books","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SAN-MUYUN"},"content":"deadline return books /by Monday 2pm","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SAN-MUYUN"},"content":"event discuss books /from Monday 3pm /to Tues 2pm","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SAN-MUYUN"},"content":"list","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SAN-MUYUN"},"content":"mark 2","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SAN-MUYUN"},"content":"mark 1","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SAN-MUYUN"},"content":"unmark 1","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SAN-MUYUN"},"content":"list","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SAN-MUYUN"},"content":"delete 2","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"SAN-MUYUN":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SAN-MUYUN"},"content":"java -classpath ..\\bin muyunBot.muyunBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"SAN-MUYUN":1,"-":20}}]
