[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZaydM18"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ZaydM18"},"content":"    protected String by;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ZaydM18"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ZaydM18"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ZaydM18"},"content":"        super(description);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ZaydM18"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ZaydM18"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ZaydM18"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ZaydM18"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ZaydM18"},"content":"    public String toString() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ZaydM18"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ZaydM18"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ZaydM18"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"ZaydM18":13}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZaydM18"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ZaydM18"},"content":"    protected String from;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ZaydM18"},"content":"    protected String to;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ZaydM18"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ZaydM18"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ZaydM18"},"content":"        super(description);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ZaydM18"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ZaydM18"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ZaydM18"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ZaydM18"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ZaydM18"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ZaydM18"},"content":"    public String toString() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ZaydM18"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ZaydM18"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ZaydM18"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"ZaydM18":15}},{"path":"src/main/java/Monty.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZaydM18"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ZaydM18"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ZaydM18"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ZaydM18"},"content":"public class Monty {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ZaydM18"},"content":"    private static void printLine() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ZaydM18"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ZaydM18"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ZaydM18"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ZaydM18"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ZaydM18"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ZaydM18"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ZaydM18"},"content":"        printLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ZaydM18"},"content":"        System.out.println(\" Hello! I\u0027m Monty\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ZaydM18"},"content":"        System.out.println(\" What can I do for you?\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ZaydM18"},"content":"        printLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ZaydM18"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ZaydM18"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ZaydM18"},"content":"            try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ZaydM18"},"content":"                String userInput \u003d sc.nextLine().trim();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ZaydM18"},"content":"                String[] words \u003d userInput.split(\" \", 2);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ZaydM18"},"content":"                String command \u003d words[0];","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ZaydM18"},"content":"                String argument \u003d words.length \u003e 1 ? words[1].trim() : \"\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ZaydM18"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ZaydM18"},"content":"                switch (command) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ZaydM18"},"content":"                    case \"bye\":","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ZaydM18"},"content":"                        System.out.println(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ZaydM18"},"content":"                        printLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ZaydM18"},"content":"                        return;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ZaydM18"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ZaydM18"},"content":"                    case \"list\":","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ZaydM18"},"content":"                        System.out.println(\" Here are the tasks in your list:\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ZaydM18"},"content":"                        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ZaydM18"},"content":"                            System.out.println(\"  \" + (i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ZaydM18"},"content":"                        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ZaydM18"},"content":"                        break;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ZaydM18"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ZaydM18"},"content":"                    case \"mark\":","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ZaydM18"},"content":"                        if (argument.isEmpty()) throw new MontyException(\" Your task number is out of range! How am I to keep track of my-- I mean, your -- beautiful list!\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ZaydM18"},"content":"                        int markIndex \u003d Integer.parseInt(argument) - 1;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ZaydM18"},"content":"                        if (markIndex \u003c 0 || markIndex \u003e\u003d tasks.size()) throw new MontyException(\" Your task number is out of range!\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ZaydM18"},"content":"                        tasks.get(markIndex).markAsDone();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ZaydM18"},"content":"                        printLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ZaydM18"},"content":"                        System.out.println(\" Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ZaydM18"},"content":"                        System.out.println(\"   \" + tasks.get(markIndex));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ZaydM18"},"content":"                        break;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ZaydM18"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ZaydM18"},"content":"                    case \"unmark\":","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ZaydM18"},"content":"                        if (argument.isEmpty()) throw new MontyException(\" Your task number is out of range! How am I to keep track of my-- I mean, your -- beautiful list!\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ZaydM18"},"content":"                        int unmarkIndex \u003d Integer.parseInt(argument) - 1;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ZaydM18"},"content":"                        if (unmarkIndex \u003c 0 || unmarkIndex \u003e\u003d tasks.size()) throw new MontyException(\" Your task number is out of range!\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ZaydM18"},"content":"                        tasks.get(unmarkIndex).markAsNotDone();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ZaydM18"},"content":"                        System.out.println(\" OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ZaydM18"},"content":"                        System.out.println(\"   \" + tasks.get(unmarkIndex));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ZaydM18"},"content":"                        printLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ZaydM18"},"content":"                        break;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ZaydM18"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ZaydM18"},"content":"                    case \"todo\":","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ZaydM18"},"content":"                        if (argument.isEmpty()) throw new MontyException(\"Huh? You just left that description blank, friend. How can one make a list with this?\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ZaydM18"},"content":"                        tasks.add(new ToDo(argument));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ZaydM18"},"content":"                        System.out.println(\" Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ZaydM18"},"content":"                        System.out.println(\"   \" + tasks.get(tasks.size() - 1));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ZaydM18"},"content":"                        System.out.println(\"  Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ZaydM18"},"content":"                        printLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ZaydM18"},"content":"                        break;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ZaydM18"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ZaydM18"},"content":"                    case \"deadline\":","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ZaydM18"},"content":"                        if (!argument.contains(\" /by \")) throw new MontyException(\"Deadlines must include a \u0027/by\u0027 followed by a due date. Hopefully there\u0027s no deadline on how long I can keep making lists...\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ZaydM18"},"content":"                        String[] deadlineParts \u003d argument.split(\" /by \", 2);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ZaydM18"},"content":"                        tasks.add(new Deadline(deadlineParts[0], deadlineParts[1]));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ZaydM18"},"content":"                        System.out.println(\" Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ZaydM18"},"content":"                        System.out.println(\"   \" + tasks.get(tasks.size() - 1));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ZaydM18"},"content":"                        System.out.println(\"  Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ZaydM18"},"content":"                        printLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ZaydM18"},"content":"                        break;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ZaydM18"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ZaydM18"},"content":"                    case \"event\":","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ZaydM18"},"content":"                        if (!argument.contains(\" /from \") || !argument.contains(\" /to \")) throw new MontyException(\"Ah! Another error! MUST MAKE LIST! An event must include \u0027/from\u0027 and \u0027/to\u0027\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ZaydM18"},"content":"                        String[] eventParts \u003d argument.split(\" /from | /to \", 3);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ZaydM18"},"content":"                        tasks.add(new Event(eventParts[0], eventParts[1], eventParts[2]));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ZaydM18"},"content":"                        System.out.println(\" Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ZaydM18"},"content":"                        System.out.println(\"   \" + tasks.get(tasks.size() - 1));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ZaydM18"},"content":"                        System.out.println(\"  Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ZaydM18"},"content":"                        printLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ZaydM18"},"content":"                        break;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ZaydM18"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ZaydM18"},"content":"                    case \"delete\":","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ZaydM18"},"content":"                        if (argument.isEmpty()) throw new MontyException(\" Your task number is out of range! How am I to keep track of my-- I mean, your -- beautiful list!\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ZaydM18"},"content":"                        int deleteIndex \u003d Integer.parseInt(argument) - 1;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ZaydM18"},"content":"                        if (deleteIndex \u003c 0 || deleteIndex \u003e\u003d tasks.size()) throw new MontyException(\" Your task number is out of range!\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ZaydM18"},"content":"                        Task removedTask \u003d tasks.remove(deleteIndex);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ZaydM18"},"content":"                        System.out.println(\" Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ZaydM18"},"content":"                        System.out.println(\"   \" + removedTask);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ZaydM18"},"content":"                        System.out.println(\"  Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ZaydM18"},"content":"                        printLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ZaydM18"},"content":"                        break;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ZaydM18"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ZaydM18"},"content":"                    default:","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ZaydM18"},"content":"                        printLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ZaydM18"},"content":"                        System.out.println(\" What are you saying? Please tell me again. I must add it to the list!\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ZaydM18"},"content":"                        printLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ZaydM18"},"content":"                }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ZaydM18"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ZaydM18"},"content":"            } catch (MontyException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ZaydM18"},"content":"                printLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ZaydM18"},"content":"                System.out.println(\" \" + e.getMessage());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ZaydM18"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ZaydM18"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ZaydM18"},"content":"                printLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ZaydM18"},"content":"                System.out.println(\" Your task number is out of range! How am I to keep track of my-- I mean, your -- beautiful list!\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ZaydM18"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ZaydM18"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ZaydM18"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ZaydM18"},"content":"        sc.close();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ZaydM18"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ZaydM18"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"ZaydM18":115}},{"path":"src/main/java/MontyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZaydM18"},"content":"public class MontyException extends Exception {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ZaydM18"},"content":"    public MontyException(String message) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ZaydM18"},"content":"        super(message);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ZaydM18"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ZaydM18"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"ZaydM18":5}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZaydM18"},"content":"public class Task {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ZaydM18"},"content":"    protected String description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ZaydM18"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ZaydM18"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ZaydM18"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ZaydM18"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ZaydM18"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ZaydM18"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ZaydM18"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ZaydM18"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ZaydM18"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ZaydM18"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ZaydM18"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ZaydM18"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ZaydM18"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ZaydM18"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ZaydM18"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ZaydM18"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ZaydM18"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ZaydM18"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ZaydM18"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ZaydM18"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ZaydM18"},"content":"        return description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ZaydM18"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ZaydM18"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ZaydM18"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ZaydM18"},"content":"    public String toString() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ZaydM18"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ZaydM18"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ZaydM18"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"ZaydM18":30}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZaydM18"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ZaydM18"},"content":"    public ToDo(String description) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ZaydM18"},"content":"        super(description);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ZaydM18"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ZaydM18"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ZaydM18"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ZaydM18"},"content":"    public String toString() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ZaydM18"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ZaydM18"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ZaydM18"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"ZaydM18":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ZaydM18"},"content":"todo read book","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ZaydM18"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ZaydM18"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ZaydM18"},"content":"list","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ZaydM18"},"content":"mark 1","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ZaydM18"},"content":"mark 2","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ZaydM18"},"content":"unmark 1","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ZaydM18"},"content":"delete 2","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ZaydM18"},"content":"list","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ZaydM18"},"content":"todo","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ZaydM18"},"content":"deadline homework","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ZaydM18"},"content":"event concert","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ZaydM18"},"content":"blah","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ZaydM18"},"content":"bye","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"ZaydM18":14}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ZaydM18"},"content":"java -classpath ../bin Monty \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"ZaydM18":1,"-":37}}]
