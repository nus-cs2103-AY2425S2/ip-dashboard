[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juniper285"},"content":"1. After that, locate the `src/java/java/Duke.java` file, right-click it, and choose `Run Duke.java()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juniper285"},"content":"**Warning:** Keep the `src\\java\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"juniper285":2,"-":24}},{"path":"src/main/java/gigi/Gigi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juniper285"},"content":"package main.java;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juniper285"},"content":"import main.java.commands.Command;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juniper285"},"content":"import main.java.exceptions.GigiException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juniper285"},"content":"import main.java.storage.Storage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juniper285"},"content":"import main.java.tasks.Tasklist;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juniper285"},"content":"import main.java.ui.Ui;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juniper285"},"content":"public class Gigi {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juniper285"},"content":"    private static final String FILE_PATH \u003d \"./data/Gigi.txt\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juniper285"},"content":"    private final Storage storage;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juniper285"},"content":"    private Tasklist tasks;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juniper285"},"content":"    private final Ui ui;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juniper285"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juniper285"},"content":"        new Gigi(FILE_PATH).run();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juniper285"},"content":"    public Gigi(String filePath) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juniper285"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juniper285"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juniper285"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juniper285"},"content":"            tasks \u003d new Tasklist();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juniper285"},"content":"            tasks.getTasks(storage);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juniper285"},"content":"        } catch (GigiException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juniper285"},"content":"            ui.showLoadingError();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juniper285"},"content":"            tasks \u003d new Tasklist();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juniper285"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juniper285"},"content":"    public void run() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juniper285"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"juniper285"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"juniper285"},"content":"        while (!isExit) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"juniper285"},"content":"            try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"juniper285"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"juniper285"},"content":"                ui.showLine();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"juniper285"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"juniper285"},"content":"                c.execute(tasks,ui,storage);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"juniper285"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"juniper285"},"content":"            } catch (GigiException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"juniper285"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"juniper285"},"content":"            } finally {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"juniper285"},"content":"                ui.showLine();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"juniper285"},"content":"            }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"juniper285"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"juniper285"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"juniper285":48}},{"path":"src/main/java/gigi/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juniper285"},"content":"package main.java;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juniper285"},"content":"import main.java.commands.ByeCommand;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juniper285"},"content":"import main.java.commands.Command;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juniper285"},"content":"import main.java.commands.DeadlineCommand;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juniper285"},"content":"import main.java.commands.DeleteCommand;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juniper285"},"content":"import main.java.commands.EventCommand;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juniper285"},"content":"import main.java.commands.FindCommand;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juniper285"},"content":"import main.java.commands.ListCommand;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juniper285"},"content":"import main.java.commands.MarkCommand;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juniper285"},"content":"import main.java.commands.ToDoCommand;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juniper285"},"content":"import main.java.commands.UnmarkCommand;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juniper285"},"content":"import main.java.exceptions.GigiException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juniper285"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juniper285"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juniper285"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juniper285"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juniper285"},"content":"import java.util.List;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juniper285"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juniper285"},"content":" * Parses user input and converts it into corresponding command objects.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juniper285"},"content":" * This class handles extracting command words and arguments,","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juniper285"},"content":" * as well as parsing date and time inputs.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juniper285"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juniper285"},"content":" public class Parser {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juniper285"},"content":"    private static final List\u003cDateTimeFormatter\u003e FORMATTERS \u003d List.of(","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juniper285"},"content":"            DateTimeFormatter.ofPattern(\"MM/dd/yyyy HH:mm\"),","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juniper285"},"content":"            DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"),","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juniper285"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"),","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juniper285"},"content":"            DateTimeFormatter.ofPattern(\"d MMM yyyy HH:mm\"),","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juniper285"},"content":"            DateTimeFormatter.ofPattern(\"d MMMM yyyy HH:mm\"),","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"juniper285"},"content":"            DateTimeFormatter.ofPattern(\"MM/dd/yyyy h:mm a\"),","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"juniper285"},"content":"            DateTimeFormatter.ofPattern(\"dd/MM/yyyy h:mm a\"),","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"juniper285"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd h:mm a\"),","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"juniper285"},"content":"            DateTimeFormatter.ofPattern(\"d MMM yyyy h:mm a\"),","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"juniper285"},"content":"            DateTimeFormatter.ofPattern(\"d MMMM yyyy h:mm a\"),","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"juniper285"},"content":"            DateTimeFormatter.ISO_LOCAL_DATE_TIME","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"juniper285"},"content":"    );","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"juniper285"},"content":"    private static final List\u003cDateTimeFormatter\u003e DATE_FORMATTERS \u003d List.of(","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"juniper285"},"content":"            DateTimeFormatter.ofPattern(\"MM/dd/yyyy\"),","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"juniper285"},"content":"            DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"),","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"juniper285"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"),","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"juniper285"},"content":"            DateTimeFormatter.ofPattern(\"d MMM yyyy\"),","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"juniper285"},"content":"            DateTimeFormatter.ofPattern(\"d MMMM yyyy\")","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"juniper285"},"content":"    );","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"juniper285"},"content":"     * Parses user input and returns the corresponding command object.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"juniper285"},"content":"     * @param input The raw user input.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"juniper285"},"content":"     * @return The corresponding {@code Command} object.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"juniper285"},"content":"     * @throws GigiException If the command is invalid.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"juniper285"},"content":"    public static Command parse(String input) throws GigiException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"juniper285"},"content":"        String[] parts \u003d input.split(\"\\\\s+\", 2);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"juniper285"},"content":"        String commandWord \u003d parts[0];","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"juniper285"},"content":"        String details \u003d parts.length \u003e 1 ? parts[1] : \"\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"juniper285"},"content":"        return switch (commandWord) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"juniper285"},"content":"            case ToDoCommand.COMMAND_WORD -\u003e startToDo(details);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"juniper285"},"content":"            case DeadlineCommand.COMMAND_WORD -\u003e startDeadline(details);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"juniper285"},"content":"            case EventCommand.COMMAND_WORD -\u003e startEvent(details);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"juniper285"},"content":"            case DeleteCommand.COMMAND_WORD -\u003e startDelete(details);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"juniper285"},"content":"            //case ClearCommand.COMMAND_WORD -\u003e new ClearCommand();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"juniper285"},"content":"            case ByeCommand.COMMAND_WORD -\u003e new ByeCommand();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"juniper285"},"content":"            case ListCommand.COMMAND_WORD -\u003e new ListCommand();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"juniper285"},"content":"            case FindCommand.COMMAND_WORD -\u003e new FindCommand(details);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"juniper285"},"content":"            case MarkCommand.COMMAND_WORD -\u003e new MarkCommand(Integer.parseInt(details));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"juniper285"},"content":"            case UnmarkCommand.COMMAND_WORD -\u003e new UnmarkCommand(Integer.parseInt(details));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"juniper285"},"content":"            //case HelpCommand.COMMAND_WORD -\u003e new HelpCommand();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"juniper285"},"content":"            default -\u003e throw new GigiException(\"MEOW! Invalid command. What do you mean?\");   //new HelpCommand();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"juniper285"},"content":"        };","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"juniper285"},"content":"    private static Command startToDo(String details) throws GigiException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"juniper285"},"content":"        return new ToDoCommand(details);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"juniper285"},"content":"    private static Command startDeadline(String details) throws GigiException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"juniper285"},"content":"        if (!details.contains(\" /by \")) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"juniper285"},"content":"            throw new GigiException(\"MEOW!!! The deadline must include a \u0027/by\u0027 clause.\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"juniper285"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"juniper285"},"content":"        String[] deadlineDetails \u003d details.split(\" /by \", 2);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"juniper285"},"content":"        if (deadlineDetails.length \u003c 2 || deadlineDetails[0].isBlank() || deadlineDetails[1].isBlank()) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"juniper285"},"content":"            throw new GigiException(\"MEOW!!! The description and date of a deadline cannot be empty.\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"juniper285"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"juniper285"},"content":"        return new DeadlineCommand(deadlineDetails[0], parseDateTime(deadlineDetails[1]));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"juniper285"},"content":"    private static Command startEvent(String details) throws GigiException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"juniper285"},"content":"        String[] eventDetails \u003d details.split(\" /from | /by \", 3);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"juniper285"},"content":"        if (eventDetails.length \u003c 3) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"juniper285"},"content":"            throw new GigiException(\"MEOW! Events must have a description, \u0027/from\u0027 date, and \u0027/by\u0027 deadline.\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"juniper285"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"juniper285"},"content":"        return new EventCommand(eventDetails[0], parseDateTime(eventDetails[1]), parseDateTime(eventDetails[2]));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"juniper285"},"content":"    private static Command startDelete(String details) throws GigiException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"juniper285"},"content":"        try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"juniper285"},"content":"            return new DeleteCommand(Integer.parseInt(details));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"juniper285"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"juniper285"},"content":"                throw new GigiException(\"MEOW! Please provide a valid task number to delete.\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"juniper285"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"juniper285"},"content":"    public static LocalDateTime parseDateTime(String dateTimeString) throws GigiException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"juniper285"},"content":"        dateTimeString \u003d dateTimeString.trim();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"juniper285"},"content":"        for (DateTimeFormatter formatter : FORMATTERS) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"juniper285"},"content":"            try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"juniper285"},"content":"                return LocalDateTime.parse(dateTimeString, formatter);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"juniper285"},"content":"            } catch (DateTimeParseException ignored) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"juniper285"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"juniper285"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"juniper285"},"content":"        for (DateTimeFormatter formatter : DATE_FORMATTERS) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"juniper285"},"content":"            try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"juniper285"},"content":"                LocalDate date \u003d LocalDate.parse(dateTimeString, formatter);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"juniper285"},"content":"                return date.atStartOfDay();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"juniper285"},"content":"            } catch (DateTimeParseException ignored) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"juniper285"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"juniper285"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"juniper285"},"content":"        throw new GigiException(\"MEOW! Invalid date format.\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"juniper285"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"juniper285":128}},{"path":"src/main/java/gigi/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juniper285"},"content":"package main.java.commands;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juniper285"},"content":"import main.java.tasks.Tasklist;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juniper285"},"content":"import main.java.ui.Ui;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juniper285"},"content":"import main.java.storage.Storage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juniper285"},"content":"import main.java.exceptions.GigiException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juniper285"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juniper285"},"content":" * Represents a command to exit the Gigi chatbot.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juniper285"},"content":" * This command is triggered when the user inputs \"bye\".","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juniper285"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juniper285"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juniper285"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juniper285"},"content":"     * Constructs a ByeCommand.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juniper285"},"content":"    public ByeCommand() {}","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juniper285"},"content":"     * Executes the exit command.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juniper285"},"content":"     * Saves the task list before displaying a farewell message.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juniper285"},"content":"     * @param tasks   The task list whose state needs to be saved.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juniper285"},"content":"     * @param ui      The UI component for displaying messages.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juniper285"},"content":"     * @param storage The storage component for saving tasks before exit.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juniper285"},"content":"     * @throws GigiException If an error occurs while saving tasks.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juniper285"},"content":"    @Override","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juniper285"},"content":"    public void execute(Tasklist tasks, Ui ui, Storage storage) throws GigiException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juniper285"},"content":"        tasks.saveTasks(storage);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"juniper285"},"content":"        ui.showByeMessage();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"juniper285"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"juniper285":35}},{"path":"src/main/java/gigi/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juniper285"},"content":"package main.java.commands;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juniper285"},"content":"import main.java.exceptions.GigiException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juniper285"},"content":"import main.java.storage.Storage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juniper285"},"content":"import main.java.tasks.Tasklist;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juniper285"},"content":"import main.java.ui.Ui;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juniper285"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juniper285"},"content":" * Represents an abstract command in the Gigi chatbot.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juniper285"},"content":" * All specific command types (e.g., adding, deleting, marking tasks) extend this class.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juniper285"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juniper285"},"content":"public abstract class Command {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juniper285"},"content":"     * Executes the command with the given task list, UI, and storage.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juniper285"},"content":"     * @param tasks   The task list containing all tasks.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juniper285"},"content":"     * @param ui      The UI instance for displaying messages.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juniper285"},"content":"     * @param storage The storage instance for saving tasks.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juniper285"},"content":"     * @throws GigiException If an error occurs during command execution.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juniper285"},"content":"    public abstract void execute(Tasklist tasks, Ui ui, Storage storage) throws GigiException;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juniper285"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juniper285"},"content":"        return false;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juniper285"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"juniper285":28}},{"path":"src/main/java/gigi/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juniper285"},"content":"package main.java.commands;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juniper285"},"content":"import main.java.exceptions.GigiException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juniper285"},"content":"import main.java.storage.Storage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juniper285"},"content":"import main.java.tasks.Deadlines;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juniper285"},"content":"import main.java.tasks.Tasklist;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juniper285"},"content":"import main.java.ui.Ui;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juniper285"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juniper285"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juniper285"},"content":" * Represents a command to add a Deadline task to the task list.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juniper285"},"content":" * This command is triggered when the user inputs \"deadline\" followed by a task description and a deadline date.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juniper285"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juniper285"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juniper285"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juniper285"},"content":"    private final String description;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juniper285"},"content":"    private final LocalDateTime deadlineDate;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juniper285"},"content":"     * Constructs a DeadlineCommand with the specified task description and deadline date.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juniper285"},"content":"     * @param description  The description of the deadline task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juniper285"},"content":"     * @param deadlineDate The due date and time of the task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juniper285"},"content":"    public DeadlineCommand(String description, LocalDateTime deadlineDate) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juniper285"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juniper285"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"juniper285"},"content":"     * Executes the command to add a Deadline task to the task list.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"juniper285"},"content":"     * The task is created, added to the list, saved to storage, and a confirmation message is displayed.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"juniper285"},"content":"     * @param tasks   The task list where the deadline task will be added.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"juniper285"},"content":"     * @param ui      The UI component responsible for displaying messages.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"juniper285"},"content":"     * @param storage The storage component for saving tasks.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"juniper285"},"content":"     * @throws GigiException If an error occurs while saving tasks.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"juniper285"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"juniper285"},"content":"    public void execute(Tasklist tasks, Ui ui, Storage storage) throws GigiException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"juniper285"},"content":"        Deadlines deadline \u003d new Deadlines(description, deadlineDate);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"juniper285"},"content":"        tasks.addTask(deadline);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"juniper285"},"content":"        tasks.saveTasks(storage);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"juniper285"},"content":"        ui.showAddMessage();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"juniper285"},"content":"        ui.showMessage(String.valueOf(deadline));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"juniper285"},"content":"        ui.showTaskNumber(tasks);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"juniper285"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"juniper285":52}},{"path":"src/main/java/gigi/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juniper285"},"content":"package main.java.commands;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juniper285"},"content":"import main.java.exceptions.GigiException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juniper285"},"content":"import main.java.storage.Storage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juniper285"},"content":"import main.java.tasks.Task;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juniper285"},"content":"import main.java.tasks.Tasklist;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juniper285"},"content":"import main.java.ui.Ui;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juniper285"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juniper285"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juniper285"},"content":"    private final int taskIndex;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juniper285"},"content":"    public DeleteCommand(int i) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juniper285"},"content":"        this.taskIndex \u003d i - 1;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juniper285"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juniper285"},"content":"    public void execute(Tasklist tasks, Ui ui, Storage storage) throws GigiException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juniper285"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.getSize()) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juniper285"},"content":"            throw new GigiException(\"MEOW! You don\u0027t have that many tasks.\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juniper285"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juniper285"},"content":"        Task removedTask \u003d tasks.getTask(taskIndex);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juniper285"},"content":"        tasks.deleteTask(taskIndex);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juniper285"},"content":"        tasks.saveTasks(storage);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juniper285"},"content":"        ui.showDelMessage();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juniper285"},"content":"        ui.showMessage(removedTask.toString());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juniper285"},"content":"        ui.showTaskNumber(tasks);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juniper285"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"juniper285":31}},{"path":"src/main/java/gigi/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juniper285"},"content":"package main.java.commands;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juniper285"},"content":"import main.java.exceptions.GigiException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juniper285"},"content":"import main.java.storage.Storage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juniper285"},"content":"import main.java.tasks.Events;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juniper285"},"content":"import main.java.tasks.Tasklist;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juniper285"},"content":"import main.java.ui.Ui;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juniper285"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juniper285"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juniper285"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juniper285"},"content":"    private final String description;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juniper285"},"content":"    private final LocalDateTime endTime;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juniper285"},"content":"    private final LocalDateTime startTime;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juniper285"},"content":"    public EventCommand(String description, LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juniper285"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juniper285"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juniper285"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juniper285"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juniper285"},"content":"    public void execute(Tasklist tasks, Ui ui, Storage storage) throws GigiException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juniper285"},"content":"        Events event \u003d new Events(description, startTime, endTime);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juniper285"},"content":"        tasks.addTask(event);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juniper285"},"content":"        tasks.saveTasks(storage);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juniper285"},"content":"        ui.showAddMessage();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juniper285"},"content":"        ui.showMessage(String.valueOf(event));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juniper285"},"content":"        ui.showTaskNumber(tasks);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"juniper285"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"juniper285":34}},{"path":"src/main/java/gigi/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juniper285"},"content":"package main.java.commands;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juniper285"},"content":"import main.java.exceptions.GigiException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juniper285"},"content":"import main.java.storage.Storage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juniper285"},"content":"import main.java.tasks.Tasklist;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juniper285"},"content":"import main.java.ui.Ui;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juniper285"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juniper285"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juniper285"},"content":"    private final String keyword;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juniper285"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juniper285"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juniper285"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juniper285"},"content":"    public void execute(Tasklist tasks, Ui ui, Storage storage) throws GigiException {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juniper285"},"content":"        Tasklist matchingTasks \u003d new Tasklist();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juniper285"},"content":"        matchingTasks \u003d tasks.getMatchingTasks(this.keyword);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juniper285"},"content":"        matchingTasks.getTaskList();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juniper285"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juniper285"},"content":"            ui.showMessage(\"MEOW!!! There are no matching tasks.\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juniper285"},"content":"        } else {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juniper285"},"content":"            ui.showMessage(\"These are the matching tasks:\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juniper285"},"content":"            for (String task : tasks.getTaskList()) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juniper285"},"content":"                ui.showMessage(task);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juniper285"},"content":"            }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juniper285"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juniper285"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"juniper285":32}},{"path":"src/main/java/gigi/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juniper285"},"content":"package main.java.commands;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juniper285"},"content":"import main.java.exceptions.GigiException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juniper285"},"content":"import main.java.storage.Storage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juniper285"},"content":"import main.java.tasks.Tasklist;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juniper285"},"content":"import main.java.ui.Ui;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juniper285"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juniper285"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juniper285"},"content":"    public ListCommand() {}","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juniper285"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juniper285"},"content":"    public void execute(Tasklist tasks, Ui ui, Storage storage) throws GigiException {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juniper285"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juniper285"},"content":"            ui.showMessage(\"MEOW!!! You have nothing to do.\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juniper285"},"content":"        } else {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juniper285"},"content":"            ui.showMessage(\"Don\u0027t forget what you have to do:\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juniper285"},"content":"            for (String task : tasks.getTaskList()) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juniper285"},"content":"                ui.showMessage(task);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juniper285"},"content":"            }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juniper285"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juniper285"},"content":"        ui.showTaskNumber(tasks);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juniper285"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"juniper285":25}},{"path":"src/main/java/gigi/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juniper285"},"content":"package main.java.commands;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juniper285"},"content":"import main.java.exceptions.GigiException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juniper285"},"content":"import main.java.storage.Storage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juniper285"},"content":"import main.java.tasks.Task;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juniper285"},"content":"import main.java.tasks.Tasklist;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juniper285"},"content":"import main.java.ui.Ui;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juniper285"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juniper285"},"content":" * Represents a command to mark a task as done in the task list.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juniper285"},"content":" * This command is triggered when the user inputs \"mark\" followed by a task index.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juniper285"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juniper285"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juniper285"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juniper285"},"content":"    private final int taskIndex;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juniper285"},"content":"     * Constructs a MarkCommand with the specified task index.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juniper285"},"content":"     * The index is adjusted to be zero-based for internal processing.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juniper285"},"content":"     * @param i The 1-based task index provided by the user.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juniper285"},"content":"    public MarkCommand(int i) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juniper285"},"content":"        this.taskIndex \u003d i - 1;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juniper285"},"content":"     * Executes the command to mark a task as done.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juniper285"},"content":"     * If the task index is invalid, an exception is thrown.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juniper285"},"content":"     * Otherwise, the task is updated, saved, and a confirmation message is shown.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juniper285"},"content":"     * @param tasks   The task list where the task is located.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"juniper285"},"content":"     * @param ui      The UI component responsible for displaying messages.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"juniper285"},"content":"     * @param storage The storage component for saving task updates.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"juniper285"},"content":"     * @throws GigiException If the task index is out of bounds.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"juniper285"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"juniper285"},"content":"    public void execute(Tasklist tasks, Ui ui, Storage storage) throws GigiException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"juniper285"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.getSize()) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"juniper285"},"content":"            throw new GigiException(\"MEOW! You don\u0027t have that many tasks.\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"juniper285"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"juniper285"},"content":"        Task markedTask \u003d tasks.getTask(taskIndex);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"juniper285"},"content":"        tasks.markTaskAsDone(taskIndex);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"juniper285"},"content":"        tasks.saveTasks(storage);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"juniper285"},"content":"        ui.showDoneMessage();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"juniper285"},"content":"        ui.showMessage(markedTask.toString());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"juniper285"},"content":"        ui.showTaskNumber(tasks);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"juniper285"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"juniper285":52}},{"path":"src/main/java/gigi/commands/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juniper285"},"content":"package main.java.commands;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juniper285"},"content":"import main.java.exceptions.GigiException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juniper285"},"content":"import main.java.storage.Storage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juniper285"},"content":"import main.java.tasks.Tasklist;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juniper285"},"content":"import main.java.tasks.ToDos;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juniper285"},"content":"import main.java.ui.Ui;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juniper285"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juniper285"},"content":" * Represents a command to add a ToDo task to the task list.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juniper285"},"content":" * This command is triggered when the user inputs \"todo\" followed by a task description.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juniper285"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juniper285"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juniper285"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juniper285"},"content":"    private final String description;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juniper285"},"content":"    public ToDoCommand(String description) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juniper285"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juniper285"},"content":"     * Executes the command to add a ToDo task to the task list.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juniper285"},"content":"     * If description is empty, an exception is thrown.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juniper285"},"content":"     * Otherwise, the task is added, saved, and a confirmation message is shown.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juniper285"},"content":"     * @param tasks   The task list where the ToDo task will be added.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juniper285"},"content":"     * @param ui      The UI component responsible for displaying messages.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juniper285"},"content":"     * @param storage The storage component for saving tasks.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juniper285"},"content":"     * @throws GigiException If the task description is empty.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juniper285"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"juniper285"},"content":"    public void execute(Tasklist tasks, Ui ui, Storage storage) throws GigiException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"juniper285"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"juniper285"},"content":"            throw new GigiException(\"MEOW! A ToDo task cannot be empty.\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"juniper285"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"juniper285"},"content":"        ToDos todo \u003d new ToDos(description);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"juniper285"},"content":"        tasks.addTask(todo);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"juniper285"},"content":"        tasks.saveTasks(storage);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"juniper285"},"content":"        ui.showAddMessage();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"juniper285"},"content":"        ui.showMessage(String.valueOf(todo));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"juniper285"},"content":"        ui.showTaskNumber(tasks);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"juniper285"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"juniper285":46}},{"path":"src/main/java/gigi/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juniper285"},"content":"package main.java.commands;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juniper285"},"content":"import main.java.exceptions.GigiException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juniper285"},"content":"import main.java.storage.Storage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juniper285"},"content":"import main.java.tasks.Task;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juniper285"},"content":"import main.java.tasks.Tasklist;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juniper285"},"content":"import main.java.ui.Ui;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juniper285"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juniper285"},"content":" * Represents a command to unmark a task as done in the task list.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juniper285"},"content":" * This command is triggered when the user inputs \"unmark\" followed by a task index.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juniper285"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juniper285"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juniper285"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juniper285"},"content":"    private final int taskIndex;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juniper285"},"content":"     * Constructs an UnmarkCommand with the specified task index.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juniper285"},"content":"     * The index is adjusted to be zero-based for internal processing.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juniper285"},"content":"     * @param i The 1-based task index provided by the user.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juniper285"},"content":"    public UnmarkCommand(int i) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juniper285"},"content":"        this.taskIndex \u003d i - 1;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juniper285"},"content":"     * Executes the command to unmark a task as done.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juniper285"},"content":"     * If the task index is invalid, an exception is thrown.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juniper285"},"content":"     * Otherwise, the task is updated, saved, and a confirmation message is shown.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"juniper285"},"content":"     * @param tasks   The task list where the task is located.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"juniper285"},"content":"     * @param ui      The UI component responsible for displaying messages.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"juniper285"},"content":"     * @param storage The storage component for saving task updates.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"juniper285"},"content":"     * @throws GigiException If the task index is out of bounds.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"juniper285"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"juniper285"},"content":"    public void execute(Tasklist tasks, Ui ui, Storage storage) throws GigiException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"juniper285"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.getSize()) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"juniper285"},"content":"            throw new GigiException(\"MEOW! You don\u0027t have that many tasks.\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"juniper285"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"juniper285"},"content":"        Task unmarkedTask \u003d tasks.getTask(taskIndex);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"juniper285"},"content":"        tasks.markTaskAsUndone(taskIndex);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"juniper285"},"content":"        tasks.saveTasks(storage);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"juniper285"},"content":"        ui.showUndoneMessage();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"juniper285"},"content":"        ui.showMessage(unmarkedTask.toString());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"juniper285"},"content":"        ui.showTaskNumber(tasks);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"juniper285"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"juniper285":53}},{"path":"src/main/java/gigi/exceptions/GigiException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juniper285"},"content":"package main.java.exceptions;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juniper285"},"content":"public class GigiException extends Exception{","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juniper285"},"content":"    public GigiException(String message) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juniper285"},"content":"        super(message);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juniper285"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"juniper285":8}},{"path":"src/main/java/gigi/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juniper285"},"content":"package main.java.storage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juniper285"},"content":"import main.java.exceptions.GigiException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juniper285"},"content":"import main.java.Parser;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juniper285"},"content":"import main.java.tasks.Deadlines;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juniper285"},"content":"import main.java.tasks.Events;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juniper285"},"content":"import main.java.tasks.Task;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juniper285"},"content":"import main.java.tasks.ToDos;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juniper285"},"content":"import java.io.*;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juniper285"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juniper285"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juniper285"},"content":" * Handles file storage operations for saving and loading tasks.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juniper285"},"content":" * This class is responsible for reading and writing tasks to a file.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juniper285"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juniper285"},"content":"public class Storage {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juniper285"},"content":"    private final String filePath;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juniper285"},"content":"     * Constructs a Storage instance with a specified file path.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juniper285"},"content":"     * @param filePath The path of the file where tasks are stored.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juniper285"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juniper285"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juniper285"},"content":"     * Converts a formatted task string from storage into a Task object.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juniper285"},"content":"     * @param line The stored task string.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"juniper285"},"content":"     * @return The corresponding Task object.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"juniper285"},"content":"     * @throws GigiException If the task type is unknown.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"juniper285"},"content":"    public static Task convertToTask(String line) throws GigiException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"juniper285"},"content":"        String[] info \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"juniper285"},"content":"        String taskType \u003d info[0];","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"juniper285"},"content":"        boolean isDone \u003d Boolean.parseBoolean(info[1]);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"juniper285"},"content":"        return switch (taskType) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"juniper285"},"content":"            case \"T\" -\u003e new ToDos(info[2], isDone);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"juniper285"},"content":"            case \"D\" -\u003e new Deadlines(info[2],","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"juniper285"},"content":"                    Parser.parseDateTime(info[3]),","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"juniper285"},"content":"                    isDone);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"juniper285"},"content":"            case \"E\" -\u003e new Events(info[2],","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"juniper285"},"content":"                    Parser.parseDateTime(info[3]),","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"juniper285"},"content":"                    Parser.parseDateTime(info[4]),","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"juniper285"},"content":"                    isDone);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"juniper285"},"content":"            default -\u003e throw new GigiException(\"Unknown task type: \" + taskType);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"juniper285"},"content":"        };","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"juniper285"},"content":"     * Loads tasks from the specified file and returns them as a list.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"juniper285"},"content":"     * If the file does not exist, an empty list is returned.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"juniper285"},"content":"     * @return A list of tasks retrieved from the file.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"juniper285"},"content":"     * @throws GigiException If an error occurs while reading the file.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"juniper285"},"content":"    public ArrayList\u003cTask\u003e loadTasksFromFile() throws GigiException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"juniper285"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"juniper285"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"juniper285"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"juniper285"},"content":"            return tasks;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"juniper285"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"juniper285"},"content":"        try (BufferedReader br \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"juniper285"},"content":"            String line;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"juniper285"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"juniper285"},"content":"                tasks.add(convertToTask(line));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"juniper285"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"juniper285"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"juniper285"},"content":"            throw new GigiException(\"Error loading file.\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"juniper285"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"juniper285"},"content":"        return tasks;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"juniper285"},"content":"     * Saves the list of tasks to the specified file.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"juniper285"},"content":"     * Each task is converted to a string format before being written to the file.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"juniper285"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"juniper285"},"content":"     * @throws GigiException If an error occurs while writing to the file.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"juniper285"},"content":"    public void saveTasksToFile(ArrayList\u003cTask\u003e tasks) throws GigiException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"juniper285"},"content":"        try (PrintWriter pw \u003d new PrintWriter(new FileWriter(filePath))) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"juniper285"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"juniper285"},"content":"                pw.println(task.convertToText());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"juniper285"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"juniper285"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"juniper285"},"content":"            throw new GigiException(\"MEOW! Unable to save tasks to file: \\n\" + e.getMessage());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"juniper285"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"juniper285"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"juniper285":93}},{"path":"src/main/java/gigi/tasks/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juniper285"},"content":"package main.java.tasks;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juniper285"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juniper285"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juniper285"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juniper285"},"content":" * Represents a deadline task in Gigi.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juniper285"},"content":" * This class extends {@code Task} and includes an additional attribute to store","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juniper285"},"content":" * the deadline of the task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juniper285"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juniper285"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juniper285"},"content":"    private String taskName;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juniper285"},"content":"    private boolean isComplete;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juniper285"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juniper285"},"content":"     * Constructs a deadline task with a given name and deadline.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juniper285"},"content":"     * @param taskName The name of the deadline task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juniper285"},"content":"     * @param deadline The due date and time of the task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juniper285"},"content":"    public Deadlines(String taskName, LocalDateTime deadline) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juniper285"},"content":"        super(taskName);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juniper285"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juniper285"},"content":"        this.isComplete \u003d false;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juniper285"},"content":"     * Constructs a deadline task with a given name, deadline, and completion status.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juniper285"},"content":"     * @param taskName   The name of the deadline task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juniper285"},"content":"     * @param deadline   The due date and time of the task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"juniper285"},"content":"     * @param isComplete The completion status of the task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"juniper285"},"content":"    public Deadlines(String taskName, LocalDateTime deadline, boolean isComplete) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"juniper285"},"content":"        super(taskName);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"juniper285"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"juniper285"},"content":"        this.isComplete \u003d isComplete;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"juniper285"},"content":"     * Returns the status icon for a deadline task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"juniper285"},"content":"     * @return A formatted status string with \"[D]\" indicating a deadline.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"juniper285"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"juniper285"},"content":"        return \"[D]\" + super.getStatusIcon(); // mark done task with X","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"juniper285"},"content":"     * Marks this deadline task as done.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"juniper285"},"content":"     * @param index The index of the task in the list.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"juniper285"},"content":"    void markDone(int index) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"juniper285"},"content":"        super.markDone(index);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"juniper285"},"content":"     * Marks this deadline task as not done.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"juniper285"},"content":"     * @param index The index of the task in the list.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"juniper285"},"content":"    void markUndone(int index) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"juniper285"},"content":"        super.markUndone(index);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"juniper285"},"content":"     * Converts the deadline task into a formatted string for storage.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"juniper285"},"content":"     * @return A string representation of the deadline task for saving.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"juniper285"},"content":"    public String convertToText() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"juniper285"},"content":"        return \"D | \" + super.convertToText() + \" | \"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"juniper285"},"content":"                + this.deadline.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"juniper285"},"content":"     * Returns a string representation of the deadline task, including its due date.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"juniper285"},"content":"     * @return A formatted string describing the deadline task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"juniper285"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"juniper285"},"content":"        return super.toString() + \" (by: \" + deadline.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \")\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"juniper285"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"juniper285":87}},{"path":"src/main/java/gigi/tasks/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juniper285"},"content":"package main.java.tasks;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juniper285"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juniper285"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juniper285"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juniper285"},"content":" * Represents event task in Gigi.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juniper285"},"content":" * This class extends {@code Task} and includes additional attributes to store start and end time","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juniper285"},"content":" * of an event.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juniper285"},"content":" *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juniper285"},"content":" * An event task requires a {@code taskName}, {@code startTime}, and {@code endTime}.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juniper285"},"content":" * */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juniper285"},"content":"public class Events extends Task{","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juniper285"},"content":"    private String taskName;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juniper285"},"content":"    private boolean isComplete;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juniper285"},"content":"    private LocalDateTime startTime;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juniper285"},"content":"    private LocalDateTime endTime;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juniper285"},"content":"    public static String iconEvent \u003d \"[E]\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juniper285"},"content":"     * Constructs an event task with a given name, start time, and end time.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juniper285"},"content":"     * @param taskName  The name of event task.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juniper285"},"content":"     * @param startTime The start time of the event.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juniper285"},"content":"     * @param endTime   The end time of the event.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juniper285"},"content":"    public Events(String taskName, LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juniper285"},"content":"        super(taskName);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juniper285"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juniper285"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juniper285"},"content":"        this.isComplete \u003d false;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"juniper285"},"content":"     * Constructs an event task with a given name, start time, end time, and completion status.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"juniper285"},"content":"     * @param taskName   The name of the event task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"juniper285"},"content":"     * @param startTime  The start time of the event.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"juniper285"},"content":"     * @param endTime    The end time of the event.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"juniper285"},"content":"     * @param isComplete The completion status of the event.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"juniper285"},"content":"    public Events(String taskName, LocalDateTime startTime, LocalDateTime endTime, boolean isComplete) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"juniper285"},"content":"        super(taskName);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"juniper285"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"juniper285"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"juniper285"},"content":"        this.isComplete \u003d isComplete;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"juniper285"},"content":"    public LocalDateTime getStartTime() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"juniper285"},"content":"        return startTime;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"juniper285"},"content":"    public LocalDateTime getEndTime() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"juniper285"},"content":"        return endTime;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"juniper285"},"content":"     * Constructs an event task with only a task name.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"juniper285"},"content":"     * Note: This constructor does not initialize start or end times.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"juniper285"},"content":"     * @param taskName The name of the event task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"juniper285"},"content":"    public Events(String taskName) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"juniper285"},"content":"        super(taskName);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"juniper285"},"content":"     * Returns the status icon for an event task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"juniper285"},"content":"     * @return A formatted status string with \"[E]\" indicating an event.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"juniper285"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"juniper285"},"content":"        return \"[E]\" + super.getStatusIcon();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"juniper285"},"content":"     * Marks this event task as done.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"juniper285"},"content":"     * @param index The index of the task in the list.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"juniper285"},"content":"    void markDone(int index) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"juniper285"},"content":"        super.markDone(index);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"juniper285"},"content":"     * Marks this event task as not done.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"juniper285"},"content":"     * @param index The index of the task in the list.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"juniper285"},"content":"    void markUndone(int index) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"juniper285"},"content":"        super.markUndone(index);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"juniper285"},"content":"     * Converts the event task into a formatted string for storage.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"juniper285"},"content":"     * @return A string representation of the event task for saving.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"juniper285"},"content":"    public String convertToText() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"juniper285"},"content":"        return \"E | \" + super.convertToText() + \" | \"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"juniper285"},"content":"                + this.startTime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \" | \"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"juniper285"},"content":"                + this.endTime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"juniper285"},"content":"     * Returns a string representation of the event task, including its time range.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"juniper285"},"content":"     * @return A formatted string describing the event task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"juniper285"},"content":"    @Override","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"juniper285"},"content":"    public String toString() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"juniper285"},"content":"        return super.toString() + \" (from: \" + this.startTime.toString() + \" to: \" + this.endTime + \")\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"juniper285"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"juniper285":118}},{"path":"src/main/java/gigi/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juniper285"},"content":"package main.java.tasks;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juniper285"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juniper285"},"content":" * Represents a task in Gigi.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juniper285"},"content":" * This class serves as parent base class for different types of tasks,","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juniper285"},"content":" * such as ToDo, Deadline, and Event tasks","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juniper285"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juniper285"},"content":"public class Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juniper285"},"content":"    private String taskName;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juniper285"},"content":"    private boolean isComplete;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juniper285"},"content":"     * Constructs a new task with the specified name.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juniper285"},"content":"     * The task is initially marked as incomplete.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juniper285"},"content":"     * @param taskName Name of the task.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juniper285"},"content":"    public Task(String taskName) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juniper285"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juniper285"},"content":"        this.isComplete \u003d false;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juniper285"},"content":"     * Returns the status icon indicating whether the task is complete or not.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juniper285"},"content":"     * @return A string representing task\u0027s completion status.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juniper285"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juniper285"},"content":"        return (isComplete ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juniper285"},"content":"    public String getTaskname() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"juniper285"},"content":"        return taskName;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"juniper285"},"content":"     * Marks this task as done.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"juniper285"},"content":"     * The task\u0027s completion status is updated to true.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"juniper285"},"content":"     * @param index The index of the task in the list (not used in this implementation).","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"juniper285"},"content":"    void markDone(int index) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"juniper285"},"content":"        this.isComplete \u003d true;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"juniper285"},"content":"     * Marks this task as not done.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"juniper285"},"content":"     * The task\u0027s completion status is updated to false.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"juniper285"},"content":"     * @param index The index of the task in the list (not used in this implementation).","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"juniper285"},"content":"    void markUndone(int index) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"juniper285"},"content":"        this.isComplete \u003d false;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"juniper285"},"content":"     * Converts the task into a formatted string for storage.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"juniper285"},"content":"     * @return A string representation of the task for saving.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"juniper285"},"content":"    public String convertToText() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"juniper285"},"content":"        return isComplete + \" | \" + this.taskName;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"juniper285"},"content":"     * Returns a string representation of the task,","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"juniper285"},"content":"     * including its status icon and name.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"juniper285"},"content":"     * @return A formatted string describing the task.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"juniper285"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"juniper285"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"juniper285"},"content":"        return this.getStatusIcon() + \" \" + this.taskName;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"juniper285"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"juniper285":77}},{"path":"src/main/java/gigi/tasks/Tasklist.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juniper285"},"content":"package main.java.tasks;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juniper285"},"content":"import main.java.exceptions.GigiException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juniper285"},"content":"import main.java.storage.Storage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juniper285"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juniper285"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juniper285"},"content":" * Represents a task list in the Gigi chatbot.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juniper285"},"content":" * This class manages a list of tasks and provides methods to add, remove,","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juniper285"},"content":" * retrieve, and modify tasks.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juniper285"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juniper285"},"content":"public class Tasklist {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juniper285"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juniper285"},"content":"     * Constructs an empty task list.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juniper285"},"content":"    public Tasklist() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juniper285"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juniper285"},"content":"     * Constructs a task list initialized with an existing list of tasks.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juniper285"},"content":"     * @param allTasks The list of tasks to initialize the task list with.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juniper285"},"content":"    public Tasklist(ArrayList\u003cTask\u003e allTasks) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juniper285"},"content":"        this.tasks \u003d allTasks;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"juniper285"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"juniper285"},"content":"     * @param task The task to be added.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"juniper285"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"juniper285"},"content":"        this.tasks.add(task);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"juniper285"},"content":"     * Deletes a task from the task list based on its index.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"juniper285"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"juniper285"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"juniper285"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"juniper285"},"content":"     * Retrieves a formatted list of all tasks with their respective indices (from 1).","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"juniper285"},"content":"     * @return A list of formatted task strings, where each task is numbered.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"juniper285"},"content":"    public ArrayList\u003cString\u003e getTaskList() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"juniper285"},"content":"        ArrayList\u003cString\u003e allTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"juniper285"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"juniper285"},"content":"            if (tasks.get(i) !\u003d null) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"juniper285"},"content":"                allTasks.add((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"juniper285"},"content":"            }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"juniper285"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"juniper285"},"content":"        return allTasks;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"juniper285"},"content":"     * Saves the current list of tasks to storage.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"juniper285"},"content":"     * @param storage The storage component responsible for saving tasks.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"juniper285"},"content":"     * @throws GigiException If an error occurs while saving tasks.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"juniper285"},"content":"    public void saveTasks(Storage storage) throws GigiException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"juniper285"},"content":"        storage.saveTasksToFile(tasks);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"juniper285"},"content":"     * Loads tasks from storage.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"juniper285"},"content":"     * @param storage The storage component responsible for loading tasks.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"juniper285"},"content":"     * @throws GigiException If an error occurs while loading tasks.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"juniper285"},"content":"    public void getTasks(Storage storage) throws GigiException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"juniper285"},"content":"        storage.loadTasksFromFile();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"juniper285"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"juniper285"},"content":"     * @return The number of tasks.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"juniper285"},"content":"    public int getSize() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"juniper285"},"content":"        return tasks.size();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"juniper285"},"content":"     * Retrieves a task from the task list by index.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"juniper285"},"content":"     * @param taskIndex The index of the task to retrieve.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"juniper285"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"juniper285"},"content":"    public Task getTask(int taskIndex) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"juniper285"},"content":"        return tasks.get(taskIndex);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"juniper285"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"juniper285"},"content":"     * @return {@code true} if the task list is empty, otherwise {@code false}.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"juniper285"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"juniper285"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"juniper285"},"content":"     * Marks a task as done based on its index.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"juniper285"},"content":"     * @param taskIndex The index of the task to be marked as done.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"juniper285"},"content":"    public void markTaskAsDone(int taskIndex) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"juniper285"},"content":"        tasks.get(taskIndex).markDone(taskIndex);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"juniper285"},"content":"     * Marks a task as not done based on its index.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"juniper285"},"content":"     * @param taskIndex The index of the task to be marked as not done.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"juniper285"},"content":"    public void markTaskAsUndone(int taskIndex) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"juniper285"},"content":"        tasks.get(taskIndex).markUndone(taskIndex);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"juniper285"},"content":"    public Tasklist getMatchingTasks(String keyword) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"juniper285"},"content":"        Tasklist result \u003d new Tasklist();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"juniper285"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"juniper285"},"content":"            String taskName \u003d task.getTaskName();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"juniper285"},"content":"            if (taskName.contains(keyword)) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"juniper285"},"content":"                result.addTask(task);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"juniper285"},"content":"            }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"juniper285"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"juniper285"},"content":"        return result;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"juniper285"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"juniper285":144}},{"path":"src/main/java/gigi/tasks/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juniper285"},"content":"package main.java.tasks;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juniper285"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juniper285"},"content":" * Represents a ToDo task in Gigi.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juniper285"},"content":" * This class extends {@code Task} and represents a simple task","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juniper285"},"content":" * without any associated date or time.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juniper285"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juniper285"},"content":"public class ToDos extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juniper285"},"content":"    private String taskName;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juniper285"},"content":"    private boolean isComplete;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juniper285"},"content":"     * Constructs a ToDo task with a given name.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juniper285"},"content":"     * @param taskName The name of the ToDo task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juniper285"},"content":"    public ToDos(String taskName) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juniper285"},"content":"        super(taskName);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juniper285"},"content":"        this.isComplete \u003d false;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juniper285"},"content":"     * Constructs a ToDo task with a given name and completion status.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juniper285"},"content":"     * @param taskName   The name of the ToDo task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juniper285"},"content":"     * @param isComplete The completion status of the task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juniper285"},"content":"    public ToDos(String taskName, boolean isComplete) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juniper285"},"content":"        super(taskName);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juniper285"},"content":"        this.isComplete \u003d isComplete;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"juniper285"},"content":"     * Returns the status icon for a ToDo task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"juniper285"},"content":"     * @return A formatted status string with \"[T]\" indicating a ToDo.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"juniper285"},"content":"    @Override","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"juniper285"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"juniper285"},"content":"        return \"[T]\" + super.getStatusIcon(); // mark done task with X","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"juniper285"},"content":"     * Marks this ToDo task as done.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"juniper285"},"content":"     * @param index The index of the task in the list.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"juniper285"},"content":"    @Override","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"juniper285"},"content":"    void markDone(int index) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"juniper285"},"content":"        super.markDone(index);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"juniper285"},"content":"     * Marks this ToDo task as not done.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"juniper285"},"content":"     * @param index The index of the task in the list.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"juniper285"},"content":"    void markUndone(int index) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"juniper285"},"content":"        super.markUndone(index);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"juniper285"},"content":"     * Converts the ToDo task into a formatted string for storage.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"juniper285"},"content":"     * @return A string representation of the ToDo task for saving.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"juniper285"},"content":"    public String convertToText() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"juniper285"},"content":"        return \"T\" + \" | \" + super.convertToText();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"juniper285"},"content":"     * Returns a string representation of the ToDo task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"juniper285"},"content":"     * @return A formatted string describing the ToDo task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"juniper285"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"juniper285"},"content":"        return super.toString();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"juniper285"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"juniper285":80}},{"path":"src/main/java/gigi/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juniper285"},"content":"package gigi.ui;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juniper285"},"content":"import gigi.tasks.Tasklist;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juniper285"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juniper285"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juniper285"},"content":" *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juniper285"},"content":" * Handles user interactions with chatbot, Gigi.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juniper285"},"content":" * This class provides methods to display messages and show errors or notifications.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juniper285"},"content":" *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juniper285"},"content":" * */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juniper285"},"content":"public class Ui {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"juniper285"},"content":"    private final Scanner sc;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"juniper285"},"content":"     * Constructs Ui instance for handling user interactions.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"juniper285"},"content":"    public Ui() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"juniper285"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"juniper285"},"content":"     * Displays the welcome message when the chatbot starts.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"juniper285"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"juniper285"},"content":"        String logo \u003d \"\\n\" +","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"juniper285"},"content":"                \"⠀ ／|_     \\n\" +","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"juniper285"},"content":"                \"（ﾟ､ ｡ 7\\n\" +","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"juniper285"},"content":"                \"⠀ |、ﾞ~ヽ\\n\" +","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"juniper285"},"content":"                \"  じしf_, )ノ \\n\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"juniper285"},"content":"        System.out.println(","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"juniper285"},"content":"                \"MEOW! \\n\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"juniper285"},"content":"                        + \"I\u0027m Gigi, the mighty demon keeping this place running. \\n\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"juniper285"},"content":"                        + \"What do you want? \\n\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"juniper285"},"content":"     * Displays separator line.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"juniper285"},"content":"    public void showLine() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"juniper285"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"juniper285"},"content":"     * Displays error message.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"juniper285"},"content":"     * @param message The error message to be displayed","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"juniper285"},"content":"     * */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"juniper285"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"juniper285"},"content":"        System.out.println(\"MEOW!! \" + message);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"juniper285"},"content":"     * Reads and returns the next user command.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"juniper285"},"content":"     * @return The user input as a string.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"juniper285"},"content":"    public String readCommand() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"juniper285"},"content":"        return sc.nextLine();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"juniper285"},"content":"     * Displays a generic message.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"juniper285"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"juniper285"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"juniper285"},"content":"        System.out.println(message);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"juniper285"},"content":"     * Displays a message indicating a task has been added.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"juniper285"},"content":"    public void showAddMessage() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"juniper285"},"content":"        System.out.println(\"Meow! I\u0027ve pawed this task into the list:\\n\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"juniper285"},"content":"     * Displays a message indicating a task has been deleted.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"juniper285"},"content":"    public void showDelMessage() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"juniper285"},"content":"        System.out.println(\"Meow! This task never existed:\\n\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"juniper285"},"content":"     * Displays the exit message when the chatbot shuts down.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"juniper285"},"content":"    public void showByeMessage() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"juniper285"},"content":"        System.out.println(\"See ya! \\n\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"juniper285"},"content":"                + \"Don\u0027t forget - this mighty fiery feline doesn\u0027t wait forever. \\n\"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"juniper285"},"content":"                + \"Meow!\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"juniper285"},"content":"     * Displays the current number of tasks in the task list.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"juniper285"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"juniper285"},"content":"     * @param tasks The task list whose size is displayed.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"juniper285"},"content":"    public void showTaskNumber(Tasklist tasks) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"juniper285"},"content":"        System.out.printf(\"Now you have %d task(s) in the list.%n\", tasks.getSize());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"juniper285"},"content":"     * Displays a message indicating a task has been marked as done.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"juniper285"},"content":"    public void showDoneMessage() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"juniper285"},"content":"        System.out.println(\"Meow! I\u0027ve marked this task as done:\\n\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"juniper285"},"content":"     * Displays a message indicating a task has been marked as not done.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"juniper285"},"content":"    public void showUndoneMessage() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"juniper285"},"content":"        System.out.println(\"Meow! I\u0027ve marked this task as not done:\\n\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"juniper285"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"juniper285"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"juniper285"},"content":"     * Displays an error message when the task list fails to load.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"juniper285"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"juniper285"},"content":"    public void showLoadingError() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"juniper285"},"content":"        System.out.println(\"MEOW! Failed to load previous tasks.\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"juniper285"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"juniper285"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"juniper285":126}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"juniper285"},"content":"todo read book","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"juniper285"},"content":"todo","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"juniper285"},"content":"deadline submit assignment /by Friday","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"juniper285"},"content":"deadline submit assignment","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"juniper285"},"content":"event team meeting /from Monday 2pm /to 3pm","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"juniper285"},"content":"event team meeting","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"juniper285"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"juniper285"},"content":"mark 1","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"juniper285"},"content":"unmark 1","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"juniper285"},"content":"delete 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"juniper285"},"content":"mark 5","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"juniper285"},"content":"blah","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"juniper285"},"content":"bye","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"juniper285":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"juniper285"},"content":"java -classpath ..\\bin Gigi \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"juniper285":1,"-":20}}]
