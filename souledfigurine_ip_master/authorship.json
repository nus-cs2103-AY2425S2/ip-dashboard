[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"souledfigurine"},"content":"# baymax.Baymax project template","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"souledfigurine"},"content":"1. After that, locate the `src/main/java/baymax.Baymax.java` file, right-click it, and choose `Run baymax.Baymax.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false}],"authorContributionMap":{"souledfigurine":2,"-":24}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"souledfigurine"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"souledfigurine"},"content":"}","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"souledfigurine"},"content":"checkstyle {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"souledfigurine"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"souledfigurine"},"content":"    mainClass.set(\"baymax.Baymax\")","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"souledfigurine"},"content":"    archiveBaseName \u003d \"Baymax\"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"souledfigurine":7,"-":39}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"souledfigurine"},"content":"T | false | cs2103","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"souledfigurine"},"content":"D | true | oop | 2025-03-14","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"souledfigurine"},"content":"E | false | film festival | 2025-03-14 | 2025-03-24","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"souledfigurine"},"content":"E | false | midterms | 2024-12-05 | 2025-01-01","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"souledfigurine"},"content":"D | false | homework 1 | 2025-01-25","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"souledfigurine"},"content":"D | false | [D] homewokr 2 | 2025-01-25 1800","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"souledfigurine"},"content":"D | false | homework 3 | 2024-10-24","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"souledfigurine"},"content":"T | false | new task","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"souledfigurine":8}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"souledfigurine"},"content":"# baymax.Baymax User Guide","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"souledfigurine":1,"-":29}},{"path":"src/main/java/baymax/Baymax.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"souledfigurine"},"content":"package baymax;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"souledfigurine"},"content":"import baymax.command.Command;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"souledfigurine"},"content":"/**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"souledfigurine"},"content":" * Represents the main chatbot application, Baymax.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"souledfigurine"},"content":" * Baymax is a task manager that processes user commands","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"souledfigurine"},"content":" * and executes corresponding actions such as adding, listing,","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"souledfigurine"},"content":" * marking, unmarking, and deleting tasks.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"souledfigurine"},"content":" */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"souledfigurine"},"content":"public class Baymax {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"souledfigurine"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"souledfigurine"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"souledfigurine"},"content":"    private Ui ui;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"souledfigurine"},"content":"     * Constructs a Baymax chatbot with a user interface, storage handler,","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"souledfigurine"},"content":"     * and task list. Loads existing tasks from storage if available.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"souledfigurine"},"content":"     * If an error occurs during loading, it initializes with an empty task list.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"souledfigurine"},"content":"    public Baymax() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"souledfigurine"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"souledfigurine"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"souledfigurine"},"content":"        try {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"souledfigurine"},"content":"            tasks \u003d storage.loadTasks();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"souledfigurine"},"content":"            if (tasks \u003d\u003d null) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"souledfigurine"},"content":"                tasks \u003d new TaskList();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"souledfigurine"},"content":"            }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"souledfigurine"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"souledfigurine"},"content":"            ui.printError(\"Error loading tasks. Starting with an empty list.\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"souledfigurine"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"souledfigurine"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"souledfigurine"},"content":"     * Runs the chatbot by continuously reading and executing user commands","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"souledfigurine"},"content":"     * until the user issues an exit command.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"souledfigurine"},"content":"    public void run() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"souledfigurine"},"content":"        ui.printGreeting();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"souledfigurine"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"souledfigurine"},"content":"        while (!isExit) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"souledfigurine"},"content":"            try {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"souledfigurine"},"content":"                String userInput \u003d ui.readCommand();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"souledfigurine"},"content":"                Command command \u003d Parser.parse(userInput);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"souledfigurine"},"content":"                if (command \u003d\u003d null) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"souledfigurine"},"content":"                    ui.printError(\"Invalid command. Please try again.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"souledfigurine"},"content":"                    continue;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"souledfigurine"},"content":"                }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"souledfigurine"},"content":"                command.execute(tasks, ui, storage);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"souledfigurine"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"souledfigurine"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"souledfigurine"},"content":"                ui.printError(\"Invalid command. Please try again.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"souledfigurine"},"content":"            }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"souledfigurine"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"souledfigurine"},"content":"        ui.closeScanner();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"souledfigurine"},"content":"     * The main entry point of the program.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"souledfigurine"},"content":"     * Initializes and runs the Baymax chatbot.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"souledfigurine"},"content":"     * @param args Command-line arguments (not used).","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"souledfigurine"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"souledfigurine"},"content":"        new Baymax().run();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"souledfigurine"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"souledfigurine":69}},{"path":"src/main/java/baymax/BaymaxException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"souledfigurine"},"content":"package baymax;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"souledfigurine"},"content":"public class BaymaxException extends Exception {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"souledfigurine"},"content":"    public BaymaxException(String message) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"souledfigurine"},"content":"        super(message);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"souledfigurine"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"souledfigurine":7}},{"path":"src/main/java/baymax/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"souledfigurine"},"content":"package baymax;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"souledfigurine"},"content":"import baymax.command.*;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"souledfigurine"},"content":"/**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"souledfigurine"},"content":" * Parses user input and returns the corresponding {@code Command} object.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"souledfigurine"},"content":" * The {@code Parser} class is responsible for analyzing user input and","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"souledfigurine"},"content":" * determining the appropriate action to be executed.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"souledfigurine"},"content":" */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"souledfigurine"},"content":"public class Parser {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"souledfigurine"},"content":"     * Parses the user input and returns a {@code Command} object corresponding to the input command.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"souledfigurine"},"content":"     * @param input The full command entered by the user.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"souledfigurine"},"content":"     * @return A {@code Command} object that corresponds to the user input.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"souledfigurine"},"content":"    public static Command parse(String input) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"souledfigurine"},"content":"        String commandWord \u003d input.split(\" \")[0];","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"souledfigurine"},"content":"        String[] parts;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"souledfigurine"},"content":"        int taskNumber;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"souledfigurine"},"content":"        switch (commandWord) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"souledfigurine"},"content":"        case \"list\":","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"souledfigurine"},"content":"            return new ListCommand();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"souledfigurine"},"content":"        case \"mark\":","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"souledfigurine"},"content":"            taskNumber \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"souledfigurine"},"content":"            return new MarkCommand(taskNumber);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"souledfigurine"},"content":"        case \"unmark\":","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"souledfigurine"},"content":"            taskNumber \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"souledfigurine"},"content":"            return new UnmarkCommand(taskNumber);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"souledfigurine"},"content":"        case \"todo\":","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"souledfigurine"},"content":"            return new AddTodoCommand(input.substring(5));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"souledfigurine"},"content":"        case \"deadline\":","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"souledfigurine"},"content":"            parts \u003d input.substring(9).split(\" /by \");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"souledfigurine"},"content":"            return new AddDeadlineCommand(parts[0], parts[1]);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"souledfigurine"},"content":"        case \"event\":","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"souledfigurine"},"content":"            parts \u003d input.substring(6).split(\" /from \");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"souledfigurine"},"content":"            String[] timeParts \u003d parts[1].split(\" /to \");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"souledfigurine"},"content":"            return new AddEventCommand(parts[0], timeParts[0], timeParts[1]);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"souledfigurine"},"content":"        case \"delete\":","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"souledfigurine"},"content":"            taskNumber \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"souledfigurine"},"content":"            return new DeleteCommand(taskNumber);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"souledfigurine"},"content":"        case \"bye\":","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"souledfigurine"},"content":"            return new ExitCommand();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"souledfigurine"},"content":"        case \"find\":","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"souledfigurine"},"content":"            return new FindCommand(input.substring(5));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"souledfigurine"},"content":"        default:","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"souledfigurine"},"content":"            return new ErrorCommand(\"Wrong input\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"souledfigurine"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"souledfigurine"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"souledfigurine":52}},{"path":"src/main/java/baymax/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"souledfigurine"},"content":"package baymax;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"souledfigurine"},"content":"import java.io.*;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"souledfigurine"},"content":"import baymax.task.*;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"souledfigurine"},"content":"/**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"souledfigurine"},"content":" * Handles the loading and saving of tasks to a storage file.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"souledfigurine"},"content":" * This class is responsible for reading and writing tasks to a file","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"souledfigurine"},"content":" * to maintain persistence between program runs.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"souledfigurine"},"content":" */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"souledfigurine"},"content":"public class Storage {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"souledfigurine"},"content":"    private static final String FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"souledfigurine"},"content":"    private File file;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"souledfigurine"},"content":"    private File directory;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"souledfigurine"},"content":"     * Constructs a {@code Storage} object and initializes the storage file.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"souledfigurine"},"content":"     * If the required directory does not exist, it creates the directory.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"souledfigurine"},"content":"     * If the storage file does not exist, it creates a new file.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"souledfigurine"},"content":"    public Storage() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"souledfigurine"},"content":"        file \u003d new File(FILE_PATH);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"souledfigurine"},"content":"        directory \u003d file.getParentFile();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"souledfigurine"},"content":"        if (directory !\u003d null \u0026\u0026 !directory.exists()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"souledfigurine"},"content":"            directory.mkdirs();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"souledfigurine"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"souledfigurine"},"content":"        try {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"souledfigurine"},"content":"            if (!file.exists()) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"souledfigurine"},"content":"                file.createNewFile();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"souledfigurine"},"content":"            }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"souledfigurine"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"souledfigurine"},"content":"            System.out.println(\"Error creating storage file: \" + e.getMessage());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"souledfigurine"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"souledfigurine"},"content":"     * Saves the current list of tasks to the storage file.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"souledfigurine"},"content":"     * The file is overwritten each time this method is called.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"souledfigurine"},"content":"     * @param tasks The {@code TaskList} containing tasks to be saved.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"souledfigurine"},"content":"    public void saveTasks(TaskList tasks) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"souledfigurine"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file))) { // Overwrites file","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"souledfigurine"},"content":"            for (Task task : tasks.getTasks()) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"souledfigurine"},"content":"                writer.write(task.toFileString()); // Writes each task to file","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"souledfigurine"},"content":"                writer.newLine();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"souledfigurine"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"souledfigurine"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"souledfigurine"},"content":"            System.out.println(\"Error saving tasks.\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"souledfigurine"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"souledfigurine"},"content":"     * Loads tasks from the storage file.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"souledfigurine"},"content":"     * If the file does not exist, returns an empty {@code TaskList}.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"souledfigurine"},"content":"     * @return A {@code TaskList} containing the tasks loaded from the file.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"souledfigurine"},"content":"    public TaskList loadTasks() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"souledfigurine"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"souledfigurine"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"souledfigurine"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"souledfigurine"},"content":"            return tasks;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"souledfigurine"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"souledfigurine"},"content":"        try {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"souledfigurine"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"souledfigurine"},"content":"            String line;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"souledfigurine"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"souledfigurine"},"content":"                Task task \u003d parseTask(line);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"souledfigurine"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"souledfigurine"},"content":"                    tasks.addTask(task);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"souledfigurine"},"content":"                }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"souledfigurine"},"content":"            }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"souledfigurine"},"content":"            reader.close();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"souledfigurine"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"souledfigurine"},"content":"            System.out.println(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"souledfigurine"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"souledfigurine"},"content":"        return tasks;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"souledfigurine"},"content":"     * Parses a line from the storage file into a {@code Task} object.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"souledfigurine"},"content":"     * If the line is corrupted or unrecognized, it returns {@code null}.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"souledfigurine"},"content":"     * @param line The line from the file representing a stored task.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"souledfigurine"},"content":"     * @return A {@code Task} object if successfully parsed, {@code null} otherwise.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"souledfigurine"},"content":"    public static Task parseTask(String line) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"souledfigurine"},"content":"        try {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"souledfigurine"},"content":"            String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"souledfigurine"},"content":"            String type \u003d parts[0];","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"souledfigurine"},"content":"            boolean isCompleted \u003d parts[1].equals(\"true\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"souledfigurine"},"content":"            switch (type) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"souledfigurine"},"content":"            case \"T\":","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"souledfigurine"},"content":"                return new Todo(parts[2], isCompleted);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"souledfigurine"},"content":"            case \"D\":","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"souledfigurine"},"content":"                return new Deadline(parts[2], parts[3], isCompleted);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"souledfigurine"},"content":"            case \"E\":","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"souledfigurine"},"content":"                return new Event(parts[2], parts[3], parts[4], isCompleted);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"souledfigurine"},"content":"            default:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"souledfigurine"},"content":"                return null;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"souledfigurine"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"souledfigurine"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"souledfigurine"},"content":"            System.out.println(\"Skipping corrupted task: \" + line);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"souledfigurine"},"content":"            return null;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"souledfigurine"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"souledfigurine"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"souledfigurine":114}},{"path":"src/main/java/baymax/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"souledfigurine"},"content":"package baymax;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"souledfigurine"},"content":"import baymax.task.Task;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"souledfigurine"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"souledfigurine"},"content":"/**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"souledfigurine"},"content":" * Represents a list of tasks managed by the Baymax chatbot.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"souledfigurine"},"content":" * Provides functionality to add, delete, mark, and unmark tasks.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"souledfigurine"},"content":" */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"souledfigurine"},"content":"public class TaskList {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"souledfigurine"},"content":"    private static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"souledfigurine"},"content":"     * Constructs a new empty {@code TaskList}.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"souledfigurine"},"content":"    public TaskList() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"souledfigurine"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"souledfigurine"},"content":"     * Constructs a {@code TaskList} initialized with an existing list of tasks.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"souledfigurine"},"content":"     * @param taskList The list of tasks to initialize with.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"souledfigurine"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"souledfigurine"},"content":"        this.tasks \u003d taskList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"souledfigurine"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"souledfigurine"},"content":"     * @param task The new task to be added.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"souledfigurine"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"souledfigurine"},"content":"        tasks.add(task);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"souledfigurine"},"content":"     * Marks a task as completed.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"souledfigurine"},"content":"     * @param taskNumber The index (1-based) of the task to mark as completed.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"souledfigurine"},"content":"     * @return The task that was marked as completed.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"souledfigurine"},"content":"    public Task markAsDone(int taskNumber) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"souledfigurine"},"content":"        Task task \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"souledfigurine"},"content":"        task.markAsCompleted();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"souledfigurine"},"content":"        return task;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"souledfigurine"},"content":"     * Unmarks a task, changing its status to incomplete.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"souledfigurine"},"content":"     * @param taskNumber The index (1-based) of the task to unmark.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"souledfigurine"},"content":"     * @return The task that was unmarked.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"souledfigurine"},"content":"    public Task unmark(int taskNumber) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"souledfigurine"},"content":"        Task task \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"souledfigurine"},"content":"        task.unmarkAsCompleted();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"souledfigurine"},"content":"        return task;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"souledfigurine"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"souledfigurine"},"content":"     * @param taskNumber The index (1-based) of the task to delete.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"souledfigurine"},"content":"     * @throws IndexOutOfBoundsException If the given task number is invalid.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"souledfigurine"},"content":"    public void delete(int taskNumber) throws IndexOutOfBoundsException {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"souledfigurine"},"content":"        if (taskNumber \u003c 1 || taskNumber \u003e tasks.size()) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"souledfigurine"},"content":"            throw new IndexOutOfBoundsException(\"Invalid task number! Please enter a valid index.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"souledfigurine"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"souledfigurine"},"content":"        tasks.remove(taskNumber - 1);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"souledfigurine"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"souledfigurine"},"content":"     * @return An {@code ArrayList} containing all tasks.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"souledfigurine"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"souledfigurine"},"content":"        return this.tasks;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"souledfigurine"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"souledfigurine"},"content":"     * @return {@code true} if the task list is empty, otherwise {@code false}.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"souledfigurine"},"content":"    public Boolean isEmpty() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"souledfigurine"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"souledfigurine"},"content":"     * Searches for tasks that contain the specified keyword in their name.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"souledfigurine"},"content":"     * The search is case-insensitive.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"souledfigurine"},"content":"     * @param keyword The keyword to search for within task names.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"souledfigurine"},"content":"     * @return A new {@code TaskList} containing tasks that match the search keyword.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"souledfigurine"},"content":"    public TaskList findTasks(String keyword) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"souledfigurine"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"souledfigurine"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"souledfigurine"},"content":"            if (task.getName().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"souledfigurine"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"souledfigurine"},"content":"            }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"souledfigurine"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"souledfigurine"},"content":"        TaskList matchingTaskList \u003d new TaskList(matchingTasks);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"souledfigurine"},"content":"        return matchingTaskList;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"souledfigurine"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"souledfigurine":111}},{"path":"src/main/java/baymax/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"souledfigurine"},"content":"package baymax;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"souledfigurine"},"content":"import baymax.task.Deadline;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"souledfigurine"},"content":"import baymax.task.Event;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"souledfigurine"},"content":"import baymax.task.Task;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"souledfigurine"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"souledfigurine"},"content":"/**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"souledfigurine"},"content":" * Handles interactions with the user, including displaying messages","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"souledfigurine"},"content":" * and reading user input.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"souledfigurine"},"content":" */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"souledfigurine"},"content":"public class Ui {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"souledfigurine"},"content":"    private Scanner scanner;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"souledfigurine"},"content":"    private static final String LINE \u003d \"______________________________________________________________\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"souledfigurine"},"content":"     * Constructs a new {@code Ui} object and initializes the scanner for reading user input.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"souledfigurine"},"content":"    public Ui() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"souledfigurine"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"souledfigurine"},"content":"     * Prints a message when a new to-do task is added.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"souledfigurine"},"content":"     * @param newTask The newly added to-do task.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"souledfigurine"},"content":"    public void printNewTodo(Task newTask) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"souledfigurine"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"souledfigurine"},"content":"        System.out.println(\"added: \" + newTask);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"souledfigurine"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"souledfigurine"},"content":"     * Prints a message when a new deadline task is added.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"souledfigurine"},"content":"     * @param newTask The newly added deadline task.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"souledfigurine"},"content":"    public void printNewDeadline(Deadline newTask) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"souledfigurine"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"souledfigurine"},"content":"        System.out.println(\"added: \" + newTask);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"souledfigurine"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"souledfigurine"},"content":"     * Prints a message when a new event task is added.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"souledfigurine"},"content":"     * @param newTask The newly added event task.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"souledfigurine"},"content":"    public void printNewEvent(Event newTask) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"souledfigurine"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"souledfigurine"},"content":"        System.out.println(\"added: \" + newTask);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"souledfigurine"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"souledfigurine"},"content":"     * Prints a message when a task is marked as completed.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"souledfigurine"},"content":"     * @param task The task that was marked as completed.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"souledfigurine"},"content":"    public void printMarkAsDone(Task task) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"souledfigurine"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"souledfigurine"},"content":"        System.out.println(\"Good job on completing the task!\\n\" + task);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"souledfigurine"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"souledfigurine"},"content":"     * Prints a message when a task is unmarked as completed.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"souledfigurine"},"content":"     * @param task The task that was unmarked.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"souledfigurine"},"content":"    public void printUnmark(Task task) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"souledfigurine"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"souledfigurine"},"content":"        System.out.println(\"I have unmarked the task for you!\\n\" + task);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"souledfigurine"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"souledfigurine"},"content":"     * Prints a message when a task is deleted.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"souledfigurine"},"content":"     * @param taskNumber The number of the deleted task.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"souledfigurine"},"content":"    public void printDeleteTask(int taskNumber) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"souledfigurine"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"souledfigurine"},"content":"        System.out.println(\"Yay! One less task for you!\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"souledfigurine"},"content":"        System.out.println(\"Deleted task number: \" + taskNumber);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"souledfigurine"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"souledfigurine"},"content":"     * Prints the greeting message when the program starts.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"souledfigurine"},"content":"    public void printGreeting() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"souledfigurine"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"souledfigurine"},"content":"        System.out.println(\"Hello! I\u0027m Baymax, your personal emotional companion :)\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"souledfigurine"},"content":"        System.out.println(\"How may I help you today?\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"souledfigurine"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"souledfigurine"},"content":"     * Prints the exit message when the program ends.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"souledfigurine"},"content":"    public void printExit() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"souledfigurine"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"souledfigurine"},"content":"        System.out.println(\"Goodbye! Have a nice day, and remember:\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"souledfigurine"},"content":"        System.out.println(\"Don\u0027t forget to smell the flowers as you aim for the sky.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"souledfigurine"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"souledfigurine"},"content":"     * Prints the list of tasks.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"souledfigurine"},"content":"     * If the task list is empty, an error message is displayed instead.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"souledfigurine"},"content":"     * @param tasks The list of tasks to be printed.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"souledfigurine"},"content":"    public void printList(TaskList tasks) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"souledfigurine"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"souledfigurine"},"content":"            printError(\"You are free! You currently have 0 tasks.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"souledfigurine"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"souledfigurine"},"content":"        generateList(tasks);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"souledfigurine"},"content":"     * Prints the list of matching tasks based on the user\u0027s search query.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"souledfigurine"},"content":"     * If no tasks match the search criteria, an error message is displayed.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"souledfigurine"},"content":"     * @param matchingTasks The {@code TaskList} containing tasks that match the search keyword.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"souledfigurine"},"content":"    public void printMatchingList(TaskList matchingTasks) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"souledfigurine"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"souledfigurine"},"content":"            printError(\"oh man, it seems like there are no matching tasks\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"souledfigurine"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"souledfigurine"},"content":"        generateList(matchingTasks);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"souledfigurine"},"content":"     * Generates and prints a formatted list of tasks.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"souledfigurine"},"content":"     * Each task is displayed with its corresponding index number.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"souledfigurine"},"content":"     * @param tasks The {@code TaskList} containing the tasks to be displayed.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"souledfigurine"},"content":"    public void generateList(TaskList tasks) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"souledfigurine"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"souledfigurine"},"content":"        for (int i \u003d 0; i \u003c tasks.getTasks().size(); i++) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"souledfigurine"},"content":"            int taskNumber \u003d i + 1;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"souledfigurine"},"content":"            System.out.println(taskNumber + \". \" + tasks.getTasks().get(i));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"souledfigurine"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"souledfigurine"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"souledfigurine"},"content":"     * Prints an error message to notify the user of an issue.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"souledfigurine"},"content":"     * @param errorMessage The error message to be printed.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"souledfigurine"},"content":"    public void printError(String errorMessage) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"souledfigurine"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"souledfigurine"},"content":"     * Reads the next user command from the console.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"souledfigurine"},"content":"     * @return The user input as a string.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"souledfigurine"},"content":"    public String readCommand() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"souledfigurine"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"souledfigurine"},"content":"     * Closes the scanner to release system resources.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"souledfigurine"},"content":"    public void closeScanner() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"souledfigurine"},"content":"        scanner.close();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"souledfigurine"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"souledfigurine":176}},{"path":"src/main/java/baymax/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"souledfigurine"},"content":"package baymax.command;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"souledfigurine"},"content":"/**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"souledfigurine"},"content":" * Represents an abstract command for adding tasks in the Baymax chatbot.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"souledfigurine"},"content":" * This class serves as a base for specific commands that add different types of tasks","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"souledfigurine"},"content":" * (e.g., to-do, deadline, and event tasks).","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"souledfigurine"},"content":" */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"souledfigurine"},"content":"public abstract class AddCommand extends Command {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"souledfigurine"},"content":"    protected final String taskName;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"souledfigurine"},"content":"     * Constructs an {@code AddCommand} with the specified task name.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"souledfigurine"},"content":"     * @param taskName The name of the task to be added.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"souledfigurine"},"content":"    public AddCommand(String taskName) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"souledfigurine"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"souledfigurine"},"content":"     * Returns whether this command signals an exit from the program.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"souledfigurine"},"content":"     * Since add commands do not exit the program, this method always returns {@code false}.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"souledfigurine"},"content":"     * @return {@code false}, as add commands do not terminate the chatbot.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"souledfigurine"},"content":"    @Override","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"souledfigurine"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"souledfigurine"},"content":"        return false;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"souledfigurine"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"souledfigurine":30}},{"path":"src/main/java/baymax/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"souledfigurine"},"content":"package baymax.command;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"souledfigurine"},"content":"import baymax.Storage;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"souledfigurine"},"content":"import baymax.TaskList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"souledfigurine"},"content":"import baymax.Ui;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"souledfigurine"},"content":"import baymax.task.Deadline;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"souledfigurine"},"content":"/**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"souledfigurine"},"content":" * Represents a command that adds a deadline task to the task list in the Baymax chatbot.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"souledfigurine"},"content":" * This command creates a new {@code Deadline} task and updates the task list and storage accordingly.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"souledfigurine"},"content":" */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"souledfigurine"},"content":"public class AddDeadlineCommand extends AddCommand {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"souledfigurine"},"content":"    private final String by;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"souledfigurine"},"content":"     * Constructs an {@code AddDeadlineCommand} with the specified task name and due date.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"souledfigurine"},"content":"     * @param name The name of the deadline task.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"souledfigurine"},"content":"     * @param by   The due date/time of the task in the accepted format.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"souledfigurine"},"content":"    public AddDeadlineCommand(String name, String by) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"souledfigurine"},"content":"        super(name);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"souledfigurine"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"souledfigurine"},"content":"     * Executes the add deadline command by creating a new {@code Deadline} task,","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"souledfigurine"},"content":"     * adding it to the task list, saving the updated list to storage, and notifying the user via the UI.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"souledfigurine"},"content":"     * @param tasks   The task list to which the deadline task is added.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"souledfigurine"},"content":"     * @param ui      The UI component used to display messages.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"souledfigurine"},"content":"     * @param storage The storage handler to save the updated task list.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"souledfigurine"},"content":"    @Override","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"souledfigurine"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"souledfigurine"},"content":"        Deadline newTask \u003d new Deadline(taskName, by);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"souledfigurine"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"souledfigurine"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"souledfigurine"},"content":"        ui.printNewDeadline(newTask);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"souledfigurine"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"souledfigurine":41}},{"path":"src/main/java/baymax/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"souledfigurine"},"content":"package baymax.command;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"souledfigurine"},"content":"import baymax.Storage;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"souledfigurine"},"content":"import baymax.TaskList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"souledfigurine"},"content":"import baymax.Ui;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"souledfigurine"},"content":"import baymax.task.Event;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"souledfigurine"},"content":"/**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"souledfigurine"},"content":" * Represents a command that adds an event task to the task list in the Baymax chatbot.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"souledfigurine"},"content":" * This command creates a new {@code Event} task and updates the task list and storage accordingly.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"souledfigurine"},"content":" */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"souledfigurine"},"content":"public class AddEventCommand extends AddCommand {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"souledfigurine"},"content":"    private final String from;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"souledfigurine"},"content":"    private final String to;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"souledfigurine"},"content":"     * Constructs an {@code AddEventCommand} with the specified task name, start time, and end time.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"souledfigurine"},"content":"     * @param name The name of the event task.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"souledfigurine"},"content":"     * @param from The start date/time of the event in the accepted format.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"souledfigurine"},"content":"     * @param to   The end date/time of the event in the accepted format.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"souledfigurine"},"content":"    public AddEventCommand(String name, String from, String to) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"souledfigurine"},"content":"        super(name);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"souledfigurine"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"souledfigurine"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"souledfigurine"},"content":"     * Executes the add event command by creating a new {@code Event} task,","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"souledfigurine"},"content":"     * adding it to the task list, saving the updated list to storage, and notifying the user via the UI.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"souledfigurine"},"content":"     * @param tasks   The task list to which the event task is added.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"souledfigurine"},"content":"     * @param ui      The UI component used to display messages.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"souledfigurine"},"content":"     * @param storage The storage handler to save the updated task list.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"souledfigurine"},"content":"    @Override","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"souledfigurine"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"souledfigurine"},"content":"        Event newTask \u003d new Event(taskName, from, to);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"souledfigurine"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"souledfigurine"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"souledfigurine"},"content":"        ui.printNewEvent(newTask);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"souledfigurine"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"souledfigurine":44}},{"path":"src/main/java/baymax/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"souledfigurine"},"content":"package baymax.command;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"souledfigurine"},"content":"import baymax.Storage;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"souledfigurine"},"content":"import baymax.TaskList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"souledfigurine"},"content":"import baymax.Ui;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"souledfigurine"},"content":"import baymax.task.Todo;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"souledfigurine"},"content":"/**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"souledfigurine"},"content":" * Represents a command that adds a to-do task to the task list in the Baymax chatbot.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"souledfigurine"},"content":" * This command creates a new {@code Todo} task and updates the task list and storage accordingly.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"souledfigurine"},"content":" */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"souledfigurine"},"content":"public class AddTodoCommand extends AddCommand {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"souledfigurine"},"content":"     * Constructs an {@code AddTodoCommand} with the specified task name.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"souledfigurine"},"content":"     * @param taskName The name of the to-do task.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"souledfigurine"},"content":"    public AddTodoCommand(String taskName) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"souledfigurine"},"content":"        super(taskName);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"souledfigurine"},"content":"     * Executes the add to-do command by creating a new {@code Todo} task,","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"souledfigurine"},"content":"     * adding it to the task list, saving the updated list to storage, and notifying the user via the UI.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"souledfigurine"},"content":"     * @param tasks   The task list to which the to-do task is added.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"souledfigurine"},"content":"     * @param ui      The UI component used to display messages.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"souledfigurine"},"content":"     * @param storage The storage handler to save the updated task list.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"souledfigurine"},"content":"    @Override","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"souledfigurine"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"souledfigurine"},"content":"        Todo newTask \u003d new Todo(this.taskName);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"souledfigurine"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"souledfigurine"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"souledfigurine"},"content":"        ui.printNewTodo(newTask);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"souledfigurine"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"souledfigurine":39}},{"path":"src/main/java/baymax/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"souledfigurine"},"content":"package baymax.command;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"souledfigurine"},"content":"import baymax.TaskList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"souledfigurine"},"content":"import baymax.Storage;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"souledfigurine"},"content":"import baymax.Ui;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"souledfigurine"},"content":"/**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"souledfigurine"},"content":" * Represents an abstract command in the Baymax chatbot.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"souledfigurine"},"content":" * Commands are executed based on user input and can manipulate the task list,","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"souledfigurine"},"content":" * interact with storage, and display output via the UI.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"souledfigurine"},"content":" */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"souledfigurine"},"content":"public abstract class Command {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"souledfigurine"},"content":"    protected boolean exit \u003d false;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"souledfigurine"},"content":"     * Executes the command, performing the necessary operations on the task list,","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"souledfigurine"},"content":"     * UI, and storage.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"souledfigurine"},"content":"     * @param tasks   The task list to be modified or accessed.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"souledfigurine"},"content":"     * @param ui      The UI component to display messages to the user.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"souledfigurine"},"content":"     * @param storage The storage handler to save or retrieve tasks.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"souledfigurine"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"souledfigurine"},"content":"     * Returns whether this command signals an exit from the program.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"souledfigurine"},"content":"     * @return {@code true} if the command is an exit command, {@code false} otherwise.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"souledfigurine"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"souledfigurine"},"content":"        return this.exit;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"souledfigurine"},"content":"     * Marks this command as an exit command, causing the chatbot to terminate after execution.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"souledfigurine"},"content":"    public void setExit() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"souledfigurine"},"content":"        this.exit \u003d true;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"souledfigurine"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"souledfigurine":40}},{"path":"src/main/java/baymax/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"souledfigurine"},"content":"package baymax.command;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"souledfigurine"},"content":"import baymax.Storage;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"souledfigurine"},"content":"import baymax.TaskList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"souledfigurine"},"content":"import baymax.Ui;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"souledfigurine"},"content":"/**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"souledfigurine"},"content":" * Represents a command that deletes a task from the task list in the Baymax chatbot.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"souledfigurine"},"content":" * This command removes a specified task from the task list, updates storage,","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"souledfigurine"},"content":" * and notifies the user.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"souledfigurine"},"content":" */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"souledfigurine"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"souledfigurine"},"content":"    private final int taskNumber;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"souledfigurine"},"content":"     * Constructs a {@code DeleteCommand} with the specified task number.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"souledfigurine"},"content":"     * @param taskNumber The index of the task to be deleted (1-based).","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"souledfigurine"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"souledfigurine"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"souledfigurine"},"content":"     * Executes the delete command by removing the task from the task list,","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"souledfigurine"},"content":"     * saving the updated list to storage, and notifying the user.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"souledfigurine"},"content":"     * If the task number is invalid, an error message is displayed.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"souledfigurine"},"content":"     * @param tasks   The task list from which the task is deleted.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"souledfigurine"},"content":"     * @param ui      The UI component used to display messages.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"souledfigurine"},"content":"     * @param storage The storage handler to save the updated task list.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"souledfigurine"},"content":"    @Override","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"souledfigurine"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"souledfigurine"},"content":"        try {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"souledfigurine"},"content":"            tasks.delete(taskNumber);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"souledfigurine"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"souledfigurine"},"content":"            ui.printDeleteTask(taskNumber);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"souledfigurine"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"souledfigurine"},"content":"            ui.printError(e.getMessage());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"souledfigurine"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"souledfigurine"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"souledfigurine":43}},{"path":"src/main/java/baymax/command/ErrorCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"souledfigurine"},"content":"package baymax.command;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"souledfigurine"},"content":"import baymax.Storage;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"souledfigurine"},"content":"import baymax.TaskList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"souledfigurine"},"content":"import baymax.Ui;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"souledfigurine"},"content":"/**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"souledfigurine"},"content":" * Represents a command that handles invalid user input in the Baymax chatbot.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"souledfigurine"},"content":" * This command does not modify the task list or storage but informs the user of an error.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"souledfigurine"},"content":" */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"souledfigurine"},"content":"public class ErrorCommand extends Command {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"souledfigurine"},"content":"    private final String errorMessage;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"souledfigurine"},"content":"     * Constructs an {@code ErrorCommand} with the specified error message.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"souledfigurine"},"content":"     * @param errorMessage The error message to be displayed to the user.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"souledfigurine"},"content":"    public ErrorCommand(String errorMessage) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"souledfigurine"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"souledfigurine"},"content":"     * Executes the error command by displaying an error message to the user.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"souledfigurine"},"content":"     * This command does not modify the task list or storage.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"souledfigurine"},"content":"     * @param tasks   The task list (not used in this command).","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"souledfigurine"},"content":"     * @param ui      The UI component used to display the error message.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"souledfigurine"},"content":"     * @param storage The storage handler (not used in this command).","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"souledfigurine"},"content":"    @Override","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"souledfigurine"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"souledfigurine"},"content":"        ui.printError(errorMessage);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"souledfigurine"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"souledfigurine":35}},{"path":"src/main/java/baymax/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"souledfigurine"},"content":"package baymax.command;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"souledfigurine"},"content":"import baymax.Storage;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"souledfigurine"},"content":"import baymax.TaskList;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"souledfigurine"},"content":"import baymax.Ui;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"souledfigurine"},"content":"/**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"souledfigurine"},"content":" * Represents a command that signals the Baymax chatbot to terminate.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"souledfigurine"},"content":" * This command does not modify the task list or storage but informs the user of the exit.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"souledfigurine"},"content":" */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"souledfigurine"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"souledfigurine"},"content":"     * Constructs an {@code ExitCommand} that sets the chatbot\u0027s exit status to {@code true}.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"souledfigurine"},"content":"    public ExitCommand() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"souledfigurine"},"content":"        this.exit \u003d true;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"souledfigurine"},"content":"     * Executes the exit command by displaying the exit message to the user.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"souledfigurine"},"content":"     * This command does not modify the task list or storage.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"souledfigurine"},"content":"     * @param tasks   The task list (not used in this command).","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"souledfigurine"},"content":"     * @param ui      The UI component used to display the exit message.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"souledfigurine"},"content":"     * @param storage The storage handler (not used in this command).","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"souledfigurine"},"content":"    @Override","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"souledfigurine"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"souledfigurine"},"content":"        ui.printExit();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"souledfigurine"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"souledfigurine":32}},{"path":"src/main/java/baymax/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"souledfigurine"},"content":"package baymax.command;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"souledfigurine"},"content":"import baymax.Storage;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"souledfigurine"},"content":"import baymax.TaskList;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"souledfigurine"},"content":"import baymax.Ui;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"souledfigurine"},"content":"import baymax.task.Task;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"souledfigurine"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"souledfigurine"},"content":"/**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"souledfigurine"},"content":" * Represents a command that searches for tasks containing a specific keyword in their name.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"souledfigurine"},"content":" * The search is case-insensitive and returns a list of matching tasks.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"souledfigurine"},"content":" */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"souledfigurine"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"souledfigurine"},"content":"    private String keyword;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"souledfigurine"},"content":"     * Constructs a {@code FindCommand} with the specified keyword.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"souledfigurine"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"souledfigurine"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"souledfigurine"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"souledfigurine"},"content":"     * Executes the find command by searching for tasks that contain the keyword","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"souledfigurine"},"content":"     * and displaying the results to the user.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"souledfigurine"},"content":"     * @param tasks   The task list to search through.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"souledfigurine"},"content":"     * @param ui      The UI component used to display messages.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"souledfigurine"},"content":"     * @param storage The storage handler (not used in this command).","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"souledfigurine"},"content":"    @Override","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"souledfigurine"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"souledfigurine"},"content":"        TaskList matchingList \u003d tasks.findTasks(keyword);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"souledfigurine"},"content":"        ui.printMatchingList(matchingList);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"souledfigurine"},"content":"}","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"souledfigurine":39}},{"path":"src/main/java/baymax/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"souledfigurine"},"content":"package baymax.command;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"souledfigurine"},"content":"import baymax.Storage;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"souledfigurine"},"content":"import baymax.TaskList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"souledfigurine"},"content":"import baymax.Ui;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"souledfigurine"},"content":"/**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"souledfigurine"},"content":" * Represents a command that lists all tasks in the Baymax chatbot.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"souledfigurine"},"content":" * This command retrieves the current tasks from the task list and displays them to the user.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"souledfigurine"},"content":" */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"souledfigurine"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"souledfigurine"},"content":"     * Executes the list command by displaying all tasks in the task list.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"souledfigurine"},"content":"     * This command does not modify the task list or storage.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"souledfigurine"},"content":"     * @param tasks   The task list containing tasks to be displayed.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"souledfigurine"},"content":"     * @param ui      The UI component used to display the task list.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"souledfigurine"},"content":"     * @param storage The storage handler (not used in this command).","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"souledfigurine"},"content":"    @Override","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"souledfigurine"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"souledfigurine"},"content":"        ui.printList(tasks);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"souledfigurine"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"souledfigurine":25}},{"path":"src/main/java/baymax/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"souledfigurine"},"content":"package baymax.command;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"souledfigurine"},"content":"import baymax.Storage;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"souledfigurine"},"content":"import baymax.TaskList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"souledfigurine"},"content":"import baymax.Ui;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"souledfigurine"},"content":"import baymax.task.Task;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"souledfigurine"},"content":"/**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"souledfigurine"},"content":" * Represents a command that marks a task as completed in the Baymax chatbot.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"souledfigurine"},"content":" * This command updates the task\u0027s status, saves the updated task list to storage,","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"souledfigurine"},"content":" * and notifies the user.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"souledfigurine"},"content":" */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"souledfigurine"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"souledfigurine"},"content":"    private final int taskNumber;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"souledfigurine"},"content":"     * Constructs a {@code MarkCommand} with the specified task number.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"souledfigurine"},"content":"     * @param taskIndex The index of the task to be marked as completed (1-based index).","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"souledfigurine"},"content":"    public MarkCommand(int taskIndex) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"souledfigurine"},"content":"        this.taskNumber \u003d taskIndex;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"souledfigurine"},"content":"     * Executes the mark command by marking the task as completed,","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"souledfigurine"},"content":"     * saving the updated task list to storage, and notifying the user.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"souledfigurine"},"content":"     * @param tasks   The task list containing the task to be marked as completed.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"souledfigurine"},"content":"     * @param ui      The UI component used to display confirmation messages.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"souledfigurine"},"content":"     * @param storage The storage handler to save the updated task list.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"souledfigurine"},"content":"    @Override","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"souledfigurine"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"souledfigurine"},"content":"        Task task \u003d tasks.markAsDone(taskNumber);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"souledfigurine"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"souledfigurine"},"content":"        ui.printMarkAsDone(task);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"souledfigurine"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"souledfigurine":39}},{"path":"src/main/java/baymax/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"souledfigurine"},"content":"package baymax.command;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"souledfigurine"},"content":"import baymax.Storage;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"souledfigurine"},"content":"import baymax.TaskList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"souledfigurine"},"content":"import baymax.Ui;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"souledfigurine"},"content":"import baymax.task.Task;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"souledfigurine"},"content":"/**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"souledfigurine"},"content":" * Represents a command that marks a task as incomplete in the Baymax chatbot.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"souledfigurine"},"content":" * This command updates the task\u0027s status, saves the updated task list to storage,","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"souledfigurine"},"content":" * and notifies the user.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"souledfigurine"},"content":" */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"souledfigurine"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"souledfigurine"},"content":"    private final int taskNumber;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"souledfigurine"},"content":"     * Constructs an {@code UnmarkCommand} with the specified task number.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"souledfigurine"},"content":"     * @param taskNumber The index of the task to be marked as incomplete (1-based).","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"souledfigurine"},"content":"    public UnmarkCommand(int taskNumber) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"souledfigurine"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"souledfigurine"},"content":"     * Executes the unmark command by marking a task as incomplete,","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"souledfigurine"},"content":"     * saving the updated task list to storage, and notifying the user.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"souledfigurine"},"content":"     * @param tasks   The task list containing the task to be unmarked.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"souledfigurine"},"content":"     * @param ui      The UI component used to display messages.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"souledfigurine"},"content":"     * @param storage The storage handler to save the updated task list.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"souledfigurine"},"content":"    @Override","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"souledfigurine"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"souledfigurine"},"content":"        Task task \u003d tasks.unmark(taskNumber);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"souledfigurine"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"souledfigurine"},"content":"        ui.printUnmark(task);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"souledfigurine"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"souledfigurine":40}},{"path":"src/main/java/baymax/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"souledfigurine"},"content":"package baymax.task;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"souledfigurine"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"souledfigurine"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"souledfigurine"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"souledfigurine"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"souledfigurine"},"content":"/**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"souledfigurine"},"content":" * Represents a deadline task in the Baymax chatbot.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"souledfigurine"},"content":" * A deadline has a name and a due date, which can either be a full date-time","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"souledfigurine"},"content":" * (e.g., {@code \"yyyy-MM-dd HHmm\"}) or just a date (e.g., {@code \"yyyy-MM-dd\"}).","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"souledfigurine"},"content":" */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"souledfigurine"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"souledfigurine"},"content":"    private LocalDateTime byDateTime;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"souledfigurine"},"content":"    private LocalDate byDate;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"souledfigurine"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER_1 \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"souledfigurine"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER_2 \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"souledfigurine"},"content":"    private static final DateTimeFormatter DISPLAY_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"souledfigurine"},"content":"     * Constructs a new {@code Deadline} task with the specified name and deadline.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"souledfigurine"},"content":"     * The task is initially marked as incomplete.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"souledfigurine"},"content":"     * @param name The name of the deadline task.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"souledfigurine"},"content":"     * @param deadline The due date/time in the format {@code \"yyyy-MM-dd\"} or {@code \"yyyy-MM-dd HHmm\"}.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"souledfigurine"},"content":"    public Deadline(String name, String deadline) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"souledfigurine"},"content":"        super(name);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"souledfigurine"},"content":"        determineDeadlineType(deadline);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"souledfigurine"},"content":"     * Constructs a new {@code Deadline} task with the specified name, deadline, and completion status.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"souledfigurine"},"content":"     * @param name The name of the deadline task.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"souledfigurine"},"content":"     * @param deadline The due date/time in the format {@code \"yyyy-MM-dd\"} or {@code \"yyyy-MM-dd HHmm\"}.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"souledfigurine"},"content":"     * @param isCompleted {@code true} if the deadline is completed, {@code false} otherwise.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"souledfigurine"},"content":"    public Deadline(String name, String deadline, boolean isCompleted) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"souledfigurine"},"content":"        super(name, isCompleted);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"souledfigurine"},"content":"        determineDeadlineType(deadline);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"souledfigurine"},"content":"     * Determines whether the deadline is a full date-time or just a date,","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"souledfigurine"},"content":"     * and assigns it to the respective field.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"souledfigurine"},"content":"     * @param deadline The deadline string provided by the user.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"souledfigurine"},"content":"     * @throws IllegalArgumentException If the deadline format is invalid.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"souledfigurine"},"content":"    private void determineDeadlineType(String deadline) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"souledfigurine"},"content":"        if (deadline.contains(\" \")) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"souledfigurine"},"content":"            this.byDateTime \u003d safelyParseDateTime(deadline);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"souledfigurine"},"content":"        } else {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"souledfigurine"},"content":"            this.byDate \u003d safelyParseDate(deadline);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"souledfigurine"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"souledfigurine"},"content":"     * Safely parses the deadline as a {@code LocalDateTime}.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"souledfigurine"},"content":"     * @param deadline The deadline string to parse.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"souledfigurine"},"content":"     * @return The parsed {@code LocalDateTime}.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"souledfigurine"},"content":"     * @throws IllegalArgumentException If the deadline format is invalid.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"souledfigurine"},"content":"    private LocalDateTime safelyParseDateTime(String deadline) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"souledfigurine"},"content":"        try {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"souledfigurine"},"content":"            return LocalDateTime.parse(deadline, INPUT_FORMATTER_2);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"souledfigurine"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"souledfigurine"},"content":"            throw new IllegalArgumentException(\"Invalid datetime format! Use \u0027yyyy-MM-dd HHmm\u0027.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"souledfigurine"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"souledfigurine"},"content":"     * Safely parses the deadline as a {@code LocalDate}.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"souledfigurine"},"content":"     * @param deadline The deadline string to parse.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"souledfigurine"},"content":"     * @return The parsed {@code LocalDate}.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"souledfigurine"},"content":"     * @throws IllegalArgumentException If the deadline format is invalid.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"souledfigurine"},"content":"    private LocalDate safelyParseDate(String deadline) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"souledfigurine"},"content":"        try {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"souledfigurine"},"content":"            return LocalDate.parse(deadline, INPUT_FORMATTER_1);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"souledfigurine"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"souledfigurine"},"content":"            throw new IllegalArgumentException(\"Invalid date format! Use \u0027yyyy-MM-dd\u0027.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"souledfigurine"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"souledfigurine"},"content":"     * Formats the deadline for display purposes.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"souledfigurine"},"content":"     * @return A formatted string representing the deadline.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"souledfigurine"},"content":"    private String formatDeadline() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"souledfigurine"},"content":"        if (byDateTime !\u003d null) return byDateTime.format(DISPLAY_FORMATTER);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"souledfigurine"},"content":"        if (byDate !\u003d null) return byDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"souledfigurine"},"content":"        return \"Invalid date\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"souledfigurine"},"content":"     * Returns a string representation of the deadline task.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"souledfigurine"},"content":"     * The format is: {@code [D]} followed by the task\u0027s status, name, and deadline.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"souledfigurine"},"content":"     * @return A formatted string representing the deadline task.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"souledfigurine"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"souledfigurine"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"souledfigurine"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formatDeadline() + \")\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"souledfigurine"},"content":"     * Returns a formatted string suitable for saving the deadline task to a file.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"souledfigurine"},"content":"     * The format is: {@code D | isCompleted | Task Name | Due Date}.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"souledfigurine"},"content":"     * @return A formatted string representing the deadline task for file storage.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"souledfigurine"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"souledfigurine"},"content":"    public String toFileString() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"souledfigurine"},"content":"        if (byDateTime !\u003d null) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"souledfigurine"},"content":"            return \"D\" + super.toFileString() + \" | \" + byDateTime.format(INPUT_FORMATTER_2);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"souledfigurine"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"souledfigurine"},"content":"        if (byDate !\u003d null) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"souledfigurine"},"content":"            return \"D\" + super.toFileString() + \" | \" + byDate.format(INPUT_FORMATTER_1);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"souledfigurine"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"souledfigurine"},"content":"        return \"D\" + super.toFileString() + \" | Invalid date\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"souledfigurine"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"souledfigurine":128}},{"path":"src/main/java/baymax/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"souledfigurine"},"content":"package baymax.task;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"souledfigurine"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"souledfigurine"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"souledfigurine"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"souledfigurine"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"souledfigurine"},"content":"/**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"souledfigurine"},"content":" * Represents an event task in the Baymax chatbot.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"souledfigurine"},"content":" * An event has a name, a start date/time, and an end date/time.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"souledfigurine"},"content":" * It supports input formats with or without time components.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"souledfigurine"},"content":" */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"souledfigurine"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"souledfigurine"},"content":"    private LocalDateTime fromDateTime;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"souledfigurine"},"content":"    private LocalDateTime toDateTime;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"souledfigurine"},"content":"    private LocalDate fromDate;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"souledfigurine"},"content":"    private LocalDate toDate;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"souledfigurine"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER_1 \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"souledfigurine"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER_2 \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"souledfigurine"},"content":"    private static final DateTimeFormatter DISPLAY_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"souledfigurine"},"content":"     * Constructs a new {@code Event} task with the given name, start date/time, and end date/time.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"souledfigurine"},"content":"     * @param name The name of the event.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"souledfigurine"},"content":"     * @param from The start date/time in the format {@code \"yyyy-MM-dd\"} or {@code \"d/M/yyyy HHmm\"}.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"souledfigurine"},"content":"     * @param to The end date/time in the format {@code \"yyyy-MM-dd\"} or {@code \"d/M/yyyy HHmm\"}.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"souledfigurine"},"content":"    public Event(String name, String from, String to) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"souledfigurine"},"content":"        super(name);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"souledfigurine"},"content":"        parseDates(from, to);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"souledfigurine"},"content":"     * Constructs a new {@code Event} task with the given name, start date/time, end date/time, and completion status.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"souledfigurine"},"content":"     * @param name The name of the event.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"souledfigurine"},"content":"     * @param from The start date/time in the format {@code \"yyyy-MM-dd\"} or {@code \"d/M/yyyy HHmm\"}.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"souledfigurine"},"content":"     * @param to The end date/time in the format {@code \"yyyy-MM-dd\"} or {@code \"d/M/yyyy HHmm\"}.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"souledfigurine"},"content":"     * @param isCompleted {@code true} if the event is completed, {@code false} otherwise.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"souledfigurine"},"content":"    public Event(String name, String from, String to, Boolean isCompleted) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"souledfigurine"},"content":"        super(name, isCompleted);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"souledfigurine"},"content":"        parseDates(from, to);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"souledfigurine"},"content":"     * Parses the given start and end dates/times and assigns them to the respective fields.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"souledfigurine"},"content":"     * Supports both full {@code LocalDateTime} and {@code LocalDate} formats.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"souledfigurine"},"content":"     * If an invalid format is provided, an error message is displayed.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"souledfigurine"},"content":"     * @param from The start date/time string.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"souledfigurine"},"content":"     * @param to The end date/time string.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"souledfigurine"},"content":"    private void parseDates(String from, String to) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"souledfigurine"},"content":"        try {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"souledfigurine"},"content":"            if (from.contains(\" \")) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"souledfigurine"},"content":"                this.fromDateTime \u003d LocalDateTime.parse(from, INPUT_FORMATTER_2);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"souledfigurine"},"content":"            } else {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"souledfigurine"},"content":"                this.fromDate \u003d LocalDate.parse(from, INPUT_FORMATTER_1);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"souledfigurine"},"content":"            }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"souledfigurine"},"content":"            if (to.contains(\" \")) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"souledfigurine"},"content":"                this.toDateTime \u003d LocalDateTime.parse(to, INPUT_FORMATTER_2);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"souledfigurine"},"content":"            } else {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"souledfigurine"},"content":"                this.toDate \u003d LocalDate.parse(to, INPUT_FORMATTER_1);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"souledfigurine"},"content":"            }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"souledfigurine"},"content":"            if (getFromAsDateTime().isAfter(getToAsDateTime())) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"souledfigurine"},"content":"                System.out.println(\"Error: \u0027from\u0027 date must be before \u0027to\u0027 date.\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"souledfigurine"},"content":"                this.fromDateTime \u003d null;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"souledfigurine"},"content":"                this.toDateTime \u003d null;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"souledfigurine"},"content":"                this.fromDate \u003d null;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"souledfigurine"},"content":"                this.toDate \u003d null;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"souledfigurine"},"content":"            }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"souledfigurine"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"souledfigurine"},"content":"            System.out.println(\"Invalid event format! Use \u0027yyyy-MM-dd\u0027 or \u0027d/M/yyyy HHmm\u0027 (e.g., 2/12/2019 1800).\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"souledfigurine"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"souledfigurine"},"content":"     * Returns the start date/time of the event.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"souledfigurine"},"content":"     * If only a date was provided, it defaults to the start of the day (00:00).","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"souledfigurine"},"content":"     * @return The start date/time as a {@code LocalDateTime}.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"souledfigurine"},"content":"    private LocalDateTime getFromAsDateTime() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"souledfigurine"},"content":"        return fromDateTime !\u003d null ? fromDateTime : (fromDate !\u003d null ? fromDate.atStartOfDay() : null);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"souledfigurine"},"content":"     * Returns the end date/time of the event.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"souledfigurine"},"content":"     * If only a date was provided, it defaults to the start of the day (00:00).","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"souledfigurine"},"content":"     * @return The end date/time as a {@code LocalDateTime}.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"souledfigurine"},"content":"    private LocalDateTime getToAsDateTime() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"souledfigurine"},"content":"        return toDateTime !\u003d null ? toDateTime : (toDate !\u003d null ? toDate.atStartOfDay() : null);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"souledfigurine"},"content":"     * Formats the given date/time for display purposes.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"souledfigurine"},"content":"     * @param dateTime The {@code LocalDateTime} to format.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"souledfigurine"},"content":"     * @param date The {@code LocalDate} to format if {@code dateTime} is null.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"souledfigurine"},"content":"     * @return A formatted string representing the date/time.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"souledfigurine"},"content":"    private String formatDateTime(LocalDateTime dateTime, LocalDate date) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"souledfigurine"},"content":"        if (dateTime !\u003d null) return dateTime.format(DISPLAY_FORMATTER);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"souledfigurine"},"content":"        if (date !\u003d null) return date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"souledfigurine"},"content":"        return \"Invalid date\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"souledfigurine"},"content":"     * Returns a string representation of the event task.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"souledfigurine"},"content":"     * The format is: {@code [E]} followed by the task\u0027s status, name, start date/time, and end date/time.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"souledfigurine"},"content":"     * @return A formatted string representing the event task.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"souledfigurine"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"souledfigurine"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"souledfigurine"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + formatDateTime(fromDateTime, fromDate) +","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"souledfigurine"},"content":"                \" to: \" + formatDateTime(toDateTime, toDate) + \")\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"souledfigurine"},"content":"     * Returns a formatted string suitable for saving the event task to a file.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"souledfigurine"},"content":"     * The format is: {@code E | isCompleted | Task Name | Start Date/Time | End Date/Time}.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"souledfigurine"},"content":"     * @return A formatted string representing the event task for file storage.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"souledfigurine"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"souledfigurine"},"content":"    public String toFileString() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"souledfigurine"},"content":"        return \"E\" + super.toFileString() + \" | \" +","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"souledfigurine"},"content":"                (fromDateTime !\u003d null ? fromDateTime.format(INPUT_FORMATTER_2) : fromDate.format(INPUT_FORMATTER_1)) +","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"souledfigurine"},"content":"                \" | \" +","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"souledfigurine"},"content":"                (toDateTime !\u003d null ? toDateTime.format(INPUT_FORMATTER_2) : toDate.format(INPUT_FORMATTER_1));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"souledfigurine"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"souledfigurine":141}},{"path":"src/main/java/baymax/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"souledfigurine"},"content":"package baymax.task;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"souledfigurine"},"content":"/**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"souledfigurine"},"content":" * Represents a task that can be managed by the Baymax chatbot.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"souledfigurine"},"content":" * A task has a name and a completion status.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"souledfigurine"},"content":" * This is an abstract class that serves as a base for different types of tasks.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"souledfigurine"},"content":" */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"souledfigurine"},"content":"public abstract class Task {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"souledfigurine"},"content":"    protected String name;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"souledfigurine"},"content":"    protected boolean isCompleted;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"souledfigurine"},"content":"     * Constructs a new {@code Task} with the specified name.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"souledfigurine"},"content":"     * The task is initially marked as incomplete.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"souledfigurine"},"content":"     * @param name The name of the task.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"souledfigurine"},"content":"    public Task(String name) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"souledfigurine"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"souledfigurine"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"souledfigurine"},"content":"     * Constructs a new {@code Task} with the specified name and completion status.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"souledfigurine"},"content":"     * @param name        The name of the task.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"souledfigurine"},"content":"     * @param isCompleted {@code true} if the task is completed, {@code false} otherwise.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"souledfigurine"},"content":"    public Task(String name, boolean isCompleted) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"souledfigurine"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"souledfigurine"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"souledfigurine"},"content":"     * Marks the task as completed.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"souledfigurine"},"content":"    public void markAsCompleted() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"souledfigurine"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"souledfigurine"},"content":"     * Marks the task as incomplete.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"souledfigurine"},"content":"    public void unmarkAsCompleted() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"souledfigurine"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"souledfigurine"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"souledfigurine"},"content":"     * {@code \"[X]\"} represents a completed task, while {@code \"[ ]\"} represents an incomplete task.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"souledfigurine"},"content":"     * @return The status icon as a string.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"souledfigurine"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"souledfigurine"},"content":"        return (isCompleted ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"souledfigurine"},"content":"     * Returns the name of the task.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"souledfigurine"},"content":"     * @return The name of the task.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"souledfigurine"},"content":"    public String getName() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"souledfigurine"},"content":"        return this.name;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"souledfigurine"},"content":"     * Returns whether the task is completed.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"souledfigurine"},"content":"     * @return {@code true} if the task is completed, {@code false} otherwise.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"souledfigurine"},"content":"    public boolean getIsCompleted() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"souledfigurine"},"content":"        return this.isCompleted;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"souledfigurine"},"content":"     * Returns a string representation of the task, including its status and name.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"souledfigurine"},"content":"     * @return A formatted string representing the task.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"souledfigurine"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"souledfigurine"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"souledfigurine"},"content":"        return getStatusIcon() + \" \" + this.name;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"souledfigurine"},"content":"     * Returns a formatted string suitable for saving the task to a file.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"souledfigurine"},"content":"     * The format is: {@code \" | isCompleted | Task Name\"}.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"souledfigurine"},"content":"     * @return A formatted string representing the task for file storage.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"souledfigurine"},"content":"    public String toFileString() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"souledfigurine"},"content":"        return \" | \" + isCompleted + \" | \" + this.name;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"souledfigurine"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"souledfigurine":95}},{"path":"src/main/java/baymax/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"souledfigurine"},"content":"package baymax.task;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"souledfigurine"},"content":"/**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"souledfigurine"},"content":" * Represents a to-do task in the Baymax chatbot.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"souledfigurine"},"content":" * A to-do task only has a name and a completion status without any time constraints.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"souledfigurine"},"content":" */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"souledfigurine"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"souledfigurine"},"content":"     * Constructs a new {@code Todo} task with the given name.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"souledfigurine"},"content":"     * The task is initially marked as incomplete.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"souledfigurine"},"content":"     * @param name The name of the to-do task.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"souledfigurine"},"content":"    public Todo(String name) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"souledfigurine"},"content":"        super(name);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"souledfigurine"},"content":"     * Constructs a new {@code Todo} task with the given name and completion status.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"souledfigurine"},"content":"     * @param name The name of the to-do task.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"souledfigurine"},"content":"     * @param isCompleted The completion status of the task.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"souledfigurine"},"content":"    public Todo(String name, boolean isCompleted) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"souledfigurine"},"content":"        super(name, isCompleted);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"souledfigurine"},"content":"     * Returns a string representation of the to-do task.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"souledfigurine"},"content":"     * The format is: [T] followed by the task status and name.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"souledfigurine"},"content":"     * @return A formatted string representing the to-do task.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"souledfigurine"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"souledfigurine"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"souledfigurine"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"souledfigurine"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"souledfigurine"},"content":"     * Returns a formatted string suitable for saving the to-do task to a file.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"souledfigurine"},"content":"     * The format is: T | isCompleted | Task Name.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"souledfigurine"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"souledfigurine"},"content":"     * @return A formatted string representing the to-do task for file storage.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"souledfigurine"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"souledfigurine"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"souledfigurine"},"content":"    public String toFileString() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"souledfigurine"},"content":"        return \"T\" + super.toFileString();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"souledfigurine"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"souledfigurine":50}},{"path":"src/test/java/baymax/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"souledfigurine"},"content":"package baymax;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"souledfigurine"},"content":"import baymax.task.Task;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"souledfigurine"},"content":"import baymax.task.Todo;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"souledfigurine"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"souledfigurine"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"souledfigurine"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"souledfigurine"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"souledfigurine"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"souledfigurine"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"souledfigurine"},"content":"public class UiTest {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"souledfigurine"},"content":"    private Ui ui;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"souledfigurine"},"content":"    private ByteArrayOutputStream outContent;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"souledfigurine"},"content":"    private static final String LINE \u003d \"______________________________________________________________\\n\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"souledfigurine"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"souledfigurine"},"content":"    void setUp() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"souledfigurine"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"souledfigurine"},"content":"        outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"souledfigurine"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"souledfigurine"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"souledfigurine"},"content":"    void testPrintGreeting() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"souledfigurine"},"content":"        ui.printGreeting();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"souledfigurine"},"content":"        assertTrue(outContent.toString().contains(\"Hello! I\u0027m Baymax, your personal emotional companion :)\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"souledfigurine"},"content":"        assertTrue(outContent.toString().contains(\"How may I help you today?\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"souledfigurine"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"souledfigurine"},"content":"    void testPrintExit() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"souledfigurine"},"content":"        ui.printExit();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"souledfigurine"},"content":"        assertTrue(outContent.toString().contains(\"Goodbye. Have a nice day, and remember:\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"souledfigurine"},"content":"        assertTrue(outContent.toString().contains(\"don\u0027t forget to smell the flowers, as you aim for the sky\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"souledfigurine"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"souledfigurine"},"content":"    void testPrintError() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"souledfigurine"},"content":"        ui.printError(\"This is an error!\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"souledfigurine"},"content":"        assertTrue(outContent.toString().contains(\"This is an error!\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"souledfigurine"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"souledfigurine"},"content":"    void testReadCommand() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"souledfigurine"},"content":"        ByteArrayInputStream inContent \u003d new ByteArrayInputStream(\"hello\\n\".getBytes());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"souledfigurine"},"content":"        System.setIn(inContent);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"souledfigurine"},"content":"        Ui testUi \u003d new Ui();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"souledfigurine"},"content":"        assertEquals(\"hello\", testUi.readCommand());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"souledfigurine"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"souledfigurine"},"content":"    void testPrintNewTodo() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"souledfigurine"},"content":"        Todo mockTodo \u003d new Todo(\"New Todo\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"souledfigurine"},"content":"        ui.printNewTodo(mockTodo);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"souledfigurine"},"content":"        assertTrue(outContent.toString().contains(\"added: [T][ ] New Todo\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"souledfigurine"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"souledfigurine"},"content":"    void testPrintMarkAsDone() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"souledfigurine"},"content":"        Task mockTask \u003d new Todo(\"Complete Homework\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"souledfigurine"},"content":"        ui.printMarkAsDone(mockTask);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"souledfigurine"},"content":"        assertTrue(outContent.toString().contains(\"Good job on completing the task!\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"souledfigurine"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"souledfigurine"},"content":"    void testPrintDeleteTask() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"souledfigurine"},"content":"        ui.printDeleteTask(3);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"souledfigurine"},"content":"        assertTrue(outContent.toString().contains(\"delete 3\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"souledfigurine"},"content":"}","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"souledfigurine":76}},{"path":"src/test/java/baymax/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"souledfigurine"},"content":"package baymax.task;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"souledfigurine"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"souledfigurine"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"souledfigurine"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"souledfigurine"},"content":"public class DeadlineTest {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"souledfigurine"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"souledfigurine"},"content":"    void testDeadlineCreationWithValidDate() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"souledfigurine"},"content":"        Deadline deadline \u003d new Deadline(\"Finish assignment\", \"2025-02-07\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"souledfigurine"},"content":"        assertEquals(\"[D][ ] Finish assignment (by: Feb 07 2025)\", deadline.toString());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"souledfigurine"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"souledfigurine"},"content":"    void testDeadlineCreationWithValidDateTime() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"souledfigurine"},"content":"        Deadline deadline \u003d new Deadline(\"Submit 2103\", \"2025-02-13 1800\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"souledfigurine"},"content":"        assertEquals(\"[D][ ] Submit 2103 (by: Feb 13 2025 18:00)\", deadline.toString());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"souledfigurine"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"souledfigurine"},"content":"    void testDeadlineCreationWithInvalidDate() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"souledfigurine"},"content":"        Exception exception \u003d assertThrows(IllegalArgumentException.class, () -\u003e {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"souledfigurine"},"content":"            new Deadline(\"Invalid date\", \"15-Mar-2024\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"souledfigurine"},"content":"        });","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"souledfigurine"},"content":"        assertTrue(exception.getMessage().contains(\"Invalid\"));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"souledfigurine"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"souledfigurine"},"content":"    void testToFileStringFormat() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"souledfigurine"},"content":"        Deadline deadline \u003d new Deadline(\"Finish project\", \"2024-10-10\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"souledfigurine"},"content":"        assertEquals(\"D | false | Finish project | 2024-10-10\", deadline.toFileString());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"souledfigurine"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"souledfigurine"},"content":"}","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"souledfigurine":35}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"souledfigurine"},"content":"todo read book","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"souledfigurine"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"souledfigurine"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"souledfigurine"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"souledfigurine"},"content":"event cs2103 Briefing /from 4pm /to 6pm","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"souledfigurine"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"souledfigurine"},"content":"mark 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"souledfigurine"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"souledfigurine"},"content":"unmark 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"souledfigurine"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"souledfigurine"},"content":"bye","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"souledfigurine":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"souledfigurine"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"souledfigurine"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"souledfigurine"},"content":"java -classpath ..\\bin baymax.Baymax \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"souledfigurine":3,"-":19}}]
