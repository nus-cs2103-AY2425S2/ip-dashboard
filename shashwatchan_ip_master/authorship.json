[{"path":"AI.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashwatchan"},"content":"I have been using Cursor, which is a fork of VS Code, to help me minimize \"handcoding\" for the iP. ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shashwatchan"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shashwatchan"},"content":"In my experience, it is much better than the AI assistance on IDEA, as well as Github Copilot. For most increments, it suffices to give it a description from the course website and it requires no prompt engineering, and minimal editing afterwards. ","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"shashwatchan":3}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashwatchan"},"content":"# Noga project template","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false}],"authorContributionMap":{"shashwatchan":1,"-":25}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shashwatchan"},"content":"T | 1 | read","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"shashwatchan":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashwatchan"},"content":"# Noga User Guide","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"shashwatchan":1,"-":29}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shashwatchan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shashwatchan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shashwatchan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shashwatchan"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shashwatchan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shashwatchan"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shashwatchan"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shashwatchan"},"content":"    private static final DateTimeFormatter OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mm a\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shashwatchan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shashwatchan"},"content":"    public Deadline(String description, String by) throws DateTimeParseException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shashwatchan"},"content":"        super(description);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shashwatchan"},"content":"        this.by \u003d LocalDateTime.parse(by, INPUT_FORMAT);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shashwatchan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shashwatchan"},"content":"    ","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shashwatchan"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shashwatchan"},"content":"        return by;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shashwatchan"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shashwatchan"},"content":"    ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shashwatchan"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shashwatchan"},"content":"    protected char getTypeIcon() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shashwatchan"},"content":"        return \u0027D\u0027;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shashwatchan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shashwatchan"},"content":"    ","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shashwatchan"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shashwatchan"},"content":"    public String toString() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shashwatchan"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(OUTPUT_FORMAT) + \")\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shashwatchan"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shashwatchan"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shashwatchan"},"content":"    public String toFileString() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shashwatchan"},"content":"        return String.format(\"D | %d | %s | %s\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shashwatchan"},"content":"                isDone() ? 1 : 0,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shashwatchan"},"content":"                getDescription(),","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shashwatchan"},"content":"                by.format(INPUT_FORMAT));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shashwatchan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shashwatchan"},"content":"} ","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"shashwatchan":35}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shashwatchan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shashwatchan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shashwatchan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shashwatchan"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shashwatchan"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shashwatchan"},"content":"    protected LocalDateTime startTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shashwatchan"},"content":"    protected LocalDateTime endTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shashwatchan"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shashwatchan"},"content":"    private static final DateTimeFormatter OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mm a\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shashwatchan"},"content":"    ","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shashwatchan"},"content":"    public Event(String description, String startTime, String endTime) throws DateTimeParseException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shashwatchan"},"content":"        super(description);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shashwatchan"},"content":"        this.startTime \u003d LocalDateTime.parse(startTime, INPUT_FORMAT);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shashwatchan"},"content":"        this.endTime \u003d LocalDateTime.parse(endTime, INPUT_FORMAT);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shashwatchan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shashwatchan"},"content":"    ","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shashwatchan"},"content":"    public LocalDateTime getStartTime() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shashwatchan"},"content":"        return startTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shashwatchan"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shashwatchan"},"content":"    ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shashwatchan"},"content":"    public LocalDateTime getEndTime() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shashwatchan"},"content":"        return endTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shashwatchan"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shashwatchan"},"content":"    ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shashwatchan"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shashwatchan"},"content":"    protected char getTypeIcon() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shashwatchan"},"content":"        return \u0027E\u0027;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shashwatchan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shashwatchan"},"content":"    ","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shashwatchan"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shashwatchan"},"content":"    public String toString() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shashwatchan"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + startTime.format(OUTPUT_FORMAT) ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shashwatchan"},"content":"                + \" to: \" + endTime.format(OUTPUT_FORMAT) + \")\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shashwatchan"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shashwatchan"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shashwatchan"},"content":"    public String toFileString() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shashwatchan"},"content":"        return String.format(\"E | %d | %s | %s | %s\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shashwatchan"},"content":"                isDone() ? 1 : 0,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shashwatchan"},"content":"                getDescription(),","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shashwatchan"},"content":"                startTime.format(INPUT_FORMAT),","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shashwatchan"},"content":"                endTime.format(INPUT_FORMAT));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shashwatchan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shashwatchan"},"content":"} ","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"shashwatchan":43}},{"path":"src/main/java/Noga.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shashwatchan"},"content":"import java.io.*;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shashwatchan"},"content":"import java.nio.file.*;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shashwatchan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shashwatchan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shashwatchan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shashwatchan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shashwatchan"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shashwatchan"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shashwatchan"},"content":"public class Noga {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shashwatchan"},"content":"    private static final String DATA_DIR \u003d \"data\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shashwatchan"},"content":"    private static final String DATA_FILE \u003d \"data/tasks.txt\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shashwatchan"},"content":"    private Task[] tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shashwatchan"},"content":"    private int cur_index;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shashwatchan"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shashwatchan"},"content":"    public Noga() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shashwatchan"},"content":"        tasks \u003d new Task[101];","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shashwatchan"},"content":"        cur_index \u003d 1;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shashwatchan"},"content":"        createDataDirectory();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shashwatchan"},"content":"        loadTasks();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shashwatchan"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shashwatchan"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shashwatchan"},"content":"    private void createDataDirectory() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shashwatchan"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shashwatchan"},"content":"            Files.createDirectories(Paths.get(DATA_DIR));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shashwatchan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shashwatchan"},"content":"            System.out.println(\"Warning: Could not create data directory\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shashwatchan"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shashwatchan"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shashwatchan"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shashwatchan"},"content":"    private void loadTasks() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shashwatchan"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shashwatchan"},"content":"            if (!Files.exists(Paths.get(DATA_FILE))) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shashwatchan"},"content":"                return;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shashwatchan"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shashwatchan"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shashwatchan"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(DATA_FILE));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shashwatchan"},"content":"            String line;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shashwatchan"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shashwatchan"},"content":"                String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shashwatchan"},"content":"                if (parts.length \u003c 3) continue;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shashwatchan"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shashwatchan"},"content":"                String type \u003d parts[0];","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shashwatchan"},"content":"                boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shashwatchan"},"content":"                String description \u003d parts[2];","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shashwatchan"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shashwatchan"},"content":"                try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shashwatchan"},"content":"                    switch (type) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shashwatchan"},"content":"                        case \"T\":","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shashwatchan"},"content":"                            tasks[cur_index] \u003d new Task(description);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shashwatchan"},"content":"                            break;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shashwatchan"},"content":"                        case \"D\":","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shashwatchan"},"content":"                            if (parts.length \u003c 4) continue;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shashwatchan"},"content":"                            tasks[cur_index] \u003d new Deadline(description, parts[3]);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shashwatchan"},"content":"                            break;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shashwatchan"},"content":"                        case \"E\":","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shashwatchan"},"content":"                            if (parts.length \u003c 5) continue;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shashwatchan"},"content":"                            tasks[cur_index] \u003d new Event(description, parts[3], parts[4]);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shashwatchan"},"content":"                            break;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shashwatchan"},"content":"                    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shashwatchan"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shashwatchan"},"content":"                    if (isDone) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shashwatchan"},"content":"                        tasks[cur_index].mark();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shashwatchan"},"content":"                    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shashwatchan"},"content":"                    cur_index++;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shashwatchan"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"shashwatchan"},"content":"                    System.out.println(\"Warning: Skipping task with invalid date format: \" + line);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"shashwatchan"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"shashwatchan"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"shashwatchan"},"content":"            reader.close();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"shashwatchan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"shashwatchan"},"content":"            System.out.println(\"Warning: Could not load tasks from file\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"shashwatchan"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"shashwatchan"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"shashwatchan"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"shashwatchan"},"content":"    private void saveTasks() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"shashwatchan"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"shashwatchan"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(DATA_FILE));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"shashwatchan"},"content":"            for (int i \u003d 1; i \u003c cur_index; i++) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"shashwatchan"},"content":"                Task task \u003d tasks[i];","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"shashwatchan"},"content":"                String line;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"shashwatchan"},"content":"                if (task instanceof Event) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"shashwatchan"},"content":"                    line \u003d ((Event) task).toFileString();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"shashwatchan"},"content":"                } else if (task instanceof Deadline) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"shashwatchan"},"content":"                    line \u003d ((Deadline) task).toFileString();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"shashwatchan"},"content":"                } else {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"shashwatchan"},"content":"                    line \u003d String.format(\"T | %d | %s\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"shashwatchan"},"content":"                            task.isDone() ? 1 : 0,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"shashwatchan"},"content":"                            task.getDescription());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"shashwatchan"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"shashwatchan"},"content":"                writer.write(line);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"shashwatchan"},"content":"                writer.newLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"shashwatchan"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"shashwatchan"},"content":"            writer.close();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"shashwatchan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"shashwatchan"},"content":"            System.out.println(\"Warning: Could not save tasks to file\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"shashwatchan"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"shashwatchan"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"shashwatchan"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"shashwatchan"},"content":"    private void showTasksOnDate(String dateStr) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"shashwatchan"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"shashwatchan"},"content":"            LocalDate date \u003d LocalDate.parse(dateStr, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"shashwatchan"},"content":"            System.out.println(\"Tasks on \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \":\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"shashwatchan"},"content":"            boolean found \u003d false;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"shashwatchan"},"content":"            ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"shashwatchan"},"content":"            for (int i \u003d 1; i \u003c cur_index; i++) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"shashwatchan"},"content":"                Task task \u003d tasks[i];","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"shashwatchan"},"content":"                LocalDateTime taskDate \u003d null;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"shashwatchan"},"content":"                ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"shashwatchan"},"content":"                if (task instanceof Deadline) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"shashwatchan"},"content":"                    taskDate \u003d ((Deadline) task).getBy();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"shashwatchan"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"shashwatchan"},"content":"                    taskDate \u003d ((Event) task).getStartTime();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"shashwatchan"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"shashwatchan"},"content":"                ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"shashwatchan"},"content":"                if (taskDate !\u003d null \u0026\u0026 taskDate.toLocalDate().equals(date)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"shashwatchan"},"content":"                    System.out.println(i + \".\" + task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"shashwatchan"},"content":"                    found \u003d true;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"shashwatchan"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"shashwatchan"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"shashwatchan"},"content":"            ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"shashwatchan"},"content":"            if (!found) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"shashwatchan"},"content":"                System.out.println(\"No tasks found on this date.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"shashwatchan"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"shashwatchan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"shashwatchan"},"content":"            System.out.println(\"Please use the format yyyy-MM-dd (e.g., 2024-03-15)\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"shashwatchan"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"shashwatchan"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"shashwatchan"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"shashwatchan"},"content":"    public void run() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"shashwatchan"},"content":"        System.out.println(\"Hello I am Noga, what can I do for you?\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"shashwatchan"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"shashwatchan"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"shashwatchan"},"content":"        while(true) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"shashwatchan"},"content":"            String userInput \u003d scanner.nextLine().trim();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"shashwatchan"},"content":"            if(userInput.equals(\"bye\")){","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"shashwatchan"},"content":"                break;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"shashwatchan"},"content":"            }       ","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"shashwatchan"},"content":"            if(userInput.equals(\"list\")){","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"shashwatchan"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"shashwatchan"},"content":"                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"shashwatchan"},"content":"                for(int i \u003d 1; i \u003c cur_index; i++){","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"shashwatchan"},"content":"                    System.out.println(i + \".\" + tasks[i]);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"shashwatchan"},"content":"                }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"shashwatchan"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"shashwatchan"},"content":"                continue;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"shashwatchan"},"content":"            }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"shashwatchan"},"content":"            if(userInput.startsWith(\"mark\")){","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"shashwatchan"},"content":"                try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"shashwatchan"},"content":"                    String[] parts \u003d userInput.split(\" \");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"shashwatchan"},"content":"                    if (parts.length \u003c 2) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"shashwatchan"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"shashwatchan"},"content":"                        System.out.println(\"Please specify which task to mark (e.g., mark 1)\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"shashwatchan"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"shashwatchan"},"content":"                        continue;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"shashwatchan"},"content":"                    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"shashwatchan"},"content":"                    int index \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"shashwatchan"},"content":"                    if (index \u003c 1 || index \u003e\u003d cur_index) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"shashwatchan"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"shashwatchan"},"content":"                        System.out.println(\"Task number \" + index + \" does not exist!\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"shashwatchan"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"shashwatchan"},"content":"                        continue;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"shashwatchan"},"content":"                    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"shashwatchan"},"content":"                    tasks[index].mark();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"shashwatchan"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"shashwatchan"},"content":"                    System.out.println(tasks[index]);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"shashwatchan"},"content":"                    saveTasks();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"shashwatchan"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"shashwatchan"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"shashwatchan"},"content":"                    System.out.println(\"Please provide a valid task number!\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"shashwatchan"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"shashwatchan"},"content":"                }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"shashwatchan"},"content":"                continue;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"shashwatchan"},"content":"            }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"shashwatchan"},"content":"            if(userInput.startsWith(\"unmark\")){","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"shashwatchan"},"content":"                try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"shashwatchan"},"content":"                    String[] parts \u003d userInput.split(\" \");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"shashwatchan"},"content":"                    if (parts.length \u003c 2) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"shashwatchan"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"shashwatchan"},"content":"                        System.out.println(\"Please specify which task to unmark (e.g., unmark 1)\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"shashwatchan"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"shashwatchan"},"content":"                        continue;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"shashwatchan"},"content":"                    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"shashwatchan"},"content":"                    int index \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"shashwatchan"},"content":"                    if (index \u003c 1 || index \u003e\u003d cur_index) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"shashwatchan"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"shashwatchan"},"content":"                        System.out.println(\"Task number \" + index + \" does not exist!\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"shashwatchan"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"shashwatchan"},"content":"                        continue;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"shashwatchan"},"content":"                    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"shashwatchan"},"content":"                    tasks[index].unmark();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"shashwatchan"},"content":"                    System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"shashwatchan"},"content":"                    System.out.println(tasks[index]);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"shashwatchan"},"content":"                    saveTasks();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"shashwatchan"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"shashwatchan"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"shashwatchan"},"content":"                    System.out.println(\"Please provide a valid task number!\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"shashwatchan"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"shashwatchan"},"content":"                }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"shashwatchan"},"content":"                continue;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"shashwatchan"},"content":"            }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"shashwatchan"},"content":"            if(userInput.startsWith(\"delete\")){","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"shashwatchan"},"content":"                try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"shashwatchan"},"content":"                    String[] parts \u003d userInput.split(\" \");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"shashwatchan"},"content":"                    if (parts.length \u003c 2) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"shashwatchan"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"shashwatchan"},"content":"                        System.out.println(\"Please specify which task to delete (e.g., delete 1)\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"shashwatchan"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"shashwatchan"},"content":"                        continue;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"shashwatchan"},"content":"                    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"shashwatchan"},"content":"                    int index \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"shashwatchan"},"content":"                    if (index \u003c 1 || index \u003e\u003d cur_index) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"shashwatchan"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"shashwatchan"},"content":"                        System.out.println(\"Task number \" + index + \" does not exist!\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"shashwatchan"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"shashwatchan"},"content":"                        continue;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"shashwatchan"},"content":"                    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"shashwatchan"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"shashwatchan"},"content":"                    System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"shashwatchan"},"content":"                    System.out.println(\"  \" + tasks[index]);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"shashwatchan"},"content":"                    ","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"shashwatchan"},"content":"                    // Shift remaining tasks to fill the gap","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"shashwatchan"},"content":"                    for(int i \u003d index; i \u003c cur_index - 1; i++){","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"shashwatchan"},"content":"                        tasks[i] \u003d tasks[i + 1];","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"shashwatchan"},"content":"                    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"shashwatchan"},"content":"                    cur_index--;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"shashwatchan"},"content":"                    ","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"shashwatchan"},"content":"                    System.out.println(\"Now you have \" + (cur_index-1) + \" tasks in the list.\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"shashwatchan"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"shashwatchan"},"content":"                    saveTasks();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"shashwatchan"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"shashwatchan"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"shashwatchan"},"content":"                    System.out.println(\"Please provide a valid task number!\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"shashwatchan"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"shashwatchan"},"content":"                }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"shashwatchan"},"content":"                continue;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"shashwatchan"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"shashwatchan"},"content":"            ","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"shashwatchan"},"content":"            // Add new command to show tasks on a specific date","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"shashwatchan"},"content":"            if (userInput.startsWith(\"show date\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"shashwatchan"},"content":"                String dateStr \u003d userInput.substring(9).trim();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"shashwatchan"},"content":"                if (dateStr.isEmpty()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"shashwatchan"},"content":"                    System.out.println(\"Please specify a date (yyyy-MM-dd)\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"shashwatchan"},"content":"                    continue;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"shashwatchan"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"shashwatchan"},"content":"                showTasksOnDate(dateStr);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"shashwatchan"},"content":"                continue;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"shashwatchan"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"shashwatchan"},"content":"            ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"shashwatchan"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"shashwatchan"},"content":"            if(userInput.startsWith(\"todo\")) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"shashwatchan"},"content":"                String description \u003d userInput.substring(4).trim();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"shashwatchan"},"content":"                if (description.isEmpty()) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"shashwatchan"},"content":"                    System.out.println(\"Please provide a description for your todo!\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"shashwatchan"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"shashwatchan"},"content":"                    continue;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"shashwatchan"},"content":"                }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"shashwatchan"},"content":"                tasks[cur_index] \u003d new Task(description);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"shashwatchan"},"content":"            } else if(userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"shashwatchan"},"content":"                String[] parts \u003d userInput.split(\" /by \");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"shashwatchan"},"content":"                if(parts.length !\u003d 2 || parts[0].substring(8).trim().isEmpty()) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"shashwatchan"},"content":"                    System.out.println(\"Please use the format: deadline \u003cdescription\u003e /by yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"shashwatchan"},"content":"                    System.out.println(\"Example: deadline return book /by 2024-03-15 1800\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"shashwatchan"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"shashwatchan"},"content":"                    continue;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"shashwatchan"},"content":"                }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"shashwatchan"},"content":"                String description \u003d parts[0].substring(8).trim();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"shashwatchan"},"content":"                try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"shashwatchan"},"content":"                    tasks[cur_index] \u003d new Deadline(description, parts[1].trim());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"shashwatchan"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"shashwatchan"},"content":"                    System.out.println(\"Please use the format yyyy-MM-dd HHmm for the deadline\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"shashwatchan"},"content":"                    System.out.println(\"Example: 2024-03-15 1800 for March 15, 2024, 6:00 PM\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"shashwatchan"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"shashwatchan"},"content":"                    continue;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"shashwatchan"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"shashwatchan"},"content":"            } else if(userInput.startsWith(\"event\")) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"shashwatchan"},"content":"                String[] parts \u003d userInput.split(\" /from | /to \");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"shashwatchan"},"content":"                if(parts.length !\u003d 3 || parts[0].substring(5).trim().isEmpty()) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"shashwatchan"},"content":"                    System.out.println(\"Please use the format: event \u003cdescription\u003e /from yyyy-MM-dd HHmm /to yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"shashwatchan"},"content":"                    System.out.println(\"Example: event project meeting /from 2024-03-15 1400 /to 2024-03-15 1600\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"shashwatchan"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"shashwatchan"},"content":"                    continue;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"shashwatchan"},"content":"                }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"shashwatchan"},"content":"                String description \u003d parts[0].substring(5).trim();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"shashwatchan"},"content":"                try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"shashwatchan"},"content":"                    tasks[cur_index] \u003d new Event(description, parts[1].trim(), parts[2].trim());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"shashwatchan"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"shashwatchan"},"content":"                    System.out.println(\"Please use the format yyyy-MM-dd HHmm for the dates\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"shashwatchan"},"content":"                    System.out.println(\"Example: 2024-03-15 1400 for March 15, 2024, 2:00 PM\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"shashwatchan"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"shashwatchan"},"content":"                    continue;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"shashwatchan"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"shashwatchan"},"content":"            } else {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"shashwatchan"},"content":"                System.out.println(\"I\u0027m not sure what you mean. Here are the commands I understand:\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"shashwatchan"},"content":"                System.out.println(\"  todo \u003cdescription\u003e\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"shashwatchan"},"content":"                System.out.println(\"  deadline \u003cdescription\u003e /by \u003cdeadline\u003e\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"shashwatchan"},"content":"                System.out.println(\"  event \u003cdescription\u003e /from \u003cstart-time\u003e /to \u003cend-time\u003e\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"shashwatchan"},"content":"                System.out.println(\"  list\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"shashwatchan"},"content":"                System.out.println(\"  mark \u003ctask-number\u003e\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"shashwatchan"},"content":"                System.out.println(\"  unmark \u003ctask-number\u003e\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"shashwatchan"},"content":"                System.out.println(\"  delete \u003ctask-number\u003e\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"shashwatchan"},"content":"                System.out.println(\"  show date \u003cdate\u003e\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"shashwatchan"},"content":"                System.out.println(\"  bye\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"shashwatchan"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"shashwatchan"},"content":"                continue;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"shashwatchan"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"shashwatchan"},"content":"            ","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"shashwatchan"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"shashwatchan"},"content":"            System.out.println(\"  \" + tasks[cur_index]);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"shashwatchan"},"content":"            cur_index++;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"shashwatchan"},"content":"            System.out.println(\"Now you have \" + (cur_index-1) + \" tasks in the list.\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"shashwatchan"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"shashwatchan"},"content":"            saveTasks();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"shashwatchan"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"shashwatchan"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"shashwatchan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"shashwatchan"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"shashwatchan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"shashwatchan"},"content":"        new Noga().run();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"shashwatchan"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"shashwatchan"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"shashwatchan":320}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shashwatchan"},"content":"public class Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shashwatchan"},"content":"    protected String description;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shashwatchan"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shashwatchan"},"content":"    ","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shashwatchan"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shashwatchan"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shashwatchan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shashwatchan"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shashwatchan"},"content":"    ","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shashwatchan"},"content":"    public void mark() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shashwatchan"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shashwatchan"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shashwatchan"},"content":"    ","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shashwatchan"},"content":"    public void unmark() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shashwatchan"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shashwatchan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shashwatchan"},"content":"    ","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shashwatchan"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shashwatchan"},"content":"        return description;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shashwatchan"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shashwatchan"},"content":"    ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shashwatchan"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shashwatchan"},"content":"        return isDone;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shashwatchan"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shashwatchan"},"content":"    ","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shashwatchan"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shashwatchan"},"content":"    public String toString() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shashwatchan"},"content":"        return \"[\" + (isDone ? \"✓\" : \"✗\") + \"] \" + description;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shashwatchan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shashwatchan"},"content":"    ","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shashwatchan"},"content":"    protected char getTypeIcon() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shashwatchan"},"content":"        return \u0027T\u0027;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shashwatchan"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shashwatchan"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"shashwatchan":34}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shashwatchan"},"content":"list","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shashwatchan"},"content":"todo read","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"shashwatchan":2}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shashwatchan"},"content":"java -classpath ..\\bin Noga \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"shashwatchan":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shashwatchan"},"content":"java -classpath ../bin Noga \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"shashwatchan":1,"-":37}}]
