[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"zacklow28"},"content":"# FeedMe project template","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zacklow28"},"content":"1. After that, locate the `src/main/java/FeedMe.java` file, right-click it, and choose `Run FeedMe.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false}],"authorContributionMap":{"-":24,"zacklow28":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"zacklow28"},"content":"# FeedMe User Guide","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"-":29,"zacklow28":1}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacklow28"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zacklow28"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zacklow28"},"content":"import java.util.*;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zacklow28"},"content":"import java.io.*;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zacklow28"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zacklow28"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zacklow28"},"content":"    private LocalDate duedate;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zacklow28"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zacklow28"},"content":"    public Deadline(String name, String duedate) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zacklow28"},"content":"        super(name);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zacklow28"},"content":"        this.duedate \u003d LocalDate.parse(duedate);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zacklow28"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zacklow28"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zacklow28"},"content":"    public Deadline(String name, boolean done, String duedate) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zacklow28"},"content":"        super(name, done);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zacklow28"},"content":"        this.duedate \u003d LocalDate.parse(duedate);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zacklow28"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zacklow28"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zacklow28"},"content":"    public String getDate() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zacklow28"},"content":"        return this.duedate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zacklow28"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zacklow28"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zacklow28"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zacklow28"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zacklow28"},"content":"        return String.format(\"[D]%s by: %s\", super.toString(), this.duedate);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zacklow28"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zacklow28"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zacklow28"},"content":"    public String toString2() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zacklow28"},"content":"        return String.format(\"[D]%s by: %s\", super.toString(), this.getDate());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zacklow28"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zacklow28"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"zacklow28":31}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacklow28"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zacklow28"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zacklow28"},"content":"import java.util.*;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zacklow28"},"content":"import java.io.*;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zacklow28"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zacklow28"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zacklow28"},"content":"    private LocalDate startdate;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zacklow28"},"content":"    private LocalDate enddate;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zacklow28"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zacklow28"},"content":"    public Event(String name, String date) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zacklow28"},"content":"        super(name);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zacklow28"},"content":"        this.startdate \u003d LocalDate.parse(date.split(\" /to \")[0]);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zacklow28"},"content":"        this.enddate \u003d LocalDate.parse(date.split(\" /to \")[1]);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zacklow28"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zacklow28"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zacklow28"},"content":"    public Event(String name, boolean done, String date) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zacklow28"},"content":"        super(name, done);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zacklow28"},"content":"        this.startdate \u003d LocalDate.parse(date.split(\" /to \")[0]);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zacklow28"},"content":"        this.enddate \u003d LocalDate.parse(date.split(\" /to \")[1]);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zacklow28"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zacklow28"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zacklow28"},"content":"    public String getStartDate() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zacklow28"},"content":"        return this.startdate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zacklow28"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zacklow28"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zacklow28"},"content":"    public String getEndDate() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zacklow28"},"content":"        return this.enddate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zacklow28"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zacklow28"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zacklow28"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zacklow28"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zacklow28"},"content":"        return String.format(\"[E]%s from: %s to: %s\", super.toString(), this.startdate, this.enddate);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zacklow28"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zacklow28"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zacklow28"},"content":"    public String toString2() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zacklow28"},"content":"        return String.format(\"[E]%s from: %s to: %s\", super.toString(), this.getStartDate(), this.getEndDate());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zacklow28"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zacklow28"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"zacklow28":38}},{"path":"src/main/java/FeedMe.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacklow28"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zacklow28"},"content":"import java.util.*;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zacklow28"},"content":"import java.io.*;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zacklow28"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zacklow28"},"content":"public class FeedMe {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zacklow28"},"content":"    private static final ArrayList\u003cTask\u003e tasklist \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zacklow28"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zacklow28"},"content":"    public static void delete(ArrayList\u003cTask\u003e tasklist, int index) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zacklow28"},"content":"        System.out.println(\"Okay, I\u0027ve swallowed this Food:\\n\" + tasklist.get(index).toString2());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zacklow28"},"content":"        tasklist.remove(index);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zacklow28"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zacklow28"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zacklow28"},"content":"    public static void printTotal(ArrayList\u003cTask\u003e tasklist) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zacklow28"},"content":"        System.out.printf(\"Now you have %s Food in my tummy.\\n\", tasklist.size());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zacklow28"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zacklow28"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zacklow28"},"content":"    public static void printList(ArrayList\u003cTask\u003e tasklist) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zacklow28"},"content":"        System.out.println(\"Here are the Food in my tummy: \");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zacklow28"},"content":"        for (int i \u003d 1; i \u003c\u003d tasklist.size(); i++) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zacklow28"},"content":"            System.out.println(i + \": \" + tasklist.get(i - 1).toString2());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zacklow28"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zacklow28"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zacklow28"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zacklow28"},"content":"    public static void addTask(ArrayList\u003cTask\u003e tasklist, Task task) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zacklow28"},"content":"        tasklist.add(task);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zacklow28"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zacklow28"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zacklow28"},"content":"    public static void initializeFile(String filepath) throws IOException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zacklow28"},"content":"        File file \u003d new File(filepath);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zacklow28"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zacklow28"},"content":"            file.createNewFile();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zacklow28"},"content":"            System.out.println(\"Created a new stomach at: \" + filepath);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zacklow28"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zacklow28"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zacklow28"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zacklow28"},"content":"    public static void retrieveFromFile(String filepath) throws IOException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zacklow28"},"content":"        File file \u003d new File(filepath);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zacklow28"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zacklow28"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zacklow28"},"content":"            String line \u003d scanner.nextLine();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zacklow28"},"content":"            line \u003d line.replace(\"to:\", \"/to\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zacklow28"},"content":"            char taskType \u003d line.charAt(1);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zacklow28"},"content":"            String food \u003d line.substring(7).trim(); //exclude the [ ][ ]","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zacklow28"},"content":"            switch (taskType) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zacklow28"},"content":"            case \u0027T\u0027:","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zacklow28"},"content":"                if (line.contains(\"[X]\")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zacklow28"},"content":"                    addTask(tasklist, new ToDo(food, true));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zacklow28"},"content":"                } else {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zacklow28"},"content":"                    addTask(tasklist, new ToDo(food));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zacklow28"},"content":"                }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zacklow28"},"content":"                break;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zacklow28"},"content":"            case \u0027D\u0027:","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zacklow28"},"content":"                String[] foodArr \u003d food.split(\" by: \");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zacklow28"},"content":"                if (line.contains(\"[X]\")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zacklow28"},"content":"                    addTask(tasklist, new Deadline(foodArr[0], true, foodArr[1]));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zacklow28"},"content":"                } else {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zacklow28"},"content":"                    addTask(tasklist, new Deadline(foodArr[0], foodArr[1]));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zacklow28"},"content":"                }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zacklow28"},"content":"                break;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zacklow28"},"content":"            case \u0027E\u0027:","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zacklow28"},"content":"                String[] foodArr2 \u003d food.split(\" from: \");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zacklow28"},"content":"                if (line.contains(\"[X]\")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zacklow28"},"content":"                    addTask(tasklist, new Event(foodArr2[0], true, foodArr2[1]));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zacklow28"},"content":"                } else {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zacklow28"},"content":"                    addTask(tasklist, new Event(foodArr2[0], foodArr2[1]));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zacklow28"},"content":"                }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zacklow28"},"content":"                break;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zacklow28"},"content":"            default:","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zacklow28"},"content":"                throw new IndexOutOfBoundsException();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zacklow28"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zacklow28"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zacklow28"},"content":"        scanner.close();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zacklow28"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zacklow28"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zacklow28"},"content":"    public static void appendToFile(String filepath, Task curr) throws IOException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zacklow28"},"content":"        FileWriter fw \u003d new FileWriter(filepath, true);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zacklow28"},"content":"        fw.write(curr.toString() + \"\\n\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zacklow28"},"content":"        fw.close();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zacklow28"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zacklow28"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zacklow28"},"content":"    public static void writeToFile(String filepath, ArrayList\u003cTask\u003e tasklist) throws IOException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zacklow28"},"content":"        FileWriter fw \u003d new FileWriter(filepath);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zacklow28"},"content":"        for (Task t : tasklist) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zacklow28"},"content":"            fw.write(t.toString() + \"\\n\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"zacklow28"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"zacklow28"},"content":"        fw.close();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"zacklow28"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"zacklow28"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"zacklow28"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"zacklow28"},"content":"        String greeting \u003d  \"Hello! I\u0027m FeedMe.\\nWhat can I do for you?\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"zacklow28"},"content":"        String goodbye \u003d \"Munch. Hope to see you again soon!\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"zacklow28"},"content":"        String invalidCommand \u003d \"Invalid/Missing Command! Feed me again!\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"zacklow28"},"content":"        String invalidIndex \u003d \"Invalid/Missing Food Index! Feed me again!\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"zacklow28"},"content":"        String invalidName \u003d \"Invalid/Missing Food Name! Feed me again!\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"zacklow28"},"content":"        String invalidNameOrDate \u003d \"Invalid/Missing Food Name and/or Date! Feed me again!\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"zacklow28"},"content":"        String invalidDate \u003d \"Invalid/Missing Date! Feed me again!\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"zacklow28"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"zacklow28"},"content":"        System.out.println(greeting);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"zacklow28"},"content":"        BufferedReader br \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"zacklow28"},"content":"        System.out.println(\"Tummy path (with extension) : \");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"zacklow28"},"content":"        String filepath \u003d br.readLine();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"zacklow28"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"zacklow28"},"content":"        //read from file","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"zacklow28"},"content":"        while (filepath !\u003d null) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"zacklow28"},"content":"            try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"zacklow28"},"content":"                retrieveFromFile(filepath);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"zacklow28"},"content":"                break;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"zacklow28"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"zacklow28"},"content":"                System.out.println(\"Tummy location not found.\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"zacklow28"},"content":"                initializeFile(filepath);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"zacklow28"},"content":"                break;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"zacklow28"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"zacklow28"},"content":"                System.out.println(\"Invalid/Missing content! Feed me again!\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"zacklow28"},"content":"                filepath \u003d br.readLine();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"zacklow28"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"zacklow28"},"content":"                System.out.println(\"Invalid/Missing Date! Feed me again!\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"zacklow28"},"content":"                filepath \u003d br.readLine();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"zacklow28"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"zacklow28"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"zacklow28"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"zacklow28"},"content":"        System.out.println(\"Tummy set!\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"zacklow28"},"content":"        String in \u003d br.readLine();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"zacklow28"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"zacklow28"},"content":"        // loop","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"zacklow28"},"content":"        while (in !\u003d null) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"zacklow28"},"content":"            String[] inArr \u003d in.split(\" \", 2);  //split just on the first space","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"zacklow28"},"content":"            if (in.equals(\"bye\")) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"zacklow28"},"content":"                System.out.println(goodbye);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"zacklow28"},"content":"                break;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"zacklow28"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"zacklow28"},"content":"            else if (in.equals(\"list\")) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"zacklow28"},"content":"                printList(tasklist);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"zacklow28"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"zacklow28"},"content":"            else if (inArr[0].equals(\"mark\")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"zacklow28"},"content":"                try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"zacklow28"},"content":"                    int index \u003d Integer.parseInt(inArr[1]) - 1;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"zacklow28"},"content":"                    Task curr \u003d tasklist.get(index);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"zacklow28"},"content":"                    curr.mark();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"zacklow28"},"content":"                    System.out.println(\"Yay! I\u0027ve marked this Food as eaten!\\n\" + curr.toString2());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"zacklow28"},"content":"                    writeToFile(filepath, tasklist);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"zacklow28"},"content":"                }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"zacklow28"},"content":"                catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"zacklow28"},"content":"                    System.out.println(invalidIndex);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"zacklow28"},"content":"                    in \u003d br.readLine();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"zacklow28"},"content":"                    continue;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"zacklow28"},"content":"                }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"zacklow28"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"zacklow28"},"content":"            else if (inArr[0].equals(\"unmark\")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"zacklow28"},"content":"                try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"zacklow28"},"content":"                    int index \u003d Integer.parseInt(inArr[1]) - 1;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"zacklow28"},"content":"                    Task curr \u003d tasklist.get(index);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"zacklow28"},"content":"                    curr.unmark();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"zacklow28"},"content":"                    System.out.println(\"Aww! I\u0027ve unmarked this Food as not eaten!\\n\" + curr.toString2());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"zacklow28"},"content":"                    writeToFile(filepath, tasklist);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"zacklow28"},"content":"                }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"zacklow28"},"content":"                catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"zacklow28"},"content":"                    System.out.println(invalidIndex);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"zacklow28"},"content":"                    in \u003d br.readLine();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"zacklow28"},"content":"                    continue;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"zacklow28"},"content":"                }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"zacklow28"},"content":"            }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"zacklow28"},"content":"            else if (inArr[0].equals(\"delete\")) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"zacklow28"},"content":"                try {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"zacklow28"},"content":"                    int index \u003d Integer.parseInt(inArr[1]) - 1;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"zacklow28"},"content":"                    delete(tasklist, index);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"zacklow28"},"content":"                    printTotal(tasklist);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"zacklow28"},"content":"                    writeToFile(filepath, tasklist);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"zacklow28"},"content":"                }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"zacklow28"},"content":"                catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"zacklow28"},"content":"                    System.out.println(invalidIndex);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"zacklow28"},"content":"                    in \u003d br.readLine();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"zacklow28"},"content":"                    continue;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"zacklow28"},"content":"                }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"zacklow28"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"zacklow28"},"content":"            else {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"zacklow28"},"content":"                Task curr;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"zacklow28"},"content":"                if (inArr[0].equals(\"todo\")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"zacklow28"},"content":"                    try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"zacklow28"},"content":"                        curr \u003d new ToDo(inArr[1]);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"zacklow28"},"content":"                    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"zacklow28"},"content":"                    catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"zacklow28"},"content":"                        System.out.println(invalidName);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"zacklow28"},"content":"                        in \u003d br.readLine();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"zacklow28"},"content":"                        continue;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"zacklow28"},"content":"                    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"zacklow28"},"content":"                }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"zacklow28"},"content":"                else if (inArr[0].equals(\"deadline\")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"zacklow28"},"content":"                    try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"zacklow28"},"content":"                        String[] inArr2 \u003d inArr[1].split(\" /by \"); //split second part to get due date","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"zacklow28"},"content":"                        curr \u003d new Deadline(inArr2[0], inArr2[1]);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"zacklow28"},"content":"                    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"zacklow28"},"content":"                    catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"zacklow28"},"content":"                        System.out.println(invalidNameOrDate);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"zacklow28"},"content":"                        in \u003d br.readLine();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"zacklow28"},"content":"                        continue;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"zacklow28"},"content":"                    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"zacklow28"},"content":"                    catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"zacklow28"},"content":"                        System.out.println(invalidDate);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"zacklow28"},"content":"                        in \u003d br.readLine();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"zacklow28"},"content":"                        continue;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"zacklow28"},"content":"                    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"zacklow28"},"content":"                }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"zacklow28"},"content":"                else if (inArr[0].equals(\"event\")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"zacklow28"},"content":"                    try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"zacklow28"},"content":"                        String[] inArr2 \u003d inArr[1].split(\" /from \"); //split second part to get due date","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"zacklow28"},"content":"                        curr \u003d new Event(inArr2[0], inArr2[1]);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"zacklow28"},"content":"                    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"zacklow28"},"content":"                    catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"zacklow28"},"content":"                        System.out.println(invalidNameOrDate);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"zacklow28"},"content":"                        in \u003d br.readLine();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"zacklow28"},"content":"                        continue;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"zacklow28"},"content":"                    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"zacklow28"},"content":"                    catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"zacklow28"},"content":"                        System.out.println(invalidDate);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"zacklow28"},"content":"                        in \u003d br.readLine();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"zacklow28"},"content":"                        continue;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"zacklow28"},"content":"                    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"zacklow28"},"content":"                }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"zacklow28"},"content":"                else {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"zacklow28"},"content":"                    System.out.println(invalidCommand);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"zacklow28"},"content":"                    in \u003d br.readLine();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"zacklow28"},"content":"                    continue;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"zacklow28"},"content":"                }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"zacklow28"},"content":"                addTask(tasklist, curr);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"zacklow28"},"content":"                System.out.println(\"Got it. I\u0027ve added this Food:\\n\" + curr.toString2());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"zacklow28"},"content":"                appendToFile(filepath, curr);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"zacklow28"},"content":"                printTotal(tasklist);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"zacklow28"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"zacklow28"},"content":"            in \u003d br.readLine();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"zacklow28"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"zacklow28"},"content":"        br.close();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29","isFullCredit":false}],"authorContributionMap":{"-":2,"zacklow28":231}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacklow28"},"content":"import java.util.*;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zacklow28"},"content":"import java.io.*;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zacklow28"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zacklow28"},"content":"public class Task {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zacklow28"},"content":"    private String name;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zacklow28"},"content":"    private Boolean done \u003d false;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zacklow28"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zacklow28"},"content":"    public Task(String name) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zacklow28"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zacklow28"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zacklow28"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zacklow28"},"content":"    public Task(String name, Boolean done) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zacklow28"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zacklow28"},"content":"        this.done \u003d done;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zacklow28"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zacklow28"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zacklow28"},"content":"    public void mark() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zacklow28"},"content":"        this.done \u003d true;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zacklow28"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zacklow28"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zacklow28"},"content":"    public void unmark() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zacklow28"},"content":"        this.done \u003d false;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zacklow28"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zacklow28"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zacklow28"},"content":"    public String getName() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zacklow28"},"content":"        return this.name;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zacklow28"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zacklow28"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zacklow28"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zacklow28"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zacklow28"},"content":"        String checkbox \u003d this.done ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zacklow28"},"content":"        return checkbox + name;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zacklow28"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zacklow28"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zacklow28"},"content":"    public String toString2() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zacklow28"},"content":"        String checkbox \u003d this.done ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zacklow28"},"content":"        return checkbox + name;}","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zacklow28"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"zacklow28":38}},{"path":"src/main/java/TestingTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacklow28"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zacklow28"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zacklow28"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zacklow28"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zacklow28"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zacklow28"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zacklow28"},"content":"public class TestingTest {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zacklow28"},"content":"   @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zacklow28"},"content":"   public void TestToDo() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zacklow28"},"content":"       //case 1","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zacklow28"},"content":"       assertEquals(\"[T][ ] todo borrow book\", new ToDo(\"todo borrow book\").toString());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zacklow28"},"content":"   }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zacklow28"},"content":"   @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zacklow28"},"content":"   public void TestDeadline() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zacklow28"},"content":"       //case 1","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zacklow28"},"content":"       assertEquals(\"[D][ ] deadline return book by: Dec 03 2007\", new Deadline(\"deadline return book\", \"2007-12-03\").toString());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zacklow28"},"content":"   }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zacklow28"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zacklow28"},"content":"   @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zacklow28"},"content":"   public void TestEvent() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zacklow28"},"content":"       //case 1","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zacklow28"},"content":"       assertEquals(\"[E][ ] event project meeting from: Feb 03 2001 to: Feb 04 2001\", new Event(\"event project meeting\", \"2001-02-03 /to 2001-02-04\").toString());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zacklow28"},"content":"   }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zacklow28"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"zacklow28":24}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacklow28"},"content":"import java.util.*;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zacklow28"},"content":"import java.io.*;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zacklow28"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zacklow28"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zacklow28"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zacklow28"},"content":"    public ToDo(String name) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zacklow28"},"content":"        super(name);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zacklow28"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zacklow28"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zacklow28"},"content":"    public ToDo(String name, boolean done) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zacklow28"},"content":"        super(name, done);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zacklow28"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zacklow28"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zacklow28"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zacklow28"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zacklow28"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zacklow28"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zacklow28"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zacklow28"},"content":"    public String toString2() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zacklow28"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zacklow28"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zacklow28"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"zacklow28":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zacklow28"},"content":"todo borrow book","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zacklow28"},"content":"list","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zacklow28"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zacklow28"},"content":"mark 2","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zacklow28"},"content":"list","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zacklow28"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zacklow28"},"content":"mark 3","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zacklow28"},"content":"unmark 2","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zacklow28"},"content":"list","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zacklow28"},"content":"bye","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"zacklow28":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zacklow28"},"content":"java -classpath ..\\bin FeedMe \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":20,"zacklow28":1}}]
