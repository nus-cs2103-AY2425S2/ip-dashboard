[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xa0412"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xa0412"},"content":"    protected String by;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xa0412"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xa0412"},"content":"        super(description);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xa0412"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xa0412"},"content":"    @Override","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xa0412"},"content":"    public String toString() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xa0412"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + by + \")\";","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xa0412"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"xa0412":13}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xa0412"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xa0412"},"content":"    protected String startTime;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xa0412"},"content":"    protected String endTime;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xa0412"},"content":"    public Event(String description, String startTime, String endTime) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xa0412"},"content":"        super(description);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xa0412"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xa0412"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xa0412"},"content":"    @Override","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xa0412"},"content":"    public String toString() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xa0412"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + startTime + \" to: \" + endTime + \")\";","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xa0412"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"xa0412":15}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xa0412"},"content":"public class Task {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xa0412"},"content":"    protected String description;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xa0412"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xa0412"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xa0412"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xa0412"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xa0412"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xa0412"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xa0412"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xa0412"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xa0412"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xa0412"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xa0412"},"content":"    @Override","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xa0412"},"content":"    public String toString() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xa0412"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xa0412"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"xa0412":26}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xa0412"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xa0412"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xa0412"},"content":"        super(description);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xa0412"},"content":"    @Override","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xa0412"},"content":"    public String toString() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xa0412"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xa0412"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"xa0412":11}},{"path":"src/main/java/Xan.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xa0412"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xa0412"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xa0412"},"content":"public class Xan {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xa0412"},"content":"    private static final ArrayList\u003cTask\u003e listArray \u003d  new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xa0412"},"content":"    private enum TaskType {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xa0412"},"content":"        TODO,","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xa0412"},"content":"        DEADLINE,","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xa0412"},"content":"        EVENT;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xa0412"},"content":"        public static TaskType fromString(String input) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xa0412"},"content":"            return switch (input.toLowerCase()) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xa0412"},"content":"                case \"todo\" -\u003e TODO;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xa0412"},"content":"                case \"deadline\" -\u003e DEADLINE;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xa0412"},"content":"                case \"event\" -\u003e EVENT;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xa0412"},"content":"                default -\u003e throw new IllegalArgumentException(\"Unknown task type: \" + input);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xa0412"},"content":"            };","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xa0412"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xa0412"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xa0412"},"content":"        welcomeMessage();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xa0412"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xa0412"},"content":"        while (true) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xa0412"},"content":"            try {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xa0412"},"content":"                String chat \u003d sc.nextLine().trim();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xa0412"},"content":"                if (chat.equals(\"bye\")) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xa0412"},"content":"                    System.out.println(\"bye. Hope to see you again!\");","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xa0412"},"content":"                    break;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xa0412"},"content":"                } else if (chat.equals(\"list\")) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xa0412"},"content":"                    showList();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xa0412"},"content":"                } else if (chat.startsWith(\"mark\")) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xa0412"},"content":"                    markTask(chat);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xa0412"},"content":"                } else if (chat.startsWith(\"unmark\")) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xa0412"},"content":"                    unmarkTask(chat);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xa0412"},"content":"                } else if (chat.startsWith(\"delete\")) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xa0412"},"content":"                    deleteTask(chat);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xa0412"},"content":"                } else {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xa0412"},"content":"                    addList(chat);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xa0412"},"content":"                }","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xa0412"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xa0412"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xa0412"},"content":"            }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xa0412"},"content":"        }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xa0412"},"content":"    private static void showList() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xa0412"},"content":"        if (listArray.isEmpty()) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xa0412"},"content":"            System.out.println(\"No tasks found\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xa0412"},"content":"        } else {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xa0412"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xa0412"},"content":"            for (int i \u003d 0; i \u003c listArray.size(); i++) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xa0412"},"content":"                Task task \u003d listArray.get(i);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xa0412"},"content":"                System.out.println((i + 1) + \".\" + task.toString());","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xa0412"},"content":"            }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xa0412"},"content":"        }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"xa0412"},"content":"    private static void addList(String chat) throws IllegalArgumentException {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"xa0412"},"content":"        String[] words \u003d chat.split(\" \", 2);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"xa0412"},"content":"        if (words[0].equals(\"todo\") || words[0].equals(\"deadline\") || words[0].equals(\"event\")) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"xa0412"},"content":"            if (words.length \u003c 2) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"xa0412"},"content":"                throw new XanException(\"The description of a task cannot be empty!\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"xa0412"},"content":"            }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"xa0412"},"content":"            TaskType taskType \u003d TaskType.fromString(words[0]);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"xa0412"},"content":"            String details \u003d words[1];","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"xa0412"},"content":"            switch (taskType) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"xa0412"},"content":"                case TODO:","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"xa0412"},"content":"                    Task todoTask \u003d new Todo(details);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"xa0412"},"content":"                    listArray.add(todoTask);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"xa0412"},"content":"                    addTask(todoTask);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"xa0412"},"content":"                    break;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"xa0412"},"content":"                case DEADLINE:","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"xa0412"},"content":"                    if (!details.contains(\"/by \")) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"xa0412"},"content":"                        throw new XanException(\"A deadline task must have a \u0027/by\u0027 clause!\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"xa0412"},"content":"                    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"xa0412"},"content":"                    String[] deadlineParts \u003d details.split(\"/by \", 2);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"xa0412"},"content":"                    Task deadlineTask \u003d new Deadline(deadlineParts[0].trim(), deadlineParts[1].trim());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"xa0412"},"content":"                    listArray.add(deadlineTask);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"xa0412"},"content":"                    addTask(deadlineTask);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"xa0412"},"content":"                    break;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"xa0412"},"content":"                case EVENT:","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"xa0412"},"content":"                    if (!details.contains(\"/from \") || !details.contains(\"/to \")) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"xa0412"},"content":"                        throw new XanException(\"An event task must have both \u0027/from\u0027 and \u0027/to\u0027 clauses!\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"xa0412"},"content":"                    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"xa0412"},"content":"                    String[] eventParts \u003d details.split(\"/from | /to \");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"xa0412"},"content":"                    Task eventTask \u003d new Event(eventParts[0].trim(), eventParts[1].trim(), eventParts[2].trim());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"xa0412"},"content":"                    listArray.add(eventTask);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"xa0412"},"content":"                    addTask(eventTask);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"xa0412"},"content":"                    break;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"xa0412"},"content":"            }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"xa0412"},"content":"        } else {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"xa0412"},"content":"            throw new IllegalArgumentException(\"Invalid task type! Please use \u0027todo\u0027, \u0027deadline\u0027, \u0027event\u0027, \u0027delete\u0027,\" +","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"xa0412"},"content":"                    \" \u0027list\u0027, \u0027mark\u0027, \u0027unmark\u0027.\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"xa0412"},"content":"        }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"xa0412"},"content":"    private static void markTask(String chat) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"xa0412"},"content":"        int taskIndex \u003d Integer.parseInt(chat.split(\" \")[1]) - 1;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"xa0412"},"content":"        Task task \u003d listArray.get(taskIndex);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"xa0412"},"content":"        task.markAsDone();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"xa0412"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"xa0412"},"content":"        System.out.println((taskIndex + 1) + \".\" + task.toString());","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"xa0412"},"content":"    private static void unmarkTask(String chat) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"xa0412"},"content":"        int taskIndex \u003d Integer.parseInt(chat.split(\" \")[1]) - 1;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"xa0412"},"content":"        Task task \u003d listArray.get(taskIndex);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"xa0412"},"content":"        task.markAsNotDone();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"xa0412"},"content":"        System.out.println(\"Ok, I\u0027ve marked this task as not done:\");","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"xa0412"},"content":"        System.out.println((taskIndex + 1) + \".\" + task.toString());","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"xa0412"},"content":"    private static void addTask(Task task) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"xa0412"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"xa0412"},"content":"        System.out.println(task);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"xa0412"},"content":"        System.out.println(\"Now you have \" + listArray.size() + \" tasks in the list.\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"xa0412"},"content":"    private static void welcomeMessage() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"xa0412"},"content":"        System.out.println(\"Hello! I\u0027m Xan! I am your personalized Task manager!\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"xa0412"},"content":"        System.out.println(\"Enter the following commands to get started:\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"xa0412"},"content":"        System.out.println(\"  todo: tasks without any date/time attached to it. e.g. todo visit new theme park\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"xa0412"},"content":"        System.out.println(\"  deadline: tasks that need to be done before a specific date/time. \" +","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"xa0412"},"content":"                \"e.g. deadline return book /by Sunday\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"xa0412"},"content":"        System.out.println(\"  event: tasks that start at a specific date/time and ends at a specific date/time. \" +","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"xa0412"},"content":"                \"e.g. event project meeting /from Mon 2pm /to 4pm\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"xa0412"},"content":"        System.out.println(\"  delete: to delete task. e.g. deleted 1\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"xa0412"},"content":"        System.out.println(\"  list: to show all the tasks in your list.\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"xa0412"},"content":"        System.out.println(\"  mark: to mark list as marked as completed. e.g. mark 1\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"xa0412"},"content":"        System.out.println(\"  unmark: to unmark list as not completed. e.g. unmark 1\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"xa0412"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"xa0412"},"content":"    private static void deleteTask(String chat) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"xa0412"},"content":"        int taskIndex \u003d Integer.parseInt(chat.split(\" \")[1]) - 1;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"xa0412"},"content":"        Task task \u003d listArray.get(taskIndex);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"xa0412"},"content":"        System.out.println(\"Noted. I\u0027ve remove this task:\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"xa0412"},"content":"        System.out.println((taskIndex + 1) + \".\" + task.toString());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"xa0412"},"content":"        listArray.remove(taskIndex);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"xa0412"},"content":"        System.out.println(\"Now you have \" + listArray.size() + \" tasks in the list.\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"xa0412"},"content":"}","lastModifiedDate":"2025-01-18","isFullCredit":false}],"authorContributionMap":{"xa0412":146}},{"path":"src/main/java/XanException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xa0412"},"content":"public class XanException extends IllegalArgumentException {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xa0412"},"content":"    public XanException(String message) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xa0412"},"content":"        super(message);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xa0412"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"xa0412":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xa0412"},"content":"todo borrow book","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xa0412"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xa0412"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xa0412"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"xa0412":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xa0412"},"content":"java -classpath ..\\bin Xan \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":20,"xa0412":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xa0412"},"content":"java -classpath ../bin Xan \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":37,"xa0412":1}}]
