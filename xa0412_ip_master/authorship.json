[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xa0412"},"content":"    id \u0027application\u0027","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xa0412"},"content":"mainClassName \u003d \u0027xan.XanChatBot\u0027","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xa0412"},"content":"    mainClass.set(\"xan.XanChatBot\")","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xa0412"},"content":"    archiveFileName \u003d \u0027XanChatBot.jar\u0027","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":37,"xa0412":4}},{"path":"src/main/data/xan.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xa0412"},"content":"[E][ ] project meeting (from: Mon 2pm to: 4pm)","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xa0412"},"content":"[T][ ] borrow book","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xa0412"},"content":"[T][ ] visit new theme park","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"xa0412":3}},{"path":"src/main/java/xan/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xa0412"},"content":"package xan;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xa0412"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xa0412"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xa0412"},"content":" * Represents a task with a deadline. Includes a description and a due date.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xa0412"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xa0412"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xa0412"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xa0412"},"content":"     * Creates a Deadline task with the specified description and due date.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xa0412"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xa0412"},"content":"     * @param description Description of the task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xa0412"},"content":"     * @param date Due date for the task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xa0412"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xa0412"},"content":"    public Deadline(String description, LocalDate date) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xa0412"},"content":"        super(description, date);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xa0412"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xa0412"},"content":"     * Returns a string representation of the Deadline task,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xa0412"},"content":"     * including its type (Deadline), completion status, description, and due date.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xa0412"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xa0412"},"content":"     * @return String representation of the task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xa0412"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xa0412"},"content":"    @Override","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xa0412"},"content":"    public String toString() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xa0412"},"content":"        return \"[D]\" + super.toString();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xa0412"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"xa0412":29}},{"path":"src/main/java/xan/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xa0412"},"content":"package xan;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xa0412"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xa0412"},"content":" * A task representing an event with a description, start time, and end time.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xa0412"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xa0412"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xa0412"},"content":"    protected String startTime;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xa0412"},"content":"    protected String endTime;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xa0412"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xa0412"},"content":"     * Creates an Event task with a description, start time, and end time.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xa0412"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xa0412"},"content":"     * @param description The task\u0027s description.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xa0412"},"content":"     * @param startTime The event\u0027s start time.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xa0412"},"content":"     * @param endTime The event\u0027s end time.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xa0412"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xa0412"},"content":"    public Event(String description, String startTime, String endTime) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xa0412"},"content":"        super(description);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xa0412"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xa0412"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xa0412"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xa0412"},"content":"     * Returns a string representation of the event, including its type, status,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xa0412"},"content":"     * description, start time, and end time.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xa0412"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xa0412"},"content":"     * @return A string representation of the Event task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xa0412"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xa0412"},"content":"    @Override","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xa0412"},"content":"    public String toString() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xa0412"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + startTime + \" to: \" + endTime + \")\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xa0412"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"xa0412":33}},{"path":"src/main/java/xan/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xa0412"},"content":"package xan;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xa0412"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xa0412"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xa0412"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xa0412"},"content":" * Represents a task with a description and a completion status.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xa0412"},"content":" * Serves as a base class for specific task types like Todo, Deadline, and Event.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xa0412"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xa0412"},"content":"public class Task {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xa0412"},"content":"    protected final String description;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xa0412"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xa0412"},"content":"    protected final LocalDate date;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xa0412"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xa0412"},"content":"     * Creates a task with the given description.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xa0412"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xa0412"},"content":"     * @param description The task\u0027s description.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xa0412"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xa0412"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xa0412"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xa0412"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xa0412"},"content":"        this.date \u003d null;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xa0412"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xa0412"},"content":"     * Creates a task with the given description and date.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xa0412"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xa0412"},"content":"     * @param description The task\u0027s description.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xa0412"},"content":"     * @param date The associated date for the task (e.g., deadline or event time).","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xa0412"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xa0412"},"content":"    public Task(String description, LocalDate date) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xa0412"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xa0412"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xa0412"},"content":"        this.date \u003d date;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xa0412"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xa0412"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xa0412"},"content":"     * The icon is \"X\" if the task is marked as done,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xa0412"},"content":"     * otherwise it is a space (\" \").","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xa0412"},"content":"     * @return A string representing the status icon of the task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xa0412"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xa0412"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xa0412"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xa0412"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xa0412"},"content":"     * Marks the task as completed.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xa0412"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xa0412"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xa0412"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xa0412"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xa0412"},"content":"     * Marks the task as not completed.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xa0412"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xa0412"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"xa0412"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"xa0412"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"xa0412"},"content":"     * Returns the description of the task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"xa0412"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"xa0412"},"content":"     * @return The task\u0027s description as a string.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"xa0412"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"xa0412"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"xa0412"},"content":"        return description;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"xa0412"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"xa0412"},"content":"     * Returns a string representation of the task, including its status and description.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"xa0412"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"xa0412"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"xa0412"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"xa0412"},"content":"    @Override","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"xa0412"},"content":"    public String toString() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"xa0412"},"content":"        String dateTimeString \u003d (date !\u003d null)","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"xa0412"},"content":"                ? date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"xa0412"},"content":"                : \"\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"xa0412"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description + (date !\u003d null","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"xa0412"},"content":"                ? \" (by: \" + dateTimeString + \")\"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"xa0412"},"content":"                : \"\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"xa0412"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"xa0412":85}},{"path":"src/main/java/xan/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xa0412"},"content":"package xan;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xa0412"},"content":"import xan.exception.XanException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xa0412"},"content":"import xan.ui.Ui;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xa0412"},"content":"import java.io.*;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xa0412"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xa0412"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xa0412"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xa0412"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xa0412"},"content":" * The TaskManager class manages a list of tasks, including creating, editing,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xa0412"},"content":" * marking, unmarking, deleting, saving, and loading tasks. It also provides functionality","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xa0412"},"content":" * to display tasks to the user and supports different types of tasks such as Todo, Deadline, and Event.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xa0412"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xa0412"},"content":"public class TaskManager {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xa0412"},"content":"    private static final ArrayList\u003cTask\u003e listArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xa0412"},"content":"    private final String filePath;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xa0412"},"content":"    private Ui ui;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xa0412"},"content":"    public TaskManager(String filePath) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xa0412"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xa0412"},"content":"    public TaskManager() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xa0412"},"content":"        this.filePath \u003d null;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xa0412"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xa0412"},"content":"     * Categorizes tasks as TODO, DEADLINE, or EVENT and provides utility for","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xa0412"},"content":"     * converting string representations.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xa0412"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xa0412"},"content":"    private enum TaskType {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xa0412"},"content":"        TODO, DEADLINE, EVENT;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xa0412"},"content":"        public static TaskType fromString(String input) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xa0412"},"content":"            return switch (input.toLowerCase()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xa0412"},"content":"                case \"todo\" -\u003e TODO;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xa0412"},"content":"                case \"deadline\" -\u003e DEADLINE;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xa0412"},"content":"                case \"event\" -\u003e EVENT;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xa0412"},"content":"                default -\u003e throw new IllegalArgumentException(\"Unknown task type: \" + input);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xa0412"},"content":"            };","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xa0412"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xa0412"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xa0412"},"content":"     * Loads tasks from a file or creates a test Todo task if no file path is provided.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xa0412"},"content":"     * Handles parsing for Todo, Deadline, and Event tasks and appropriate exceptions.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xa0412"},"content":"     * @throws FileNotFoundException - If the specified file path does not exist.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xa0412"},"content":"     * @throws IllegalArgumentException - If an unknown task type or invalid task format is encountered.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xa0412"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xa0412"},"content":"    public void loadTask() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xa0412"},"content":"        if (filePath \u003d\u003d null) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xa0412"},"content":"            // Skip loading from file for tests; Use some hardcoded data","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xa0412"},"content":"            // For testing purposes, add a sample task manually:","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xa0412"},"content":"            listArray.add(new Todo(\"todo Read a book\"));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"xa0412"},"content":"            return;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"xa0412"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"xa0412"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"xa0412"},"content":"            File inputFile \u003d new File(filePath);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"xa0412"},"content":"            if (!inputFile.exists()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"xa0412"},"content":"                throw new FileNotFoundException(filePath);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"xa0412"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"xa0412"},"content":"            Scanner sc \u003d new Scanner(inputFile);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"xa0412"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"xa0412"},"content":"                String line \u003d sc.nextLine().trim();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"xa0412"},"content":"                char taskTypeChar \u003d line.charAt(1);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"xa0412"},"content":"                boolean isDone \u003d line.charAt(4) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"xa0412"},"content":"                String taskDetails \u003d line.substring(7);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"xa0412"},"content":"                Task task \u003d null;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"xa0412"},"content":"                switch (taskTypeChar) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"xa0412"},"content":"                case \u0027T\u0027:","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"xa0412"},"content":"                    task \u003d new Todo(taskDetails);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"xa0412"},"content":"                    break;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"xa0412"},"content":"                case \u0027D\u0027:","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"xa0412"},"content":"                    if (taskDetails.contains(\"(by: \")) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"xa0412"},"content":"                        String[] parts \u003d taskDetails.split(\"\\\\(by: \");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"xa0412"},"content":"                        String description \u003d parts[0].trim();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"xa0412"},"content":"                        LocalDate date \u003d LocalDate.parse(parts[1].replace(\")\", \"\").trim());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"xa0412"},"content":"                        task \u003d new Deadline(description, date);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"xa0412"},"content":"                    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"xa0412"},"content":"                    break;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"xa0412"},"content":"                case \u0027E\u0027:","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"xa0412"},"content":"                    if (taskDetails.contains(\"(from: \") \u0026\u0026 taskDetails.contains(\"to: \")) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"xa0412"},"content":"                        String[] parts \u003d taskDetails.split(\"(\\\\(from: )| (to: )\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"xa0412"},"content":"                        String description \u003d parts[0].trim();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"xa0412"},"content":"                        String startTime \u003d parts[1].trim();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"xa0412"},"content":"                        String endTime \u003d parts[2].replace(\")\", \"\").trim();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"xa0412"},"content":"                        task \u003d new Event(description, startTime, endTime);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"xa0412"},"content":"                    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"xa0412"},"content":"                    break;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"xa0412"},"content":"                default:","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"xa0412"},"content":"                    throw new IllegalArgumentException(\"Unknown task type: \" + taskTypeChar);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"xa0412"},"content":"                }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"xa0412"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"xa0412"},"content":"                    if (isDone) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"xa0412"},"content":"                        task.markAsDone();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"xa0412"},"content":"                    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"xa0412"},"content":"                    listArray.add(task);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"xa0412"},"content":"                }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"xa0412"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"xa0412"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"xa0412"},"content":"            System.out.println(\"The file could not be found: \" + e.getMessage());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"xa0412"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"xa0412"},"content":"            System.out.println(\"Error in parsing task: \" + e.getMessage());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"xa0412"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"xa0412"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"xa0412"},"content":"     * Saves the current list of tasks to a file. Handles exceptions for file not found","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"xa0412"},"content":"     * or write errors.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"xa0412"},"content":"     * Exceptions handled:","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"xa0412"},"content":"     * @throws IOException: If an error occurs while writing to the file, a RuntimeException is thrown","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"xa0412"},"content":"     *   with an appropriate error message.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"xa0412"},"content":"     * @throws IllegalArgumentException: If the file does not exist, an exception is thrown with a message","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"xa0412"},"content":"     *   indicating the invalid file path.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"xa0412"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"xa0412"},"content":"    public void saveTask() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"xa0412"},"content":"        if (filePath \u003d\u003d null) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"xa0412"},"content":"            return;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"xa0412"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"xa0412"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"xa0412"},"content":"            File inputFile \u003d new File(filePath);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"xa0412"},"content":"            if (!inputFile.exists()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"xa0412"},"content":"                throw new IllegalArgumentException(\"The file could not be found: \" + filePath);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"xa0412"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"xa0412"},"content":"            FileWriter fw \u003d new FileWriter(inputFile);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"xa0412"},"content":"            BufferedWriter bw \u003d new BufferedWriter(fw);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"xa0412"},"content":"            for (Task task : listArray) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"xa0412"},"content":"                bw.write(task.toString());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"xa0412"},"content":"                bw.newLine();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"xa0412"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"xa0412"},"content":"            bw.close();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"xa0412"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"xa0412"},"content":"            throw new RuntimeException(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"xa0412"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"xa0412"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"xa0412"},"content":"     * Displays all tasks in the list, or a message if the list is empty.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"xa0412"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"xa0412"},"content":"    public void showList() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"xa0412"},"content":"        if (listArray.isEmpty()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"xa0412"},"content":"            System.out.println(\"No tasks found\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"xa0412"},"content":"        } else {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"xa0412"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"xa0412"},"content":"            for (int i \u003d 0; i \u003c listArray.size(); i++) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"xa0412"},"content":"                Task task \u003d listArray.get(i);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"xa0412"},"content":"                System.out.println((i + 1) + \".\" + task.toString());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"xa0412"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"xa0412"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"xa0412"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"xa0412"},"content":"     * Adds a task based on the input. Supports \"todo\", \"deadline\", and \"event\" tasks.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"xa0412"},"content":"     * Validates inputs and handles exceptions for invalid formats.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"xa0412"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"xa0412"},"content":"     * @param chat Command string containing task type and details.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"xa0412"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"xa0412"},"content":"     * @throws IllegalArgumentException If the task type is invalid or if the input string does not","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"xa0412"},"content":"     *                                  match the required format for the specified task type.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"xa0412"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"xa0412"},"content":"    public void addList(String chat) throws IllegalArgumentException {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"xa0412"},"content":"        String[] words \u003d chat.split(\" \", 2);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"xa0412"},"content":"        if (words[0].equals(\"todo\") || words[0].equals(\"deadline\") || words[0].equals(\"event\")) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"xa0412"},"content":"            if (words.length \u003c 2) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"xa0412"},"content":"                throw new XanException(\"The description of a task cannot be empty!\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"xa0412"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"xa0412"},"content":"            TaskType taskType \u003d TaskType.fromString(words[0]);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"xa0412"},"content":"            String details \u003d words[1];","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"xa0412"},"content":"            switch (taskType) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"xa0412"},"content":"            case TODO:","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"xa0412"},"content":"                Task todoTask \u003d new Todo(details);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"xa0412"},"content":"                listArray.add(todoTask);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"xa0412"},"content":"                addTaskMessage(todoTask);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"xa0412"},"content":"                break;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"xa0412"},"content":"            case DEADLINE:","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"xa0412"},"content":"                if (!details.contains(\"/by \")) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"xa0412"},"content":"                    throw new XanException(\"A deadline task must have a \u0027/by\u0027 clause!\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"xa0412"},"content":"                }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"xa0412"},"content":"                String[] deadlineParts \u003d details.split(\"/by \", 2);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"xa0412"},"content":"                LocalDate date \u003d LocalDate.parse(deadlineParts[1].replace(\")\", \"\").trim());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"xa0412"},"content":"                Task deadlineTask \u003d new Deadline(deadlineParts[0].trim(), date);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"xa0412"},"content":"                listArray.add(deadlineTask);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"xa0412"},"content":"                addTaskMessage(deadlineTask);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"xa0412"},"content":"                break;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"xa0412"},"content":"            case EVENT:","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"xa0412"},"content":"                if (!details.contains(\"/from \") || !details.contains(\"/to \")) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"xa0412"},"content":"                    throw new XanException(\"An event task must have both \u0027/from\u0027 and \u0027/to\u0027 clauses!\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"xa0412"},"content":"                }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"xa0412"},"content":"                String[] eventParts \u003d details.split(\"/from | /to \");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"xa0412"},"content":"                Task eventTask \u003d new Event(eventParts[0].trim(), eventParts[1].trim(), eventParts[2].trim());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"xa0412"},"content":"                listArray.add(eventTask);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"xa0412"},"content":"                addTaskMessage(eventTask);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"xa0412"},"content":"                break;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"xa0412"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"xa0412"},"content":"            saveTask();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"xa0412"},"content":"        } else {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"xa0412"},"content":"            throw new IllegalArgumentException(\"Invalid task type! Please use \u0027todo\u0027, \u0027deadline\u0027,\" +","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"xa0412"},"content":"                    \" \u0027event\u0027, \u0027delete\u0027,\" + \" \u0027list\u0027, \u0027mark\u0027, \u0027unmark\u0027.\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"xa0412"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"xa0412"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"xa0412"},"content":"     * Marks a task as done based on its index from the input.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"xa0412"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"xa0412"},"content":"     * @param chat Command string specifying the task index (e.g., \"mark 1\").","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"xa0412"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"xa0412"},"content":"    public void markTask(String chat) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"xa0412"},"content":"        int taskIndex \u003d Integer.parseInt(chat.split(\" \")[1]) - 1;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"xa0412"},"content":"        Task task \u003d listArray.get(taskIndex);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"xa0412"},"content":"        task.markAsDone();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"xa0412"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"xa0412"},"content":"        System.out.println((taskIndex + 1) + \".\" + task.toString());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"xa0412"},"content":"        saveTask();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"xa0412"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"xa0412"},"content":"     * Unmarks a task as not done based on its index from the input.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"xa0412"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"xa0412"},"content":"     * @param chat Command string specifying the task index (e.g., \"unmark 1\").","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"xa0412"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"xa0412"},"content":"    public void unmarkTask(String chat) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"xa0412"},"content":"        int taskIndex \u003d Integer.parseInt(chat.split(\" \")[1]) - 1;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"xa0412"},"content":"        Task task \u003d listArray.get(taskIndex);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"xa0412"},"content":"        task.markAsNotDone();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"xa0412"},"content":"        System.out.println(\"Ok, I\u0027ve marked this task as not done:\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"xa0412"},"content":"        System.out.println((taskIndex + 1) + \".\" + task.toString());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"xa0412"},"content":"        saveTask();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"xa0412"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"xa0412"},"content":"     * Prints confirmation after adding a task, showing the total task count.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"xa0412"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"xa0412"},"content":"     * @param task Task object being added.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"xa0412"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"xa0412"},"content":"    public void addTaskMessage(Task task) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"xa0412"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"xa0412"},"content":"        System.out.println(task);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"xa0412"},"content":"        System.out.println(\"Now you have \" + listArray.size() + \" tasks in the list.\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"xa0412"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"xa0412"},"content":"     * Deletes a task based on its index from the input and confirms the deletion.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"xa0412"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"xa0412"},"content":"     * @param chat Command string specifying the task index (e.g., \"delete 1\").","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"xa0412"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"xa0412"},"content":"    public void deleteTask(String chat) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"xa0412"},"content":"        int taskIndex \u003d Integer.parseInt(chat.split(\" \")[1]) - 1;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"xa0412"},"content":"        Task task \u003d listArray.get(taskIndex);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"xa0412"},"content":"        System.out.println(\"Noted. I\u0027ve remove this task:\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"xa0412"},"content":"        System.out.println((taskIndex + 1) + \".\" + task.toString());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"xa0412"},"content":"        listArray.remove(taskIndex);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"xa0412"},"content":"        System.out.println(\"Now you have \" + listArray.size() + \" tasks in the list.\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"xa0412"},"content":"        saveTask();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"xa0412"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"xa0412"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"xa0412"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"xa0412"},"content":"    public int getListArraySize() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"xa0412"},"content":"        return listArray.size();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"xa0412"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"xa0412"},"content":"     * Retrieves a task by index.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"xa0412"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"xa0412"},"content":"     * @param index Index of the task to retrieve.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"xa0412"},"content":"     * @return Task object at the specified index.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"xa0412"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"xa0412"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"xa0412"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"xa0412"},"content":"        if (index \u003c 0 || index \u003e\u003d listArray.size()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"xa0412"},"content":"            throw new IndexOutOfBoundsException(\"Invalid task index: \" + index);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"xa0412"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"xa0412"},"content":"        return listArray.get(index);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"xa0412"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"xa0412"},"content":"     * Searches for tasks in the list that contain the given keyword in their description.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"xa0412"},"content":"     * If no keyword is provided or the keyword is empty, prompts the user to provide a valid keyword.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"xa0412"},"content":"     * Displays all matching tasks or a message if no tasks are found.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"xa0412"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"xa0412"},"content":"     * @param chat The command string containing the search keyword (e.g., \"search keyword\").","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"xa0412"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"xa0412"},"content":"    public void searchTask(String chat) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"xa0412"},"content":"        String[] splitWord \u003d chat.split(\" \", 2);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"xa0412"},"content":"        if (splitWord.length \u003c 2 || splitWord[1].trim().isEmpty()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"xa0412"},"content":"            System.out.println(\"Please provide a keyword to search.\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"xa0412"},"content":"            return;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"xa0412"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"xa0412"},"content":"        String keyWord \u003d splitWord[1].trim();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"xa0412"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"xa0412"},"content":"        boolean found \u003d false;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"xa0412"},"content":"        int displaySearchIndex \u003d 1;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"xa0412"},"content":"        for (int i \u003d 0; i \u003c listArray.size(); i++) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"xa0412"},"content":"            Task task \u003d listArray.get(i);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"xa0412"},"content":"            if (task.getDescription().toLowerCase().contains(keyWord.toLowerCase())) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"xa0412"},"content":"                System.out.println((displaySearchIndex) + \".\" + task);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"xa0412"},"content":"                displaySearchIndex++;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"xa0412"},"content":"                found \u003d true;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"xa0412"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"xa0412"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"xa0412"},"content":"        if (!found) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"xa0412"},"content":"            System.out.println(\"No matching tasks found.\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"xa0412"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"xa0412"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"xa0412":318}},{"path":"src/main/java/xan/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xa0412"},"content":"package xan;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xa0412"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xa0412"},"content":" * Represents a simple task with a description","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xa0412"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xa0412"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xa0412"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xa0412"},"content":"     * Creates a Todo task with the given description.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xa0412"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xa0412"},"content":"     * @param description The task\u0027s description.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xa0412"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xa0412"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xa0412"},"content":"        super(description);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xa0412"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xa0412"},"content":"     * Returns a string representation of the Todo task, including its type,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xa0412"},"content":"     * status, and description.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xa0412"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xa0412"},"content":"     * @return A string representation of the Todo task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xa0412"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xa0412"},"content":"    @Override","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xa0412"},"content":"    public String toString() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xa0412"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xa0412"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"xa0412":27}},{"path":"src/main/java/xan/XanChatBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xa0412"},"content":"package xan;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xa0412"},"content":"import xan.ui.Ui;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xa0412"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xa0412"},"content":"public class XanChatBot {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xa0412"},"content":"    private static final String FILE_PATH \u003d \"src/main/data/xan.txt\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xa0412"},"content":"    private final TaskManager taskManager;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xa0412"},"content":"    private final Ui ui;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xa0412"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xa0412"},"content":"     * Creates an instance of XanChatBot.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xa0412"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xa0412"},"content":"    public XanChatBot() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xa0412"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xa0412"},"content":"        this.taskManager \u003d new TaskManager(FILE_PATH);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xa0412"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xa0412"},"content":"     * Run the main program.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xa0412"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xa0412"},"content":"    public void run() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xa0412"},"content":"        ui.welcomeMessage();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xa0412"},"content":"        taskManager.loadTask();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xa0412"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xa0412"},"content":"        while (true) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xa0412"},"content":"            try {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xa0412"},"content":"                String chat \u003d sc.nextLine().trim();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xa0412"},"content":"                if (chat.equals(\"bye\")) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xa0412"},"content":"                    ui.showGoodbyeMessage();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xa0412"},"content":"                    break;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xa0412"},"content":"                } else if (chat.equals(\"list\")) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xa0412"},"content":"                    taskManager.showList();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xa0412"},"content":"                } else if (chat.startsWith(\"mark\")) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xa0412"},"content":"                    taskManager.markTask(chat);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"xa0412"},"content":"                } else if (chat.startsWith(\"unmark\")) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"xa0412"},"content":"                    taskManager.unmarkTask(chat);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"xa0412"},"content":"                } else if (chat.startsWith(\"delete\")) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"xa0412"},"content":"                    taskManager.deleteTask(chat);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"xa0412"},"content":"                } else if (chat.startsWith(\"search\")) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"xa0412"},"content":"                    taskManager.searchTask(chat);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"xa0412"},"content":"                } else {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"xa0412"},"content":"                    taskManager.addList(chat);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"xa0412"},"content":"                }","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"xa0412"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"xa0412"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"xa0412"},"content":"            }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"xa0412"},"content":"        }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"xa0412"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"xa0412"},"content":"        new XanChatBot().run();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"xa0412"},"content":"}","lastModifiedDate":"2025-01-18","isFullCredit":false}],"authorContributionMap":{"xa0412":56}},{"path":"src/main/java/xan/exception/XanException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xa0412"},"content":"package xan.exception;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xa0412"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xa0412"},"content":" * Represents a custom exception for validation errors in task inputs.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xa0412"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xa0412"},"content":"public class XanException extends IllegalArgumentException {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xa0412"},"content":"    public XanException(String message) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xa0412"},"content":"        super(message);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xa0412"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"xa0412":10}},{"path":"src/main/java/xan/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xa0412"},"content":"package xan.ui;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xa0412"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xa0412"},"content":" * The Ui class is responsible for interacting with the user, It handles welcome and","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xa0412"},"content":" * goodbye messages to the user.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xa0412"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xa0412"},"content":"public class Ui {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xa0412"},"content":"    public Ui() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xa0412"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xa0412"},"content":"     * Displays a welcome message to the user, introducing the chatbot and","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xa0412"},"content":"     * providing instructions on how to use its various features.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xa0412"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xa0412"},"content":"    public void welcomeMessage() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xa0412"},"content":"        System.out.println(\"Hello! I\u0027m Xan! I am your personalized task manager!\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xa0412"},"content":"        System.out.println(\"Enter the following commands to get started:\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xa0412"},"content":"        System.out.println(\"  todo: tasks without any date/time attached to it. e.g. todo visit new theme park\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xa0412"},"content":"        System.out.println(\"  deadline: tasks that need to be done before a specific date/time. \"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xa0412"},"content":"                + \"e.g. deadline return book /by 2019-12-01\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xa0412"},"content":"        System.out.println(\"  event: tasks that start at a specific date/time and ends at a specific date/time. \"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xa0412"},"content":"                + \"e.g. event project meeting /from Mon 2pm /to 4pm\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xa0412"},"content":"        System.out.println(\"  delete: to delete task. e.g. deleted 1\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xa0412"},"content":"        System.out.println(\"  list: to show all the tasks in your list.\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xa0412"},"content":"        System.out.println(\"  mark: to mark list as marked as completed. e.g. mark 1\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xa0412"},"content":"        System.out.println(\"  unmark: to unmark list as not completed. e.g. unmark 1\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xa0412"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"xa0412"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"xa0412"},"content":"     * Displays a goodbye message to the user.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"xa0412"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"xa0412"},"content":"    public void showGoodbyeMessage() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"xa0412"},"content":"        System.out.println(\"Goodbye! Have a nice day!\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"xa0412"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"xa0412":37}},{"path":"src/test/java/xan/TaskManagerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xa0412"},"content":"package xan;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xa0412"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xa0412"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"xa0412"},"content":"public class TaskManagerTest {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"xa0412"},"content":"    // Test one function at a time to get the correct index","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"xa0412"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"xa0412"},"content":"    public void testAddTodoTask() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"xa0412"},"content":"        TaskManager taskManager \u003d new TaskManager();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"xa0412"},"content":"        taskManager.addList(\"todo Read a book\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"xa0412"},"content":"        assertEquals(1, taskManager.getListArraySize());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"xa0412"},"content":"        assertEquals(\"[T][ ] Read a book\", taskManager.getTask(0).toString());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"xa0412"},"content":"    /*","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xa0412"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"xa0412"},"content":"    public void testAddEventTask() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"xa0412"},"content":"        TaskManager taskManager1 \u003d new TaskManager();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"xa0412"},"content":"        taskManager1.addList(\"event Attend meeting /from 10am /to 11am\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xa0412"},"content":"        assertEquals(1, taskManager1.getListArraySize());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"xa0412"},"content":"        assertEquals(\"[E][ ] Attend meeting (from: 10am to: 11am)\", taskManager1.getTask(0).toString());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"xa0412"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"xa0412"},"content":"    */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"xa0412"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"xa0412"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"xa0412":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xa0412"},"content":"todo borrow book","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"xa0412"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"xa0412"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"xa0412"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"xa0412":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"xa0412"},"content":"java -classpath ..\\bin xan \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":20,"xa0412":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"xa0412"},"content":"java -classpath ../bin Xan \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":37,"xa0412":1}}]
