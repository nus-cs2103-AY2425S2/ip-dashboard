[{"path":"CONTRIBUTORS.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Contributors","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Emmanuel2001"},"content":"Ui | Name | Github Profile | Homepage","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---|:---:|:---:|:---:","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"![](https://avatars0.githubusercontent.com/u/22460123?s\u003d100) | Jeffry Lum | [Github](https://github.com/j-lum/) | [Homepage](https://se.kasugano.moe)","lastModifiedDate":"2019-08-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"![](https://avatars0.githubusercontent.com/u/1673303?s\u003d100) | Damith C. Rajapakse | [Github](https://github.com/damithc/) | [Homepage](https://www.comp.nus.edu.sg/~damithch/)","lastModifiedDate":"2019-08-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"# I would like to join this list. How can I help the project","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"For more information, please refer to our [contributor\u0027s guide](https://oss-generic.github.io/process/).","lastModifiedDate":"2019-07-29","isFullCredit":false}],"authorContributionMap":{"-":8,"Emmanuel2001":1}},{"path":"Data/BuddyTalk.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Emmanuel2001"},"content":"D | 0 | 1 | 2012-02-02 1900","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Emmanuel2001"},"content":"E | 1 | test | 2023-02-03 1900 | 2023-02-01 1800","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Emmanuel2001"},"content":"T | 0 | 1","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Emmanuel2001"},"content":"E | 0 | sodifj | 2019-02-02 2130 | 2035-01-02 1900","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Emmanuel2001"},"content":"D | 0 | idk | 2099-09-09 1500","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Emmanuel2001"},"content":"D | 0 | 2 | 2025-02-02 1200","lastModifiedDate":"2025-03-15","isFullCredit":false}],"authorContributionMap":{"Emmanuel2001":6}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Emmanuel2001"},"content":"# BuddyTalk - Your Personal Task Management Chatbot","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Emmanuel2001"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Emmanuel2001"},"content":" _______                 __       __          ________          __ __       ","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Emmanuel2001"},"content":"|       \\               |  \\     |  \\        |        \\        |  \\  \\      ","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Emmanuel2001"},"content":"| ▓▓▓▓▓▓▓\\__    __  ____| ▓▓ ____| ▓▓__    __ \\▓▓▓▓▓▓▓▓ ______ | ▓▓ ▓▓   __ ","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Emmanuel2001"},"content":"| ▓▓__/ ▓▓  \\  |  \\/      ▓▓/      ▓▓  \\  |  \\  | ▓▓   |      \\| ▓▓ ▓▓  /  \\","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Emmanuel2001"},"content":"| ▓▓    ▓▓ ▓▓  | ▓▓  ▓▓▓▓▓▓▓  ▓▓▓▓▓▓▓ ▓▓  | ▓▓  | ▓▓    \\▓▓▓▓▓▓\\ ▓▓ ▓▓_/  ▓▓","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Emmanuel2001"},"content":"| ▓▓▓▓▓▓▓\\ ▓▓  | ▓▓ ▓▓  | ▓▓ ▓▓  | ▓▓ ▓▓  | ▓▓  | ▓▓   /      ▓▓ ▓▓ ▓▓   ▓▓ ","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Emmanuel2001"},"content":"| ▓▓__/ ▓▓ ▓▓__/ ▓▓ ▓▓__| ▓▓ ▓▓__| ▓▓ ▓▓__/ ▓▓  | ▓▓  |  ▓▓▓▓▓▓▓ ▓▓ ▓▓▓▓▓▓\\ ","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Emmanuel2001"},"content":"| ▓▓    ▓▓\\▓▓    ▓▓\\▓▓    ▓▓\\▓▓    ▓▓\\▓▓    ▓▓  | ▓▓   \\▓▓    ▓▓ ▓▓ ▓▓  \\▓▓\\","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Emmanuel2001"},"content":" \\▓▓▓▓▓▓▓  \\▓▓▓▓▓▓  \\▓▓▓▓▓▓▓ \\▓▓▓▓▓▓▓_\\▓▓▓▓▓▓▓   \\▓▓    \\▓▓▓▓▓▓▓\\▓▓\\▓▓   \\▓▓","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Emmanuel2001"},"content":"                                    |  \\__| ▓▓                              ","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Emmanuel2001"},"content":"                                     \\▓▓    ▓▓                              ","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Emmanuel2001"},"content":"                                      \\▓▓▓▓▓▓                               ","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Emmanuel2001"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Emmanuel2001"},"content":"---","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Emmanuel2001"},"content":"## Features","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Emmanuel2001"},"content":"- Create todos","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Emmanuel2001"},"content":"- Track deadlines","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Emmanuel2001"},"content":"- Schedule Events","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Emmanuel2001"},"content":"- List all tasks","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Emmanuel2001"},"content":"- Find task with keyword","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Emmanuel2001"},"content":"- Mark or unmark tasks that\u0027s done","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Emmanuel2001"},"content":"## How to Use (Commands)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Emmanuel2001"},"content":"- Create a new todo","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Emmanuel2001"},"content":"   - `todo \u003cdescription\u003e`","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Emmanuel2001"},"content":"- Create a new task with deadline","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Emmanuel2001"},"content":"   - `deadline \u003cdescription\u003e /by \u003cdate yyyy-mm-dd HHmm\u003e`","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Emmanuel2001"},"content":"- Create a new task for events","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Emmanuel2001"},"content":"   - `event \u003cdescription\u003e /from \u003cdate yyyy-mm-dd HHmm\u003e /to \u003cdate yyyy-mm-dd HHmm\u003e`","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Emmanuel2001"},"content":"- Display list of tasks","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Emmanuel2001"},"content":"   - `list`","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Emmanuel2001"},"content":"- Searching for tasks","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Emmanuel2001"},"content":"   - `find \u003ckeyword\u003e`","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Emmanuel2001"},"content":"- Mark a task as done","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Emmanuel2001"},"content":"   - `mark \u003cindex\u003e`","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Emmanuel2001"},"content":"- Unmark a task","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Emmanuel2001"},"content":"   - `unmark \u003cindex\u003e`","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Emmanuel2001"},"content":"- Delete a task","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Emmanuel2001"},"content":"   - `delete \u003cindex\u003e`","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Emmanuel2001"},"content":"- List of help","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Emmanuel2001"},"content":"   - `help`","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Emmanuel2001"},"content":"- Help for each command (Eg. help todo)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Emmanuel2001"},"content":"   - `help \u003ccommand\u003e`","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Emmanuel2001"},"content":"---","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Emmanuel2001"},"content":"## Getting Started","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Emmanuel2001"},"content":"### Prerequisites","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Emmanuel2001"},"content":"- Java 17 or Higher","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Emmanuel2001"},"content":"### Installation","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Emmanuel2001"},"content":"1. Download latest release from Releases Page ([Release](https://github.com/Emmanuel2001/ip/releases/tag/A-Release))","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Emmanuel2001"},"content":"2. Run the following command:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Emmanuel2001"},"content":"``` java","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Emmanuel2001"},"content":"java -jar buddytalk.jar","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Emmanuel2001"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Emmanuel2001"},"content":"### Screenshot","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Emmanuel2001"},"content":"![alt text](https://Emmanuel2001.github.io/ip/Ui.png)","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"-":6,"Emmanuel2001":58}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Emmanuel2001"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Emmanuel2001"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Emmanuel2001"},"content":"checkstyle {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Emmanuel2001"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Emmanuel2001"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Emmanuel2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Emmanuel2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Emmanuel2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Emmanuel2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Emmanuel2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Emmanuel2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Emmanuel2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Emmanuel2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Emmanuel2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Emmanuel2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Emmanuel2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Emmanuel2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Emmanuel2001"},"content":"    mainClass.set(\"buddytalk.gui.Launcher\")","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Emmanuel2001"},"content":"    archiveBaseName.set(\"BuddyTalk\")","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Emmanuel2001"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Emmanuel2001"},"content":"    archiveVersion.set(\"\")","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":38,"Emmanuel2001":24}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Emmanuel2001"},"content":"# BuddyTalk - Your Personal Task Management Chatbot","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Emmanuel2001"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Emmanuel2001"},"content":" _______                 __       __          ________          __ __       ","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Emmanuel2001"},"content":"|       \\               |  \\     |  \\        |        \\        |  \\  \\      ","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Emmanuel2001"},"content":"| ▓▓▓▓▓▓▓\\__    __  ____| ▓▓ ____| ▓▓__    __ \\▓▓▓▓▓▓▓▓ ______ | ▓▓ ▓▓   __ ","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Emmanuel2001"},"content":"| ▓▓__/ ▓▓  \\  |  \\/      ▓▓/      ▓▓  \\  |  \\  | ▓▓   |      \\| ▓▓ ▓▓  /  \\","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Emmanuel2001"},"content":"| ▓▓    ▓▓ ▓▓  | ▓▓  ▓▓▓▓▓▓▓  ▓▓▓▓▓▓▓ ▓▓  | ▓▓  | ▓▓    \\▓▓▓▓▓▓\\ ▓▓ ▓▓_/  ▓▓","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Emmanuel2001"},"content":"| ▓▓▓▓▓▓▓\\ ▓▓  | ▓▓ ▓▓  | ▓▓ ▓▓  | ▓▓ ▓▓  | ▓▓  | ▓▓   /      ▓▓ ▓▓ ▓▓   ▓▓ ","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Emmanuel2001"},"content":"| ▓▓__/ ▓▓ ▓▓__/ ▓▓ ▓▓__| ▓▓ ▓▓__| ▓▓ ▓▓__/ ▓▓  | ▓▓  |  ▓▓▓▓▓▓▓ ▓▓ ▓▓▓▓▓▓\\ ","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Emmanuel2001"},"content":"| ▓▓    ▓▓\\▓▓    ▓▓\\▓▓    ▓▓\\▓▓    ▓▓\\▓▓    ▓▓  | ▓▓   \\▓▓    ▓▓ ▓▓ ▓▓  \\▓▓\\","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Emmanuel2001"},"content":" \\▓▓▓▓▓▓▓  \\▓▓▓▓▓▓  \\▓▓▓▓▓▓▓ \\▓▓▓▓▓▓▓_\\▓▓▓▓▓▓▓   \\▓▓    \\▓▓▓▓▓▓▓\\▓▓\\▓▓   \\▓▓","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Emmanuel2001"},"content":"                                    |  \\__| ▓▓                              ","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Emmanuel2001"},"content":"                                     \\▓▓    ▓▓                              ","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Emmanuel2001"},"content":"                                      \\▓▓▓▓▓▓                               ","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Emmanuel2001"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Emmanuel2001"},"content":"---","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Emmanuel2001"},"content":"## Features","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Emmanuel2001"},"content":"- Create todos","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Emmanuel2001"},"content":"- Track deadlines","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Emmanuel2001"},"content":"- Schedule Events","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Emmanuel2001"},"content":"- List all tasks","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Emmanuel2001"},"content":"- Find task with keyword","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Emmanuel2001"},"content":"- Mark or unmark tasks that\u0027s done","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Emmanuel2001"},"content":"## How to Use (Commands)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Emmanuel2001"},"content":"- Create a new todo","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Emmanuel2001"},"content":"    - `todo \u003cdescription\u003e`","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Emmanuel2001"},"content":"- Create a new task with deadline","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Emmanuel2001"},"content":"    - `deadline \u003cdescription\u003e /by \u003cdate yyyy-mm-dd HHmm\u003e`","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Emmanuel2001"},"content":"- Create a new task for events","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Emmanuel2001"},"content":"    - `event \u003cdescription\u003e /from \u003cdate yyyy-mm-dd HHmm\u003e /to \u003cdate yyyy-mm-dd HHmm\u003e`","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Emmanuel2001"},"content":"- Display list of tasks","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Emmanuel2001"},"content":"    - `list`","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Emmanuel2001"},"content":"- Searching for tasks","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Emmanuel2001"},"content":"    - `find \u003ckeyword\u003e`","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Emmanuel2001"},"content":"- Mark a task as done","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Emmanuel2001"},"content":"    - `mark \u003cindex\u003e`","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Emmanuel2001"},"content":"- Unmark a task","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Emmanuel2001"},"content":"    - `unmark \u003cindex\u003e`","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Emmanuel2001"},"content":"- Delete a task","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Emmanuel2001"},"content":"    - `delete \u003cindex\u003e`","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Emmanuel2001"},"content":"- List of help","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Emmanuel2001"},"content":"    - `help`","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Emmanuel2001"},"content":"- Help for each command (Eg. help todo)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Emmanuel2001"},"content":"    - `help \u003ccommand\u003e`","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Emmanuel2001"},"content":"---","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Emmanuel2001"},"content":"## Getting Started","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Emmanuel2001"},"content":"### Prerequisites","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Emmanuel2001"},"content":"- Java 17 or Higher","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Emmanuel2001"},"content":"### Installation","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Emmanuel2001"},"content":"1. Download latest release from Releases Page ([Release](https://github.com/Emmanuel2001/ip/releases/tag/A-Release))","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Emmanuel2001"},"content":"2. Run the following command:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Emmanuel2001"},"content":"``` java","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Emmanuel2001"},"content":"java -jar buddytalk.jar","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Emmanuel2001"},"content":"### Screenshot","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Emmanuel2001"},"content":"![alt text](https://Emmanuel2001.github.io/ip/Ui.png)","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"-":9,"Emmanuel2001":55}},{"path":"src/main/java/buddytalk/BuddyTalk.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emmanuel2001"},"content":"package buddytalk;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Emmanuel2001"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.commands.Command;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.exceptions.BuddyException;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.parser.Parser;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.storage.Storage;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.tasks.TaskList;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.ui.Ui;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Emmanuel2001"},"content":"/**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Emmanuel2001"},"content":" * Represents the main BuddyTalk application. This class handles user input,","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Emmanuel2001"},"content":" * processes commands, and manages interactions between the task list, and storage.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Emmanuel2001"},"content":" */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Emmanuel2001"},"content":"public class BuddyTalk {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Emmanuel2001"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Emmanuel2001"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Emmanuel2001"},"content":"    private Ui ui;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Emmanuel2001"},"content":"     * Initializes the BuddyTalk application. Attempts to load tasks from the file","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Emmanuel2001"},"content":"     * specified in the {@code filePath}. If the file doesn\u0027t exist or is corrupted,","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Emmanuel2001"},"content":"     * starts with an empty task list.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Emmanuel2001"},"content":"    public BuddyTalk(String filePath) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Emmanuel2001"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Emmanuel2001"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Emmanuel2001"},"content":"        try {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Emmanuel2001"},"content":"            tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Emmanuel2001"},"content":"        } catch (BuddyException | IOException e) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Emmanuel2001"},"content":"            ui.displayError(\"The data file is corrupted. Starting with an empty task list.\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Emmanuel2001"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Emmanuel2001"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Emmanuel2001"},"content":"     * Starts the main application loop. Continuously waits for user input, parses commands,","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Emmanuel2001"},"content":"     * and performs the corresponding actions until the \"bye\" command is issued.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Emmanuel2001"},"content":"    public String run(String input) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Emmanuel2001"},"content":"        try {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Emmanuel2001"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Emmanuel2001"},"content":"            return command.execute(tasks, storage, ui);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Emmanuel2001"},"content":"        } catch (BuddyException | IOException e) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Emmanuel2001"},"content":"            return ui.displayError(e.getMessage());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Emmanuel2001"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Emmanuel2001"},"content":"     * The main entry point of the application. Starts BuddyTalk.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Emmanuel2001"},"content":"     * @param args Command-line arguments.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Emmanuel2001"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Emmanuel2001"},"content":"        new BuddyTalk(\"data/BuddyTalk.txt\").run(args[0]);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Emmanuel2001"},"content":"}","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"Emmanuel2001":59}},{"path":"src/main/java/buddytalk/commands/Add.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emmanuel2001"},"content":"package buddytalk.commands;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Emmanuel2001"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.storage.Storage;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.tasks.Task;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.tasks.TaskList;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.ui.Ui;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Emmanuel2001"},"content":"/**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Emmanuel2001"},"content":" * Represents a command to add a task to the task list.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Emmanuel2001"},"content":" * This command updates the task list, saves the updated list to storage,","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Emmanuel2001"},"content":" * and provides feedback to the user via the UI.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Emmanuel2001"},"content":" */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Emmanuel2001"},"content":"public class Add extends Command {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Emmanuel2001"},"content":"    private final Task task;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Emmanuel2001"},"content":"     * Constructs an Add command with the specified task.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Emmanuel2001"},"content":"     * @param task The task to be added to the task list.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Emmanuel2001"},"content":"    public Add(Task task) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Emmanuel2001"},"content":"        this.task \u003d task;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Emmanuel2001"},"content":"     * Executes the add command by adding the specified task to the given task list,","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Emmanuel2001"},"content":"     * saving the updated task list to the storage, and returning","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Emmanuel2001"},"content":"     * a confirmation message to the user.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Emmanuel2001"},"content":"     * @param tasks   The list of tasks to which the new task will be added.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Emmanuel2001"},"content":"     * @param storage The storage system where tasks are saved persistently.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Emmanuel2001"},"content":"     * @param ui      The user interface used to provide feedback to the user.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Emmanuel2001"},"content":"     * @return A String containing the confirmation message for the user.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Emmanuel2001"},"content":"     * @throws IOException If an input or output operation fails during saving the task list.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Emmanuel2001"},"content":"    @Override","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Emmanuel2001"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) throws IOException {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Emmanuel2001"},"content":"        tasks.addTask(task);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Emmanuel2001"},"content":"        storage.saveTasks(tasks.getAllTasks());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Emmanuel2001"},"content":"        return String.format(\"Got it. I\u0027ve added this task: \\n %s\", task.toString());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Emmanuel2001"},"content":"}","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"Emmanuel2001":44}},{"path":"src/main/java/buddytalk/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emmanuel2001"},"content":"package buddytalk.commands;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Emmanuel2001"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.exceptions.BuddyException;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.storage.Storage;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.tasks.TaskList;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.ui.Ui;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Emmanuel2001"},"content":"/**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Emmanuel2001"},"content":" * Represents an abstract command to be executed.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Emmanuel2001"},"content":" * Commands define specific functionality and interact with the task list, storage, and user interface.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Emmanuel2001"},"content":" */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Emmanuel2001"},"content":"public abstract class Command {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Emmanuel2001"},"content":"     * Executes the command, performing specific actions such as modifying the task list,","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Emmanuel2001"},"content":"     * interacting with storage, or updating the user interface.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Emmanuel2001"},"content":"     * @param tasks   The {@code TaskList} containing the current tasks managed by the application.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Emmanuel2001"},"content":"     * @param storage The {@code Storage} object handling the saving and loading of tasks from persistent storage.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Emmanuel2001"},"content":"     * @param ui      The {@code Ui} instance used for displaying feedback or messages to the user.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Emmanuel2001"},"content":"     * @return A {@code String} containing the result or feedback of the command execution.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Emmanuel2001"},"content":"     * @throws BuddyException If an error specific to the BuddyTalk application occurs during execution.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Emmanuel2001"},"content":"     * @throws IOException    If an input/output operation fails during execution.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Emmanuel2001"},"content":"    public abstract String execute(TaskList tasks, Storage storage, Ui ui) throws BuddyException, IOException;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Emmanuel2001"},"content":"}","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"Emmanuel2001":28}},{"path":"src/main/java/buddytalk/commands/Delete.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emmanuel2001"},"content":"package buddytalk.commands;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Emmanuel2001"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.storage.Storage;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.tasks.Task;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.tasks.TaskList;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.ui.Ui;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Emmanuel2001"},"content":"/**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Emmanuel2001"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Emmanuel2001"},"content":" */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Emmanuel2001"},"content":"public class Delete extends Command {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Emmanuel2001"},"content":"    private final int idx;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Emmanuel2001"},"content":"     * Creates a Delete command to remove a task at a specific index in the task list.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Emmanuel2001"},"content":"     * @param idx The index of the task to be deleted, zero-based.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Emmanuel2001"},"content":"    public Delete(int idx) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Emmanuel2001"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Emmanuel2001"},"content":"     * Executes the delete command. Removes the task at the specified index","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Emmanuel2001"},"content":"     * from the task list, updates the storage file, and provides feedback to the user.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Emmanuel2001"},"content":"     * @param tasks   The {@code TaskList} containing the current tasks.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Emmanuel2001"},"content":"     * @param storage The {@code Storage} instance used to save the updated task list.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Emmanuel2001"},"content":"     * @param ui      The {@code Ui} instance used to display feedback to the user.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Emmanuel2001"},"content":"     * @return A {@code String} message confirming the removal of the task.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Emmanuel2001"},"content":"     * @throws IOException If there is an error saving the updated task list to storage.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Emmanuel2001"},"content":"    @Override","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Emmanuel2001"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) throws IOException {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Emmanuel2001"},"content":"        Task temp \u003d tasks.getTask(idx);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Emmanuel2001"},"content":"        tasks.deleteTask(idx);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Emmanuel2001"},"content":"        storage.saveTasks(tasks.getAllTasks());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Emmanuel2001"},"content":"        return String.format(\"Noted. I\u0027ve removed this task: \\n  %s\", temp);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Emmanuel2001"},"content":"}","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"Emmanuel2001":42}},{"path":"src/main/java/buddytalk/commands/Find.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emmanuel2001"},"content":"package buddytalk.commands;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Emmanuel2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.storage.Storage;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.tasks.Task;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.tasks.TaskList;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.ui.Ui;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Emmanuel2001"},"content":"/**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Emmanuel2001"},"content":" * Represents a command to find tasks in the task list that match a specific keyword or phrase.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Emmanuel2001"},"content":" */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Emmanuel2001"},"content":"public class Find extends Command {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Emmanuel2001"},"content":"    private String item;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Emmanuel2001"},"content":"     * Creates a Find command to search for tasks that match the given keyword or phrase.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Emmanuel2001"},"content":"     * @param item The keyword or phrase to search for in the task list.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Emmanuel2001"},"content":"    public Find(String item) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Emmanuel2001"},"content":"        this.item \u003d item;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Emmanuel2001"},"content":"     * Executes the find command. Searches the task list for tasks that match the specified","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Emmanuel2001"},"content":"     * keyword or phrase and returns the results to the user.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Emmanuel2001"},"content":"     * @param tasks   The {@code TaskList} containing the current tasks.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Emmanuel2001"},"content":"     * @param storage The {@code Storage} instance to manage task storage (unused in this command).","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Emmanuel2001"},"content":"     * @param ui      The {@code Ui} instance used to display the results of the search.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Emmanuel2001"},"content":"     * @return A {@code String} containing the list of tasks that match the search keyword or phrase.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Emmanuel2001"},"content":"    @Override","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Emmanuel2001"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Emmanuel2001"},"content":"        ArrayList\u003cTask\u003e items \u003d tasks.findTasks(item);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Emmanuel2001"},"content":"        return ui.showList(items);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Emmanuel2001"},"content":"}","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"Emmanuel2001":39}},{"path":"src/main/java/buddytalk/commands/Help.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emmanuel2001"},"content":"package buddytalk.commands;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Emmanuel2001"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Emmanuel2001"},"content":"import java.util.Map;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.storage.Storage;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.tasks.TaskList;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.ui.Ui;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Emmanuel2001"},"content":"/**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Emmanuel2001"},"content":" * Represents the \"help\" command, providing detailed descriptions of supported commands","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Emmanuel2001"},"content":" * and their respective usages.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Emmanuel2001"},"content":" * The {@code Help} class stores all command help information and allows retrieval of","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Emmanuel2001"},"content":" * a specific command\u0027s details or all supported commands.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Emmanuel2001"},"content":" */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Emmanuel2001"},"content":"public class Help extends Command {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Emmanuel2001"},"content":"    private static final Map\u003cString, String\u003e COMMAND_HELP \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Emmanuel2001"},"content":"    private final String helpMessage;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Emmanuel2001"},"content":"    static {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Emmanuel2001"},"content":"        COMMAND_HELP.put(\"help\", \"Displays information about available commands. Usage: help or help [command]\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Emmanuel2001"},"content":"        COMMAND_HELP.put(\"deadline\", \"Adds a task with a due date. Usage: deadline [description] /by [due date]\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Emmanuel2001"},"content":"        COMMAND_HELP.put(\"event\", \"Adds an event with a start and end time. \"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Emmanuel2001"},"content":"                + \"Usage: event [description] /from [start] /to [end]\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Emmanuel2001"},"content":"        COMMAND_HELP.put(\"delete\", \"Deletes a task by its index. Usage: delete [task index]\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Emmanuel2001"},"content":"        COMMAND_HELP.put(\"list\", \"Lists all current tasks. Usage: list\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Emmanuel2001"},"content":"        COMMAND_HELP.put(\"todo\", \"Adds a todo task. Usage: todo [description]\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Emmanuel2001"},"content":"        COMMAND_HELP.put(\"mark\", \"Marks a task as done by its index. Usage: mark [task index]\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Emmanuel2001"},"content":"        COMMAND_HELP.put(\"unmark\", \"Marks a task as not done by its index. Usage: unmark [task index]\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Emmanuel2001"},"content":"        COMMAND_HELP.put(\"find\", \"Finds tasks that contain the given keyword. Usage: find [keyword]\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Emmanuel2001"},"content":"     * Constructs a new {@code Help} object with a specific help message to be displayed.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Emmanuel2001"},"content":"     * @param helpMessage The help message that provides information about a specific command or all commands.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Emmanuel2001"},"content":"    public Help(String helpMessage) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Emmanuel2001"},"content":"        this.helpMessage \u003d helpMessage;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Emmanuel2001"},"content":"     * Retrieves help information for a specific command.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Emmanuel2001"},"content":"     * @param command The name of the command for which help is requested.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Emmanuel2001"},"content":"     * @return A {@code Help} object containing the help description for the specified command.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Emmanuel2001"},"content":"     *         If the command is not found, a generic \"No help available\" message is returned.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Emmanuel2001"},"content":"    public static Help getHelp(String command) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Emmanuel2001"},"content":"        String helpDescription \u003d COMMAND_HELP.getOrDefault(command, \"No help available for this command.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Emmanuel2001"},"content":"        return new Help(helpDescription);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Emmanuel2001"},"content":"     * Retrieves help information for all supported commands, including their usages.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Emmanuel2001"},"content":"     * @return A {@code Help} object containing the help descriptions and usage information","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Emmanuel2001"},"content":"     *         for all the commands in the application.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Emmanuel2001"},"content":"    public static Help getAllHelp() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Emmanuel2001"},"content":"        StringBuilder helpBuilder \u003d new StringBuilder();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Emmanuel2001"},"content":"        COMMAND_HELP.forEach((cmd, description) -\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Emmanuel2001"},"content":"                helpBuilder.append(cmd).append(\": \").append(description).append(\"\\n\"));","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Emmanuel2001"},"content":"        return new Help(helpBuilder.toString().trim());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Emmanuel2001"},"content":"     * Displays the help message for the user.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Emmanuel2001"},"content":"     * This method is executed when the \"help\" command is called, providing descriptive","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Emmanuel2001"},"content":"     * and user-friendly information about how to use the application\u0027s commands.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Emmanuel2001"},"content":"     * @param tasks   An instance of the {@code TaskList} storing the list of tasks (not used in this method).","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Emmanuel2001"},"content":"     * @param storage An instance of the {@code Storage} managing data storage (not used in this method).","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Emmanuel2001"},"content":"     * @param ui      An instance of the {@code Ui} used for interacting with the user (not used in this method).","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Emmanuel2001"},"content":"     * @return A {@code String} containing the help message to be displayed to the user.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Emmanuel2001"},"content":"    @Override","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Emmanuel2001"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Emmanuel2001"},"content":"        return helpMessage;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Emmanuel2001"},"content":"}","lastModifiedDate":"2025-02-19","isFullCredit":false}],"authorContributionMap":{"Emmanuel2001":81}},{"path":"src/main/java/buddytalk/commands/List.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emmanuel2001"},"content":"package buddytalk.commands;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.storage.Storage;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.tasks.TaskList;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.ui.Ui;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Emmanuel2001"},"content":"/**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Emmanuel2001"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Emmanuel2001"},"content":" */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Emmanuel2001"},"content":"public class List extends Command {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Emmanuel2001"},"content":"     * Executes the list command. Retrieves all tasks from the task list","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Emmanuel2001"},"content":"     * and displays them to the user.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Emmanuel2001"},"content":"     * @param tasks   The {@code TaskList} containing the current tasks.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Emmanuel2001"},"content":"     * @param storage The {@code Storage} instance to manage task storage (unused in this command).","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Emmanuel2001"},"content":"     * @param ui      The {@code Ui} instance used to display the list of tasks to the user.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Emmanuel2001"},"content":"     * @return A {@code String} containing the formatted list of all tasks.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Emmanuel2001"},"content":"    @Override","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Emmanuel2001"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Emmanuel2001"},"content":"        return ui.displayList(tasks.getAllTasks());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Emmanuel2001"},"content":"}","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"Emmanuel2001":24}},{"path":"src/main/java/buddytalk/commands/Mark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emmanuel2001"},"content":"package buddytalk.commands;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Emmanuel2001"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.storage.Storage;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.tasks.Task;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.tasks.TaskList;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.ui.Ui;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Emmanuel2001"},"content":"/**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Emmanuel2001"},"content":" * Represents a command to mark a specific task in the task list as done.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Emmanuel2001"},"content":" */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Emmanuel2001"},"content":"public class Mark extends Command {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Emmanuel2001"},"content":"    private final int idx;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Emmanuel2001"},"content":"     * Creates a Mark command to mark a task at the specified index as done.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Emmanuel2001"},"content":"     * @param idx The index of the task to be marked as done, zero-based.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Emmanuel2001"},"content":"    public Mark(int idx) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Emmanuel2001"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Emmanuel2001"},"content":"     * Executes the mark command. Marks the task at the specified index as done,","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Emmanuel2001"},"content":"     * updates the storage to reflect the change, and provides feedback to the user.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Emmanuel2001"},"content":"     * @param tasks   The {@code TaskList} containing the current tasks.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Emmanuel2001"},"content":"     * @param storage The {@code Storage} instance to save the updated task list.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Emmanuel2001"},"content":"     * @param ui      The {@code Ui} instance used to display feedback to the user.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Emmanuel2001"},"content":"     * @return A {@code String} message confirming that the task has been marked as done.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Emmanuel2001"},"content":"     * @throws IOException If there is an error saving the updated task list to storage.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Emmanuel2001"},"content":"    @Override","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Emmanuel2001"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) throws IOException {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Emmanuel2001"},"content":"        Task task \u003d tasks.getTask(idx);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Emmanuel2001"},"content":"        task.mark();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Emmanuel2001"},"content":"        storage.saveTasks(tasks.getAllTasks());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Emmanuel2001"},"content":"        return String.format(\"Nice! I\u0027ve marked this task as done: \\n  %s \", task);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Emmanuel2001"},"content":"}","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"Emmanuel2001":42}},{"path":"src/main/java/buddytalk/commands/Unmark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emmanuel2001"},"content":"package buddytalk.commands;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Emmanuel2001"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.storage.Storage;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.tasks.Task;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.tasks.TaskList;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.ui.Ui;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Emmanuel2001"},"content":"/**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Emmanuel2001"},"content":" * Represents a command to unmark a specific task in the task list, indicating it is not done.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Emmanuel2001"},"content":" */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Emmanuel2001"},"content":"public class Unmark extends Command {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Emmanuel2001"},"content":"    private final int idx;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Emmanuel2001"},"content":"     * Creates an Unmark command to mark a task at the specified index as not done.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Emmanuel2001"},"content":"     * @param idx The index of the task to be unmarked, zero-based.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Emmanuel2001"},"content":"    public Unmark(int idx) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Emmanuel2001"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Emmanuel2001"},"content":"     * Executes the unmark command. Marks the task at the specified index as not done,","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Emmanuel2001"},"content":"     * updates the storage to reflect the change, and provides feedback to the user.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Emmanuel2001"},"content":"     * @param tasks   The {@code TaskList} containing the current tasks.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Emmanuel2001"},"content":"     * @param storage The {@code Storage} instance to save the updated task list.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Emmanuel2001"},"content":"     * @param ui      The {@code Ui} instance used to display feedback to the user.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Emmanuel2001"},"content":"     * @return A {@code String} message confirming that the task has been marked as not done.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Emmanuel2001"},"content":"     * @throws IOException If there is an error saving the updated task list to storage.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Emmanuel2001"},"content":"    @Override","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Emmanuel2001"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) throws IOException {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Emmanuel2001"},"content":"        Task task \u003d tasks.getTask(idx);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Emmanuel2001"},"content":"        task.unmark();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Emmanuel2001"},"content":"        storage.saveTasks(tasks.getAllTasks());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Emmanuel2001"},"content":"        return String.format(\"OK, I\u0027ve marked this task as not done yet: \\n  %s\", task);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Emmanuel2001"},"content":"}","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"Emmanuel2001":42}},{"path":"src/main/java/buddytalk/exceptions/BuddyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emmanuel2001"},"content":"package buddytalk.exceptions;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Emmanuel2001"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Emmanuel2001"},"content":" * Represents a custom exception specific to the BuddyTalk application.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Emmanuel2001"},"content":" * {@code BuddyException} is used to handle application-specific error scenarios and provide","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Emmanuel2001"},"content":" * informative error messages to the user or developer.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Emmanuel2001"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Emmanuel2001"},"content":"public class BuddyException extends Exception {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Emmanuel2001"},"content":"     * Constructs a {@code BuddyException} with a specified message.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Emmanuel2001"},"content":"     * @param message A string containing the detailed description of the exception,","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Emmanuel2001"},"content":"     *                explaining the reason for this exception being thrown.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Emmanuel2001"},"content":"    public BuddyException(String message) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Emmanuel2001"},"content":"        super(message);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Emmanuel2001"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"Emmanuel2001":19}},{"path":"src/main/java/buddytalk/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emmanuel2001"},"content":"package buddytalk.gui;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Emmanuel2001"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Emmanuel2001"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Emmanuel2001"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Emmanuel2001"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Emmanuel2001"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Emmanuel2001"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Emmanuel2001"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Emmanuel2001"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Emmanuel2001"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Emmanuel2001"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Emmanuel2001"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Emmanuel2001"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Emmanuel2001"},"content":"/**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Emmanuel2001"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Emmanuel2001"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Emmanuel2001"},"content":" */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Emmanuel2001"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Emmanuel2001"},"content":"    @FXML","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Emmanuel2001"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Emmanuel2001"},"content":"    @FXML","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Emmanuel2001"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Emmanuel2001"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Emmanuel2001"},"content":"        try {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Emmanuel2001"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Emmanuel2001"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Emmanuel2001"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Emmanuel2001"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Emmanuel2001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Emmanuel2001"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Emmanuel2001"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Emmanuel2001"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Emmanuel2001"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Emmanuel2001"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Emmanuel2001"},"content":"    private void flip() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Emmanuel2001"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Emmanuel2001"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Emmanuel2001"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Emmanuel2001"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Emmanuel2001"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Emmanuel2001"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Emmanuel2001"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Emmanuel2001"},"content":"    public static DialogBox getBuddyTalkDialog(String text, Image img) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Emmanuel2001"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Emmanuel2001"},"content":"        db.flip();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Emmanuel2001"},"content":"        return db;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Emmanuel2001"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"Emmanuel2001":61}},{"path":"src/main/java/buddytalk/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emmanuel2001"},"content":"package buddytalk.gui;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Emmanuel2001"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Emmanuel2001"},"content":"/**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Emmanuel2001"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Emmanuel2001"},"content":" */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Emmanuel2001"},"content":"public class Launcher {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Emmanuel2001"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Emmanuel2001"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Emmanuel2001"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"Emmanuel2001":12}},{"path":"src/main/java/buddytalk/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emmanuel2001"},"content":"package buddytalk.gui;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Emmanuel2001"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.BuddyTalk;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Emmanuel2001"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Emmanuel2001"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Emmanuel2001"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Emmanuel2001"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Emmanuel2001"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Emmanuel2001"},"content":"/**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Emmanuel2001"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Emmanuel2001"},"content":" */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Emmanuel2001"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Emmanuel2001"},"content":"    private BuddyTalk buddyTalk;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Emmanuel2001"},"content":"    public Main() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Emmanuel2001"},"content":"        this.buddyTalk \u003d new BuddyTalk(\"data/BuddyTalk.txt\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Emmanuel2001"},"content":"    @Override","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Emmanuel2001"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Emmanuel2001"},"content":"        try {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Emmanuel2001"},"content":"            stage.setTitle(\"BuddyTalk\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Emmanuel2001"},"content":"            stage.setMinHeight(417);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Emmanuel2001"},"content":"            stage.setMinWidth(417);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Emmanuel2001"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Emmanuel2001"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Emmanuel2001"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Emmanuel2001"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Emmanuel2001"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBuddyTalk(buddyTalk);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Emmanuel2001"},"content":"            stage.show();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Emmanuel2001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Emmanuel2001"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Emmanuel2001"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Emmanuel2001"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"Emmanuel2001":39}},{"path":"src/main/java/buddytalk/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emmanuel2001"},"content":"package buddytalk.gui;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.BuddyTalk;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.exceptions.BuddyException;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Emmanuel2001"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Emmanuel2001"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Emmanuel2001"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Emmanuel2001"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Emmanuel2001"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Emmanuel2001"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Emmanuel2001"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Emmanuel2001"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Emmanuel2001"},"content":"/**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Emmanuel2001"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Emmanuel2001"},"content":" */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Emmanuel2001"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Emmanuel2001"},"content":"    @FXML","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Emmanuel2001"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Emmanuel2001"},"content":"    @FXML","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Emmanuel2001"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Emmanuel2001"},"content":"    @FXML","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Emmanuel2001"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Emmanuel2001"},"content":"    @FXML","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Emmanuel2001"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Emmanuel2001"},"content":"    private BuddyTalk buddyTalk;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Emmanuel2001"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Emmanuel2001"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Bot.png\"));","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Emmanuel2001"},"content":"    @FXML","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Emmanuel2001"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Emmanuel2001"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Emmanuel2001"},"content":"    /** Injects the Duke instance */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Emmanuel2001"},"content":"    public void setBuddyTalk(BuddyTalk b) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Emmanuel2001"},"content":"        buddyTalk \u003d b;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Emmanuel2001"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Emmanuel2001"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Emmanuel2001"},"content":"    @FXML","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Emmanuel2001"},"content":"    private void handleUserInput() throws BuddyException {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Emmanuel2001"},"content":"        try {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Emmanuel2001"},"content":"            String input \u003d userInput.getText();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Emmanuel2001"},"content":"            String response \u003d buddyTalk.run(input);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Emmanuel2001"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Emmanuel2001"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Emmanuel2001"},"content":"                    DialogBox.getBuddyTalkDialog(response, dukeImage)","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Emmanuel2001"},"content":"            );","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Emmanuel2001"},"content":"            userInput.clear();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Emmanuel2001"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Emmanuel2001"},"content":"                Platform.exit();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Emmanuel2001"},"content":"                System.exit(0);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Emmanuel2001"},"content":"            }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Emmanuel2001"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Emmanuel2001"},"content":"            throw new BuddyException(e.getMessage());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Emmanuel2001"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Emmanuel2001"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"Emmanuel2001":63}},{"path":"src/main/java/buddytalk/parser/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emmanuel2001"},"content":"package buddytalk.parser;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.commands.Command;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.exceptions.BuddyException;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Emmanuel2001"},"content":"/**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Emmanuel2001"},"content":" * Represents a parser for a specific command in the application.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Emmanuel2001"},"content":" * Each implementation of this interface is responsible for parsing user input and creating","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Emmanuel2001"},"content":" * the corresponding {@code Command} object.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Emmanuel2001"},"content":" */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Emmanuel2001"},"content":"public interface CommandParser {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Emmanuel2001"},"content":"     * Parses the input tokens and returns a {@code Command} object representing the user\u0027s command.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Emmanuel2001"},"content":"     * @param tokens The array of strings containing the command and its arguments.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Emmanuel2001"},"content":"     *               The tokens are expected to be preprocessed (e.g., split by whitespace).","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Emmanuel2001"},"content":"     * @return A {@code Command} object that represents the parsed command.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Emmanuel2001"},"content":"     * @throws BuddyException If the input tokens are invalid or improperly formatted for the specific command.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Emmanuel2001"},"content":"    Command parse(String[] tokens) throws BuddyException;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Emmanuel2001"},"content":"}","lastModifiedDate":"2025-02-19","isFullCredit":false}],"authorContributionMap":{"Emmanuel2001":22}},{"path":"src/main/java/buddytalk/parser/DeadlineParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emmanuel2001"},"content":"package buddytalk.parser;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Emmanuel2001"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.commands.Add;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.exceptions.BuddyException;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.tasks.Deadline;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Emmanuel2001"},"content":"/**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Emmanuel2001"},"content":" * Parses the \"deadline\" command from user input and creates an {@code Add} command containing a {@code Deadline} task.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Emmanuel2001"},"content":" * The \"deadline\" command is used to add a task with a description and a due date/time.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Emmanuel2001"},"content":" */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Emmanuel2001"},"content":"public class DeadlineParser implements CommandParser {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Emmanuel2001"},"content":"     * Parses the input tokens for the \"deadline\" command and returns the corresponding {@code Add} command.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Emmanuel2001"},"content":"     * The \"deadline\" command requires a description and a due date/time, specified using the \"/by\" clause.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Emmanuel2001"},"content":"     * @param tokens The array of strings containing the command and its arguments.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Emmanuel2001"},"content":"     *               The first token should be \"deadline\",","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Emmanuel2001"},"content":"     *               while the second contains the description and date/time clause.","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Emmanuel2001"},"content":"     * @return An {@code Add} command containing the {@code Deadline}","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Emmanuel2001"},"content":"     *               task with the parsed description and due date/time.","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Emmanuel2001"},"content":"     * @throws BuddyException If the description is missing or if the \"/by\" clause is missing or blank.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Emmanuel2001"},"content":"    @Override","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Emmanuel2001"},"content":"    public Add parse(String[] tokens) throws BuddyException {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Emmanuel2001"},"content":"        try {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Emmanuel2001"},"content":"            if (tokens.length \u003c 2) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Emmanuel2001"},"content":"                throw new BuddyException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Emmanuel2001"},"content":"            }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Emmanuel2001"},"content":"            String[] details \u003d tokens[1].strip().split(\"/by\", 2);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Emmanuel2001"},"content":"            if (details.length \u003c 2 || details[1].isBlank()) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Emmanuel2001"},"content":"                throw new BuddyException(\"The deadline task must include a /by clause.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Emmanuel2001"},"content":"            }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Emmanuel2001"},"content":"            return new Add(new Deadline(details[0].strip(), details[1].strip(), false));","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Emmanuel2001"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Emmanuel2001"},"content":"            throw new BuddyException(\"The date format is invalid. Please use \u0027yyyy-MM-dd HH:mm\u0027.\");","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Emmanuel2001"},"content":"        }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Emmanuel2001"},"content":"}","lastModifiedDate":"2025-02-19","isFullCredit":false}],"authorContributionMap":{"Emmanuel2001":43}},{"path":"src/main/java/buddytalk/parser/DeleteParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emmanuel2001"},"content":"package buddytalk.parser;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.commands.Delete;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.exceptions.BuddyException;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Emmanuel2001"},"content":"/**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Emmanuel2001"},"content":" * Parses the \"delete\" command from user input and creates a {@code Delete} command.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Emmanuel2001"},"content":" * The \"delete\" command is used to remove a task from the task list based on its index.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Emmanuel2001"},"content":" */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Emmanuel2001"},"content":"public class DeleteParser implements CommandParser {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Emmanuel2001"},"content":"     * Parses the input tokens for the \"delete\" command and returns the corresponding {@code Delete} command.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Emmanuel2001"},"content":"     * The \"delete\" command requires a single argument specifying the 1-based index of the task to be deleted.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Emmanuel2001"},"content":"     * @param tokens The array of strings containing the command and its arguments.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Emmanuel2001"},"content":"     *               The first token should be \"delete\", followed by the task index as the second token.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Emmanuel2001"},"content":"     * @return A {@code Delete} command that contains the 0-based index of the task to be deleted.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Emmanuel2001"},"content":"     * @throws BuddyException If the task index is missing, invalid, or not a number.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Emmanuel2001"},"content":"    @Override","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Emmanuel2001"},"content":"    public Delete parse(String[] tokens) throws BuddyException {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Emmanuel2001"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Emmanuel2001"},"content":"            throw new BuddyException(\"The delete command must include a task index.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Emmanuel2001"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Emmanuel2001"},"content":"        try {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Emmanuel2001"},"content":"            int index \u003d Integer.parseInt(tokens[1].strip()) - 1;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Emmanuel2001"},"content":"            return new Delete(index);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Emmanuel2001"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Emmanuel2001"},"content":"            throw new BuddyException(\"Invalid task index for delete command.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Emmanuel2001"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Emmanuel2001"},"content":"}","lastModifiedDate":"2025-02-19","isFullCredit":false}],"authorContributionMap":{"Emmanuel2001":34}},{"path":"src/main/java/buddytalk/parser/EventParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emmanuel2001"},"content":"package buddytalk.parser;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Emmanuel2001"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.commands.Add;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.exceptions.BuddyException;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.tasks.Event;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Emmanuel2001"},"content":"/**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Emmanuel2001"},"content":" * Parses the \"event\" command from user input and creates an {@code Add} command containing an {@code Event} task.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Emmanuel2001"},"content":" * The \"event\" command is used to add a new event with a description, start time, and end time.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Emmanuel2001"},"content":" */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Emmanuel2001"},"content":"public class EventParser implements CommandParser {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Emmanuel2001"},"content":"     * Parses the input tokens for the \"event\" command and returns the corresponding {@code Add} command.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Emmanuel2001"},"content":"     * The \"event\" command requires a description, a start time (specified using \"/from\"),","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Emmanuel2001"},"content":"     * and an end time (specified using \"/to\").","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Emmanuel2001"},"content":"     * @param tokens The array of strings containing the command and its arguments.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Emmanuel2001"},"content":"     *               The first token should be \"event\", while the second contains the description and required clauses.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Emmanuel2001"},"content":"     * @return An {@code Add} command containing the {@code Event} task","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Emmanuel2001"},"content":"     *              with the parsed description, start time, and end time.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Emmanuel2001"},"content":"     * @throws BuddyException If the description is missing or","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Emmanuel2001"},"content":"     *                        if any of the required clauses (/from or /to) are missing or blank.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Emmanuel2001"},"content":"    @Override","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Emmanuel2001"},"content":"    public Add parse(String[] tokens) throws BuddyException {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Emmanuel2001"},"content":"        try {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Emmanuel2001"},"content":"            if (tokens.length \u003c 2) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Emmanuel2001"},"content":"                throw new BuddyException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Emmanuel2001"},"content":"            }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Emmanuel2001"},"content":"            String[] details \u003d tokens[1].strip().split(\"/from\", 2);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Emmanuel2001"},"content":"            if (details.length \u003c 2 || details[1].isBlank()) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Emmanuel2001"},"content":"                throw new BuddyException(\"The event task must include a /from clause.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Emmanuel2001"},"content":"            }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Emmanuel2001"},"content":"            String[] times \u003d details[1].strip().split(\"/to\", 2);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Emmanuel2001"},"content":"            if (times.length \u003c 2 || times[1].isBlank()) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Emmanuel2001"},"content":"                throw new BuddyException(\"The event task must include a /to clause.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Emmanuel2001"},"content":"            }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Emmanuel2001"},"content":"            return new Add(new Event(details[0].strip(), times[0].strip(), times[1].strip(), false));","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Emmanuel2001"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Emmanuel2001"},"content":"            throw new BuddyException(\"The date format is invalid. Please use \u0027yyyy-MM-dd HH:mm\u0027.\");","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Emmanuel2001"},"content":"        }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Emmanuel2001"},"content":"}","lastModifiedDate":"2025-02-19","isFullCredit":false}],"authorContributionMap":{"Emmanuel2001":49}},{"path":"src/main/java/buddytalk/parser/FindParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emmanuel2001"},"content":"package buddytalk.parser;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.commands.Find;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.exceptions.BuddyException;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Emmanuel2001"},"content":"/**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Emmanuel2001"},"content":" * Parses the \"find\" command from user input and creates a {@code Find} command.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Emmanuel2001"},"content":" * The \"find\" command is used to search for tasks that contain a specific keyword.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Emmanuel2001"},"content":" */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Emmanuel2001"},"content":"public class FindParser implements CommandParser {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Emmanuel2001"},"content":"     * Parses the input tokens for the \"find\" command and returns the corresponding {@code Find} command.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Emmanuel2001"},"content":"     * @param tokens The array of strings containing the command and its arguments.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Emmanuel2001"},"content":"     *               The first token should be \"find\", followed by the search term as the second token.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Emmanuel2001"},"content":"     * @return A {@code Find} command that encapsulates the search keyword.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Emmanuel2001"},"content":"     * @throws BuddyException If the search term is missing or blank.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Emmanuel2001"},"content":"    @Override","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Emmanuel2001"},"content":"    public Find parse(String[] tokens) throws BuddyException {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Emmanuel2001"},"content":"        if (tokens.length \u003c 2 || tokens[1].isBlank()) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Emmanuel2001"},"content":"            throw new BuddyException(\"The find command must include a search term.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Emmanuel2001"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Emmanuel2001"},"content":"        return new Find(tokens[1].strip());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Emmanuel2001"},"content":"}","lastModifiedDate":"2025-02-19","isFullCredit":false}],"authorContributionMap":{"Emmanuel2001":28}},{"path":"src/main/java/buddytalk/parser/HelpParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emmanuel2001"},"content":"package buddytalk.parser;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.commands.Help;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.exceptions.BuddyException;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Emmanuel2001"},"content":"/**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Emmanuel2001"},"content":" * Parses the \"help\" command from user input and creates a {@code Help} command.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Emmanuel2001"},"content":" * The \"help\" command is used to display information about available commands or","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Emmanuel2001"},"content":" * detailed information about a specific command\u0027s usage.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Emmanuel2001"},"content":" */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Emmanuel2001"},"content":"public class HelpParser implements CommandParser {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Emmanuel2001"},"content":"     * Parses the input tokens for the \"help\" command and returns the corresponding {@code Help} command.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Emmanuel2001"},"content":"     * The input should follow one of the following formats:","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Emmanuel2001"},"content":"     * {@code help} - Displays all available commands and their details.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Emmanuel2001"},"content":"     * {@code help [command]} - Displays detailed information about the specified command.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Emmanuel2001"},"content":"     * If the input contains more than two tokens, an exception is thrown.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Emmanuel2001"},"content":"     * @param tokens The array of strings containing the command and its arguments.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Emmanuel2001"},"content":"     *               The first token should always be \"help\".","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Emmanuel2001"},"content":"     *               The second token is optional, it specifies the command name for which help is requested.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Emmanuel2001"},"content":"     * @return A {@code Help} command containing the requested help information.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Emmanuel2001"},"content":"     * @throws BuddyException If the input contains more than two tokens or the command format is invalid.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Emmanuel2001"},"content":"    @Override","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Emmanuel2001"},"content":"    public Help parse(String[] tokens) throws BuddyException {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Emmanuel2001"},"content":"        if (tokens.length \u003d\u003d 1) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Emmanuel2001"},"content":"            return Help.getAllHelp();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Emmanuel2001"},"content":"        } else if (tokens.length \u003d\u003d 2) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Emmanuel2001"},"content":"            return Help.getHelp(tokens[1].strip());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Emmanuel2001"},"content":"        } else {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Emmanuel2001"},"content":"            throw new BuddyException(\"The \u0027help\u0027 command is not formatted correctly. Usage: help or help [command]\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Emmanuel2001"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Emmanuel2001"},"content":"}","lastModifiedDate":"2025-02-19","isFullCredit":false}],"authorContributionMap":{"Emmanuel2001":36}},{"path":"src/main/java/buddytalk/parser/ListParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emmanuel2001"},"content":"package buddytalk.parser;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.commands.List;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Emmanuel2001"},"content":"/**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Emmanuel2001"},"content":" * Parses the \"list\" command from user input and creates a {@code List} command.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Emmanuel2001"},"content":" * The \"list\" command is used to display all tasks currently stored.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Emmanuel2001"},"content":" */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Emmanuel2001"},"content":"public class ListParser implements CommandParser {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Emmanuel2001"},"content":"     * Parses the input tokens for the \"list\" command and returns a {@code List} command.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Emmanuel2001"},"content":"     * The \"list\" command does not require any additional arguments.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Emmanuel2001"},"content":"     * @param tokens The array of strings containing the command and its arguments.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Emmanuel2001"},"content":"     *               For the \"list\" command, no arguments are expected.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Emmanuel2001"},"content":"     * @return A {@code List} command that represents the \"list\" operation.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Emmanuel2001"},"content":"    @Override","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Emmanuel2001"},"content":"    public List parse(String[] tokens) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Emmanuel2001"},"content":"        return new List();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Emmanuel2001"},"content":"}","lastModifiedDate":"2025-02-19","isFullCredit":false}],"authorContributionMap":{"Emmanuel2001":23}},{"path":"src/main/java/buddytalk/parser/MarkParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emmanuel2001"},"content":"package buddytalk.parser;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.commands.Mark;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.exceptions.BuddyException;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Emmanuel2001"},"content":"/**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Emmanuel2001"},"content":" * Parses the \"mark\" command from user input and creates a {@code Mark} command.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Emmanuel2001"},"content":" * The \"mark\" command is used to mark a specific task as completed.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Emmanuel2001"},"content":" */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Emmanuel2001"},"content":"public class MarkParser implements CommandParser {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Emmanuel2001"},"content":"     * Parses the input tokens for the \"mark\" command and returns the corresponding {@code Mark} command.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Emmanuel2001"},"content":"     * @param tokens The array of strings containing the command and its arguments.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Emmanuel2001"},"content":"     *               The first token should be \"mark\", and the second token should be the task index to mark.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Emmanuel2001"},"content":"     * @return A {@code Mark} command with the specified task index.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Emmanuel2001"},"content":"     * @throws BuddyException If the number of tokens is insufficient or if the task index is invalid.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Emmanuel2001"},"content":"    @Override","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Emmanuel2001"},"content":"    public Mark parse(String[] tokens) throws BuddyException {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Emmanuel2001"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Emmanuel2001"},"content":"            throw new BuddyException(\"The mark command must include a task index.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Emmanuel2001"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Emmanuel2001"},"content":"        try {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Emmanuel2001"},"content":"            int index \u003d Integer.parseInt(tokens[1].strip()) - 1;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Emmanuel2001"},"content":"            return new Mark(index);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Emmanuel2001"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Emmanuel2001"},"content":"            throw new BuddyException(\"Invalid task index for mark command.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Emmanuel2001"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Emmanuel2001"},"content":"}","lastModifiedDate":"2025-02-19","isFullCredit":false}],"authorContributionMap":{"Emmanuel2001":33}},{"path":"src/main/java/buddytalk/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emmanuel2001"},"content":"package buddytalk.parser;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Emmanuel2001"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Emmanuel2001"},"content":"import java.util.Map;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.commands.Command;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.exceptions.BuddyException;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Emmanuel2001"},"content":"/**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Emmanuel2001"},"content":" * Represents a parser that interprets user input and converts it into corresponding executable commands.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Emmanuel2001"},"content":" * This class delegates the parsing of specific commands to specialized {@code CommandParser} instances.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Emmanuel2001"},"content":" */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Emmanuel2001"},"content":"public class Parser {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Emmanuel2001"},"content":"    private static final Map\u003cString, CommandParser\u003e commandParsers \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Emmanuel2001"},"content":"    static {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Emmanuel2001"},"content":"        commandParsers.put(\"todo\", new ToDoParser());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Emmanuel2001"},"content":"        commandParsers.put(\"deadline\", new DeadlineParser());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Emmanuel2001"},"content":"        commandParsers.put(\"event\", new EventParser());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Emmanuel2001"},"content":"        commandParsers.put(\"mark\", new MarkParser());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Emmanuel2001"},"content":"        commandParsers.put(\"unmark\", new UnmarkParser());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Emmanuel2001"},"content":"        commandParsers.put(\"delete\", new DeleteParser());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Emmanuel2001"},"content":"        commandParsers.put(\"find\", new FindParser());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Emmanuel2001"},"content":"        commandParsers.put(\"list\", new ListParser());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Emmanuel2001"},"content":"        commandParsers.put(\"help\", new HelpParser());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Emmanuel2001"},"content":"     * Parses the user input string and returns the corresponding {@code Command}.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Emmanuel2001"},"content":"     * This method determines the command type from the input and delegates the parsing","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Emmanuel2001"},"content":"     * to the appropriate {@code CommandParser}.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Emmanuel2001"},"content":"     * @param input The user input string to be parsed, which typically starts with a","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Emmanuel2001"},"content":"     *              command word and may include additional arguments (e.g., \"todo Task 1\").","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Emmanuel2001"},"content":"     * @return A {@code Command} object that corresponds to the user input.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Emmanuel2001"},"content":"     * @throws BuddyException If the input is null, empty, or does not match a known command type.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Emmanuel2001"},"content":"    public static Command parse(String input) throws BuddyException {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Emmanuel2001"},"content":"        if (input \u003d\u003d null || input.isBlank()) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Emmanuel2001"},"content":"            throw new BuddyException(\"Input cannot be empty or null\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Emmanuel2001"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Emmanuel2001"},"content":"        String[] tokens \u003d input.strip().split(\"\\\\s+\", 2);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Emmanuel2001"},"content":"        String commandType \u003d tokens[0].toLowerCase();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Emmanuel2001"},"content":"        CommandParser parser \u003d commandParsers.get(commandType);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Emmanuel2001"},"content":"        if (parser \u003d\u003d null) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Emmanuel2001"},"content":"            throw new BuddyException(\"Unknown command: \" + commandType + \". Try \u0027help\u0027 for a list of commands\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Emmanuel2001"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Emmanuel2001"},"content":"        return parser.parse(tokens);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Emmanuel2001"},"content":"}","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"Emmanuel2001":55}},{"path":"src/main/java/buddytalk/parser/ToDoParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emmanuel2001"},"content":"package buddytalk.parser;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.commands.Add;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.exceptions.BuddyException;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.tasks.ToDo;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Emmanuel2001"},"content":"/**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Emmanuel2001"},"content":" * Parses the \"todo\" command from user input and creates an {@code Add} command","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Emmanuel2001"},"content":" * that encapsulates a {@code ToDo} task.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Emmanuel2001"},"content":" * The \"todo\" command is used to create a new task with only a description.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Emmanuel2001"},"content":" */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Emmanuel2001"},"content":"public class ToDoParser implements CommandParser {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Emmanuel2001"},"content":"     * Parses the input tokens for the \"todo\" command and returns the corresponding {@code Add} command.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Emmanuel2001"},"content":"     * @param tokens The array of strings containing the command and its arguments.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Emmanuel2001"},"content":"     *               The first token should be \"todo\", followed by the task description.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Emmanuel2001"},"content":"     * @return An {@code Add} command that encapsulates a {@code ToDo} task with the specified description.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Emmanuel2001"},"content":"     * @throws BuddyException If the description of the todo is missing or empty.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Emmanuel2001"},"content":"    @Override","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Emmanuel2001"},"content":"    public Add parse(String[] tokens) throws BuddyException {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Emmanuel2001"},"content":"        if (tokens.length \u003c 2 || tokens[1].isBlank()) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Emmanuel2001"},"content":"            throw new BuddyException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Emmanuel2001"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Emmanuel2001"},"content":"        return new Add(new ToDo(tokens[1].strip(), false));","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Emmanuel2001"},"content":"}","lastModifiedDate":"2025-02-19","isFullCredit":false}],"authorContributionMap":{"Emmanuel2001":29}},{"path":"src/main/java/buddytalk/parser/UnmarkParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emmanuel2001"},"content":"package buddytalk.parser;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.commands.Unmark;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.exceptions.BuddyException;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Emmanuel2001"},"content":"/**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Emmanuel2001"},"content":" * Parses the \"unmark\" command from user input and creates an {@code Unmark} command.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Emmanuel2001"},"content":" * The \"unmark\" command is used to mark a specific task as not completed.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Emmanuel2001"},"content":" */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Emmanuel2001"},"content":"public class UnmarkParser implements CommandParser {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Emmanuel2001"},"content":"     * Parses the input tokens for the \"unmark\" command and returns the corresponding {@code Unmark} command.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Emmanuel2001"},"content":"     * @param tokens The array of strings containing the command and its arguments.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Emmanuel2001"},"content":"     *               The first token should be \"unmark\", and the second token should be the task index to unmark.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Emmanuel2001"},"content":"     * @return An {@code Unmark} command with the specified task index.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Emmanuel2001"},"content":"     * @throws BuddyException If the number of tokens is insufficient or if the task index is invalid.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Emmanuel2001"},"content":"    @Override","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Emmanuel2001"},"content":"    public Unmark parse(String[] tokens) throws BuddyException {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Emmanuel2001"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Emmanuel2001"},"content":"            throw new BuddyException(\"The unmark command must include a task index.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Emmanuel2001"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Emmanuel2001"},"content":"        try {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Emmanuel2001"},"content":"            int index \u003d Integer.parseInt(tokens[1].strip()) - 1;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Emmanuel2001"},"content":"            return new Unmark(index);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Emmanuel2001"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Emmanuel2001"},"content":"            throw new BuddyException(\"Invalid task index for unmark command.\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Emmanuel2001"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Emmanuel2001"},"content":"}","lastModifiedDate":"2025-02-19","isFullCredit":false}],"authorContributionMap":{"Emmanuel2001":33}},{"path":"src/main/java/buddytalk/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emmanuel2001"},"content":"package buddytalk.storage;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Emmanuel2001"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Emmanuel2001"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Emmanuel2001"},"content":"import java.io.File;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Emmanuel2001"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Emmanuel2001"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Emmanuel2001"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Emmanuel2001"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Emmanuel2001"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Emmanuel2001"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Emmanuel2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Emmanuel2001"},"content":"import java.util.List;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.exceptions.BuddyException;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.tasks.Deadline;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.tasks.Event;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.tasks.Task;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.tasks.ToDo;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Emmanuel2001"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Emmanuel2001"},"content":" * Handles the saving and loading of tasks to and from the disk.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Emmanuel2001"},"content":" * The {@code Storage} class is responsible for managing file operations for data persistence.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Emmanuel2001"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Emmanuel2001"},"content":"public class Storage {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Emmanuel2001"},"content":"    /** The file path to store or load task data. */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Emmanuel2001"},"content":"    private final String filePath;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Emmanuel2001"},"content":"     * Constructs a {@code Storage} object with the specified file path for storing data.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Emmanuel2001"},"content":"     * @param filePath The absolute path of the file to be used for saving and loading tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Emmanuel2001"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Emmanuel2001"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Emmanuel2001"},"content":"     * Saves the list of tasks to a file at the specified {@code filePath}. Creates parent directories","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Emmanuel2001"},"content":"     * if they do not exist. Each task is written in a format defined by the task\u0027s {@code toFileFormat()} method.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Emmanuel2001"},"content":"     * @param tasks The list of tasks to be saved to the file.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Emmanuel2001"},"content":"     * @throws IOException If an I/O error occurs during the writing process.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Emmanuel2001"},"content":"    public void saveTasks(List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Emmanuel2001"},"content":"        Path parentDir \u003d Paths.get(filePath).getParent();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Emmanuel2001"},"content":"        if (parentDir !\u003d null \u0026\u0026 !Files.exists(parentDir)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Emmanuel2001"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Emmanuel2001"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Emmanuel2001"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath))) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Emmanuel2001"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Emmanuel2001"},"content":"                writer.write(task.toFileFormat() + System.lineSeparator());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Emmanuel2001"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Emmanuel2001"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Emmanuel2001"},"content":"     * Loads tasks from the file at the specified {@code filePath}. If the file does not exist,","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Emmanuel2001"},"content":"     * it creates a new file and returns an empty task list. Tasks are reconstructed based on","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Emmanuel2001"},"content":"     * the stored file format.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Emmanuel2001"},"content":"     * @return A list of tasks loaded from the file.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Emmanuel2001"},"content":"     * @throws IOException If an I/O error occurs during the reading process.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Emmanuel2001"},"content":"     * @throws BuddyException If the file data is corrupted or improperly formatted.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Emmanuel2001"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws IOException, BuddyException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Emmanuel2001"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Emmanuel2001"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Emmanuel2001"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Emmanuel2001"},"content":"            Files.createFile(Paths.get(filePath));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Emmanuel2001"},"content":"            return tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Emmanuel2001"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Emmanuel2001"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Emmanuel2001"},"content":"            String line;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Emmanuel2001"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Emmanuel2001"},"content":"                try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Emmanuel2001"},"content":"                    Task task \u003d parseTask(line);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Emmanuel2001"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Emmanuel2001"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Emmanuel2001"},"content":"                    throw new BuddyException(\"Data file corrupted: \" + e.getMessage());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Emmanuel2001"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Emmanuel2001"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Emmanuel2001"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Emmanuel2001"},"content":"        return tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Emmanuel2001"},"content":"     * Parses a line from the file into a {@code Task} object. The line must be in a formatted structure","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Emmanuel2001"},"content":"     * that specifies the type of task (e.g., \"T\", \"D\", \"E\"), its completion status, description, and other data.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Emmanuel2001"},"content":"     * @param line The line to parse, formatted according to the application\u0027s data conventions.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Emmanuel2001"},"content":"     * @return A {@code Task} object reconstructed from the raw data in the line.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Emmanuel2001"},"content":"     * @throws BuddyException If the line\u0027s format is invalid or cannot be parsed into a valid {@code Task}.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Emmanuel2001"},"content":"    private Task parseTask(String line) throws BuddyException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Emmanuel2001"},"content":"        assert line !\u003d null : \"Line cannot be null!\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Emmanuel2001"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Emmanuel2001"},"content":"        String taskType \u003d parts[0];","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Emmanuel2001"},"content":"        boolean isDone \u003d Integer.parseInt(parts[1]) \u003d\u003d 1;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Emmanuel2001"},"content":"        return switch (taskType) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Emmanuel2001"},"content":"        case \"T\" -\u003e new ToDo(parts[2], isDone);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Emmanuel2001"},"content":"        case \"D\" -\u003e new Deadline(parts[2], parts[3], isDone);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Emmanuel2001"},"content":"        case \"E\" -\u003e new Event(parts[2], parts[3], parts[4], isDone);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Emmanuel2001"},"content":"        default -\u003e throw new BuddyException(\"Corrupted data file! Unable to parse task.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Emmanuel2001"},"content":"        };","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Emmanuel2001"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"Emmanuel2001":113}},{"path":"src/main/java/buddytalk/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emmanuel2001"},"content":"package buddytalk.tasks;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Emmanuel2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Emmanuel2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Emmanuel2001"},"content":"import java.util.Locale;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Emmanuel2001"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Emmanuel2001"},"content":" * Represents a task with a deadline. This class encapsulates the deadline","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Emmanuel2001"},"content":" * information of the task and provides functionality to display and save the task","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Emmanuel2001"},"content":" * with its deadline details.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Emmanuel2001"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Emmanuel2001"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Emmanuel2001"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Emmanuel2001"},"content":"    private static final DateTimeFormatter SHOW_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\", Locale.US);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Emmanuel2001"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Emmanuel2001"},"content":"     * Constructs a Deadline task with the specified task description, deadline,","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Emmanuel2001"},"content":"     * and completion status.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Emmanuel2001"},"content":"     * @param taskDescription The description of the task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Emmanuel2001"},"content":"     * @param by A string representation of the deadline in \"yyyy-MM-dd HHmm\" format.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Emmanuel2001"},"content":"     * @param isDone True if the task is completed, false otherwise.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Emmanuel2001"},"content":"    public Deadline(String taskDescription, String by, boolean isDone) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Emmanuel2001"},"content":"        super(taskDescription, TaskType.DEADLINE, isDone);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Emmanuel2001"},"content":"        this.by \u003d LocalDateTime.parse(by, INPUT_FORMAT);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Emmanuel2001"},"content":"     * Returns the string representation of the deadline task","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Emmanuel2001"},"content":"     * in a format suitable for display to the user.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Emmanuel2001"},"content":"     * @return The formatted string representation of the task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Emmanuel2001"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Emmanuel2001"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Emmanuel2001"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(SHOW_FORMAT) + \")\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Emmanuel2001"},"content":"     * Returns the string representation of the deadline task in a format","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Emmanuel2001"},"content":"     * suitable for saving to a file.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Emmanuel2001"},"content":"     * @return The formatted string representation of the task for file storage.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Emmanuel2001"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Emmanuel2001"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Emmanuel2001"},"content":"        return String.format(\"D\" + super.toFileFormatPrefix() + super.task + \" | \"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Emmanuel2001"},"content":"                + this.by.format(INPUT_FORMAT));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Emmanuel2001"},"content":"     * Retrieves the deadline of the task as a {@code LocalDateTime} object.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Emmanuel2001"},"content":"     * @return The deadline of the task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Emmanuel2001"},"content":"    public LocalDateTime getDeadline() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Emmanuel2001"},"content":"        return this.by;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Emmanuel2001"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"Emmanuel2001":60}},{"path":"src/main/java/buddytalk/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emmanuel2001"},"content":"package buddytalk.tasks;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Emmanuel2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Emmanuel2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Emmanuel2001"},"content":"import java.util.Locale;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Emmanuel2001"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Emmanuel2001"},"content":" * Represents an event task with a specific start and end time.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Emmanuel2001"},"content":" * This class encapsulates both the event\u0027s time range and description","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Emmanuel2001"},"content":" * and provides functionality to display and save the event.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Emmanuel2001"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Emmanuel2001"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Emmanuel2001"},"content":"    /** Formatter for input date and time, using the pattern \"yyyy-MM-dd HHmm\". */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Emmanuel2001"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Emmanuel2001"},"content":"    /** Formatter for displaying date and time, using \"MMM dd yyyy, h:mm a\" in US locale. */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Emmanuel2001"},"content":"    private static final DateTimeFormatter SHOW_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\", Locale.US);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Emmanuel2001"},"content":"    /** The start time of the event as a {@code LocalDateTime}. */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Emmanuel2001"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Emmanuel2001"},"content":"    /** The end time of the event as a {@code LocalDateTime}. */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Emmanuel2001"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Emmanuel2001"},"content":"     * Constructs an Event task with the specified task description, start time, end time,","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Emmanuel2001"},"content":"     * and completion status.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Emmanuel2001"},"content":"     * @param taskDescription The description of the event task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Emmanuel2001"},"content":"     * @param from A string representation of the start time in \"yyyy-MM-dd HHmm\" format.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Emmanuel2001"},"content":"     * @param to A string representation of the end time in \"yyyy-MM-dd HHmm\" format.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Emmanuel2001"},"content":"     * @param isDone True if the task is completed, false otherwise.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Emmanuel2001"},"content":"    public Event(String taskDescription, String from, String to, boolean isDone) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Emmanuel2001"},"content":"        super(taskDescription, TaskType.EVENT, isDone);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Emmanuel2001"},"content":"        this.from \u003d LocalDateTime.parse(from, INPUT_FORMAT);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Emmanuel2001"},"content":"        this.to \u003d LocalDateTime.parse(to, INPUT_FORMAT);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Emmanuel2001"},"content":"     * Returns the string representation of the event task for display to the user.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Emmanuel2001"},"content":"     * The string includes the start and end times in a user-friendly format.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Emmanuel2001"},"content":"     * @return The event\u0027s string representation, including its time range.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Emmanuel2001"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Emmanuel2001"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Emmanuel2001"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Emmanuel2001"},"content":"                + \" (from: \" + from.format(SHOW_FORMAT) + \" to: \" + to.format(SHOW_FORMAT) + \")\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Emmanuel2001"},"content":"     * Returns the string representation of the event task in a format","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Emmanuel2001"},"content":"     * suitable for saving to a file.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Emmanuel2001"},"content":"     * @return The formatted string representation of the event task for file storage.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Emmanuel2001"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Emmanuel2001"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Emmanuel2001"},"content":"        return \"E\" + super.toFileFormatPrefix()","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Emmanuel2001"},"content":"                + super.task + \" | \" + this.from.format(INPUT_FORMAT) + \" | \" + this.to.format(INPUT_FORMAT);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Emmanuel2001"},"content":"     * Retrieves the start time of the event.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Emmanuel2001"},"content":"     * @return The event\u0027s start time as a {@code LocalDateTime}.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Emmanuel2001"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Emmanuel2001"},"content":"        return from;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Emmanuel2001"},"content":"     * Retrieves the end time of the event.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Emmanuel2001"},"content":"     * @return The event\u0027s end time as a {@code LocalDateTime}.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Emmanuel2001"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Emmanuel2001"},"content":"        return to;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Emmanuel2001"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"Emmanuel2001":80}},{"path":"src/main/java/buddytalk/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emmanuel2001"},"content":"package buddytalk.tasks;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Emmanuel2001"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Emmanuel2001"},"content":" * Represents a generic task. A {@code Task} object encapsulates the","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Emmanuel2001"},"content":" * characteristics of a task, such as its description, completion status,","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Emmanuel2001"},"content":" * and task type.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Emmanuel2001"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Emmanuel2001"},"content":" * The {@code Task} class provides a base for specific task types (e.g., {@code ToDo},","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Emmanuel2001"},"content":" * {@code Deadline}, {@code Event}) and includes common functionality such as","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Emmanuel2001"},"content":" * marking tasks as done/undone and returning task information in various formats.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Emmanuel2001"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Emmanuel2001"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Emmanuel2001"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Emmanuel2001"},"content":"    /** Indicates whether the task is completed. */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Emmanuel2001"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Emmanuel2001"},"content":"    /** The description of the task. */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Emmanuel2001"},"content":"    protected String task;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Emmanuel2001"},"content":"    /** The type of the task (e.g., TODO, DEADLINE, EVENT). */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Emmanuel2001"},"content":"    protected TaskType taskType;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Emmanuel2001"},"content":"     * Constructs a {@code Task} object with the specified description, task type, and completion status.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Emmanuel2001"},"content":"     * @param task The description of the task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Emmanuel2001"},"content":"     * @param taskType The type of the task (e.g., {@code TaskType.TODO}, {@code TaskType.DEADLINE}).","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Emmanuel2001"},"content":"     * @param isDone {@code true} if the task is completed, {@code false} otherwise.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Emmanuel2001"},"content":"    public Task(String task, TaskType taskType, boolean isDone) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Emmanuel2001"},"content":"        this.task \u003d task;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Emmanuel2001"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Emmanuel2001"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Emmanuel2001"},"content":"     * Returns the task\u0027s completion status in a file-friendly prefix format.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Emmanuel2001"},"content":"     * \u003cp\u003eThe format is: {@code \" | 1 | \"} if the task is completed, or {@code \" | 0 | \"} otherwise.\u003c/p\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Emmanuel2001"},"content":"     * @return The file-friendly prefix for the task\u0027s completion status.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Emmanuel2001"},"content":"    public String toFileFormatPrefix() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Emmanuel2001"},"content":"        return isDone ? \" | 1 | \" : \" | 0 | \";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Emmanuel2001"},"content":"     * Retrieves the type of the task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Emmanuel2001"},"content":"     * @return The {@code TaskType} of the task (e.g., TODO, DEADLINE, EVENT).","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Emmanuel2001"},"content":"    public TaskType getTaskType() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Emmanuel2001"},"content":"        return taskType;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Emmanuel2001"},"content":"     * Retrieves the task\u0027s status icon.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Emmanuel2001"},"content":"     * \u003cp\u003eThe icon indicates whether the task is completed:\u003c/p\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Emmanuel2001"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Emmanuel2001"},"content":"     *     \u003cli\u003e{@code \"[X]\"} if the task is completed.\u003c/li\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Emmanuel2001"},"content":"     *     \u003cli\u003e{@code \"[ ]\"} if the task is not completed.\u003c/li\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Emmanuel2001"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Emmanuel2001"},"content":"     * @return The status icon as a string.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Emmanuel2001"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Emmanuel2001"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Emmanuel2001"},"content":"     * Checks whether the task is completed.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Emmanuel2001"},"content":"     * @return {@code true} if the task is completed, {@code false} otherwise.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Emmanuel2001"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Emmanuel2001"},"content":"        return isDone;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Emmanuel2001"},"content":"     * Retrieves the description of the task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Emmanuel2001"},"content":"     * @return The task description as a string.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Emmanuel2001"},"content":"    public String getTask() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Emmanuel2001"},"content":"        return task;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Emmanuel2001"},"content":"     * Marks the task as completed.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Emmanuel2001"},"content":"    public void mark() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Emmanuel2001"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Emmanuel2001"},"content":"     * Marks the task as not completed.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Emmanuel2001"},"content":"    public void unmark() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Emmanuel2001"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Emmanuel2001"},"content":"     * Returns a string representation of the task for display to the user.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Emmanuel2001"},"content":"     * The format includes the status icon and task description.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Emmanuel2001"},"content":"     * @return The string representation of the task (e.g., {@code \"[X] Task description\"}).","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Emmanuel2001"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Emmanuel2001"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Emmanuel2001"},"content":"        return String.format(\"%s %s\", getStatusIcon(), task);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Emmanuel2001"},"content":"     * Converts the task into a file-friendly format, suitable for saving to disk.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Emmanuel2001"},"content":"     * @return The formatted string representation of the task for file storage.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Emmanuel2001"},"content":"    public abstract String toFileFormat();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Emmanuel2001"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"Emmanuel2001":119}},{"path":"src/main/java/buddytalk/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emmanuel2001"},"content":"package buddytalk.tasks;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Emmanuel2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Emmanuel2001"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Emmanuel2001"},"content":" * Represents a list of tasks. The {@code TaskList} class provides methods to manage the collection","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Emmanuel2001"},"content":" * of {@link Task} objects, such as adding, deleting, retrieving, and getting the size of the list.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Emmanuel2001"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Emmanuel2001"},"content":"public class TaskList {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Emmanuel2001"},"content":"    /** The list of tasks stored in this {@code TaskList}. */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Emmanuel2001"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Emmanuel2001"},"content":"     * Constructs an empty {@code TaskList}.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Emmanuel2001"},"content":"    public TaskList() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Emmanuel2001"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Emmanuel2001"},"content":"     * Constructs a {@code TaskList} with an initial list of tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Emmanuel2001"},"content":"     * @param tasks The initial list of tasks to populate the {@code TaskList}.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Emmanuel2001"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Emmanuel2001"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Emmanuel2001"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Emmanuel2001"},"content":"     * @param task The {@link Task} to be added to the list.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Emmanuel2001"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Emmanuel2001"},"content":"        tasks.add(task);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Emmanuel2001"},"content":"     * Deletes a task from the task list at the specified index.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Emmanuel2001"},"content":"     * @param index The index of the task to delete (0-based indexing).","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Emmanuel2001"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Emmanuel2001"},"content":"     *      (less than 0 or greater than or equal to the list size).","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Emmanuel2001"},"content":"    public void deleteTask(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Emmanuel2001"},"content":"        tasks.remove(index);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Emmanuel2001"},"content":"     * Retrieves a task from the task list at the specified index.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Emmanuel2001"},"content":"     * @param index The index of the task to retrieve (0-based indexing).","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Emmanuel2001"},"content":"     * @return The {@link Task} at the specified index.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Emmanuel2001"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Emmanuel2001"},"content":"     *      (less than 0 or greater than or equal to the list size).","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Emmanuel2001"},"content":"    public Task getTask(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Emmanuel2001"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Emmanuel2001"},"content":"     * Retrieves all the tasks in the task list.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Emmanuel2001"},"content":"     * @return An {@code ArrayList} of all the {@link Task} objects in the list.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Emmanuel2001"},"content":"    public ArrayList\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Emmanuel2001"},"content":"        return tasks;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Emmanuel2001"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Emmanuel2001"},"content":"     * @return The size of the task list.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Emmanuel2001"},"content":"    public int size() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Emmanuel2001"},"content":"        return tasks.size();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Emmanuel2001"},"content":"     * Finds and retrieves a list of tasks that contain the specified keyword in their description.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Emmanuel2001"},"content":"     * The search is case-insensitive and matches tasks whose descriptions contain","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Emmanuel2001"},"content":"     * the given keyword as a substring.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Emmanuel2001"},"content":"     * @param keyword The keyword to search for in the task descriptions.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Emmanuel2001"},"content":"     * @return An {@code ArrayList} of {@link Task} objects whose descriptions","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Emmanuel2001"},"content":"     *         contain the specified keyword.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Emmanuel2001"},"content":"    public ArrayList\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Emmanuel2001"},"content":"        assert keyword !\u003d null : \"Keyword cannot be null.\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Emmanuel2001"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Emmanuel2001"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Emmanuel2001"},"content":"            if (task.task.toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Emmanuel2001"},"content":"                foundTasks.add(task);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Emmanuel2001"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Emmanuel2001"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Emmanuel2001"},"content":"        return foundTasks;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Emmanuel2001"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"Emmanuel2001":99}},{"path":"src/main/java/buddytalk/tasks/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emmanuel2001"},"content":"package buddytalk.tasks;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Emmanuel2001"},"content":"/**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Emmanuel2001"},"content":" * Enumeration of task types supported by the application.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Emmanuel2001"},"content":" *","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Emmanuel2001"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Emmanuel2001"},"content":" * Each task type corresponds to a specific type of task","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Emmanuel2001"},"content":" * supported by the application and reflects its unique attributes:","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Emmanuel2001"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Emmanuel2001"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Emmanuel2001"},"content":" *     \u003cli\u003e{@link #TODO} - A basic task with only a description.\u003c/li\u003e","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Emmanuel2001"},"content":" *     \u003cli\u003e{@link #DEADLINE} - A task with an associated deadline.\u003c/li\u003e","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Emmanuel2001"},"content":" *     \u003cli\u003e{@link #EVENT} - A task with a start and end time.\u003c/li\u003e","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Emmanuel2001"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Emmanuel2001"},"content":" */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Emmanuel2001"},"content":"public enum TaskType {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Emmanuel2001"},"content":"     * Represents a simple task with a description only.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Emmanuel2001"},"content":"     * Example: \"todo Read a book.\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Emmanuel2001"},"content":"    TODO,","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Emmanuel2001"},"content":"     * Represents a task with a description and a deadline.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Emmanuel2001"},"content":"     * Example: \"deadline Submit report by 5 PM.\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Emmanuel2001"},"content":"    DEADLINE,","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Emmanuel2001"},"content":"     * Represents a task with a description, a start time, and an end time.","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Emmanuel2001"},"content":"     * Example: \"event Meeting from 2 PM to 3 PM.\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Emmanuel2001"},"content":"    EVENT","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Emmanuel2001"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"Emmanuel2001":34}},{"path":"src/main/java/buddytalk/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emmanuel2001"},"content":"package buddytalk.tasks;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Emmanuel2001"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Emmanuel2001"},"content":" * Represents a \"ToDo\" task. A {@code ToDo} is a basic task with a description and completion status,","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Emmanuel2001"},"content":" * but no additional time or date information.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Emmanuel2001"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Emmanuel2001"},"content":" * This class extends {@link Task} and implements specific formatting for representation","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Emmanuel2001"},"content":" * and file storage.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Emmanuel2001"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Emmanuel2001"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Emmanuel2001"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Emmanuel2001"},"content":"     * Constructs a {@code ToDo} task with the specified description and completion status.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Emmanuel2001"},"content":"     * @param taskDescription The description of the \"ToDo\" task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Emmanuel2001"},"content":"     * @param isDone {@code true} if the task is completed, {@code false} otherwise.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Emmanuel2001"},"content":"    public ToDo(String taskDescription, boolean isDone) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Emmanuel2001"},"content":"        super(taskDescription, TaskType.TODO, isDone);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Emmanuel2001"},"content":"     * Returns the string representation of the \"ToDo\" task for display to the user.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Emmanuel2001"},"content":"     * Prepends the task type \"[T]\" to the default string representation from {@link Task}.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Emmanuel2001"},"content":"     * @return The string representation of the \"ToDo\" task (e.g., {@code \"[T][X] Task description\"}).","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Emmanuel2001"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Emmanuel2001"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Emmanuel2001"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Emmanuel2001"},"content":"     * Converts the \"ToDo\" task into a file-friendly format for storage.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Emmanuel2001"},"content":"     * Prepends the task type \"T\" to the common file format prefix and task description.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Emmanuel2001"},"content":"     * @return The file-friendly string representation of the \"ToDo\" task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Emmanuel2001"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Emmanuel2001"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Emmanuel2001"},"content":"        return \"T\" + super.toFileFormatPrefix() + super.task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Emmanuel2001"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"Emmanuel2001":44}},{"path":"src/main/java/buddytalk/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emmanuel2001"},"content":"package buddytalk.ui;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Emmanuel2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.tasks.Task;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Emmanuel2001"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Emmanuel2001"},"content":" * Handles all user interface interactions for the BuddyTalk application.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Emmanuel2001"},"content":" * The {@code Ui} class provides static methods for displaying messages, task lists,","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Emmanuel2001"},"content":" * and error messages to the user through the console.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Emmanuel2001"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Emmanuel2001"},"content":"public class Ui {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Emmanuel2001"},"content":"     * Constructs a new {@code Ui} object.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Emmanuel2001"},"content":"     * This constructor is optional since all methods in this class are static,","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Emmanuel2001"},"content":"     * meaning the object does not need to be instantiated.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Emmanuel2001"},"content":"    public Ui() {}","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Emmanuel2001"},"content":"     * Displays the list of tasks to the user.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Emmanuel2001"},"content":"     * If the task list is empty, a message indicating that no tasks are present is displayed.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Emmanuel2001"},"content":"     * Otherwise, all tasks in the list are printed along with their index.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Emmanuel2001"},"content":"     * @param tasks The {@code ArrayList\u003cTask\u003e} containing tasks to display.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Emmanuel2001"},"content":"    public String displayList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Emmanuel2001"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Emmanuel2001"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Emmanuel2001"},"content":"            sb.append(\"You have no tasks!\\n\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Emmanuel2001"},"content":"        } else {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Emmanuel2001"},"content":"            sb.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Emmanuel2001"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Emmanuel2001"},"content":"                sb.append((i + 1)).append(\".\").append(tasks.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Emmanuel2001"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Emmanuel2001"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Emmanuel2001"},"content":"        return sb.toString();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Emmanuel2001"},"content":"     * Displays the tasks of tasks with proper formatting.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Emmanuel2001"},"content":"     * If the tasks is empty, the method prints a message stating that there are no matching tasks.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Emmanuel2001"},"content":"     * Otherwise, it prints a formatted tasks of tasks with their index numbers.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Emmanuel2001"},"content":"     * @param tasks The {@code ArrayList} of {@link Task} objects to be displayed.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Emmanuel2001"},"content":"     *             Each task is shown with its index number in the tasks.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Emmanuel2001"},"content":"    public String showList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Emmanuel2001"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Emmanuel2001"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Emmanuel2001"},"content":"            sb.append(\"You have no matching tasks!\\n\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Emmanuel2001"},"content":"        } else {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Emmanuel2001"},"content":"            sb.append(\"Here are the matching tasks in your tasks:\\n\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Emmanuel2001"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Emmanuel2001"},"content":"                sb.append((i + 1)).append(\".\").append(tasks.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Emmanuel2001"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Emmanuel2001"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Emmanuel2001"},"content":"        return sb.toString();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Emmanuel2001"},"content":"    /**","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Emmanuel2001"},"content":"     * Displays an error message when an error is encountered.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Emmanuel2001"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Emmanuel2001"},"content":"     * @param error A string containing the error message to display.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Emmanuel2001"},"content":"     */","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Emmanuel2001"},"content":"    public String displayError(String error) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Emmanuel2001"},"content":"        assert error !\u003d null : \"Error message cannot be null!\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Emmanuel2001"},"content":"        return String.format(\"\"\"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Emmanuel2001"},"content":"                 Note: %s","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Emmanuel2001"},"content":"                \"\"\", error);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Emmanuel2001"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"Emmanuel2001":74}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Emmanuel2001"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Emmanuel2001"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Emmanuel2001"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Emmanuel2001"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Emmanuel2001"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Emmanuel2001"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Emmanuel2001"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Emmanuel2001"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Emmanuel2001"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Emmanuel2001"},"content":"            \u003cInsets left\u003d\"7.0\" right\u003d\"7.0\" /\u003e","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Emmanuel2001"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Emmanuel2001"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Emmanuel2001"},"content":"            \u003cInsets bottom\u003d\"6.0\" left\u003d\"12.0\" right\u003d\"12.0\" top\u003d\"6.0\" /\u003e","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Emmanuel2001"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Emmanuel2001"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Emmanuel2001"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Emmanuel2001"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Emmanuel2001"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Emmanuel2001"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Emmanuel2001"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"Emmanuel2001":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Emmanuel2001"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Emmanuel2001"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Emmanuel2001"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Emmanuel2001"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Emmanuel2001"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Emmanuel2001"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Emmanuel2001"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"buddytalk.gui.MainWindow\"\u003e","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Emmanuel2001"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Emmanuel2001"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Type here...    Eg: help\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Emmanuel2001"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Emmanuel2001"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Emmanuel2001"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Emmanuel2001"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Emmanuel2001"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Emmanuel2001"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Emmanuel2001"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Emmanuel2001"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"Emmanuel2001":19}},{"path":"src/test/java/buddytalk/ui/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emmanuel2001"},"content":"package buddytalk.ui;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Emmanuel2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Emmanuel2001"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Emmanuel2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Emmanuel2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.tasks.Deadline;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Emmanuel2001"},"content":"class DeadlineTest {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Emmanuel2001"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Emmanuel2001"},"content":"    void constructor_test() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Emmanuel2001"},"content":"        String task \u003d \"Do 2109\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Emmanuel2001"},"content":"        String by \u003d \"2099-08-02 1500\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Emmanuel2001"},"content":"        boolean isDone \u003d false;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Emmanuel2001"},"content":"        Deadline deadline \u003d new Deadline(task, by, isDone);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Emmanuel2001"},"content":"        assertEquals(task, deadline.getTask());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Emmanuel2001"},"content":"        assertFalse(deadline.isDone());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Emmanuel2001"},"content":"        assertEquals(\"Aug 02 2099, 3:00 pm\",","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Emmanuel2001"},"content":"                deadline.getDeadline().format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\")));","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Emmanuel2001"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Emmanuel2001"},"content":"    void toFileFormat_test() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Emmanuel2001"},"content":"        String description \u003d \"Do 2109\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Emmanuel2001"},"content":"        String by \u003d \"2099-08-02 1500\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Emmanuel2001"},"content":"        boolean isDone \u003d true;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Emmanuel2001"},"content":"        Deadline deadline \u003d new Deadline(description, by, isDone);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Emmanuel2001"},"content":"        String expected \u003d \"D | 1 | Do 2109 | 2099-08-02 1500\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Emmanuel2001"},"content":"        assertEquals(expected, deadline.toFileFormat());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Emmanuel2001"},"content":"    @Test","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Emmanuel2001"},"content":"    void invalidDateFormat_test() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Emmanuel2001"},"content":"        String task \u003d \"Do something\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Emmanuel2001"},"content":"        String by \u003d \"2099/08/02 1500\"; // Invalid format","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Emmanuel2001"},"content":"        boolean isDone \u003d false;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Emmanuel2001"},"content":"        Exception exception \u003d null;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Emmanuel2001"},"content":"        try {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Emmanuel2001"},"content":"            new Deadline(task, by, isDone);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Emmanuel2001"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Emmanuel2001"},"content":"            exception \u003d e;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Emmanuel2001"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Emmanuel2001"},"content":"        assertEquals(\"Text \u00272099/08/02 1500\u0027 could not be parsed at index 4\", exception.getMessage());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Emmanuel2001"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"Emmanuel2001":56}},{"path":"src/test/java/buddytalk/ui/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emmanuel2001"},"content":"package buddytalk.ui;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Emmanuel2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Emmanuel2001"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Emmanuel2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Emmanuel2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.tasks.Event;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Emmanuel2001"},"content":"class EventTest {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Emmanuel2001"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Emmanuel2001"},"content":"    void constructor_test() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Emmanuel2001"},"content":"        String task \u003d \"Do 2109\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Emmanuel2001"},"content":"        String to \u003d \"2100-08-02 1500\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Emmanuel2001"},"content":"        String from \u003d \"2099-08-02 1500\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Emmanuel2001"},"content":"        boolean isDone \u003d false;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Emmanuel2001"},"content":"        Event event \u003d new Event(task, from, to, isDone);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Emmanuel2001"},"content":"        assertEquals(task, event.getTask());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Emmanuel2001"},"content":"        assertFalse(event.isDone());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Emmanuel2001"},"content":"        assertEquals(\"Aug 02 2099, 3:00 pm\",","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Emmanuel2001"},"content":"                event.getFrom().format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\")));","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Emmanuel2001"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Emmanuel2001"},"content":"    void toFileFormat_test() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Emmanuel2001"},"content":"        String task \u003d \"Do 2109\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Emmanuel2001"},"content":"        String to \u003d \"2100-08-02 1500\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Emmanuel2001"},"content":"        String from \u003d \"2099-08-02 1500\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Emmanuel2001"},"content":"        boolean isDone \u003d true;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Emmanuel2001"},"content":"        Event event \u003d new Event(task, from, to, isDone);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Emmanuel2001"},"content":"        String expected \u003d \"E | 1 | Do 2109 | 2099-08-02 1500 | 2100-08-02 1500\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Emmanuel2001"},"content":"        assertEquals(expected, event.toFileFormat());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Emmanuel2001"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"Emmanuel2001":42}},{"path":"src/test/java/buddytalk/ui/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emmanuel2001"},"content":"package buddytalk.ui;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Emmanuel2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Emmanuel2001"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Emmanuel2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.tasks.Deadline;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.tasks.Event;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.tasks.Task;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.tasks.TaskList;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Emmanuel2001"},"content":"import buddytalk.tasks.ToDo;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Emmanuel2001"},"content":"class TaskListTest {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Emmanuel2001"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Emmanuel2001"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Emmanuel2001"},"content":"    void setUp() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Emmanuel2001"},"content":"        // Initialize a new TaskList before each test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Emmanuel2001"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Emmanuel2001"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Emmanuel2001"},"content":"    void addTask_test() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Emmanuel2001"},"content":"        // Create a mock Task","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Emmanuel2001"},"content":"        Task task \u003d new ToDo(\"Read a book\", false);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Emmanuel2001"},"content":"        // Add the task","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Emmanuel2001"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Emmanuel2001"},"content":"        // Verify the task was added","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Emmanuel2001"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Emmanuel2001"},"content":"        assertEquals(task, taskList.getTask(0));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Emmanuel2001"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Emmanuel2001"},"content":"    void deleteTask_test() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Emmanuel2001"},"content":"        Task task1 \u003d new ToDo(\"Task 1\", false);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Emmanuel2001"},"content":"        Task task2 \u003d new ToDo(\"Task 2\", true);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Emmanuel2001"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Emmanuel2001"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Emmanuel2001"},"content":"        taskList.deleteTask(0);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Emmanuel2001"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Emmanuel2001"},"content":"        assertEquals(task2, taskList.getTask(0));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Emmanuel2001"},"content":"    @Test","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Emmanuel2001"},"content":"    void deleteLastTask_test() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Emmanuel2001"},"content":"        taskList.addTask(new ToDo(\"Task 1\", false));","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Emmanuel2001"},"content":"        taskList.addTask(new ToDo(\"Task 2\", true));","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Emmanuel2001"},"content":"        taskList.deleteTask(1); // Delete the last task","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Emmanuel2001"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Emmanuel2001"},"content":"        assertEquals(\"Task 1\", taskList.getTask(0).getTask());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Emmanuel2001"},"content":"    @Test","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Emmanuel2001"},"content":"    void addMultipleTasks_test() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Emmanuel2001"},"content":"        Task task1 \u003d new ToDo(\"Task 1\", false);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Emmanuel2001"},"content":"        Task task2 \u003d new Deadline(\"Task 2\", \"2099-08-02 1500\", true);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Emmanuel2001"},"content":"        Task task3 \u003d new Event(\"Task 3\", \"2099-08-01 0800\", \"2099-08-01 1700\", false);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Emmanuel2001"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Emmanuel2001"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Emmanuel2001"},"content":"        taskList.addTask(task3);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Emmanuel2001"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Emmanuel2001"},"content":"        assertEquals(3, taskList.size());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Emmanuel2001"},"content":"        assertEquals(task1, taskList.getTask(0));","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Emmanuel2001"},"content":"        assertEquals(task2, taskList.getTask(1));","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Emmanuel2001"},"content":"        assertEquals(task3, taskList.getTask(2));","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Emmanuel2001"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Emmanuel2001"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"Emmanuel2001":75}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Emmanuel2001"},"content":"java -classpath ..\\bin BuddyTalk \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":20,"Emmanuel2001":1}}]
