[{"path":"src/main/java/ChinChin.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chanjunlin"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chanjunlin"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chanjunlin"},"content":" * Main application class for managing tasks","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chanjunlin"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chanjunlin"},"content":"public class ChinChin {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chanjunlin"},"content":"    private static CustomList customList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chanjunlin"},"content":"    private static String LINE_SEPARATOR \u003d \"-------------------------------------\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chanjunlin"},"content":"    private static Storage storage \u003d new Storage();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chanjunlin"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chanjunlin"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chanjunlin"},"content":"        initialiseTasks();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chanjunlin"},"content":"        displayGreeting();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chanjunlin"},"content":"        while (true) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chanjunlin"},"content":"            String userInput \u003d scanner.nextLine().toLowerCase();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chanjunlin"},"content":"            if (userInput.equals(\"bye\") || userInput.equals(\"goodbye\")) { // if user types \"bye\"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chanjunlin"},"content":"                goodbye();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chanjunlin"},"content":"                break;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chanjunlin"},"content":"            } else {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chanjunlin"},"content":"                processUserInput(userInput);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chanjunlin"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chanjunlin"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chanjunlin"},"content":"        scanner.close();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chanjunlin"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chanjunlin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chanjunlin"},"content":"     * Display bot\u0027s greeting message.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chanjunlin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chanjunlin"},"content":"    public static void displayGreeting() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"chanjunlin"},"content":"        String greetings \u003d \"Hello, I am ChinChin\\nWhat can I do for you?\";","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"chanjunlin"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"chanjunlin"},"content":"        System.out.println(greetings);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"chanjunlin"},"content":"        System.out.println(LINE_SEPARATOR + \"\\n\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"chanjunlin"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"chanjunlin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"chanjunlin"},"content":"     * Display bot\u0027s farewell message.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"chanjunlin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"chanjunlin"},"content":"    public static void goodbye() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"chanjunlin"},"content":"        String goodbyes \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"chanjunlin"},"content":"        System.out.println(\"\\n\" + LINE_SEPARATOR);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"chanjunlin"},"content":"        System.out.println(goodbyes);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"chanjunlin"},"content":"        System.out.println(LINE_SEPARATOR + \"\\n\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"chanjunlin"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"chanjunlin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"chanjunlin"},"content":"     * Print information about the task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"chanjunlin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"chanjunlin"},"content":"     * @param taskInfo The information about the task being displayed.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"chanjunlin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"chanjunlin"},"content":"    public static void printInfo(String taskInfo) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"chanjunlin"},"content":"        System.out.println(\"\\n\" + LINE_SEPARATOR);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"chanjunlin"},"content":"        System.out.println(taskInfo);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"chanjunlin"},"content":"        System.out.println(\"Now you have \" + customList.size() + \" tasks in the list.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"chanjunlin"},"content":"        System.out.println(LINE_SEPARATOR + \"\\n\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"chanjunlin"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"chanjunlin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"chanjunlin"},"content":"     * Handling user\u0027s input","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"chanjunlin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"chanjunlin"},"content":"     * @param input","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"chanjunlin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"chanjunlin"},"content":"    public static void processUserInput(String input) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"chanjunlin"},"content":"        try {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"chanjunlin"},"content":"            String userInput \u003d input.toLowerCase();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"chanjunlin"},"content":"            String[] parts \u003d userInput.split(\" \", 2);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"chanjunlin"},"content":"            String command \u003d parts[0];","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"chanjunlin"},"content":"            switch (command) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"chanjunlin"},"content":"            case (\"hello\"):","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"chanjunlin"},"content":"                // Fallthrough","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"chanjunlin"},"content":"            case (\"hi\"):","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"chanjunlin"},"content":"                displayGreeting();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"chanjunlin"},"content":"                break;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"chanjunlin"},"content":"            case (\"list\"):","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"chanjunlin"},"content":"                System.out.println(\"\\n\" + LINE_SEPARATOR);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"chanjunlin"},"content":"                customList.showList();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"chanjunlin"},"content":"                System.out.println(LINE_SEPARATOR + \"\\n\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"chanjunlin"},"content":"                break;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"chanjunlin"},"content":"            case (\"mark\"):","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"chanjunlin"},"content":"                if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"chanjunlin"},"content":"                    throw new ChinChinException(\"The task number to mark cannot be empty.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"chanjunlin"},"content":"                }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"chanjunlin"},"content":"                System.out.println(\"\\n\" + LINE_SEPARATOR);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"chanjunlin"},"content":"                customList.markTask(Integer.parseInt(parts[1].trim()));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"chanjunlin"},"content":"                System.out.println(LINE_SEPARATOR + \"\\n\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"chanjunlin"},"content":"                break;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"chanjunlin"},"content":"            case (\"unmark\"):","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"chanjunlin"},"content":"                if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"chanjunlin"},"content":"                    throw new ChinChinException(\"The task number to unmark cannot be empty.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"chanjunlin"},"content":"                }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"chanjunlin"},"content":"                System.out.println(\"\\n\" + LINE_SEPARATOR);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"chanjunlin"},"content":"                customList.unmarkTask(Integer.parseInt(parts[1].trim()));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"chanjunlin"},"content":"                System.out.println(LINE_SEPARATOR + \"\\n\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"chanjunlin"},"content":"                break;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"chanjunlin"},"content":"            case (\"todo\"):","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"chanjunlin"},"content":"                if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"chanjunlin"},"content":"                    throw new ChinChinException(\"There is no description for the task.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"chanjunlin"},"content":"                }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"chanjunlin"},"content":"                String todoInfo \u003d customList.todoTask(parts[1]);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"chanjunlin"},"content":"                printInfo(todoInfo);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"chanjunlin"},"content":"                break;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"chanjunlin"},"content":"            case (\"deadline\"):","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"chanjunlin"},"content":"                if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"chanjunlin"},"content":"                    throw new ChinChinException(\"There is no description for the deadline task.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"chanjunlin"},"content":"                }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"chanjunlin"},"content":"                // Check if the deadline command includes \"/by\"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"chanjunlin"},"content":"                if (!parts[1].contains(\"/by\")) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"chanjunlin"},"content":"                    throw new ChinChinException(\"Deadlines must include \u0027/by\u0027 followed by a due date.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"chanjunlin"},"content":"                }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"chanjunlin"},"content":"                String deadlineInfo \u003d customList.deadlineTask(parts[1]);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"chanjunlin"},"content":"                printInfo(deadlineInfo);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"chanjunlin"},"content":"                break;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"chanjunlin"},"content":"            case (\"event\"):","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"chanjunlin"},"content":"                if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"chanjunlin"},"content":"                    throw new ChinChinException(\"There is no description for the event.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"chanjunlin"},"content":"                }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"chanjunlin"},"content":"                // Check if the event command includes both \"/from\" and \"/to\"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"chanjunlin"},"content":"                if (!parts[1].contains(\"/from\") || !parts[1].contains(\"/to\")) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"chanjunlin"},"content":"                    throw new ChinChinException(\"Events must include \u0027/from\u0027 followed by start time and \" +","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"chanjunlin"},"content":"                            \"\u0027/to\u0027 followed by end time.\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"chanjunlin"},"content":"                }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"chanjunlin"},"content":"                String eventInfo \u003d customList.eventTask(parts[1]);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"chanjunlin"},"content":"                printInfo(eventInfo);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"chanjunlin"},"content":"                break;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"chanjunlin"},"content":"            case (\"delete\"):","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"chanjunlin"},"content":"                if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"chanjunlin"},"content":"                    throw new ChinChinException(\"What can I delete if you don\u0027t specify the number?\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"chanjunlin"},"content":"                }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"chanjunlin"},"content":"                String deleteInfo \u003d customList.deleteTask(Integer.parseInt(parts[1].trim()));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"chanjunlin"},"content":"                printInfo(deleteInfo);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"chanjunlin"},"content":"                break;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"chanjunlin"},"content":"            default:","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"chanjunlin"},"content":"                System.out.println(\"\\n\" + LINE_SEPARATOR);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"chanjunlin"},"content":"                System.out.println(\"What do you mean?\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"chanjunlin"},"content":"                System.out.println(LINE_SEPARATOR + \"\\n\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"chanjunlin"},"content":"                break;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"chanjunlin"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"chanjunlin"},"content":"        } catch (ChinChinException e) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"chanjunlin"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"chanjunlin"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"chanjunlin"},"content":"            // Handle invalid number inputs for \"mark\" or \"unmark\"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"chanjunlin"},"content":"            System.out.println(\"OOPS!!! The task number must be a valid integer.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"chanjunlin"},"content":"            System.out.println(LINE_SEPARATOR + \"\\n\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"chanjunlin"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"chanjunlin"},"content":"            System.out.println(\"The list is not that long!\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"chanjunlin"},"content":"            System.out.println(LINE_SEPARATOR + \"\\n\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"chanjunlin"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"chanjunlin"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"chanjunlin"},"content":"    public static void initialiseTasks() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"chanjunlin"},"content":"        customList \u003d storage.initialiseTasks();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"chanjunlin"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"chanjunlin"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"chanjunlin":163}},{"path":"src/main/java/ChinChinException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chanjunlin"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chanjunlin"},"content":" * Custom class for handling exceptions","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chanjunlin"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chanjunlin"},"content":"public class ChinChinException extends Exception {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chanjunlin"},"content":"    private static String line \u003d \"-------------------------------------\";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chanjunlin"},"content":"    public ChinChinException(String message) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chanjunlin"},"content":"        super(formatMessage(message));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chanjunlin"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chanjunlin"},"content":"    // A method to format the error message with the desired structure","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chanjunlin"},"content":"    private static String formatMessage(String message) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chanjunlin"},"content":"        return  \"\\n\" + line +\"\\n\"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chanjunlin"},"content":"                + \" Eh wait! \" + message + \"\\n\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chanjunlin"},"content":"                + line + \"\\n\";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chanjunlin"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chanjunlin"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"chanjunlin":17}},{"path":"src/main/java/CustomList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chanjunlin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chanjunlin"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chanjunlin"},"content":" * Custom list class to manage the collection of tasks","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chanjunlin"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chanjunlin"},"content":"public class CustomList {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chanjunlin"},"content":"    // ArrayList of Task to keep track of tasks","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chanjunlin"},"content":"    private ArrayList\u003cTask\u003e customList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chanjunlin"},"content":"    private final String STRINGINFO \u003d \"Oki, I add this task for you\\n \";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chanjunlin"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chanjunlin"},"content":"    public CustomList() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chanjunlin"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chanjunlin"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chanjunlin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chanjunlin"},"content":"     * Adding a new task to the list","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chanjunlin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chanjunlin"},"content":"     * @param task The task to be added","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chanjunlin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chanjunlin"},"content":"    public void addToList(Task task) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chanjunlin"},"content":"        this.customList.add(task);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chanjunlin"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chanjunlin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chanjunlin"},"content":"     * Get the current number of tasks in the list","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chanjunlin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chanjunlin"},"content":"     * @return The number of tasks in the list","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chanjunlin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chanjunlin"},"content":"    public int size() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chanjunlin"},"content":"        return this.customList.size();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"chanjunlin"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"chanjunlin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"chanjunlin"},"content":"     * Display all tasks in the list with their index number","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"chanjunlin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"chanjunlin"},"content":"    public void showList() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"chanjunlin"},"content":"        if (this.customList.size() \u003d\u003d 0) { // if ArrayList is empty, let the user know","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"chanjunlin"},"content":"            System.out.println(\"List is empty!\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"chanjunlin"},"content":"        } else { // else show everything in the list","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"chanjunlin"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"chanjunlin"},"content":"            for (int i \u003d 0; i \u003c this.customList.size(); i++) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"chanjunlin"},"content":"                System.out.println((i + 1) + \". \" + (String) this.customList.get(i).show());","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"chanjunlin"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"chanjunlin"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"chanjunlin"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"chanjunlin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"chanjunlin"},"content":"     * Marks a specific task by index","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"chanjunlin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"chanjunlin"},"content":"     * @param index The index number of task to be marked","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"chanjunlin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"chanjunlin"},"content":"    public void markTask(int index) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"chanjunlin"},"content":"        index -\u003d 1;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"chanjunlin"},"content":"        Task currentTask \u003d this.customList.get(index);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"chanjunlin"},"content":"        currentTask.mark();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"chanjunlin"},"content":"        updateList();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"chanjunlin"},"content":"        String taskInfo \u003d currentTask.show();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"chanjunlin"},"content":"        System.out.println(\"Orh, marked the task as done liao!\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"chanjunlin"},"content":"        System.out.println(taskInfo);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"chanjunlin"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"chanjunlin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"chanjunlin"},"content":"     * Unmarks a specific task by index","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"chanjunlin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"chanjunlin"},"content":"     * @param index The index number of task to be unmarked","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"chanjunlin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"chanjunlin"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"chanjunlin"},"content":"        index -\u003d 1;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"chanjunlin"},"content":"        Task currentTask \u003d this.customList.get(index);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"chanjunlin"},"content":"        currentTask.unmark();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"chanjunlin"},"content":"        updateList();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"chanjunlin"},"content":"        String taskInfo \u003d currentTask.show();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"chanjunlin"},"content":"        System.out.println(\"Orh, marked the task as undone!\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"chanjunlin"},"content":"        System.out.println(taskInfo);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"chanjunlin"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"chanjunlin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"chanjunlin"},"content":"     * Create a new TODO task","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"chanjunlin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"chanjunlin"},"content":"     * @param userInput The task description","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"chanjunlin"},"content":"     * @return The task description","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"chanjunlin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"chanjunlin"},"content":"    public String todoTask(String userInput) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"chanjunlin"},"content":"        String taskInfo \u003d this.STRINGINFO;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"chanjunlin"},"content":"        Task todoTask \u003d new Task(userInput, TaskType.TODO);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"chanjunlin"},"content":"        taskInfo +\u003d todoTask.show();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"chanjunlin"},"content":"        addToList(todoTask);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"chanjunlin"},"content":"        updateList();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"chanjunlin"},"content":"        return taskInfo;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"chanjunlin"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"chanjunlin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"chanjunlin"},"content":"     * Create a new DEADLINE task","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"chanjunlin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"chanjunlin"},"content":"     * @param userInput The task description","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"chanjunlin"},"content":"     * @return The task description","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"chanjunlin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"chanjunlin"},"content":"    public String deadlineTask(String userInput) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"chanjunlin"},"content":"        String taskInfo \u003d this.STRINGINFO;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"chanjunlin"},"content":"        String[] parts \u003d userInput.split(\"/\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"chanjunlin"},"content":"        Deadline deadlineTask \u003d new Deadline(parts[0], TaskType.DEADLINE, parts[1]);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"chanjunlin"},"content":"        taskInfo +\u003d deadlineTask.show();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"chanjunlin"},"content":"        addToList(deadlineTask);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"chanjunlin"},"content":"        updateList();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"chanjunlin"},"content":"        return taskInfo;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"chanjunlin"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"chanjunlin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"chanjunlin"},"content":"     * Create a new EVENT task","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"chanjunlin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"chanjunlin"},"content":"     * @param userInput The task description","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"chanjunlin"},"content":"     * @return The task description","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"chanjunlin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"chanjunlin"},"content":"    public String eventTask(String userInput) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"chanjunlin"},"content":"        String taskInfo \u003d this.STRINGINFO;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"chanjunlin"},"content":"        String[] parts \u003d userInput.split(\"/\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"chanjunlin"},"content":"        Event eventTask \u003d new Event(parts[0], TaskType.EVENT, parts[1], parts[2]);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"chanjunlin"},"content":"        taskInfo +\u003d eventTask.show();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"chanjunlin"},"content":"        addToList(eventTask);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"chanjunlin"},"content":"        updateList();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"chanjunlin"},"content":"        return taskInfo;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"chanjunlin"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"chanjunlin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"chanjunlin"},"content":"     * Delete a specified task from the collection by its index.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"chanjunlin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"chanjunlin"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"chanjunlin"},"content":"     * @return Information about deleted task or an error message if invalid index is provided.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"chanjunlin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"chanjunlin"},"content":"    public String deleteTask(int index) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"chanjunlin"},"content":"        index -\u003d 1;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"chanjunlin"},"content":"        Task currentTask \u003d this.customList.get(index);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"chanjunlin"},"content":"        String taskInfo \u003d currentTask.show();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"chanjunlin"},"content":"        this.customList.remove(index);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"chanjunlin"},"content":"        updateList();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"chanjunlin"},"content":"        return \"Okay Boss, removed liao: \\n \" + taskInfo;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"chanjunlin"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"chanjunlin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"chanjunlin"},"content":"     *  Updates the list when there is any changes done to the list","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"chanjunlin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"chanjunlin"},"content":"    public void updateList() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"chanjunlin"},"content":"        storage.updateList(this.customList);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"chanjunlin"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"chanjunlin"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"chanjunlin":147}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chanjunlin"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chanjunlin"},"content":" * Represent a DEADLINE task with a due date","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chanjunlin"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chanjunlin"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chanjunlin"},"content":"    private String dueDate;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chanjunlin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chanjunlin"},"content":"     * Constructs a Deadline object with a description and duedate","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chanjunlin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chanjunlin"},"content":"     * @param task The task description","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chanjunlin"},"content":"     * @param taskType The type of Task, TaskType.DEADLINE","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chanjunlin"},"content":"     * @param date The input string containing the due date","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chanjunlin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chanjunlin"},"content":"    public Deadline(String task, TaskType taskType, String date) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chanjunlin"},"content":"        super(task, taskType);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chanjunlin"},"content":"        String[] correctedDate \u003d date.split(\" \", 2);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chanjunlin"},"content":"        this.dueDate \u003d correctedDate[1];","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chanjunlin"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chanjunlin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chanjunlin"},"content":"     * Display string representation of this deadline\u0027s details","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chanjunlin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chanjunlin"},"content":"     * @return A reformatted string showing wether it\u0027s completed and its details including due date.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chanjunlin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chanjunlin"},"content":"    public String show() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chanjunlin"},"content":"        return super.show() + \"(by: \" + this.dueDate + \")\";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chanjunlin"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chanjunlin"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"chanjunlin":28}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chanjunlin"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chanjunlin"},"content":" * Represents an event task with starting and ending date","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chanjunlin"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chanjunlin"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chanjunlin"},"content":"    private String starting;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chanjunlin"},"content":"    private String ending;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chanjunlin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chanjunlin"},"content":"     * Constructs an Event object with a description, starting and ending","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chanjunlin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chanjunlin"},"content":"     * @param task The task description","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chanjunlin"},"content":"     * @param taskType The type of task, TaskType.EVENT","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chanjunlin"},"content":"     * @param starting The starting of the event","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chanjunlin"},"content":"     * @param ending The ending of the event","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chanjunlin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chanjunlin"},"content":"    public Event(String task, TaskType taskType, String starting, String ending) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chanjunlin"},"content":"        super(task, taskType);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chanjunlin"},"content":"        String[] correctedStarting \u003d starting.split(\" \", 2);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chanjunlin"},"content":"        String[] correctedEnding \u003d ending.split(\" \", 2);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chanjunlin"},"content":"        this.starting \u003d correctedStarting[1];","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chanjunlin"},"content":"        this.ending \u003d correctedEnding[1];","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chanjunlin"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chanjunlin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chanjunlin"},"content":"     * Display string representation of this event\u0027s details","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chanjunlin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chanjunlin"},"content":"     * @return A reformatted string showing wether it\u0027s completed and its details including starting and ending","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chanjunlin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chanjunlin"},"content":"    public String show() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chanjunlin"},"content":"        return super.show() + \"(from: \" + this.starting + \" to: \" + this.ending + \")\";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chanjunlin"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chanjunlin"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"chanjunlin":32}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chanjunlin"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chanjunlin"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chanjunlin"},"content":"import java.io.File;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chanjunlin"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chanjunlin"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chanjunlin"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chanjunlin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chanjunlin"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chanjunlin"},"content":" * Represents a storage class that handles all the miscellaneous tasks","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chanjunlin"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chanjunlin"},"content":"public class Storage {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chanjunlin"},"content":"    private final String FILEPATH \u003d \"./data/ChinChinList.txt\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chanjunlin"},"content":"    public Storage() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chanjunlin"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chanjunlin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chanjunlin"},"content":"     * Initialises the task list by checking if the data file exists.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chanjunlin"},"content":"     * If it does, load the tasks from it.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chanjunlin"},"content":"     * Else, create a new file.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chanjunlin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chanjunlin"},"content":"     * @return A CustomList containing tasks loaded from the the textfile or an empty CustomList if no file exists.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chanjunlin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chanjunlin"},"content":"    public CustomList initialiseTasks() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chanjunlin"},"content":"        File file \u003d new File(FILEPATH);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chanjunlin"},"content":"        if (file.exists()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chanjunlin"},"content":"            return loadTasks();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chanjunlin"},"content":"        } else {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chanjunlin"},"content":"            createNewFile();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chanjunlin"},"content":"            return new CustomList();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"chanjunlin"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"chanjunlin"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"chanjunlin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"chanjunlin"},"content":"     * Create a new file for storing tasks.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"chanjunlin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"chanjunlin"},"content":"    public void createNewFile() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"chanjunlin"},"content":"        try {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"chanjunlin"},"content":"            File newFile \u003d new File(FILEPATH);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"chanjunlin"},"content":"            boolean created \u003d newFile.createNewFile();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"chanjunlin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"chanjunlin"},"content":"            System.out.println(\"Paisei, got something wrong. Your todo list might not be saved.\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"chanjunlin"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"chanjunlin"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"chanjunlin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"chanjunlin"},"content":"     * Loads tasks from the sepcified data file into a CustomList.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"chanjunlin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"chanjunlin"},"content":"     * @return A CustomList containing all tasks read from the text file","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"chanjunlin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"chanjunlin"},"content":"    public CustomList loadTasks() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"chanjunlin"},"content":"        CustomList taskList \u003d new CustomList();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"chanjunlin"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(FILEPATH))) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"chanjunlin"},"content":"            String line;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"chanjunlin"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"chanjunlin"},"content":"                Task task \u003d checkTask(line);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"chanjunlin"},"content":"                taskList.addToList(task);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"chanjunlin"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"chanjunlin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"chanjunlin"},"content":"            System.out.println(\"Something wrong while loading tasks\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"chanjunlin"},"content":"        } catch (ChinChinException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"chanjunlin"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"chanjunlin"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"chanjunlin"},"content":"        return taskList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"chanjunlin"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"chanjunlin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"chanjunlin"},"content":"     * Updates the data file with current tasks in the storage","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"chanjunlin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"chanjunlin"},"content":"     * @param taskList The ArrayList of Task objects to save to the text file","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"chanjunlin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"chanjunlin"},"content":"    public void updateList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"chanjunlin"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(FILEPATH))) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"chanjunlin"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"chanjunlin"},"content":"                writer.write(taskToString(task));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"chanjunlin"},"content":"                writer.newLine();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"chanjunlin"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"chanjunlin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"chanjunlin"},"content":"            System.out.println(\"Something wrong while saving tasks\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"chanjunlin"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"chanjunlin"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"chanjunlin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"chanjunlin"},"content":"     * Converts a Task object into its string representation during the saving process.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"chanjunlin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"chanjunlin"},"content":"     * @param task The task object to convert.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"chanjunlin"},"content":"     * @return The string representation of this Task for storing","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"chanjunlin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"chanjunlin"},"content":"    public String taskToString(Task task) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"chanjunlin"},"content":"        return task.show();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"chanjunlin"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"chanjunlin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"chanjunlin"},"content":"     * Parses a line from the data file and returns the appropriate Task object based on its task type","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"chanjunlin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"chanjunlin"},"content":"     * @param line The input string representing one line on the data file.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"chanjunlin"},"content":"     * @return The corresponding Task object based on the parsed information.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"chanjunlin"},"content":"     * @throws ChinChinException If there is an error parsing / invalid format is detected.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"chanjunlin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"chanjunlin"},"content":"    public Task checkTask(String line) throws ChinChinException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"chanjunlin"},"content":"        char taskType \u003d line.charAt(1);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"chanjunlin"},"content":"        boolean isDone \u003d line.charAt(4) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"chanjunlin"},"content":"        if (isDone) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"chanjunlin"},"content":"            String[] parts \u003d line.split(\" \", 3);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"chanjunlin"},"content":"        } else {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"chanjunlin"},"content":"            String[] parts \u003d line.split(\" \", 2);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"chanjunlin"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"chanjunlin"},"content":"        try {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"chanjunlin"},"content":"            switch (taskType) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"chanjunlin"},"content":"            case \u0027T\u0027:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"chanjunlin"},"content":"                String descriptionT \u003d line.substring(line.indexOf(\"] \") + 2).trim();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"chanjunlin"},"content":"                Task todoTask \u003d new Task(descriptionT, TaskType.TODO);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"chanjunlin"},"content":"                if (isDone) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"chanjunlin"},"content":"                    todoTask.mark();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"chanjunlin"},"content":"                }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"chanjunlin"},"content":"                return todoTask;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"chanjunlin"},"content":"            case \u0027D\u0027:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"chanjunlin"},"content":"                int descEndIndexD \u003d line.indexOf(\"(by:\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"chanjunlin"},"content":"                String descriptionD \u003d line.substring(line.indexOf(\"] \") + 2, descEndIndexD).trim();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"chanjunlin"},"content":"                String dueDateD \u003d line.substring(descEndIndexD + 4, line.lastIndexOf(\")\")).trim();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"chanjunlin"},"content":"                dueDateD \u003d \"/by \" + dueDateD;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"chanjunlin"},"content":"                Task deadlineTask \u003d new Deadline(descriptionD, TaskType.DEADLINE, dueDateD);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"chanjunlin"},"content":"                if (isDone) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"chanjunlin"},"content":"                    deadlineTask.mark();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"chanjunlin"},"content":"                }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"chanjunlin"},"content":"                return deadlineTask;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"chanjunlin"},"content":"            case \u0027E\u0027:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"chanjunlin"},"content":"                int descEndIndexE \u003d line.indexOf(\"(from:\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"chanjunlin"},"content":"                String descriptionE \u003d line.substring(line.indexOf(\"] \") + 2, descEndIndexE).trim();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"chanjunlin"},"content":"                String timeRange \u003d line.substring(descEndIndexE + 6, line.lastIndexOf(\")\")).trim();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"chanjunlin"},"content":"                String[] times \u003d timeRange.split(\"to:\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"chanjunlin"},"content":"                if (times.length !\u003d 2) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"chanjunlin"},"content":"                    throw new ChinChinException(\"Invalid event time range format!\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"chanjunlin"},"content":"                }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"chanjunlin"},"content":"                String startTime \u003d times[0].trim();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"chanjunlin"},"content":"                String endTime \u003d times[1].trim();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"chanjunlin"},"content":"                Task eventTask \u003d new Event(descriptionE, TaskType.TODO, startTime, endTime);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"chanjunlin"},"content":"                if (isDone) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"chanjunlin"},"content":"                    eventTask.mark();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"chanjunlin"},"content":"                }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"chanjunlin"},"content":"                return eventTask;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"chanjunlin"},"content":"            default:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"chanjunlin"},"content":"                throw new ChinChinException(\"Jialat... got problem\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"chanjunlin"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"chanjunlin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"chanjunlin"},"content":"            throw new ChinChinException(e.getMessage());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"chanjunlin"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"chanjunlin"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"chanjunlin"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"chanjunlin":155}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chanjunlin"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chanjunlin"},"content":" * Represents a generic task with a completion status and a name.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chanjunlin"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chanjunlin"},"content":"public class Task {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chanjunlin"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chanjunlin"},"content":"    protected String taskName;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chanjunlin"},"content":"    protected TaskType taskTag;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chanjunlin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chanjunlin"},"content":"     * Constructs a new Task object with specified name and type.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chanjunlin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chanjunlin"},"content":"     * @param name The description of the task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chanjunlin"},"content":"     * @param type The type of the task (e.g. TODO, DEADLINE).","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chanjunlin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chanjunlin"},"content":"    public Task(String task, TaskType taskTag) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chanjunlin"},"content":"        this.taskName \u003d task;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chanjunlin"},"content":"        this.taskTag \u003d taskTag;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chanjunlin"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chanjunlin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chanjunlin"},"content":"     * Marks the task as completed.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chanjunlin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chanjunlin"},"content":"    public void mark() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chanjunlin"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chanjunlin"},"content":"        return;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chanjunlin"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chanjunlin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"chanjunlin"},"content":"     * Marks the task as not completed.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"chanjunlin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"chanjunlin"},"content":"    public void unmark() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"chanjunlin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"chanjunlin"},"content":"        return;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"chanjunlin"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"chanjunlin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"chanjunlin"},"content":"     * Get the tag representing the type of this task.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"chanjunlin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"chanjunlin"},"content":"     * @return The tag associated with the task type.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"chanjunlin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"chanjunlin"},"content":"    public String getTag() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"chanjunlin"},"content":"        return this.taskTag.getTag();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"chanjunlin"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"chanjunlin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"chanjunlin"},"content":"     * Display string representation of the Task\u0027s details including its status and name.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"chanjunlin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"chanjunlin"},"content":"     * @return A formatted string showing whether it\u0027s completed and its details.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"chanjunlin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"chanjunlin"},"content":"    public String show() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"chanjunlin"},"content":"        String header \u003d (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"chanjunlin"},"content":"        return this.taskTag.getTag() + header + \" \" + this.taskName;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"chanjunlin"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"chanjunlin"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"chanjunlin":54}},{"path":"src/main/java/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chanjunlin"},"content":"/**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chanjunlin"},"content":" * Enumeration representing the different types of tasks.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chanjunlin"},"content":" */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chanjunlin"},"content":"public enum TaskType {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chanjunlin"},"content":"    TODO(\"[T]\"),        // Represents TODO task","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chanjunlin"},"content":"    DEADLINE(\"[D]\"),    // Represents DEADLINE task","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chanjunlin"},"content":"    EVENT(\"[E]\");       // Represents EVENT task","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chanjunlin"},"content":"    private final String tag;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chanjunlin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chanjunlin"},"content":"     * Constructs a TaskType with the specified tag","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"chanjunlin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"chanjunlin"},"content":"     * @param tag","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"chanjunlin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"chanjunlin"},"content":"    TaskType(String tag) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"chanjunlin"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"chanjunlin"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"chanjunlin"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"chanjunlin"},"content":"    /**","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"chanjunlin"},"content":"     * Gets the tag of this task type.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"chanjunlin"},"content":"     *","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chanjunlin"},"content":"     * @return The tag associated with this TaskType.","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"chanjunlin"},"content":"     */","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"chanjunlin"},"content":"    public String getTag() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"chanjunlin"},"content":"        return this.tag;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"chanjunlin"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"chanjunlin"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"chanjunlin":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chanjunlin"},"content":"todo read book","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"chanjunlin"},"content":"deadline return book /by June 6th","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"chanjunlin"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"chanjunlin"},"content":"Todo join sports club","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"chanjunlin"},"content":"todo borrow book","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"chanjunlin"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"chanjunlin"},"content":"mark 1","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"chanjunlin"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"chanjunlin"},"content":"mark 4","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"chanjunlin"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"chanjunlin"},"content":"unmark 1","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"chanjunlin"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"chanjunlin":12}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"chanjunlin"},"content":"java -classpath ../bin ChinChin \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"chanjunlin":1,"-":37}}]
