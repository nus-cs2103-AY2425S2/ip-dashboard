[{"path":".data/Example_saved_tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"samuelkwik"},"content":"T | X | hi","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelkwik"},"content":"D | X | hi4 | 2024-01-06","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelkwik"},"content":"D |   | hi2 | 2028-03-03","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelkwik"},"content":"E |   | hi3 | 2023-01-10 | 2027-01-01","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelkwik"},"content":"D |   | hi6 | 2023-12-02","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelkwik"},"content":"E | X | hi9 | 2023-10-10 | 2024-01-01","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"samuelkwik":6}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"samuelkwik"},"content":"# Viscount project template","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelkwik"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot Duke, but not as good hence, _Viscount_. Given below are instructions on how to use it.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelkwik"},"content":"1. After that, locate the `src/main/java/viscount/Viscount.java` file, right-click it, and choose `Run Viscount.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelkwik"},"content":"    __     ___                           _  ","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelkwik"},"content":"    \\ \\   / (_)___  ___ ___  _   _ _ __ | |_ ","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelkwik"},"content":"     \\ \\ / /| / __|/ __/ _ \\| | | | \u0027_ \\| __|","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelkwik"},"content":"      \\ V / | \\__ \\ (_| (_) | |_| | | | | |_ ","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelkwik"},"content":"       \\_/  |_|___/\\___\\___/ \\__,_|_| |_|\\__| the okayish chatbot","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelkwik"},"content":"   ","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false}],"authorContributionMap":{"samuelkwik":9,"-":17}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelkwik"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelkwik"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelkwik"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelkwik"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelkwik"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelkwik"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelkwik"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelkwik"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelkwik"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelkwik"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelkwik"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelkwik"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelkwik"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samuelkwik"},"content":"    mainClass.set(\"viscount.Launcher\")","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samuelkwik"},"content":"    archiveBaseName \u003d \"viscount\"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"samuelkwik":16,"-":39}},{"path":"src/main/java/viscount/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelkwik"},"content":"package viscount;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelkwik"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelkwik"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelkwik"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelkwik"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelkwik"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelkwik"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelkwik"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelkwik"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelkwik"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelkwik"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelkwik"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelkwik"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelkwik"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelkwik"},"content":"/**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelkwik"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelkwik"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelkwik"},"content":" */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelkwik"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelkwik"},"content":"    @FXML","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelkwik"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelkwik"},"content":"    @FXML","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelkwik"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelkwik"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelkwik"},"content":"        try {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelkwik"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelkwik"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelkwik"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelkwik"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelkwik"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelkwik"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelkwik"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelkwik"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samuelkwik"},"content":"        Circle circle \u003d new Circle(40,40,40);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samuelkwik"},"content":"        displayPicture.setPreserveRatio(true);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samuelkwik"},"content":"        displayPicture.setFitWidth(80);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samuelkwik"},"content":"        displayPicture.setClip(circle);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samuelkwik"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samuelkwik"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samuelkwik"},"content":"    private void flip() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samuelkwik"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samuelkwik"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samuelkwik"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samuelkwik"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samuelkwik"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samuelkwik"},"content":"    private void error() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samuelkwik"},"content":"        dialog.getStyleClass().add(\"error-label\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samuelkwik"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"samuelkwik"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"samuelkwik"},"content":"    public static DialogBox getViscountDialog(String text, Image img) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"samuelkwik"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"samuelkwik"},"content":"        db.flip();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"samuelkwik"},"content":"        return db;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"samuelkwik"},"content":"    public static DialogBox getViscountErrorDialog(String text, Image img) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"samuelkwik"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"samuelkwik"},"content":"        db.flip();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"samuelkwik"},"content":"        db.error();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"samuelkwik"},"content":"        return db;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"samuelkwik"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"samuelkwik":77}},{"path":"src/main/java/viscount/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelkwik"},"content":"package viscount;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelkwik"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelkwik"},"content":"/**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelkwik"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelkwik"},"content":" */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelkwik"},"content":"public class Launcher {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelkwik"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelkwik"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelkwik"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"samuelkwik":12}},{"path":"src/main/java/viscount/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelkwik"},"content":"package viscount;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelkwik"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelkwik"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelkwik"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelkwik"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelkwik"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelkwik"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelkwik"},"content":"/**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelkwik"},"content":" * A GUI for Viscount using FXML.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelkwik"},"content":" */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelkwik"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelkwik"},"content":"    private Viscount viscount \u003d new Viscount();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelkwik"},"content":"    @Override","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelkwik"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelkwik"},"content":"        try {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelkwik"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelkwik"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelkwik"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelkwik"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelkwik"},"content":"            stage.setMinWidth(417);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelkwik"},"content":"            stage.setMinHeight(220);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelkwik"},"content":"            stage.setTitle(\"Viscount\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelkwik"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setViscount(viscount);  // inject the Viscount instance","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelkwik"},"content":"            stage.show();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelkwik"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelkwik"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelkwik"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelkwik"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"samuelkwik":34}},{"path":"src/main/java/viscount/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelkwik"},"content":"package viscount;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelkwik"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelkwik"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelkwik"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelkwik"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelkwik"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelkwik"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelkwik"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelkwik"},"content":"/**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelkwik"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelkwik"},"content":" */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelkwik"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelkwik"},"content":"    @FXML","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelkwik"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelkwik"},"content":"    @FXML","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelkwik"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelkwik"},"content":"    @FXML","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelkwik"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelkwik"},"content":"    @FXML","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelkwik"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelkwik"},"content":"    private Viscount viscount;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelkwik"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelkwik"},"content":"    private Image viscountImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaViscount.png\"));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelkwik"},"content":"    @FXML","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelkwik"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelkwik"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelkwik"},"content":"    /** Injects the Viscount instance */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelkwik"},"content":"    public void setViscount(Viscount viscount) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelkwik"},"content":"        this.viscount \u003d viscount;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelkwik"},"content":"        try{","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelkwik"},"content":"            this.viscount.loadFromStorage();}","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelkwik"},"content":"        catch(ViscountException e){","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samuelkwik"},"content":"            displayViscountErrorDialog(\"Old tasks were not loaded, starting afresh\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samuelkwik"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samuelkwik"},"content":"        displayViscountDialog(\"Hello what may I do for you?\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samuelkwik"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Viscount\u0027s reply and then appends them to","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samuelkwik"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samuelkwik"},"content":"    @FXML","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samuelkwik"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samuelkwik"},"content":"        String input \u003d userInput.getText().trim();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samuelkwik"},"content":"        String response;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samuelkwik"},"content":"        try{","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samuelkwik"},"content":"            response \u003d viscount.getResponse(input);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samuelkwik"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samuelkwik"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samuelkwik"},"content":"                    DialogBox.getViscountDialog(response, viscountImage)","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samuelkwik"},"content":"            );","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samuelkwik"},"content":"        } catch (ViscountException e) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samuelkwik"},"content":"            response \u003d e.getMessage();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samuelkwik"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samuelkwik"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"samuelkwik"},"content":"                    DialogBox.getViscountErrorDialog(response, viscountImage)","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"samuelkwik"},"content":"            );","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"samuelkwik"},"content":"        }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"samuelkwik"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"samuelkwik"},"content":"    private void displayViscountDialog(String message) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"samuelkwik"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getViscountDialog(message, viscountImage));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"samuelkwik"},"content":"    private void displayUserDialog(String message) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"samuelkwik"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getUserDialog(message, userImage));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"samuelkwik"},"content":"    private void displayViscountErrorDialog(String message) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"samuelkwik"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getViscountErrorDialog(message, viscountImage));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"samuelkwik"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"samuelkwik":76}},{"path":"src/main/java/viscount/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelkwik"},"content":"package viscount;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelkwik"},"content":"import java.io.File;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelkwik"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelkwik"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelkwik"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelkwik"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelkwik"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelkwik"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelkwik"},"content":" * The Storage class is responsible for handling file-based storage operations.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelkwik"},"content":" * It provides functionalities to read data from, write data to, and manage a storage file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelkwik"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelkwik"},"content":"public class Storage {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelkwik"},"content":"    private final String filePath;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelkwik"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelkwik"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelkwik"},"content":"     * Reads data from a storage file and returns it as a list of strings.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelkwik"},"content":"     * Each string in the list represents a line of content from the file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelkwik"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelkwik"},"content":"     * @return An ArrayList containing lines of content from the storage file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelkwik"},"content":"     * @throws FileNotFoundException If the specified file does not exist.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelkwik"},"content":"    public ArrayList\u003cString\u003e readFromStorage() throws FileNotFoundException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelkwik"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelkwik"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelkwik"},"content":"        ArrayList\u003cString\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelkwik"},"content":"        while (s.hasNextLine()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelkwik"},"content":"            list.add(s.nextLine());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelkwik"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelkwik"},"content":"        return list;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samuelkwik"},"content":"     * Deletes the storage file located at the specified file path.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samuelkwik"},"content":"     * If the file exists, it will be permanently removed from the filesystem.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samuelkwik"},"content":"     * This method does not throw an exception if the file does not exist.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samuelkwik"},"content":"    public void clearStorage() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samuelkwik"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samuelkwik"},"content":"        f.delete();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samuelkwik"},"content":"     * Handles a scenario where a file is not found at the specified file path.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samuelkwik"},"content":"     * This method ensures that the necessary directory structure for the file is created,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samuelkwik"},"content":"     * facilitating subsequent file creation or other file-related operations.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samuelkwik"},"content":"    public void handleFileNotFound() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samuelkwik"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samuelkwik"},"content":"        file.getParentFile().mkdirs();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samuelkwik"},"content":"     * Writes the specified string content to the storage file. Appends a newline character","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samuelkwik"},"content":"     * to the content if it is not empty.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"samuelkwik"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"samuelkwik"},"content":"     * @param toFile The content to be written to the storage file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"samuelkwik"},"content":"     *               If the string is empty, no newline character is appended.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"samuelkwik"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"samuelkwik"},"content":"    public void writeToStorage(String toFile) throws IOException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"samuelkwik"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"samuelkwik"},"content":"        FileWriter fw \u003d new FileWriter(f);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"samuelkwik"},"content":"        fw.write(toFile + (toFile.isEmpty() ? \"\" : \"\\n\"));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"samuelkwik"},"content":"        fw.close();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"samuelkwik"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"samuelkwik":73}},{"path":"src/main/java/viscount/TextUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelkwik"},"content":"package viscount;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelkwik"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelkwik"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelkwik"},"content":" * The TextUi class provides various utility methods for user interface in the","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelkwik"},"content":" * Viscount chatbot application.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelkwik"},"content":" * It is responsible for displaying messages, prompts, and interacting with the user","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelkwik"},"content":" * through the console.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelkwik"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelkwik"},"content":"public class TextUi {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelkwik"},"content":"     * Prints a horizontal line of underscores to the console to visually separate sections of output.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelkwik"},"content":"    public void printLine() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelkwik"},"content":"        System.out.println(\"\\t_____________________________________________________________\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelkwik"},"content":"     * Displays the provided text prefixed by a horizontal line and indented within the console.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelkwik"},"content":"     * Each line of the input text replaces its newlines and is indented for better formatting.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelkwik"},"content":"     * The displayed text is enclosed between two horizontal lines to distinguish it clearly.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelkwik"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelkwik"},"content":"     * @param text The text string to be displayed, where newlines in the input will","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelkwik"},"content":"     *             result in properly indented multi-line output.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelkwik"},"content":"    public void displayViscountText(String text) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelkwik"},"content":"        printLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelkwik"},"content":"        System.out.println(\"\\t\" + text.replaceAll(\"\\n\", \"\\n\\t\"));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelkwik"},"content":"        printLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelkwik"},"content":"     * Displays the set greeting message.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelkwik"},"content":"    public void sayHello() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelkwik"},"content":"        displayViscountText(\"Hello! I\u0027m Viscount! \\nWhat can I do for you?\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samuelkwik"},"content":"     * Displays the set goodbye message.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samuelkwik"},"content":"    public void sayGoodbye() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samuelkwik"},"content":"        displayViscountText(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samuelkwik"},"content":"     * Prompts the user for input by displaying a \"You \u003e\u003e \" prompt in the console.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samuelkwik"},"content":"    public void showUserPrompt() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samuelkwik"},"content":"        System.out.print(\"You \u003e\u003e \");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samuelkwik"},"content":"     * Displays the chatbot\u0027s ASCII logo and title to the console,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samuelkwik"},"content":"     * providing a welcoming visual introduction upon starting the application.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samuelkwik"},"content":"    public void startChat() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samuelkwik"},"content":"        String logo \u003d \"    __     ___                           _  \\n\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samuelkwik"},"content":"                + \"    \\\\ \\\\   / (_)___  ___ ___  _   _ _ __ | |_ \\n\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samuelkwik"},"content":"                + \"     \\\\ \\\\ / /| / __|/ __/ _ \\\\| | | | \u0027_ \\\\| __|\\n\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"samuelkwik"},"content":"                + \"      \\\\ V / | \\\\__ \\\\ (_| (_) | |_| | | | | |_ \\n\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"samuelkwik"},"content":"                + \"       \\\\_/  |_|___/\\\\___\\\\___/ \\\\__,_|_| |_|\\\\__|\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"samuelkwik"},"content":"        printLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"samuelkwik"},"content":"        System.out.println(logo + \" the okayish chatbot\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"samuelkwik"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"samuelkwik":67}},{"path":"src/main/java/viscount/Viscount.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelkwik"},"content":"package viscount;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelkwik"},"content":"import viscount.command.Command;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelkwik"},"content":"import viscount.command.Parser;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelkwik"},"content":"import viscount.task.TaskList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelkwik"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelkwik"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelkwik"},"content":" * The Viscount class serves as the entry point to the chatbot application.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelkwik"},"content":" * It is responsible for initializing the task management components,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelkwik"},"content":" * handling user input, and facilitating the interaction between the user and the chatbot.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelkwik"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelkwik"},"content":"public class Viscount {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelkwik"},"content":"    private static final String DEFAULT_FILEPATH \u003d \".data/saved_tasks.txt\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelkwik"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelkwik"},"content":"    private final TextUi textUi \u003d new TextUi();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelkwik"},"content":"    private final Storage storage;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelkwik"},"content":"     * Initializes a Viscount instance with the specified file path.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelkwik"},"content":"     * This constructor sets up the task management and storage components","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelkwik"},"content":"     * using the provided file path.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelkwik"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelkwik"},"content":"     * @param filePath The file path for loading and saving task data.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelkwik"},"content":"    public Viscount(String filePath) throws ViscountException {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelkwik"},"content":"        taskList \u003d new TaskList(filePath);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelkwik"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelkwik"},"content":"     * Initializes a default instance of the Viscount chatbot.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelkwik"},"content":"     * This constructor sets up the task management and storage components","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelkwik"},"content":"     * using a predefined default file path.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelkwik"},"content":"     * The default file path is used to load and save task data.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samuelkwik"},"content":"    public Viscount() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samuelkwik"},"content":"        taskList \u003d new TaskList(DEFAULT_FILEPATH);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samuelkwik"},"content":"        storage \u003d new Storage(DEFAULT_FILEPATH);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samuelkwik"},"content":"    public void loadFromStorage() throws ViscountException {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samuelkwik"},"content":"        this.taskList.initialize(storage);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samuelkwik"},"content":"    public String getResponse(String userInput) throws ViscountException {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samuelkwik"},"content":"        Command parsedCommand;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samuelkwik"},"content":"        parsedCommand \u003d Parser.parse(userInput);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samuelkwik"},"content":"        return parsedCommand.execute(taskList, storage);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samuelkwik"},"content":"     * Starts and runs the main loop for the Viscount chatbot application.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samuelkwik"},"content":"     * This method initializes necessary components, welcomes the user,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samuelkwik"},"content":"     * and continuously processes user inputs until an exit command is given.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samuelkwik"},"content":"    public void run() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samuelkwik"},"content":"        textUi.startChat();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"samuelkwik"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"samuelkwik"},"content":"        String inputString;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"samuelkwik"},"content":"        boolean isChatting \u003d true;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"samuelkwik"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"samuelkwik"},"content":"            loadFromStorage();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"samuelkwik"},"content":"        } catch (ViscountException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"samuelkwik"},"content":"            textUi.displayViscountText(e.getMessage());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"samuelkwik"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"samuelkwik"},"content":"        textUi.sayHello();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"samuelkwik"},"content":"        while (isChatting) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"samuelkwik"},"content":"            textUi.showUserPrompt();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"samuelkwik"},"content":"            inputString \u003d scanner.nextLine();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"samuelkwik"},"content":"            Command parsedCommand;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"samuelkwik"},"content":"            try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"samuelkwik"},"content":"                parsedCommand \u003d Parser.parse(inputString);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"samuelkwik"},"content":"                textUi.displayViscountText(parsedCommand.execute(taskList, storage));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"samuelkwik"},"content":"                isChatting \u003d !(parsedCommand.isExitCommand());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"samuelkwik"},"content":"            } catch (ViscountException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"samuelkwik"},"content":"                textUi.displayViscountText(e.getMessage());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"samuelkwik"},"content":"                continue;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"samuelkwik"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"samuelkwik"},"content":"        }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"samuelkwik"},"content":"     * The main method serves as the entry point to the Viscount chatbot application.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"samuelkwik"},"content":"     * It initializes a default instance of the Viscount chatbot and starts its execution.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"samuelkwik"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"samuelkwik"},"content":"     * @param args Command-line arguments passed to the application. These are","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"samuelkwik"},"content":"     *             not used in the current implementation.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"samuelkwik"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"samuelkwik"},"content":"        Viscount viscount \u003d new Viscount();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"samuelkwik"},"content":"        viscount.run();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"samuelkwik"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"samuelkwik":99}},{"path":"src/main/java/viscount/ViscountException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelkwik"},"content":"package viscount;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelkwik"},"content":"public class ViscountException extends RuntimeException {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelkwik"},"content":"    public ViscountException(String message) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelkwik"},"content":"        super(message);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelkwik"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"samuelkwik":7}},{"path":"src/main/java/viscount/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelkwik"},"content":"package viscount.command;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelkwik"},"content":"import viscount.task.TaskList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelkwik"},"content":"import viscount.Storage;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelkwik"},"content":"import viscount.TextUi;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelkwik"},"content":"import viscount.ViscountException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelkwik"},"content":"import viscount.task.ToDo;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelkwik"},"content":"import viscount.task.Deadline;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelkwik"},"content":"import viscount.task.Event;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelkwik"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelkwik"},"content":" * Represents a command to add a task to the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelkwik"},"content":" * A task can be of type ToDo, Deadline, or Event based on the provided arguments.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelkwik"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelkwik"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelkwik"},"content":"    private final String description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelkwik"},"content":"    private final String[] additionalArgs;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelkwik"},"content":"     * Constructs an AddCommand object to add a task to the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelkwik"},"content":"     * The type task is determined based on the provided description","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelkwik"},"content":"     * and additional arguments.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelkwik"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelkwik"},"content":"     * @param description    The description of the task to be added.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelkwik"},"content":"     * @param additionalArgs Additional arguments for the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelkwik"},"content":"     *                       If no arguments are provided, a ToDo task is created.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelkwik"},"content":"     *                       If one argument is provided, a Deadline task is created with the argument as the","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelkwik"},"content":"     *                       deadline date.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelkwik"},"content":"     *                       If two arguments are provided, an Event task is created with the arguments as the start","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelkwik"},"content":"     *                       and end dates.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelkwik"},"content":"    public AddCommand(String description, String... additionalArgs) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelkwik"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelkwik"},"content":"        this.additionalArgs \u003d additionalArgs;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelkwik"},"content":"     * Executes the command to add a task to the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samuelkwik"},"content":"     * The type of task is determined based on the provided arguments.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samuelkwik"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samuelkwik"},"content":"     * @param taskList The TaskList containing all current tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samuelkwik"},"content":"     * @param textUi   The TextUi for user interaction and displaying messages.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samuelkwik"},"content":"     * @param storage  The Storage handler for reading and writing tasks to the storage file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samuelkwik"},"content":"     * @throws ViscountException If there is an error adding the task due to incorrect formatting","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samuelkwik"},"content":"     *                           or storing it in persistent storage.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samuelkwik"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samuelkwik"},"content":"    public void execute(TaskList taskList,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samuelkwik"},"content":"                        TextUi textUi, Storage storage) throws ViscountException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samuelkwik"},"content":"        textUi.displayViscountText(execute(taskList, storage));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samuelkwik"},"content":"    @Override","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samuelkwik"},"content":"    public String execute(TaskList taskList, Storage storage) throws ViscountException {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samuelkwik"},"content":"        if (additionalArgs.length \u003d\u003d 0) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samuelkwik"},"content":"            taskList.addTask(new ToDo(description), storage);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samuelkwik"},"content":"        } else if (additionalArgs.length \u003d\u003d 1) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samuelkwik"},"content":"            taskList.addTask(new Deadline(description, additionalArgs[0]), storage);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samuelkwik"},"content":"        } else if (additionalArgs.length \u003d\u003d 2) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samuelkwik"},"content":"            taskList.addTask(new Event(description, additionalArgs[0],","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samuelkwik"},"content":"                    additionalArgs[1]), storage);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"samuelkwik"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"samuelkwik"},"content":"        return \"\\\"\" + description + \"\\\" has been added!\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"samuelkwik"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"samuelkwik":65}},{"path":"src/main/java/viscount/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelkwik"},"content":"package viscount.command;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelkwik"},"content":"import viscount.Storage;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelkwik"},"content":"import viscount.task.TaskList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelkwik"},"content":"import viscount.TextUi;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelkwik"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelkwik"},"content":" * Represents a command that terminates the program and signals an exit.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelkwik"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelkwik"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelkwik"},"content":"     * Executes a command to display the \u003ccode\u003etextUi.sayGoodbye()\u003c/code\u003e message.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelkwik"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelkwik"},"content":"     * @param taskList The TaskList containing all current tasks. (not used here)","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelkwik"},"content":"     * @param textUi   The TextUi for user interaction and displaying messages.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelkwik"},"content":"     * @param storage  The Storage handler for reading and writing tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelkwik"},"content":"     *                 to the storage file. (not used here)","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelkwik"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelkwik"},"content":"    public void execute(TaskList taskList, TextUi textUi, Storage storage) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelkwik"},"content":"        textUi.sayGoodbye();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelkwik"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelkwik"},"content":"        return \"Close the application by clicking the X button\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelkwik"},"content":"     * Indicates this command is an exit command that terminates the program.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelkwik"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelkwik"},"content":"     * @return true as this command represents an exit operation.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelkwik"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelkwik"},"content":"    public boolean isExitCommand() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelkwik"},"content":"        return true;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelkwik"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"samuelkwik":35}},{"path":"src/main/java/viscount/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelkwik"},"content":"package viscount.command;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelkwik"},"content":"import viscount.Storage;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelkwik"},"content":"import viscount.task.Task;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelkwik"},"content":"import viscount.task.TaskList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelkwik"},"content":"import viscount.TextUi;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelkwik"},"content":"import viscount.ViscountException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelkwik"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelkwik"},"content":" * Represents an abstract base class for all commands in the application.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelkwik"},"content":" * A Command encapsulates the behavior to be executed when invoked.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelkwik"},"content":" * Subclasses define specific command behaviors by implementing the `execute` method.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelkwik"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelkwik"},"content":"public abstract class Command {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelkwik"},"content":"    public abstract void execute(TaskList taskList,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelkwik"},"content":"                                 TextUi textUi, Storage storage) throws ViscountException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelkwik"},"content":"    public abstract String execute(TaskList taskList, Storage storage) throws ViscountException;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelkwik"},"content":"     * Indicates whether this command is an exit command.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelkwik"},"content":"     * By default, commands do not signal an exit unless overridden in a subclass.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelkwik"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelkwik"},"content":"     * @return false as the default implementation does not represent an exit command.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelkwik"},"content":"    public boolean isExitCommand() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelkwik"},"content":"        return false;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelkwik"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"samuelkwik":29}},{"path":"src/main/java/viscount/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelkwik"},"content":"package viscount.command;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelkwik"},"content":"import viscount.Storage;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelkwik"},"content":"import viscount.task.TaskList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelkwik"},"content":"import viscount.TextUi;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelkwik"},"content":"import viscount.ViscountException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelkwik"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelkwik"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelkwik"},"content":" * The task to be deleted is identified by the index provided as a string","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelkwik"},"content":" * during the creation of the command.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelkwik"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelkwik"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelkwik"},"content":"    private final String indexStr;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelkwik"},"content":"     * Constructs a DeleteCommand object with a string representing the index","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelkwik"},"content":"     * of the task to be deleted.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelkwik"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelkwik"},"content":"     * @param indexStr The index of the task to be deleted, provided as a string.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelkwik"},"content":"    public DeleteCommand(String indexStr) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelkwik"},"content":"        this.indexStr \u003d indexStr + \"\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelkwik"},"content":"     * Executes the delete operation by removing a task from the given task list","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelkwik"},"content":"     * based on the index provided as a string during the command creation.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelkwik"},"content":"     * It displays an appropriate success message if the task is successfully","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelkwik"},"content":"     * deleted or an error message if failed.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelkwik"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelkwik"},"content":"     * @param taskList The TaskList containing all current tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelkwik"},"content":"     * @param textUi   The TextUi for user interaction and displaying messages.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelkwik"},"content":"     * @param storage  The Storage handler for reading and writing tasks to the storage file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelkwik"},"content":"     * @throws ViscountException If there is an error during writing to the storage or","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelkwik"},"content":"     *                           an invalid index is provided.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelkwik"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samuelkwik"},"content":"    public void execute(TaskList taskList, TextUi textUi,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samuelkwik"},"content":"                        Storage storage) throws ViscountException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samuelkwik"},"content":"        textUi.displayViscountText(execute(taskList,storage));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samuelkwik"},"content":"    public String execute(TaskList taskList, Storage storage) throws ViscountException {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samuelkwik"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samuelkwik"},"content":"            int index \u003d Integer.parseInt(indexStr);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samuelkwik"},"content":"            String outcome \u003d taskList.deleteTask(index, storage)","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samuelkwik"},"content":"                    .map(task -\u003e \"\\\"\" + task.getDescription() + \"\\\" deleted\")","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samuelkwik"},"content":"                    .orElse(\"DELETE: No task found with that index\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samuelkwik"},"content":"            return outcome;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samuelkwik"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samuelkwik"},"content":"            throw new ViscountException(\"DELETE: Please enter a numerical index\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samuelkwik"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samuelkwik"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"samuelkwik":55}},{"path":"src/main/java/viscount/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelkwik"},"content":"package viscount.command;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelkwik"},"content":"import viscount.Storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelkwik"},"content":"import viscount.TextUi;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelkwik"},"content":"import viscount.ViscountException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelkwik"},"content":"import viscount.task.Task;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelkwik"},"content":"import viscount.task.TaskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelkwik"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelkwik"},"content":" * Represents a command that facilitates searching for tasks within","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelkwik"},"content":" * the task list matching a specific search term provided by the user.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelkwik"},"content":" * This command filters the tasks to find any that contain the specified search term","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelkwik"},"content":" * and displays the results, or a message indicating no results were found.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelkwik"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelkwik"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelkwik"},"content":"    private final String searchTerm;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelkwik"},"content":"     * Constructs a FindCommand object to search for tasks in the task list","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelkwik"},"content":"     * that match the specified search term.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelkwik"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelkwik"},"content":"     * @param searchTerm The search term or keyword to filter tasks by.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelkwik"},"content":"     *                   Tasks containing this term in their descriptions","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelkwik"},"content":"     *                   will be included in the search results.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelkwik"},"content":"    public FindCommand(String searchTerm) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelkwik"},"content":"        this.searchTerm \u003d searchTerm;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelkwik"},"content":"     * Executes the FindCommand by searching for tasks within the provided task list","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelkwik"},"content":"     * that match the specified search term. The search is case-sensitive and looks for","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelkwik"},"content":"     * the presence of the term within the task descriptions. The results are displayed","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelkwik"},"content":"     * using the provided text UI. If no tasks match the search term, an appropriate","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelkwik"},"content":"     * \"no results found\" message is shown.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelkwik"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelkwik"},"content":"     * @param taskList The TaskList containing all current tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelkwik"},"content":"     * @param textUi   The TextUi for user interaction and displaying messages.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samuelkwik"},"content":"     * @param storage  The Storage handler for reading and writing tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samuelkwik"},"content":"     *                 to the storage file. (not used here)","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samuelkwik"},"content":"     * @throws ViscountException If any unexpected error occurs during execution.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samuelkwik"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samuelkwik"},"content":"    public void execute(TaskList taskList,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samuelkwik"},"content":"                        TextUi textUi, Storage storage) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samuelkwik"},"content":"        textUi.displayViscountText(execute(taskList,storage));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samuelkwik"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samuelkwik"},"content":"        String findResults \u003d","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samuelkwik"},"content":"                taskList.getTasksStreamWithIndex()","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samuelkwik"},"content":"                        .filter(s -\u003e s.contains(searchTerm))","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samuelkwik"},"content":"                        .reduce((s1, s2) -\u003e s1 + \"\\n\" + s2)","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samuelkwik"},"content":"                        .orElse(\"Find: [\" + searchTerm + \"] : No results found\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samuelkwik"},"content":"        return \"Find: [\" + searchTerm + \"]\\n\" + findResults;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samuelkwik"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"samuelkwik":57}},{"path":"src/main/java/viscount/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelkwik"},"content":"package viscount.command;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelkwik"},"content":"import viscount.Storage;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelkwik"},"content":"import viscount.task.Task;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelkwik"},"content":"import viscount.task.TaskList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelkwik"},"content":"import viscount.TextUi;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelkwik"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelkwik"},"content":" * Represents a command to display all tasks in the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelkwik"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelkwik"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelkwik"},"content":"     * Executes the command to display the list of tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelkwik"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelkwik"},"content":"     * @param taskList The TaskList containing all current tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelkwik"},"content":"     * @param textUi   The TextUi for user interaction and displaying messages.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelkwik"},"content":"     * @param storage  The Storage handler for reading and writing tasks to","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelkwik"},"content":"     *                 the storage file. (not used here)","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelkwik"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelkwik"},"content":"    public void execute(TaskList taskList, TextUi textUi, Storage storage) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelkwik"},"content":"        textUi.displayViscountText(execute(taskList, storage));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelkwik"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelkwik"},"content":"        return taskList.getTasksString()","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelkwik"},"content":"                .map(s -\u003e \"Here is your list of tasks: \\n\" + s)","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelkwik"},"content":"                .orElse(\"You have no tasks\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelkwik"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"samuelkwik":31}},{"path":"src/main/java/viscount/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelkwik"},"content":"package viscount.command;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelkwik"},"content":"import viscount.ViscountException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelkwik"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelkwik"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelkwik"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelkwik"},"content":" * The Parser class is responsible for interpreting and parsing user input commands","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelkwik"},"content":" * into their respective Command objects. Each command entered by the user is","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelkwik"},"content":" * routed to an appropriate handler based on the command type, where it is validated","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelkwik"},"content":" * and converted into a specific subclass of the Command class.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelkwik"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelkwik"},"content":"public class Parser {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelkwik"},"content":"    private static Command handleToggle(String inputString) throws ViscountException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelkwik"},"content":"        String[] splitString \u003d inputString.split(\" \");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelkwik"},"content":"        if (splitString.length !\u003d 2) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelkwik"},"content":"            throw new ViscountException(\"Invalid toggle command,\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelkwik"},"content":"                    + \" please only state one index to toggle\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelkwik"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelkwik"},"content":"        if (!splitString[1].matches(\"\\\\d+\")) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelkwik"},"content":"            throw new ViscountException(\"Invalid toggle command,\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelkwik"},"content":"                    + \" please enter a numerical index\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelkwik"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelkwik"},"content":"        return new ToggleCommand(splitString[1]);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelkwik"},"content":"    private static Command handleTodo(String inputString) throws ViscountException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelkwik"},"content":"        if (inputString.length() \u003c 5 || inputString.substring(5).trim().isEmpty()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelkwik"},"content":"            throw new ViscountException(\"Invalid todo command, please provide a valid todo\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelkwik"},"content":"                    + \"\\ntodo \u003cdescription\u003e\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelkwik"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelkwik"},"content":"        return new AddCommand(inputString.substring(5).trim());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelkwik"},"content":"    private static Command handleDeadline(String inputString) throws ViscountException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelkwik"},"content":"        String pattern \u003d \"deadline\\\\s(.*\\\\S.*)\\\\s\\\\/by\\s(.*\\\\S.*)\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samuelkwik"},"content":"        Pattern deadlinePattern \u003d Pattern.compile(pattern, Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samuelkwik"},"content":"        Matcher matcher \u003d deadlinePattern.matcher(inputString);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samuelkwik"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samuelkwik"},"content":"            throw new ViscountException(\"Invalid deadline command,\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samuelkwik"},"content":"                    + \" please provide a valid deadline\\ndeadline \u003cdescription\u003e /by \u003cdate\u003e\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samuelkwik"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samuelkwik"},"content":"        return new AddCommand(matcher.group(1), matcher.group(2));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samuelkwik"},"content":"    private static Command handleEvent(String inputString) throws ViscountException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samuelkwik"},"content":"        String pattern \u003d \"event\\\\s(.*\\\\S.*)\\\\s/from\\\\s(.*\\\\S.*)\\\\s/to\\\\s(.*\\\\S.*)\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samuelkwik"},"content":"        Pattern deadlinePattern \u003d Pattern.compile(pattern, Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samuelkwik"},"content":"        Matcher matcher \u003d deadlinePattern.matcher(inputString);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samuelkwik"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samuelkwik"},"content":"            throw new ViscountException(\"Invalid event command, please provide a valid event\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samuelkwik"},"content":"                    + \"\\nevent \u003cdescription\u003e /from \u003cdate\u003e /to \u003cdate\u003e\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samuelkwik"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samuelkwik"},"content":"        return new AddCommand(matcher.group(1), matcher.group(2), matcher.group(3));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samuelkwik"},"content":"    private static Command handleFind(String inputString) throws ViscountException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samuelkwik"},"content":"        if (inputString.length() \u003c 5 || inputString.substring(5).trim().isEmpty()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samuelkwik"},"content":"            throw new ViscountException(\"Invalid find command, please provide a search term\" +","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"samuelkwik"},"content":"                    \"\\nfind \u003csearch term\u003e\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"samuelkwik"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"samuelkwik"},"content":"        return new FindCommand(inputString.substring(5).trim());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"samuelkwik"},"content":"    private static Command handleDelete(String inputString) throws ViscountException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"samuelkwik"},"content":"        String[] splitString \u003d inputString.split(\" \");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"samuelkwik"},"content":"        if (splitString.length !\u003d 2) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"samuelkwik"},"content":"            throw new ViscountException(\"Invalid delete command,\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"samuelkwik"},"content":"                    + \" please only state one index to delete\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"samuelkwik"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"samuelkwik"},"content":"        if (!splitString[1].matches(\"\\\\d+\")) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"samuelkwik"},"content":"            throw new ViscountException(\"Invalid delete command, please enter a numerical index\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"samuelkwik"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"samuelkwik"},"content":"        return new DeleteCommand(splitString[1]);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"samuelkwik"},"content":"     * Parses a given input string and returns the corresponding Command object.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"samuelkwik"},"content":"     * This method determines the type of command based on the first word of the","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"samuelkwik"},"content":"     * input and delegates the processing to appropriate handlers.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"samuelkwik"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"samuelkwik"},"content":"     * @param inputString The input string entered by the user, representing a command.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"samuelkwik"},"content":"     * @return A Command object representing the user\u0027s intended action.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"samuelkwik"},"content":"     * @throws ViscountException If the input string format does not match the intended","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"samuelkwik"},"content":"     *                           command","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"samuelkwik"},"content":"    public static Command parse(String inputString) throws ViscountException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"samuelkwik"},"content":"        return switch (inputString.toLowerCase().split(\" \")[0]) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"samuelkwik"},"content":"            case \"todo\" -\u003e handleTodo(inputString);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"samuelkwik"},"content":"            case \"deadline\" -\u003e handleDeadline(inputString);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"samuelkwik"},"content":"            case \"event\" -\u003e handleEvent(inputString);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"samuelkwik"},"content":"            case \"list\" -\u003e new ListCommand();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"samuelkwik"},"content":"            case \"find\" -\u003e handleFind(inputString);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"samuelkwik"},"content":"            case \"bye\" -\u003e new ByeCommand();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"samuelkwik"},"content":"            case \"toggle\" -\u003e handleToggle(inputString);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"samuelkwik"},"content":"            case \"delete\" -\u003e handleDelete(inputString);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"samuelkwik"},"content":"            default -\u003e new UnknownCommand();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"samuelkwik"},"content":"        };","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"samuelkwik"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"samuelkwik":103}},{"path":"src/main/java/viscount/command/ToggleCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelkwik"},"content":"package viscount.command;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelkwik"},"content":"import viscount.Storage;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelkwik"},"content":"import viscount.task.TaskList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelkwik"},"content":"import viscount.TextUi;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelkwik"},"content":"import viscount.ViscountException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelkwik"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelkwik"},"content":" * Represents a command to toggle the completion status of a task at a specified index.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelkwik"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelkwik"},"content":"public class ToggleCommand extends Command {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelkwik"},"content":"    final String indexStr;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelkwik"},"content":"     * Constructs a ToggleCommand with the specified index string.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelkwik"},"content":"     * This command is used to toggle the completion status of a task","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelkwik"},"content":"     * in the task list at the given index.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelkwik"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelkwik"},"content":"     * @param indexStr The string representing the index of the task to toggle.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelkwik"},"content":"    public ToggleCommand(String indexStr) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelkwik"},"content":"        this.indexStr \u003d indexStr;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelkwik"},"content":"     * Executes the toggle command to change the completion status of a task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelkwik"},"content":"     * Parses the index of the task from the provided input, retrieves the task,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelkwik"},"content":"     * toggles its status, and writes the updated task list to storage.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelkwik"},"content":"     * Displays the outcome to the user via the text UI.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelkwik"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelkwik"},"content":"     * @param taskList The TaskList containing all current tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelkwik"},"content":"     * @param textUi   The TextUi for user interaction and displaying messages.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelkwik"},"content":"     * @param storage  The Storage handler for reading and writing tasks to the storage file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelkwik"},"content":"     * @throws ViscountException If there is an issue accessing the storage or toggling the task status.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelkwik"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelkwik"},"content":"    public void execute(TaskList taskList,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelkwik"},"content":"                        TextUi textUi, Storage storage) throws ViscountException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samuelkwik"},"content":"        textUi.displayViscountText(execute(taskList, storage));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samuelkwik"},"content":"    public String execute(TaskList taskList, Storage storage) throws ViscountException {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samuelkwik"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samuelkwik"},"content":"            int index \u003d Integer.parseInt(indexStr);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samuelkwik"},"content":"            String outcome \u003d taskList.toggleTask(index, storage)","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samuelkwik"},"content":"                    .map(task -\u003e \"\\\"\" + task.getDescription()","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samuelkwik"},"content":"                            + \"\\\" marked \" + (task.isDone() ? \"\" : \"in\") + \"complete\")","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samuelkwik"},"content":"                    .orElse(\"TOGGLE: No task found with that index\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samuelkwik"},"content":"            return outcome;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samuelkwik"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samuelkwik"},"content":"            throw new ViscountException(\"TOGGLE: Please enter a valid numerical index\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samuelkwik"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samuelkwik"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"samuelkwik":54}},{"path":"src/main/java/viscount/command/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelkwik"},"content":"package viscount.command;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelkwik"},"content":"import viscount.Storage;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelkwik"},"content":"import viscount.task.Task;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelkwik"},"content":"import viscount.task.TaskList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelkwik"},"content":"import viscount.TextUi;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelkwik"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelkwik"},"content":" * Represents a command that handles invalid or unrecognized user input.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelkwik"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelkwik"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelkwik"},"content":"     * Executes the command for handling invalid or unrecognized user input.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelkwik"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelkwik"},"content":"     * @param taskList The TaskList containing all current tasks. (not used here)","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelkwik"},"content":"     * @param textUi   The TextUi for user interaction and displaying messages.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelkwik"},"content":"     * @param storage  The Storage handler for reading and writing tasks","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelkwik"},"content":"     *                 to the storage file. (not used here)","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelkwik"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelkwik"},"content":"    public void execute(TaskList taskList, TextUi textUi, Storage storage) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelkwik"},"content":"        textUi.displayViscountText(execute(taskList, storage));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelkwik"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelkwik"},"content":"        return \"Sorry I didn\u0027t understand that. Please try again.\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelkwik"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"samuelkwik":28}},{"path":"src/main/java/viscount/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelkwik"},"content":"package viscount.task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelkwik"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelkwik"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelkwik"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelkwik"},"content":" * Represents a task with a specific deadline.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelkwik"},"content":" * A Deadline task extends the functionality of the Task class by including","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelkwik"},"content":" * an additional field to store the date by which the task should be completed.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelkwik"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelkwik"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelkwik"},"content":"    private final LocalDate byDate;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelkwik"},"content":"     * Constructs a Deadline object with a description and a deadline date.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelkwik"},"content":"     * The deadline date is parsed from the provided string representation.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelkwik"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelkwik"},"content":"     * @param description  The description of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelkwik"},"content":"     * @param byDateString The string representation of the date by","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelkwik"},"content":"     *                     which the task needs to be completed.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelkwik"},"content":"     *                     This date is parsed into a LocalDate object.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelkwik"},"content":"     * @throws DateTimeParseException If the provided date string cannot be parsed","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelkwik"},"content":"     *                                to a valid LocalDate.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelkwik"},"content":"    public Deadline(String description,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelkwik"},"content":"                    String byDateString) throws DateTimeParseException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelkwik"},"content":"        super(description);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelkwik"},"content":"        this.byDate \u003d LocalDate.parse(byDateString.trim());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelkwik"},"content":"     * Constructs a Deadline object with the specified description,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelkwik"},"content":"     * completion status, and deadline date.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelkwik"},"content":"     * The deadline date is parsed from the provided string representation.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelkwik"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelkwik"},"content":"     * @param description  The description of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelkwik"},"content":"     * @param isDone       The initial completion status of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelkwik"},"content":"     * @param byDateString The string representation of the date by which","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samuelkwik"},"content":"     *                     the task needs to be completed.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samuelkwik"},"content":"     *                     This date is parsed into a LocalDate object.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samuelkwik"},"content":"     * @throws DateTimeParseException If the provided date string cannot be","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samuelkwik"},"content":"     *                                parsed to a valid LocalDate.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samuelkwik"},"content":"    public Deadline(String description,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samuelkwik"},"content":"                    Boolean isDone, String byDateString) throws DateTimeParseException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samuelkwik"},"content":"        super(description, isDone);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samuelkwik"},"content":"        this.byDate \u003d LocalDate.parse(byDateString.trim());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samuelkwik"},"content":"     * Generates a string representation of the Deadline task in a file-specific format.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samuelkwik"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samuelkwik"},"content":"     * @param seperator The string to use as a delimiter between","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samuelkwik"},"content":"     *                  the components of the representation.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samuelkwik"},"content":"     * @return A string representing the Deadline task in the","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samuelkwik"},"content":"     * required file representation.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samuelkwik"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samuelkwik"},"content":"    public String getFileRepresentation(String seperator) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samuelkwik"},"content":"        return \"D\" + seperator + super.getFileRepresentation(seperator) + seperator + byDate;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"samuelkwik"},"content":"     * Returns a string representation of the Deadline task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"samuelkwik"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"samuelkwik"},"content":"     * @return A string representing the Deadline task,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"samuelkwik"},"content":"     * including its type, completion status, description, and","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"samuelkwik"},"content":"     * deadline date.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"samuelkwik"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"samuelkwik"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"samuelkwik"},"content":"        return \"[D] \" + super.toString() + \" (by \" + byDate + \")\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"samuelkwik"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"samuelkwik":74}},{"path":"src/main/java/viscount/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelkwik"},"content":"package viscount.task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelkwik"},"content":"import viscount.ViscountException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelkwik"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelkwik"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelkwik"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelkwik"},"content":" * Represents a task with a specific start and end date.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelkwik"},"content":" * An Event task extends the functionality of the Task class by including","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelkwik"},"content":" * additional fields to store the commencement and conclusion dates of an Event.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelkwik"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelkwik"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelkwik"},"content":"    private final LocalDate fromDate;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelkwik"},"content":"    private final LocalDate toDate;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelkwik"},"content":"     * Constructs an Evenet object with a description and from and to dates.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelkwik"},"content":"     * The Event dates are parsed from the provided string representations.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelkwik"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelkwik"},"content":"     * @param description    The description of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelkwik"},"content":"     * @param fromDateString The string representation of the date by which the Event starts.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelkwik"},"content":"     *                       This date is parsed into a LocalDate object.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelkwik"},"content":"     * @param toDateString   The string reprsentation of the date by which the Event ends.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelkwik"},"content":"     *                       This date is parsed into a LocalDate object","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelkwik"},"content":"     * @throws DateTimeParseException If the provided date strings cannot be","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelkwik"},"content":"     *                                parsed to a valid LocalDate","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelkwik"},"content":"     *                                or if the end date is before the start date.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelkwik"},"content":"    public Event(String description, String fromDateString,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelkwik"},"content":"                 String toDateString) throws DateTimeParseException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelkwik"},"content":"        super(description);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelkwik"},"content":"        fromDate \u003d LocalDate.parse(fromDateString.trim());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelkwik"},"content":"        toDate \u003d LocalDate.parse(toDateString.trim());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelkwik"},"content":"        if (fromDate.isAfter(toDate)) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelkwik"},"content":"            throw new ViscountException(\"Event Creation Failed: From Date is after To Date\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelkwik"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samuelkwik"},"content":"     * Constructs an Event object with the specified description, completion status, and start/end dates.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samuelkwik"},"content":"     * The Event dates are parsed from the provided string representations.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samuelkwik"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samuelkwik"},"content":"     * @param description    The description of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samuelkwik"},"content":"     * @param isDone         The initial completion status of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samuelkwik"},"content":"     * @param fromDateString The string representation of the date by which the Event starts.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samuelkwik"},"content":"     *                       This date is parsed into a LocalDate object.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samuelkwik"},"content":"     * @param toDateString   The string reprsentation of the date by which the Event ends.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samuelkwik"},"content":"     *                       This date is parsed into a LocalDate ob ject","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samuelkwik"},"content":"     * @throws DateTimeParseException If the provided date strings cannot be parsed to a valid LocalDate","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samuelkwik"},"content":"     *                                or if the end date is before the start date.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samuelkwik"},"content":"    public Event(String description, Boolean isDone,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samuelkwik"},"content":"                 String fromDateString, String toDateString) throws DateTimeParseException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samuelkwik"},"content":"        super(description, isDone);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samuelkwik"},"content":"        fromDate \u003d LocalDate.parse(fromDateString.trim());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samuelkwik"},"content":"        toDate \u003d LocalDate.parse(toDateString.trim());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samuelkwik"},"content":"        if (fromDate.isAfter(toDate)) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samuelkwik"},"content":"            throw new ViscountException(\"Event Creation Failed: From Date is after To Date\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samuelkwik"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"samuelkwik"},"content":"     * Generates a string representation of the Event task in a file-specific format.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"samuelkwik"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"samuelkwik"},"content":"     * @param seperator The string to use as a delimiter between the components of the representation.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"samuelkwik"},"content":"     * @return A string representing the Event task in the required file representation.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"samuelkwik"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"samuelkwik"},"content":"    public String getFileRepresentation(String seperator) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"samuelkwik"},"content":"        return \"E\" + seperator + super.getFileRepresentation(seperator)","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"samuelkwik"},"content":"                + seperator + fromDate + seperator + toDate;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"samuelkwik"},"content":"     * Returns a string representation of the Event task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"samuelkwik"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"samuelkwik"},"content":"     * @return A string representing the Event task, including its type, completion status,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"samuelkwik"},"content":"     * description, and start/end dates.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"samuelkwik"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"samuelkwik"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"samuelkwik"},"content":"        return \"[E] \" + super.toString() + \" (from \" + fromDate + \" to \" + toDate + \")\";","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"samuelkwik"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"samuelkwik":86}},{"path":"src/main/java/viscount/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelkwik"},"content":"package viscount.task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelkwik"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelkwik"},"content":" * Represents a task with a description and a completion status.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelkwik"},"content":" * A task can be marked as done or undone, and its description is immutable.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelkwik"},"content":" * This class serves as the base class for more specialized task types.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelkwik"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelkwik"},"content":"public class Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelkwik"},"content":"    private final String description;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelkwik"},"content":"    private Boolean isDone;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelkwik"},"content":"     * Creates a new Task with the specified description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelkwik"},"content":"     * The description is trimmed to remove leading and trailing whitespace,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelkwik"},"content":"     * and the task is initialized to an undone state by default.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelkwik"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelkwik"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelkwik"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelkwik"},"content":"        this.description \u003d description.trim();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelkwik"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelkwik"},"content":"     * Constructs a Task object with the specified description and completion status.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelkwik"},"content":"     * The description is automatically trimmed of leading and trailing whitespace.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelkwik"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelkwik"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelkwik"},"content":"     * @param isDone      The initial completion status of the task, where true signifies the task is done.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelkwik"},"content":"    public Task(String description, Boolean isDone) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelkwik"},"content":"        this.description \u003d description.trim();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelkwik"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelkwik"},"content":"     * Toggles the completion status of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelkwik"},"content":"     * If the task is currently marked as done, it will be marked as not done.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samuelkwik"},"content":"     * If the task is currently marked as not done, it will be marked as done.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samuelkwik"},"content":"    public void toggleDone() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samuelkwik"},"content":"        this.isDone \u003d !this.isDone;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samuelkwik"},"content":"     * Checks the completion status of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samuelkwik"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samuelkwik"},"content":"     * @return true if the task is marked as done, false otherwise.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samuelkwik"},"content":"    public Boolean isDone() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samuelkwik"},"content":"        return this.isDone;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samuelkwik"},"content":"     * Retrieves the description of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samuelkwik"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samuelkwik"},"content":"     * @return The description of the task as a string.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samuelkwik"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samuelkwik"},"content":"        return this.description;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"samuelkwik"},"content":"     * Generates a file representation of the task object in a specified format using a separator.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"samuelkwik"},"content":"     * The representation includes the completion status of the task and its description, separated by the provided","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"samuelkwik"},"content":"     * delimiter.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"samuelkwik"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"samuelkwik"},"content":"     * @param seperator The string to use as the delimiter between the completion status and the task description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"samuelkwik"},"content":"     * @return A string representing the task in file format, formatted as \"completion_status separator description\".","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"samuelkwik"},"content":"    public String getFileRepresentation(String seperator) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"samuelkwik"},"content":"        return (this.isDone ? \"X\" : \" \") + seperator + this.description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"samuelkwik"},"content":"     * Returns a string representation of the task, including its completion status","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"samuelkwik"},"content":"     * and description. The completion status is denoted by \"[x]\" if the task is done,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"samuelkwik"},"content":"     * and \"[ ]\" if it is not done, followed by the task description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"samuelkwik"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"samuelkwik"},"content":"     * @return A string representing the task, with its completion status and description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"samuelkwik"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"samuelkwik"},"content":"        return (this.isDone ? \"[x]\" : \"[ ]\") + \" \" + this.description;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"samuelkwik"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"samuelkwik":85}},{"path":"src/main/java/viscount/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelkwik"},"content":"package viscount.task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelkwik"},"content":"import viscount.Storage;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelkwik"},"content":"import viscount.ViscountException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelkwik"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelkwik"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelkwik"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelkwik"},"content":"import java.util.Optional;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelkwik"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelkwik"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelkwik"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelkwik"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelkwik"},"content":" * The TaskList class is responsible for managing a list of tasks in memory,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelkwik"},"content":" * providing functionality to add, remove, toggle, or retrieve tasks, and","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelkwik"},"content":" * ensuring synchronization with the provided storage file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelkwik"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelkwik"},"content":" * This class represents various task types and facilitates operations for","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelkwik"},"content":" * task persistence, modification, and retrieval.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelkwik"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelkwik"},"content":"public class TaskList {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelkwik"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelkwik"},"content":"    private final String filePath;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelkwik"},"content":"    private static String SEPERATOR \u003d \" | \";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelkwik"},"content":"     * Constructs a TaskList object that initializes an empty task list","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelkwik"},"content":"     * and sets the file path for storage.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelkwik"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelkwik"},"content":"     * @param filePath The file path used for task storage and retrieval.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelkwik"},"content":"    public TaskList(String filePath) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelkwik"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelkwik"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samuelkwik"},"content":"     * Initializes the task list by reading stored task data from the provided storage and","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samuelkwik"},"content":"     * populating the task list. If the storage does not contain a valid saved task file,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samuelkwik"},"content":"     * it handles the scenario by attempting file creation via the storage\u0027s handling mechanism.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samuelkwik"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samuelkwik"},"content":"     * @param storage The storage object used to read tasks data from and handle file-related operations.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samuelkwik"},"content":"     * @throws ViscountException If no valid saved task file is found or if an error occurs while","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samuelkwik"},"content":"     *                           processing the stored task data.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samuelkwik"},"content":"    public void initialize(Storage storage) throws ViscountException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samuelkwik"},"content":"        ArrayList\u003cString\u003e tempList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samuelkwik"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samuelkwik"},"content":"            tempList \u003d storage.readFromStorage();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samuelkwik"},"content":"            addFromList(tempList);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samuelkwik"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samuelkwik"},"content":"            storage.handleFileNotFound();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samuelkwik"},"content":"            throw new ViscountException(\"No existing saved task file found\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samuelkwik"},"content":"        } catch (ViscountException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samuelkwik"},"content":"            throw new ViscountException(\"Saved tasks file corrupted: \" + e.getMessage());","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samuelkwik"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samuelkwik"},"content":"     * Adds a task to the task list and updates the storage with","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"samuelkwik"},"content":"     * the updated task list. If an error occurs during the","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"samuelkwik"},"content":"     * writing process, the task list is restored to its initial","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"samuelkwik"},"content":"     * state and an exception is thrown.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"samuelkwik"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"samuelkwik"},"content":"     * @param task    The task to be added to the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"samuelkwik"},"content":"     * @param storage The storage object used to write the updated task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"samuelkwik"},"content":"     * @throws ViscountException If there is an issue writing to the storage.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"samuelkwik"},"content":"    public void addTask(Task task, Storage storage) throws ViscountException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"samuelkwik"},"content":"        ArrayList\u003cTask\u003e tempList \u003d new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"samuelkwik"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"samuelkwik"},"content":"            tasks.add(task);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"samuelkwik"},"content":"            storage.writeToStorage(getTasksFileRepresentation().orElse(\"\"));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"samuelkwik"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"samuelkwik"},"content":"            tasks \u003d tempList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"samuelkwik"},"content":"            throw new ViscountException(\"Add task FAILED: file is busy\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"samuelkwik"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"samuelkwik"},"content":"    private void addFromList(ArrayList\u003cString\u003e list) throws ViscountException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"samuelkwik"},"content":"        if (list.isEmpty()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"samuelkwik"},"content":"            return;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"samuelkwik"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"samuelkwik"},"content":"        for (String s : list) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"samuelkwik"},"content":"            addTaskFromFileRepresentation(s);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"samuelkwik"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"samuelkwik"},"content":"    private void addTaskFromFileRepresentation(String taskString) throws ViscountException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"samuelkwik"},"content":"        String[] taskParts \u003d taskString.split(Pattern.quote(SEPERATOR));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"samuelkwik"},"content":"        if (taskParts.length \u003d\u003d 3 \u0026\u0026 taskParts[0].equals(\"T\")) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"samuelkwik"},"content":"            tasks.add(new ToDo(taskParts[2], taskParts[1].contains(\"X\")));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"samuelkwik"},"content":"        } else if (taskParts.length \u003d\u003d 4 \u0026\u0026 taskParts[0].equals(\"D\")) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"samuelkwik"},"content":"            tasks.add(new Deadline(taskParts[2], taskParts[1].contains(\"X\"), taskParts[3]));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"samuelkwik"},"content":"        } else if (taskParts.length \u003d\u003d 5 \u0026\u0026 taskParts[0].equals(\"E\")) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"samuelkwik"},"content":"            tasks.add(new Event(taskParts[2],","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"samuelkwik"},"content":"                    taskParts[1].contains(\"X\"), taskParts[3], taskParts[4]));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"samuelkwik"},"content":"        } else {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"samuelkwik"},"content":"            throw new ViscountException(\"Invalid task string format: \" + taskString);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"samuelkwik"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"samuelkwik"},"content":"     * Toggles the completion status of a task at a specified index in the task list","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"samuelkwik"},"content":"     * and updates the storage to reflect the changes. If an error occurs while","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"samuelkwik"},"content":"     * updating the storage, the task\u0027s state is reverted to its original state.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"samuelkwik"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"samuelkwik"},"content":"     * @param index   The 1-based index of the task to toggle in the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"samuelkwik"},"content":"     * @param storage The storage object used to write the updated task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"samuelkwik"},"content":"     * @return An {@code Optional} containing the modified task if the index is","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"samuelkwik"},"content":"     * valid and the operation is successful. Otherwise, returns an empty","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"samuelkwik"},"content":"     * {@code Optional}.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"samuelkwik"},"content":"     * @throws ViscountException If the operation fails due to storage write issues.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"samuelkwik"},"content":"    public Optional\u003cTask\u003e toggleTask(int index, Storage storage) throws ViscountException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"samuelkwik"},"content":"        if (index \u003e tasks.size() || index \u003c 1) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"samuelkwik"},"content":"            return Optional.empty();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"samuelkwik"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"samuelkwik"},"content":"        tasks.get(index - 1).toggleDone();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"samuelkwik"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"samuelkwik"},"content":"            storage.writeToStorage(getTasksFileRepresentation().orElse(\"\"));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"samuelkwik"},"content":"            return Optional.of(tasks.get(index - 1));","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"samuelkwik"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"samuelkwik"},"content":"            tasks.get(index - 1).toggleDone();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"samuelkwik"},"content":"            throw new ViscountException(\"Toggle task failed: File is busy\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"samuelkwik"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"samuelkwik"},"content":"     * Retrieves a task from the task list at the specified 1-based index.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"samuelkwik"},"content":"     * If the index is out of range, an empty {@code Optional} is returned.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"samuelkwik"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"samuelkwik"},"content":"     * @param index The 1-based index of the task to retrieve from the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"samuelkwik"},"content":"     * @return An {@code Optional} containing the task if the index is valid.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"samuelkwik"},"content":"     * Otherwise, returns an empty {@code Optional}.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"samuelkwik"},"content":"    public Optional\u003cTask\u003e getTask(int index) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"samuelkwik"},"content":"        if (index \u003e tasks.size() || index \u003c 1) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"samuelkwik"},"content":"            return Optional.empty();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"samuelkwik"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"samuelkwik"},"content":"        return Optional.of(tasks.get(index - 1));","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"samuelkwik"},"content":"     * Generates a string representation of the task list with each task indexed and formatted.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"samuelkwik"},"content":"     * If the task list is empty, returns an empty {@code Optional}.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"samuelkwik"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"samuelkwik"},"content":"     * @return An {@code Optional\u003cString\u003e} containing the formatted and indexed task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"samuelkwik"},"content":"     * Returns an empty {@code Optional} if the task list is empty.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"samuelkwik"},"content":"    public Optional\u003cString\u003e getTasksString() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"samuelkwik"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"samuelkwik"},"content":"            return Optional.empty();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"samuelkwik"},"content":"        } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"samuelkwik"},"content":"            Optional\u003cString\u003e taskListString \u003d getTasksStreamWithIndex()","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"samuelkwik"},"content":"                    .reduce((s1, s2) -\u003e s1 + \"\\n\" + s2);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"samuelkwik"},"content":"            return taskListString;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"samuelkwik"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"samuelkwik"},"content":"     * Generates a stream of strings representing each task in the task list, including its 1-based index","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"samuelkwik"},"content":"     * and formatted display information. Each task is prefixed with a tab and its index, followed by","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"samuelkwik"},"content":"     * its string representation.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"samuelkwik"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"samuelkwik"},"content":"     * @return A {@code Stream\u003cString\u003e} where each string represents a task, formatted with an index","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"samuelkwik"},"content":"     * and its string representation, or an empty stream if the task list is empty.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"samuelkwik"},"content":"    public Stream\u003cString\u003e getTasksStreamWithIndex() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"samuelkwik"},"content":"        Stream\u003cString\u003e tasksStream \u003d IntStream.range(0, tasks.size())","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"samuelkwik"},"content":"                .mapToObj(i -\u003e \"  \" + (i + 1) + \". \" + tasks.get(i).toString());","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"samuelkwik"},"content":"        return tasksStream;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"samuelkwik"},"content":"     * Generates a string representation of all tasks in the task list suitable for file storage,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"samuelkwik"},"content":"     * with each task\u0027s file representation separated by newlines. The file representation","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"samuelkwik"},"content":"     * of each task is generated using a specified separator.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"samuelkwik"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"samuelkwik"},"content":"     * @return An {@code Optional\u003cString\u003e} containing the file representation of the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"samuelkwik"},"content":"     * If the task list is empty, an empty {@code Optional} is returned.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"samuelkwik"},"content":"    public Optional\u003cString\u003e getTasksFileRepresentation() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"samuelkwik"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"samuelkwik"},"content":"            return Optional.empty();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"samuelkwik"},"content":"        } else {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"samuelkwik"},"content":"            return tasks.stream()","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"samuelkwik"},"content":"                    .map(task -\u003e task.getFileRepresentation(SEPERATOR))","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"samuelkwik"},"content":"                    .reduce((s1, s2) -\u003e s1 + \"\\n\" + s2);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"samuelkwik"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"samuelkwik"},"content":"     * Deletes a task at the specified index from the task list and updates the storage","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"samuelkwik"},"content":"     * to reflect the changes. If the storage update fails, the task list reverts to","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"samuelkwik"},"content":"     * its initial state before the delete operation. If the specified index is invalid,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"samuelkwik"},"content":"     * an exception is thrown.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"samuelkwik"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"samuelkwik"},"content":"     * @param index   The 1-based index of the task to delete from the list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"samuelkwik"},"content":"     * @param storage The storage object used to update the task list after deletion.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"samuelkwik"},"content":"     * @return An {@code Optional} containing the deleted task if the operation is successful.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"samuelkwik"},"content":"     * Otherwise, returns an empty {@code Optional}.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"samuelkwik"},"content":"     * @throws ViscountException If the operation fails due to an invalid index or storage write issue.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"samuelkwik"},"content":"    public Optional\u003cTask\u003e deleteTask(int index, Storage storage) throws ViscountException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"samuelkwik"},"content":"        Optional\u003cTask\u003e deletedTask \u003d getTask(index);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"samuelkwik"},"content":"        ArrayList\u003cTask\u003e tempList \u003d new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"samuelkwik"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"samuelkwik"},"content":"            tasks.remove(index - 1);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"samuelkwik"},"content":"            storage.writeToStorage(getTasksFileRepresentation().orElse(\"\"));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"samuelkwik"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"samuelkwik"},"content":"            tasks \u003d tempList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"samuelkwik"},"content":"            throw new ViscountException(\"Delete task FAILED: file is busy\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"samuelkwik"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"samuelkwik"},"content":"            throw new ViscountException(\"DELETE: Invalid task index: \" + index);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"samuelkwik"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"samuelkwik"},"content":"        return deletedTask;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"samuelkwik"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"samuelkwik":221}},{"path":"src/main/java/viscount/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelkwik"},"content":"package viscount.task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelkwik"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelkwik"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelkwik"},"content":" * Represents a general task","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelkwik"},"content":" * A ToDo task extends the functionality of the Task class.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelkwik"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelkwik"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelkwik"},"content":"     * Constructs a ToDo object with a description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelkwik"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelkwik"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelkwik"},"content":"    public ToDo(String description) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelkwik"},"content":"        super(description);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelkwik"},"content":"     * Constructs a ToDo object with a description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelkwik"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelkwik"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelkwik"},"content":"     * @param isDone      The initial completion status of the ToDo","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelkwik"},"content":"    public ToDo(String description, Boolean isDone) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelkwik"},"content":"        super(description, isDone);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelkwik"},"content":"     * Generates a string representation of the ToDo task in a file-specific format.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelkwik"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelkwik"},"content":"     * @param seperator The string to use as a delimiter between","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelkwik"},"content":"     *                  the components of the representation.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelkwik"},"content":"     * @return A string representing the ToDo task in the","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelkwik"},"content":"     * required file representation.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelkwik"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samuelkwik"},"content":"    public String getFileRepresentation(String seperator) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samuelkwik"},"content":"        return \"T\" + seperator + super.getFileRepresentation(seperator);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samuelkwik"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samuelkwik"},"content":"     * Returns a string representation of the ToDo task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samuelkwik"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samuelkwik"},"content":"     * @return A string representing the ToDo task,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samuelkwik"},"content":"     * including its type, completion status and description","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samuelkwik"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samuelkwik"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samuelkwik"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samuelkwik"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samuelkwik"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"samuelkwik":54}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"samuelkwik"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelkwik"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelkwik"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelkwik"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelkwik"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelkwik"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelkwik"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelkwik"},"content":"    \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelkwik"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelkwik"},"content":"            \u003cInsets left\u003d\"7.0\" right\u003d\"7.0\" /\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelkwik"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelkwik"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelkwik"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelkwik"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelkwik"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelkwik"},"content":"  \u003c/children\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelkwik"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelkwik"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelkwik"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelkwik"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"samuelkwik":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"samuelkwik"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelkwik"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelkwik"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelkwik"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelkwik"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelkwik"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelkwik"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelkwik"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelkwik"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelkwik"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"viscount.MainWindow\"\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelkwik"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelkwik"},"content":"      \u003cLabel alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" prefHeight\u003d\"52.0\" prefWidth\u003d\"400.0\" text\u003d\"Viscount\" textAlignment\u003d\"CENTER\" textFill\u003d\"#329e81\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelkwik"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelkwik"},"content":"            \u003cInsets bottom\u003d\"12.0\" left\u003d\"12.0\" right\u003d\"12.0\" top\u003d\"12.0\" /\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelkwik"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelkwik"},"content":"         \u003cfont\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelkwik"},"content":"            \u003cFont name\u003d\"System Bold Italic\" size\u003d\"19.0\" /\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelkwik"},"content":"         \u003c/font\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelkwik"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelkwik"},"content":"      \u003cAnchorPane prefHeight\u003d\"200.0\" prefWidth\u003d\"400.0\" AnchorPane.bottomAnchor\u003d\"46.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"46.0\"\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelkwik"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelkwik"},"content":"              \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"512.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelkwik"},"content":"                  \u003ccontent\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelkwik"},"content":"                      \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"469.0\" prefWidth\u003d\"387.0\" /\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelkwik"},"content":"                  \u003c/content\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelkwik"},"content":"              \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelkwik"},"content":"         \u003c/children\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelkwik"},"content":"      \u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelkwik"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"10.4\" layoutY\u003d\"555.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"42.0\" prefWidth\u003d\"316.0\" promptText\u003d\"Chat message\" AnchorPane.bottomAnchor\u003d\"4.0\" AnchorPane.leftAnchor\u003d\"4.0\" AnchorPane.rightAnchor\u003d\"50.0\" AnchorPane.topAnchor\u003d\"553.6\"\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelkwik"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelkwik"},"content":"            \u003cInsets top\u003d\"6.0\" /\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelkwik"},"content":"         \u003c/padding\u003e\u003c/TextField\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelkwik"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"555.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"42.0\" prefWidth\u003d\"42.0\" text\u003d\"\u0026gt;\" AnchorPane.bottomAnchor\u003d\"4.0\" AnchorPane.rightAnchor\u003d\"4.0\" /\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelkwik"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelkwik"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"samuelkwik":37}},{"path":"src/test/java/viscount/command/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelkwik"},"content":"package viscount.command;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelkwik"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelkwik"},"content":"import viscount.ViscountException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelkwik"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelkwik"},"content":"public class ParserTest {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelkwik"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelkwik"},"content":"    public void testHandleToggleValidInput() throws ViscountException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelkwik"},"content":"        // Valid input: toggle 1","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelkwik"},"content":"        Command command \u003d Parser.parse(\"toggle 1\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelkwik"},"content":"        assertTrue(command instanceof ToggleCommand);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelkwik"},"content":"        assertEquals(\"1\", ((ToggleCommand) command).indexStr);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelkwik"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelkwik"},"content":"    public void testHandleToggleInvalidInput_MissingIndex() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelkwik"},"content":"        // Invalid input: toggle without index","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelkwik"},"content":"        ViscountException exception \u003d assertThrows(ViscountException.class, () -\u003e {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelkwik"},"content":"            Parser.parse(\"toggle\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelkwik"},"content":"        });","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelkwik"},"content":"        assertEquals(\"Invalid toggle command, please only state one index to toggle\", exception.getMessage());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelkwik"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelkwik"},"content":"    public void testHandleToggleInvalidInput_ExtraArguments() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelkwik"},"content":"        // Invalid input: toggle 1 2","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelkwik"},"content":"        ViscountException exception \u003d assertThrows(ViscountException.class, () -\u003e {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelkwik"},"content":"            Parser.parse(\"toggle 1 2\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelkwik"},"content":"        });","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelkwik"},"content":"        assertEquals(\"Invalid toggle command, please only state one index to toggle\", exception.getMessage());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelkwik"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelkwik"},"content":"    public void testHandleToggleInvalidInput_NonNumericIndex() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samuelkwik"},"content":"        // Invalid input: toggle abc","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samuelkwik"},"content":"        ViscountException exception \u003d assertThrows(ViscountException.class, () -\u003e {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samuelkwik"},"content":"            Parser.parse(\"toggle abc\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samuelkwik"},"content":"        });","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samuelkwik"},"content":"        assertEquals(\"Invalid toggle command, please enter a numerical index\", exception.getMessage());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samuelkwik"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"samuelkwik":45}},{"path":"src/test/java/viscount/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelkwik"},"content":"package viscount.task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelkwik"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelkwik"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelkwik"},"content":"public class ToDoTest {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelkwik"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelkwik"},"content":"    public void testToDoToString() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelkwik"},"content":"        // Test toString() for am incomplete ToDo","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelkwik"},"content":"        ToDo todo \u003d new ToDo(\"Description\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelkwik"},"content":"        assertEquals(\"[T] [ ] Description\", todo.toString());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelkwik"},"content":"        // Test toString() for a completed ToDo","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelkwik"},"content":"        ToDo completedToDo \u003d new ToDo(\"Description\", true);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelkwik"},"content":"        assertEquals(\"[T] [x] Description\", completedToDo.toString());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelkwik"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelkwik"},"content":"    public void testGetFileRepresentation() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelkwik"},"content":"        // Test file representation for an incomplete ToDo","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelkwik"},"content":"        ToDo todo \u003d new ToDo(\"Description\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelkwik"},"content":"        assertEquals(\"T |   | Description\", todo.getFileRepresentation(\" | \"));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelkwik"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelkwik"},"content":"        // Test file representation for completed ToDo","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelkwik"},"content":"        ToDo completedToDo \u003d new ToDo(\"Description\", true);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelkwik"},"content":"        assertEquals(\"T | X | Description\", completedToDo.getFileRepresentation(\" | \"));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelkwik"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelkwik"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"samuelkwik":30}},{"path":"text-ui-test/.data/saved_tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"samuelkwik"},"content":"T |   | Todo with Spaces","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelkwik"},"content":"D |   | deadline case insensitive with   spaces | 2025-03-01","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelkwik"},"content":"E |   | event case insensitive with    spaces | 2026-04-01 | 2026-08-09","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"samuelkwik":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"samuelkwik"},"content":"Test","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelkwik"},"content":"list","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelkwik"},"content":"delete 3","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelkwik"},"content":"delete 2","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelkwik"},"content":"delete 1","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelkwik"},"content":"todo","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelkwik"},"content":"todo Todo with Spaces","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelkwik"},"content":"DeadliNe deadline case insensitive with   spaces /by 2025-03-01","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelkwik"},"content":"Deadline bad deadline","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelkwik"},"content":"EveNt event case insensitive with    spaces /from 2026-04-01 /to 2026-08-09","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelkwik"},"content":"Event bad event","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelkwik"},"content":"list","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelkwik"},"content":"toggle 0","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelkwik"},"content":"toggle 1","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelkwik"},"content":"toggle 2","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelkwik"},"content":"toggle 3","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelkwik"},"content":"list","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelkwik"},"content":"toggle 3","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelkwik"},"content":"toggle 2","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelkwik"},"content":"toggle 1","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelkwik"},"content":"list","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelkwik"},"content":"delete 4","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelkwik"},"content":"list","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelkwik"},"content":"delete 3","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelkwik"},"content":"list","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelkwik"},"content":"delete 2","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelkwik"},"content":"delete 1","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelkwik"},"content":"list","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelkwik"},"content":"todo Todo with Spaces","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelkwik"},"content":"DeadliNe deadline case insensitive with   spaces /by 2025-03-01","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelkwik"},"content":"EveNt event case insensitive with    spaces /from 2026-04-01 /to 2026-08-09","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelkwik"},"content":"list","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelkwik"},"content":"bye","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"samuelkwik":33}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelkwik"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\viscount\\*.java","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelkwik"},"content":"java -classpath ..\\bin viscount.Viscount \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"samuelkwik":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelkwik"},"content":"java -classpath ../bin Viscount \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"samuelkwik":1,"-":37}}]
