[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sreelakshmiharidos"},"content":"    mainClass.set(\"gilu.Gilu\")","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sreelakshmiharidos"},"content":"    archiveBaseName \u003d \"gilu\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"sreelakshmiharidos":2,"-":39}},{"path":"src/main/java/gilu/Gilu.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sreelakshmiharidos"},"content":"package gilu;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sreelakshmiharidos"},"content":"import gilu.exception.GiluException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sreelakshmiharidos"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sreelakshmiharidos"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sreelakshmiharidos"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sreelakshmiharidos"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sreelakshmiharidos"},"content":" * Gilu is a chatbot that helps manage tasks.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sreelakshmiharidos"},"content":" * Tasks are stored persistently using file-based storage.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sreelakshmiharidos"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sreelakshmiharidos"},"content":"public class Gilu {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sreelakshmiharidos"},"content":"    private static final String DEFAULT_STORAGE_PATH \u003d \"./data/gilu.txt\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sreelakshmiharidos"},"content":"    private final Storage storage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sreelakshmiharidos"},"content":"    private final TaskList tasks;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sreelakshmiharidos"},"content":"    private final Ui ui;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sreelakshmiharidos"},"content":"    private final Parser parser;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Constructs a Gilu chatbot instance with the given storage path.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sreelakshmiharidos"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param filePath The file path to store tasks.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sreelakshmiharidos"},"content":"    public Gilu(String filePath) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sreelakshmiharidos"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sreelakshmiharidos"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sreelakshmiharidos"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sreelakshmiharidos"},"content":"        TaskList loadedTasks;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sreelakshmiharidos"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sreelakshmiharidos"},"content":"            loadedTasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sreelakshmiharidos"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sreelakshmiharidos"},"content":"            ui.showMessage(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sreelakshmiharidos"},"content":"            loadedTasks \u003d new TaskList();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sreelakshmiharidos"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sreelakshmiharidos"},"content":"        tasks \u003d loadedTasks;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Runs the chatbot, handling user input and executing commands.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"sreelakshmiharidos"},"content":"    public void run() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"sreelakshmiharidos"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"sreelakshmiharidos"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"sreelakshmiharidos"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"sreelakshmiharidos"},"content":"        while (isRunning) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"sreelakshmiharidos"},"content":"            String input \u003d scanner.nextLine().trim();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"sreelakshmiharidos"},"content":"            try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"sreelakshmiharidos"},"content":"                isRunning \u003d parser.executeCommand(input, tasks, ui, storage);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"sreelakshmiharidos"},"content":"            } catch (GiluException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"sreelakshmiharidos"},"content":"                ui.showMessage(e.getMessage());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"sreelakshmiharidos"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"sreelakshmiharidos"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"sreelakshmiharidos"},"content":"        scanner.close();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"sreelakshmiharidos"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"sreelakshmiharidos"},"content":"        String storagePath \u003d (args.length \u003e 0) ? args[0] : DEFAULT_STORAGE_PATH;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"sreelakshmiharidos"},"content":"        // If a test file is used, clear it before loading tasks","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"sreelakshmiharidos"},"content":"        if (args.length \u003e 0) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"sreelakshmiharidos"},"content":"            try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"sreelakshmiharidos"},"content":"                new FileWriter(storagePath, false).close(); // Truncate test file","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"sreelakshmiharidos"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"sreelakshmiharidos"},"content":"                System.out.println(\"Error clearing test file: \" + e.getMessage());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"sreelakshmiharidos"},"content":"            }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"sreelakshmiharidos"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"sreelakshmiharidos"},"content":"        new Gilu(storagePath).run();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"sreelakshmiharidos"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"sreelakshmiharidos":74}},{"path":"src/main/java/gilu/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sreelakshmiharidos"},"content":"package gilu;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sreelakshmiharidos"},"content":"import gilu.command.Command;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sreelakshmiharidos"},"content":"import gilu.exception.GiluException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sreelakshmiharidos"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sreelakshmiharidos"},"content":" * Parses user input and executes the corresponding commands.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sreelakshmiharidos"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sreelakshmiharidos"},"content":"public class Parser {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Executes a command based on user input.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sreelakshmiharidos"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param input    The user input command.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param tasks    The TaskList object managing tasks.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param ui       The Ui object handling user interactions.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param storage  The Storage object for saving/loading tasks.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @return True if the chatbot should continue running, false if it should exit.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @throws GiluException If the command is invalid or an error occurs.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sreelakshmiharidos"},"content":"    public boolean executeCommand(String input, TaskList tasks, Ui ui, Storage storage) throws GiluException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sreelakshmiharidos"},"content":"        Command command \u003d Command.fromInput(input);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sreelakshmiharidos"},"content":"        switch (command) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sreelakshmiharidos"},"content":"            case LIST:","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sreelakshmiharidos"},"content":"                tasks.printTasks(ui);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sreelakshmiharidos"},"content":"                break;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sreelakshmiharidos"},"content":"            case LIST_DATE:","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sreelakshmiharidos"},"content":"                tasks.listTasksOnDate(input, ui);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sreelakshmiharidos"},"content":"                break;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sreelakshmiharidos"},"content":"            case TODO:","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sreelakshmiharidos"},"content":"                tasks.addTodo(input.substring(4).trim(), ui, storage);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sreelakshmiharidos"},"content":"                break;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sreelakshmiharidos"},"content":"            case DEADLINE:","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sreelakshmiharidos"},"content":"                tasks.addDeadline(input.substring(8).trim(), ui, storage);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sreelakshmiharidos"},"content":"                break;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sreelakshmiharidos"},"content":"            case EVENT:","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sreelakshmiharidos"},"content":"                tasks.addEvent(input.substring(5).trim(), ui, storage);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sreelakshmiharidos"},"content":"                break;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sreelakshmiharidos"},"content":"            case MARK:","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"sreelakshmiharidos"},"content":"                tasks.markTask(input, ui, storage);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"sreelakshmiharidos"},"content":"                break;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"sreelakshmiharidos"},"content":"            case UNMARK:","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"sreelakshmiharidos"},"content":"                tasks.unmarkTask(input, ui, storage);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"sreelakshmiharidos"},"content":"                break;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"sreelakshmiharidos"},"content":"            case DELETE:","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"sreelakshmiharidos"},"content":"                tasks.deleteTask(input, ui, storage);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"sreelakshmiharidos"},"content":"                break;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"sreelakshmiharidos"},"content":"            case FIND:","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"sreelakshmiharidos"},"content":"                if (input.length() \u003c\u003d 5) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"sreelakshmiharidos"},"content":"                    throw new GiluException(\"Oops! Please specify a keyword to search.\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"sreelakshmiharidos"},"content":"                }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"sreelakshmiharidos"},"content":"                tasks.findTasks(input.substring(5).trim(), ui);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"sreelakshmiharidos"},"content":"                break;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"sreelakshmiharidos"},"content":"            case EXIT:","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"sreelakshmiharidos"},"content":"                ui.showMessage(\" Bye for now! But I hope to see you again soon!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"sreelakshmiharidos"},"content":"                return false;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"sreelakshmiharidos"},"content":"            default:","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"sreelakshmiharidos"},"content":"                throw new GiluException(\"Uh-oh! I didn’t get that. Try \u0027list\u0027, \u0027todo\u0027, \u0027deadline\u0027, \u0027event\u0027, or \u0027delete\u0027.\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"sreelakshmiharidos"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"sreelakshmiharidos"},"content":"        return true;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"sreelakshmiharidos"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"sreelakshmiharidos":64}},{"path":"src/main/java/gilu/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sreelakshmiharidos"},"content":"package gilu;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sreelakshmiharidos"},"content":"import gilu.task.Deadline;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sreelakshmiharidos"},"content":"import gilu.task.Event;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sreelakshmiharidos"},"content":"import gilu.task.Task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sreelakshmiharidos"},"content":"import gilu.task.Todo;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sreelakshmiharidos"},"content":"import java.io.*;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sreelakshmiharidos"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sreelakshmiharidos"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sreelakshmiharidos"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sreelakshmiharidos"},"content":"import java.util.List;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sreelakshmiharidos"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sreelakshmiharidos"},"content":" * Handles saving and loading of tasks to/from the disk.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sreelakshmiharidos"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sreelakshmiharidos"},"content":"public class Storage {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sreelakshmiharidos"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sreelakshmiharidos"},"content":"    private final String filePath;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Constructs a Storage object with the given file path.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sreelakshmiharidos"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param filePath The file path where tasks are stored.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sreelakshmiharidos"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sreelakshmiharidos"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sreelakshmiharidos"},"content":"        ensureFileExists();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Ensures that the storage file and its directories exist.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sreelakshmiharidos"},"content":"    private void ensureFileExists() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sreelakshmiharidos"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sreelakshmiharidos"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sreelakshmiharidos"},"content":"            if (!file.exists()) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sreelakshmiharidos"},"content":"                file.getParentFile().mkdirs(); // Create directories if needed","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sreelakshmiharidos"},"content":"                file.createNewFile(); // Create file","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sreelakshmiharidos"},"content":"            }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"sreelakshmiharidos"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"sreelakshmiharidos"},"content":"            System.out.println(\"Error creating storage file: \" + e.getMessage());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"sreelakshmiharidos"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Loads tasks from the file. If the file does not exist, an empty list is returned.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"sreelakshmiharidos"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @return A list of tasks loaded from the file.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"sreelakshmiharidos"},"content":"    public List\u003cTask\u003e loadTasks() throws IOException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"sreelakshmiharidos"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"sreelakshmiharidos"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"sreelakshmiharidos"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"sreelakshmiharidos"},"content":"            return tasks; // Return empty list if file does not exist","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"sreelakshmiharidos"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"sreelakshmiharidos"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"sreelakshmiharidos"},"content":"            String line;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"sreelakshmiharidos"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"sreelakshmiharidos"},"content":"                Task task \u003d parseTask(line);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"sreelakshmiharidos"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"sreelakshmiharidos"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"sreelakshmiharidos"},"content":"                }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"sreelakshmiharidos"},"content":"            }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"sreelakshmiharidos"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"sreelakshmiharidos"},"content":"            throw new IOException(\"The file format is corrupted. Please fix or delete the file.\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"sreelakshmiharidos"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"sreelakshmiharidos"},"content":"        return tasks;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Saves the given list of tasks to the file.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"sreelakshmiharidos"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param tasks The list of tasks to save.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"sreelakshmiharidos"},"content":"    public void saveTasks(List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"sreelakshmiharidos"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath))) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"sreelakshmiharidos"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"sreelakshmiharidos"},"content":"                writer.write(formatTask(task));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"sreelakshmiharidos"},"content":"                writer.newLine();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"sreelakshmiharidos"},"content":"            }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"sreelakshmiharidos"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Parses a line from the file into a Task object.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"sreelakshmiharidos"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param line A line from the file.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @return A Task object or null if the line is invalid.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"sreelakshmiharidos"},"content":"    private Task parseTask(String line) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"sreelakshmiharidos"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"sreelakshmiharidos"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"sreelakshmiharidos"},"content":"            throw new IllegalArgumentException(\"Invalid task format: \" + line);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"sreelakshmiharidos"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"sreelakshmiharidos"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"sreelakshmiharidos"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"sreelakshmiharidos"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"sreelakshmiharidos"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"sreelakshmiharidos"},"content":"            switch (type) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"sreelakshmiharidos"},"content":"                case \"T\":","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"sreelakshmiharidos"},"content":"                    return new Todo(description, isDone);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"sreelakshmiharidos"},"content":"                case \"D\":","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"sreelakshmiharidos"},"content":"                    LocalDateTime by \u003d LocalDateTime.parse(parts[3], DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"sreelakshmiharidos"},"content":"                    return new Deadline(description, by, isDone);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"sreelakshmiharidos"},"content":"                case \"E\":","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"sreelakshmiharidos"},"content":"                    LocalDateTime from \u003d LocalDateTime.parse(parts[3], DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"sreelakshmiharidos"},"content":"                    LocalDateTime to \u003d LocalDateTime.parse(parts[4], DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"sreelakshmiharidos"},"content":"                    return new Event(description, from, to, isDone);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"sreelakshmiharidos"},"content":"                default:","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"sreelakshmiharidos"},"content":"                    throw new IllegalArgumentException(\"Unknown task type: \" + type);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"sreelakshmiharidos"},"content":"            }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"sreelakshmiharidos"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"sreelakshmiharidos"},"content":"            throw new IllegalArgumentException(\"Error parsing task date: \" + line);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"sreelakshmiharidos"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Formats a Task object into a file-friendly string.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"sreelakshmiharidos"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param task The Task object.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @return A string representing the task.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"sreelakshmiharidos"},"content":"    private String formatTask(Task task) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"sreelakshmiharidos"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"sreelakshmiharidos"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"sreelakshmiharidos"},"content":"            return \"T | \" + (task.isDone() ? \"1\" : \"0\") + \" | \" + task.getDescription();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"sreelakshmiharidos"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"sreelakshmiharidos"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"sreelakshmiharidos"},"content":"            return \"D | \" + (task.isDone() ? \"1\" : \"0\") + \" | \" + task.getDescription() + \" | \" + deadline.getBy().format(formatter);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"sreelakshmiharidos"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"sreelakshmiharidos"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"sreelakshmiharidos"},"content":"            return \"E | \" + (task.isDone() ? \"1\" : \"0\") + \" | \" + task.getDescription() + \" | \" + event.getFrom().format(formatter) + \" | \" + event.getTo().format(formatter);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"sreelakshmiharidos"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"sreelakshmiharidos"},"content":"        throw new IllegalArgumentException(\"Unknown task type: \" + task);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Parses a date string into a LocalDateTime object.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"sreelakshmiharidos"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param dateString The date string to parse.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @return The parsed LocalDateTime object.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"sreelakshmiharidos"},"content":"    private LocalDateTime parseDate(String dateString) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"sreelakshmiharidos"},"content":"        return LocalDateTime.parse(dateString, DATE_TIME_FORMATTER);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"sreelakshmiharidos"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"sreelakshmiharidos":153}},{"path":"src/main/java/gilu/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sreelakshmiharidos"},"content":"package gilu;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sreelakshmiharidos"},"content":"import gilu.exception.GiluException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sreelakshmiharidos"},"content":"import gilu.task.Deadline;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sreelakshmiharidos"},"content":"import gilu.task.Event;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sreelakshmiharidos"},"content":"import gilu.task.Task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sreelakshmiharidos"},"content":"import gilu.task.Todo;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sreelakshmiharidos"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sreelakshmiharidos"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sreelakshmiharidos"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sreelakshmiharidos"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sreelakshmiharidos"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sreelakshmiharidos"},"content":"import java.util.List;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sreelakshmiharidos"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sreelakshmiharidos"},"content":" * Manages the list of tasks.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sreelakshmiharidos"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sreelakshmiharidos"},"content":"public class TaskList {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sreelakshmiharidos"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sreelakshmiharidos"},"content":"    public TaskList() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sreelakshmiharidos"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Constructs a TaskList with preloaded tasks.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sreelakshmiharidos"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sreelakshmiharidos"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sreelakshmiharidos"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Prints the list of tasks.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sreelakshmiharidos"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param ui The Ui object for user interaction.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"sreelakshmiharidos"},"content":"    public void printTasks(Ui ui) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"sreelakshmiharidos"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"sreelakshmiharidos"},"content":"            ui.showMessage(\" Yay! There are no tasks as of now!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"sreelakshmiharidos"},"content":"        } else {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"sreelakshmiharidos"},"content":"            ui.showLine();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"sreelakshmiharidos"},"content":"            System.out.println(\" Here are the tasks in your list:\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"sreelakshmiharidos"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"sreelakshmiharidos"},"content":"                System.out.println(\" \" + (i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"sreelakshmiharidos"},"content":"            }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"sreelakshmiharidos"},"content":"            ui.showLine();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"sreelakshmiharidos"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Lists tasks that occur on a specified date.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"sreelakshmiharidos"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param input The user input containing the date in yyyy-MM-dd format.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param ui The Ui object for user interaction.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @throws GiluException If the date format is invalid.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"sreelakshmiharidos"},"content":"    public void listTasksOnDate(String input, Ui ui) throws GiluException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"sreelakshmiharidos"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"sreelakshmiharidos"},"content":"            String[] parts \u003d input.split(\" \");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"sreelakshmiharidos"},"content":"            LocalDate date \u003d LocalDate.parse(parts[1]);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"sreelakshmiharidos"},"content":"            ui.showLine();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"sreelakshmiharidos"},"content":"            System.out.println(\" Here are the tasks on \" + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \":\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"sreelakshmiharidos"},"content":"            boolean hasTasks \u003d false;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"sreelakshmiharidos"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"sreelakshmiharidos"},"content":"                if (task instanceof Deadline \u0026\u0026 ((Deadline) task).getBy().toLocalDate().equals(date)) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"sreelakshmiharidos"},"content":"                    System.out.println(\"   \" + task);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"sreelakshmiharidos"},"content":"                    hasTasks \u003d true;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"sreelakshmiharidos"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"sreelakshmiharidos"},"content":"                    Event event \u003d (Event) task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"sreelakshmiharidos"},"content":"                    if (!date.isBefore(event.getFrom().toLocalDate()) \u0026\u0026 !date.isAfter(event.getTo().toLocalDate())) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"sreelakshmiharidos"},"content":"                        System.out.println(\"   \" + task);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"sreelakshmiharidos"},"content":"                        hasTasks \u003d true;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"sreelakshmiharidos"},"content":"                    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"sreelakshmiharidos"},"content":"                }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"sreelakshmiharidos"},"content":"            }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"sreelakshmiharidos"},"content":"            if (!hasTasks) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"sreelakshmiharidos"},"content":"                System.out.println(\"   No tasks found for this date.\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"sreelakshmiharidos"},"content":"            }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"sreelakshmiharidos"},"content":"            ui.showLine();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"sreelakshmiharidos"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"sreelakshmiharidos"},"content":"            throw new GiluException(\"Invalid date format. Use yyyy-MM-dd.\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"sreelakshmiharidos"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Adds a new todo task.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"sreelakshmiharidos"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param description The task description.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param ui The Ui object.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param storage The Storage object.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @throws GiluException If the description is empty.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"sreelakshmiharidos"},"content":"    public void addTodo(String description, Ui ui, Storage storage) throws GiluException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"sreelakshmiharidos"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"sreelakshmiharidos"},"content":"            throw new GiluException(\"Oops! I need some details for your ToDo. What should I remind you about?\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"sreelakshmiharidos"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"sreelakshmiharidos"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"sreelakshmiharidos"},"content":"            addTask(new Todo(description), ui, storage);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"sreelakshmiharidos"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"sreelakshmiharidos"},"content":"            throw new GiluException(\"Error saving task: \" + e.getMessage());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"sreelakshmiharidos"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Adds a new deadline task.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"sreelakshmiharidos"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param input The task description and deadline.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param ui The Ui object.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param storage The Storage object.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @throws GiluException If the input format is incorrect.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"sreelakshmiharidos"},"content":"    public void addDeadline(String input, Ui ui, Storage storage) throws GiluException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"sreelakshmiharidos"},"content":"        String[] parts \u003d input.split(\" /by \", 2);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"sreelakshmiharidos"},"content":"        if (parts.length \u003c 2 || parts[0].trim().isEmpty() || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"sreelakshmiharidos"},"content":"            throw new GiluException(\"Whoops! Your deadline is missing something. Try: deadline \u003ctask\u003e /by \u003cyyyy-MM-dd HHmm\u003e.\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"sreelakshmiharidos"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"sreelakshmiharidos"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"sreelakshmiharidos"},"content":"            LocalDateTime by \u003d LocalDateTime.parse(parts[1].trim(), DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"sreelakshmiharidos"},"content":"            addTask(new Deadline(parts[0].trim(), by), ui, storage);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"sreelakshmiharidos"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"sreelakshmiharidos"},"content":"            throw new GiluException(\"Invalid date format! Use: yyyy-MM-dd HHmm (e.g., 2023-12-15 1800)\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"sreelakshmiharidos"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Adds a new event task.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"sreelakshmiharidos"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param input The task description, start time, and end time.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param ui The Ui object.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param storage The Storage object.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @throws GiluException If the input format is incorrect.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"sreelakshmiharidos"},"content":"    public void addEvent(String input, Ui ui, Storage storage) throws GiluException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"sreelakshmiharidos"},"content":"        String[] parts \u003d input.split(\" /from \", 2);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"sreelakshmiharidos"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"sreelakshmiharidos"},"content":"            throw new GiluException(\"Your event needs details! Use: event \u003ctask\u003e /from \u003cyyyy-MM-dd HHmm\u003e /to \u003cyyyy-MM-dd HHmm\u003e\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"sreelakshmiharidos"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"sreelakshmiharidos"},"content":"        String[] timeParts \u003d parts[1].split(\" /to \", 2);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"sreelakshmiharidos"},"content":"        if (timeParts.length \u003c 2) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"sreelakshmiharidos"},"content":"            throw new GiluException(\"Oops! Your event needs both a start and end time. Try: event \u003ctask\u003e /from \u003cyyyy-MM-dd HHmm\u003e /to \u003cyyyy-MM-dd HHmm\u003e\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"sreelakshmiharidos"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"sreelakshmiharidos"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"sreelakshmiharidos"},"content":"            LocalDateTime from \u003d LocalDateTime.parse(timeParts[0].trim(), DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"sreelakshmiharidos"},"content":"            LocalDateTime to \u003d LocalDateTime.parse(timeParts[1].trim(), DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"sreelakshmiharidos"},"content":"            addTask(new Event(parts[0].trim(), from, to), ui, storage);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"sreelakshmiharidos"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"sreelakshmiharidos"},"content":"            throw new GiluException(\"Invalid date format! Use: yyyy-MM-dd HHmm (e.g., 2023-12-10 1400)\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"sreelakshmiharidos"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Marks a task as done.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"sreelakshmiharidos"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param input The user input specifying the task to mark.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param ui The Ui object.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param storage The Storage object.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @throws GiluException If the task number is invalid.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"sreelakshmiharidos"},"content":"    public void markTask(String input, Ui ui, Storage storage) throws GiluException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"sreelakshmiharidos"},"content":"        int taskIndex \u003d getTaskIndex(input);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"sreelakshmiharidos"},"content":"        tasks.get(taskIndex).markAsDone();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"sreelakshmiharidos"},"content":"        ui.showMessage(\" Cool! I\u0027ve marked this task as done:\\n   \" + tasks.get(taskIndex));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"sreelakshmiharidos"},"content":"        saveTasks(storage);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Unmarks a task as not done.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"sreelakshmiharidos"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param input   The user input containing the task number.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param ui      The UI instance for displaying messages.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param storage The Storage instance for saving the updated task list.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @throws GiluException If the task number is invalid.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"sreelakshmiharidos"},"content":"    public void unmarkTask(String input, Ui ui, Storage storage) throws GiluException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"sreelakshmiharidos"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"sreelakshmiharidos"},"content":"            int index \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"sreelakshmiharidos"},"content":"            if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"sreelakshmiharidos"},"content":"                throw new GiluException(\"Hmm, I can’t find that task. Are you sure it’s on the list?\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"sreelakshmiharidos"},"content":"            }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"sreelakshmiharidos"},"content":"            Task task \u003d tasks.get(index);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"sreelakshmiharidos"},"content":"            task.markAsNotDone();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"sreelakshmiharidos"},"content":"            // Show success message in one call","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"sreelakshmiharidos"},"content":"            ui.showMessage(\" No problem! I\u0027ve marked this task as not done yet:\\n   \" + task);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"sreelakshmiharidos"},"content":"            // Save updated task list","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"sreelakshmiharidos"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"sreelakshmiharidos"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"sreelakshmiharidos"},"content":"            throw new GiluException(\"Use: unmark \u003ctask_number\u003e. Let’s try again!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"sreelakshmiharidos"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"sreelakshmiharidos"},"content":"            throw new GiluException(\"Error saving task list after unmarking: \" + e.getMessage());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"sreelakshmiharidos"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Deletes a task from the list.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"sreelakshmiharidos"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param input The user input specifying the task to delete.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param ui The Ui object.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param storage The Storage object.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @throws GiluException If the task number is invalid.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"sreelakshmiharidos"},"content":"    public void deleteTask(String input, Ui ui, Storage storage) throws GiluException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"sreelakshmiharidos"},"content":"        int taskIndex \u003d getTaskIndex(input);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"sreelakshmiharidos"},"content":"        Task removedTask \u003d tasks.remove(taskIndex);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"sreelakshmiharidos"},"content":"        // Show removal message along with remaining tasks count","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"sreelakshmiharidos"},"content":"        ui.showMessage(\" Noted. I\u0027ve removed this task:\\n   \" + removedTask +","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"sreelakshmiharidos"},"content":"                \"\\n Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"sreelakshmiharidos"},"content":"        saveTasks(storage);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Saves tasks to storage.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"sreelakshmiharidos"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param storage The Storage object handling file persistence.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"sreelakshmiharidos"},"content":"    private void saveTasks(Storage storage) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"sreelakshmiharidos"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"sreelakshmiharidos"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"sreelakshmiharidos"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"sreelakshmiharidos"},"content":"            System.out.println(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"sreelakshmiharidos"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Retrieves the task index from the user input.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"sreelakshmiharidos"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param input The user command containing the task number.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @return The index of the task in the list.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @throws GiluException If the input is invalid.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"sreelakshmiharidos"},"content":"    private int getTaskIndex(String input) throws GiluException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"sreelakshmiharidos"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"sreelakshmiharidos"},"content":"            int taskIndex \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"sreelakshmiharidos"},"content":"            if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"sreelakshmiharidos"},"content":"                throw new GiluException(\"Hmm, I can’t find that task. Are you sure it’s on the list?\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"sreelakshmiharidos"},"content":"            }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"sreelakshmiharidos"},"content":"            return taskIndex;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"sreelakshmiharidos"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"sreelakshmiharidos"},"content":"            throw new GiluException(\"Use: \u003ccommand\u003e \u003ctask_number\u003e. Let’s try again!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"sreelakshmiharidos"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Adds a task to the task list, displays a confirmation message,","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"sreelakshmiharidos"},"content":"     * and saves the updated list to storage.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"sreelakshmiharidos"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param task    The task to be added.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param ui      The user interface to display messages.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param storage The storage handler for saving tasks.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @throws IOException If an error occurs while saving the task list.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"sreelakshmiharidos"},"content":"    public void addTask(Task task, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"sreelakshmiharidos"},"content":"        tasks.add(task);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"sreelakshmiharidos"},"content":"        ui.printAddedTask(task, tasks.size());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"sreelakshmiharidos"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Finds tasks that contain a specific keyword in their description.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"sreelakshmiharidos"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param ui      The Ui object for displaying results.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"sreelakshmiharidos"},"content":"    public void findTasks(String keyword, Ui ui) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"sreelakshmiharidos"},"content":"        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"sreelakshmiharidos"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"sreelakshmiharidos"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"sreelakshmiharidos"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"sreelakshmiharidos"},"content":"            }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"sreelakshmiharidos"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"sreelakshmiharidos"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"sreelakshmiharidos"},"content":"            ui.showMessage(\" No matching tasks found.\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"sreelakshmiharidos"},"content":"        } else {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"sreelakshmiharidos"},"content":"            ui.showMessage(\" Here are the matching tasks in your list:\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"sreelakshmiharidos"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"sreelakshmiharidos"},"content":"                System.out.println(\" \" + (i + 1) + \". \" + matchingTasks.get(i));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"sreelakshmiharidos"},"content":"            }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"sreelakshmiharidos"},"content":"            ui.showLine();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"sreelakshmiharidos"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Retrieves the list of tasks.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"sreelakshmiharidos"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @return The list of tasks managed by this TaskList.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"sreelakshmiharidos"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"sreelakshmiharidos"},"content":"        return tasks;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"sreelakshmiharidos"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"sreelakshmiharidos":308}},{"path":"src/main/java/gilu/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sreelakshmiharidos"},"content":"package gilu;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sreelakshmiharidos"},"content":"import gilu.task.Task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sreelakshmiharidos"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sreelakshmiharidos"},"content":" * Handles user interactions.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sreelakshmiharidos"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sreelakshmiharidos"},"content":"public class Ui {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Prints a horizontal line.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sreelakshmiharidos"},"content":"    public void showLine() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sreelakshmiharidos"},"content":"        System.out.println(\"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Displays a message to the user.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sreelakshmiharidos"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param message The message to display.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sreelakshmiharidos"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sreelakshmiharidos"},"content":"        showLine();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sreelakshmiharidos"},"content":"        System.out.println(message);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sreelakshmiharidos"},"content":"        showLine();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Displays the welcome message.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sreelakshmiharidos"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sreelakshmiharidos"},"content":"        showLine();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sreelakshmiharidos"},"content":"        System.out.println(\" Heyoo! I\u0027m Gilu, your trusted friend!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sreelakshmiharidos"},"content":"        System.out.println(\" How can I make your day better?\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sreelakshmiharidos"},"content":"        showLine();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Prints a confirmation message for adding a task.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sreelakshmiharidos"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param task      The task that was added.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param taskCount The total number of tasks after addition.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"sreelakshmiharidos"},"content":"    public void printAddedTask(Task task, int taskCount) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"sreelakshmiharidos"},"content":"        showMessage(\" Got it. I\u0027ve added this task:\\n   \" + task + \"\\n Now you have \"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"sreelakshmiharidos"},"content":"                + taskCount + (taskCount \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"sreelakshmiharidos"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"sreelakshmiharidos":48}},{"path":"src/main/java/gilu/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sreelakshmiharidos"},"content":"package gilu.command;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sreelakshmiharidos"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sreelakshmiharidos"},"content":" * Represents the different commands supported by Gilu.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sreelakshmiharidos"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sreelakshmiharidos"},"content":"public enum Command {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sreelakshmiharidos"},"content":"    LIST, LIST_DATE, MARK, UNMARK, DELETE, TODO, DEADLINE, EVENT, FIND, EXIT, UNKNOWN;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Converts user input into a corresponding Command enum.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sreelakshmiharidos"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param input The raw user input string.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @return The corresponding Command enum.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sreelakshmiharidos"},"content":"    public static Command fromInput(String input) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sreelakshmiharidos"},"content":"        if (input.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sreelakshmiharidos"},"content":"            return LIST;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sreelakshmiharidos"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sreelakshmiharidos"},"content":"        if (input.matches(\"list \\\\d{4}-\\\\d{2}-\\\\d{2}\")) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sreelakshmiharidos"},"content":"            return LIST_DATE;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sreelakshmiharidos"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sreelakshmiharidos"},"content":"        if (input.startsWith(\"mark\")) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sreelakshmiharidos"},"content":"            return MARK;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sreelakshmiharidos"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sreelakshmiharidos"},"content":"        if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sreelakshmiharidos"},"content":"            return UNMARK;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sreelakshmiharidos"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sreelakshmiharidos"},"content":"        if (input.startsWith(\"delete\")) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sreelakshmiharidos"},"content":"            return DELETE;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sreelakshmiharidos"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sreelakshmiharidos"},"content":"        if (input.startsWith(\"todo\")) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sreelakshmiharidos"},"content":"            return TODO;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sreelakshmiharidos"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sreelakshmiharidos"},"content":"        if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sreelakshmiharidos"},"content":"            return DEADLINE;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sreelakshmiharidos"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sreelakshmiharidos"},"content":"        if (input.startsWith(\"event\")) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sreelakshmiharidos"},"content":"            return EVENT;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sreelakshmiharidos"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sreelakshmiharidos"},"content":"        if (input.startsWith(\"find\")) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"sreelakshmiharidos"},"content":"            return FIND;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"sreelakshmiharidos"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"sreelakshmiharidos"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"sreelakshmiharidos"},"content":"            return EXIT;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"sreelakshmiharidos"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"sreelakshmiharidos"},"content":"        return UNKNOWN;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"sreelakshmiharidos"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"sreelakshmiharidos":48}},{"path":"src/main/java/gilu/exception/GiluException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sreelakshmiharidos"},"content":"package gilu.exception;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sreelakshmiharidos"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sreelakshmiharidos"},"content":" * Represents exceptions specific to the Gilu chatbot.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sreelakshmiharidos"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sreelakshmiharidos"},"content":"public class GiluException extends Exception {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Constructs a GiluException with the given message.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sreelakshmiharidos"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param message The error message.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sreelakshmiharidos"},"content":"    public GiluException(String message) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sreelakshmiharidos"},"content":"        super(message);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Constructs a GiluException with a default error message.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sreelakshmiharidos"},"content":"    public GiluException() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sreelakshmiharidos"},"content":"        super(\"An unexpected error occurred in Gilu.\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sreelakshmiharidos"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"sreelakshmiharidos":23}},{"path":"src/main/java/gilu/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sreelakshmiharidos"},"content":"package gilu.task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sreelakshmiharidos"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sreelakshmiharidos"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sreelakshmiharidos"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sreelakshmiharidos"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sreelakshmiharidos"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sreelakshmiharidos"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sreelakshmiharidos"},"content":"    private final LocalDateTime by;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Constructs a Deadline object.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sreelakshmiharidos"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param by          The deadline of the task.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sreelakshmiharidos"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sreelakshmiharidos"},"content":"        super(description);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sreelakshmiharidos"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Constructs a Deadline object with a completion status.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sreelakshmiharidos"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param by          The deadline of the task.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param isDone      Whether the task is completed.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sreelakshmiharidos"},"content":"    public Deadline(String description, LocalDateTime by, boolean isDone) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sreelakshmiharidos"},"content":"        super(description);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sreelakshmiharidos"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sreelakshmiharidos"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Returns the deadline of the task.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sreelakshmiharidos"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @return The deadline as a LocalDateTime.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"sreelakshmiharidos"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"sreelakshmiharidos"},"content":"        return by;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"sreelakshmiharidos"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"sreelakshmiharidos"},"content":"    public String toString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"sreelakshmiharidos"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"sreelakshmiharidos"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"sreelakshmiharidos":49}},{"path":"src/main/java/gilu/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sreelakshmiharidos"},"content":"package gilu.task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sreelakshmiharidos"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sreelakshmiharidos"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sreelakshmiharidos"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sreelakshmiharidos"},"content":" * Represents a task that spans a time period.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sreelakshmiharidos"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sreelakshmiharidos"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sreelakshmiharidos"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sreelakshmiharidos"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Constructs an Event object.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sreelakshmiharidos"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param from        The start time of the event.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param to          The end time of the event.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sreelakshmiharidos"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sreelakshmiharidos"},"content":"        super(description);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sreelakshmiharidos"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sreelakshmiharidos"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Constructs an Event object with a completion status.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sreelakshmiharidos"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param from        The start time of the event.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param to          The end time of the event.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param isDone      Whether the task is completed.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sreelakshmiharidos"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to, boolean isDone) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sreelakshmiharidos"},"content":"        super(description);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sreelakshmiharidos"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sreelakshmiharidos"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sreelakshmiharidos"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Returns the start time of the event.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"sreelakshmiharidos"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @return The start time as a LocalDateTime.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"sreelakshmiharidos"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"sreelakshmiharidos"},"content":"        return from;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Returns the end time of the event.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"sreelakshmiharidos"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @return The end time as a LocalDateTime.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"sreelakshmiharidos"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"sreelakshmiharidos"},"content":"        return to;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"sreelakshmiharidos"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"sreelakshmiharidos"},"content":"    public String toString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"sreelakshmiharidos"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) +","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"sreelakshmiharidos"},"content":"                \" to: \" + to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"sreelakshmiharidos"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"sreelakshmiharidos":64}},{"path":"src/main/java/gilu/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sreelakshmiharidos"},"content":"package gilu.task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sreelakshmiharidos"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sreelakshmiharidos"},"content":" * Represents a generic task with a description and completion status.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sreelakshmiharidos"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sreelakshmiharidos"},"content":"public class Task {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sreelakshmiharidos"},"content":"    final String description;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sreelakshmiharidos"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Constructs a Task with the given description.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sreelakshmiharidos"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sreelakshmiharidos"},"content":"    public Task(String description) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sreelakshmiharidos"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sreelakshmiharidos"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Gets the completion status icon for the task.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sreelakshmiharidos"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @return \"X\" if the task is done, otherwise \" \".","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sreelakshmiharidos"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sreelakshmiharidos"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sreelakshmiharidos"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sreelakshmiharidos"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sreelakshmiharidos"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sreelakshmiharidos"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Gets the description of the task.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"sreelakshmiharidos"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @return The description of the task.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"sreelakshmiharidos"},"content":"    public String getDescription() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"sreelakshmiharidos"},"content":"        return description;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Checks if the task is done.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"sreelakshmiharidos"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @return true if the task is marked as done, false otherwise.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"sreelakshmiharidos"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"sreelakshmiharidos"},"content":"        return isDone;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Converts the task to a string representation.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"sreelakshmiharidos"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @return A string representation of the task with its status and description.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"sreelakshmiharidos"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"sreelakshmiharidos"},"content":"    public String toString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"sreelakshmiharidos"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"sreelakshmiharidos"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"sreelakshmiharidos":70}},{"path":"src/main/java/gilu/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sreelakshmiharidos"},"content":"package gilu.task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sreelakshmiharidos"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sreelakshmiharidos"},"content":" * Represents different types of tasks.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sreelakshmiharidos"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sreelakshmiharidos"},"content":"public enum TaskType {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sreelakshmiharidos"},"content":"    TODO, DEADLINE, EVENT;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sreelakshmiharidos"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"sreelakshmiharidos":8}},{"path":"src/main/java/gilu/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sreelakshmiharidos"},"content":"package gilu.task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sreelakshmiharidos"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sreelakshmiharidos"},"content":" * Represents a Todo task.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sreelakshmiharidos"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sreelakshmiharidos"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Constructs a Todo with the given description.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sreelakshmiharidos"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param description The description of the Todo.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sreelakshmiharidos"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sreelakshmiharidos"},"content":"        super(description);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Constructs a Todo with the given description and completion status.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sreelakshmiharidos"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param description The description of the Todo.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @param isDone Whether the Todo is marked as done.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sreelakshmiharidos"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sreelakshmiharidos"},"content":"        super(description);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sreelakshmiharidos"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sreelakshmiharidos"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sreelakshmiharidos"},"content":"    public String toString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sreelakshmiharidos"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sreelakshmiharidos"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"sreelakshmiharidos":31}},{"path":"src/test/java/gilu/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sreelakshmiharidos"},"content":"package gilu;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sreelakshmiharidos"},"content":"import gilu.task.*;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sreelakshmiharidos"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sreelakshmiharidos"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sreelakshmiharidos"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sreelakshmiharidos"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sreelakshmiharidos"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sreelakshmiharidos"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sreelakshmiharidos"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sreelakshmiharidos"},"content":"import java.util.List;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sreelakshmiharidos"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sreelakshmiharidos"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sreelakshmiharidos"},"content":" * Tests the functionality of the Storage class, particularly the loadTasks method.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sreelakshmiharidos"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sreelakshmiharidos"},"content":"class StorageTest {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sreelakshmiharidos"},"content":"    private static final String TEST_FILE_PATH \u003d \"./data/gilu_test.txt\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sreelakshmiharidos"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sreelakshmiharidos"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sreelakshmiharidos"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sreelakshmiharidos"},"content":"        // Ensure the test file is clean before each test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sreelakshmiharidos"},"content":"        Files.deleteIfExists(Paths.get(TEST_FILE_PATH));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sreelakshmiharidos"},"content":"        Files.createFile(Paths.get(TEST_FILE_PATH));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sreelakshmiharidos"},"content":"        storage \u003d new Storage(TEST_FILE_PATH);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Test: loadTasks should correctly load tasks from a file with valid data.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sreelakshmiharidos"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sreelakshmiharidos"},"content":"    void testLoadTasksFromFile() throws IOException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sreelakshmiharidos"},"content":"        // Prepare test file with valid data","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sreelakshmiharidos"},"content":"        try (FileWriter writer \u003d new FileWriter(TEST_FILE_PATH)) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sreelakshmiharidos"},"content":"            writer.write(\"T | 0 | Read book\\n\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sreelakshmiharidos"},"content":"            writer.write(\"D | 1 | Submit assignment | 2023-12-15 1800\\n\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sreelakshmiharidos"},"content":"            writer.write(\"E | 0 | Team meeting | 2023-12-10 1400 | 2023-12-12 1600\\n\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"sreelakshmiharidos"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"sreelakshmiharidos"},"content":"        // Load tasks from file","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"sreelakshmiharidos"},"content":"        List\u003cTask\u003e tasks \u003d storage.loadTasks();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"sreelakshmiharidos"},"content":"        // Assertions","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"sreelakshmiharidos"},"content":"        assertEquals(3, tasks.size());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"sreelakshmiharidos"},"content":"        assertTrue(tasks.get(0) instanceof Todo);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"sreelakshmiharidos"},"content":"        assertTrue(tasks.get(1) instanceof Deadline);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"sreelakshmiharidos"},"content":"        assertTrue(tasks.get(2) instanceof Event);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"sreelakshmiharidos"},"content":"        assertEquals(\"Read book\", tasks.get(0).getDescription());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"sreelakshmiharidos"},"content":"        assertFalse(tasks.get(0).isDone());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"sreelakshmiharidos"},"content":"        assertEquals(\"Submit assignment\", tasks.get(1).getDescription());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"sreelakshmiharidos"},"content":"        assertTrue(tasks.get(1).isDone());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"sreelakshmiharidos"},"content":"        assertEquals(LocalDateTime.of(2023, 12, 15, 18, 0), ((Deadline) tasks.get(1)).getBy());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"sreelakshmiharidos"},"content":"        assertEquals(\"Team meeting\", tasks.get(2).getDescription());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"sreelakshmiharidos"},"content":"        assertFalse(tasks.get(2).isDone());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"sreelakshmiharidos"},"content":"        assertEquals(LocalDateTime.of(2023, 12, 10, 14, 0), ((Event) tasks.get(2)).getFrom());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"sreelakshmiharidos"},"content":"        assertEquals(LocalDateTime.of(2023, 12, 12, 16, 0), ((Event) tasks.get(2)).getTo());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Test: loadTasks should return an empty list if the file is empty.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"sreelakshmiharidos"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"sreelakshmiharidos"},"content":"    void testLoadTasksFromEmptyFile() throws IOException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"sreelakshmiharidos"},"content":"        // Ensure the test file is empty","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"sreelakshmiharidos"},"content":"        Files.writeString(Paths.get(TEST_FILE_PATH), \"\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"sreelakshmiharidos"},"content":"        // Load tasks from file","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"sreelakshmiharidos"},"content":"        List\u003cTask\u003e tasks \u003d storage.loadTasks();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"sreelakshmiharidos"},"content":"        // Assertions","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"sreelakshmiharidos"},"content":"        assertTrue(tasks.isEmpty());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Test: loadTasks should throw an IOException for corrupted file data.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"sreelakshmiharidos"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"sreelakshmiharidos"},"content":"    void testLoadTasksFromCorruptedFile() throws IOException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"sreelakshmiharidos"},"content":"        // Prepare test file with corrupted data","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"sreelakshmiharidos"},"content":"        try (FileWriter writer \u003d new FileWriter(TEST_FILE_PATH)) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"sreelakshmiharidos"},"content":"            writer.write(\"Invalid data format\\n\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"sreelakshmiharidos"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"sreelakshmiharidos"},"content":"        // Assertions","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"sreelakshmiharidos"},"content":"        IOException exception \u003d assertThrows(IOException.class, () -\u003e storage.loadTasks());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"sreelakshmiharidos"},"content":"        assertEquals(\"The file format is corrupted. Please fix or delete the file.\", exception.getMessage());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Test: loadTasks should handle missing fields gracefully.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"sreelakshmiharidos"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"sreelakshmiharidos"},"content":"    void testLoadTasksFromFileWithMissingFields() throws IOException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"sreelakshmiharidos"},"content":"        // Prepare test file with missing fields","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"sreelakshmiharidos"},"content":"        try (FileWriter writer \u003d new FileWriter(TEST_FILE_PATH)) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"sreelakshmiharidos"},"content":"            writer.write(\"D | 1 | Submit assignment\\n\"); // Missing deadline","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"sreelakshmiharidos"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"sreelakshmiharidos"},"content":"        // Assertions","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"sreelakshmiharidos"},"content":"        IOException exception \u003d assertThrows(IOException.class, () -\u003e storage.loadTasks());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"sreelakshmiharidos"},"content":"        assertTrue(exception.getMessage().contains(\"The file format is corrupted\"));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"sreelakshmiharidos"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"sreelakshmiharidos":109}},{"path":"src/test/java/gilu/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sreelakshmiharidos"},"content":"package gilu;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sreelakshmiharidos"},"content":"import gilu.exception.GiluException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sreelakshmiharidos"},"content":"import gilu.task.Deadline;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sreelakshmiharidos"},"content":"import gilu.task.Task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sreelakshmiharidos"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sreelakshmiharidos"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sreelakshmiharidos"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sreelakshmiharidos"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sreelakshmiharidos"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sreelakshmiharidos"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sreelakshmiharidos"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sreelakshmiharidos"},"content":" * Tests the functionality of the TaskList class, particularly the addDeadline method.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sreelakshmiharidos"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sreelakshmiharidos"},"content":"class TaskListTest {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sreelakshmiharidos"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sreelakshmiharidos"},"content":"    private Ui ui;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sreelakshmiharidos"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Sets up a fresh TaskList and Storage instance before each test.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Ensures the test storage file starts clean.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sreelakshmiharidos"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @throws IOException If an error occurs during setup.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sreelakshmiharidos"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sreelakshmiharidos"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sreelakshmiharidos"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sreelakshmiharidos"},"content":"        storage \u003d new Storage(\"./data/test_tasks.txt\"); // Use a separate file for tests","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sreelakshmiharidos"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sreelakshmiharidos"},"content":"        storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Tests that a valid deadline task is added to the TaskList correctly.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sreelakshmiharidos"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @throws GiluException If the task format is invalid.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"sreelakshmiharidos"},"content":"     * @throws IOException    If an error occurs while saving tasks.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"sreelakshmiharidos"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"sreelakshmiharidos"},"content":"    void testAddDeadlineValidInput() throws GiluException, IOException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"sreelakshmiharidos"},"content":"        String input \u003d \"return book /by 2023-12-15 1800\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"sreelakshmiharidos"},"content":"        taskList.addDeadline(input, ui, storage);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"sreelakshmiharidos"},"content":"        // Verify the task list has one Deadline task","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"sreelakshmiharidos"},"content":"        assertEquals(1, taskList.getTasks().size(), \"Task list size should be 1\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"sreelakshmiharidos"},"content":"        Task task \u003d taskList.getTasks().get(0);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"sreelakshmiharidos"},"content":"        assertTrue(task instanceof Deadline, \"Task should be a Deadline instance\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"sreelakshmiharidos"},"content":"        // Verify the Deadline details","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"sreelakshmiharidos"},"content":"        Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"sreelakshmiharidos"},"content":"        assertEquals(\"return book\", deadline.getDescription(), \"Description should match\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"sreelakshmiharidos"},"content":"        assertEquals(LocalDateTime.parse(\"2023-12-15 1800\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")), deadline.getBy(), \"Deadline date should match\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Tests that a GiluException is thrown when the /by part or deadline details are missing.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"sreelakshmiharidos"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"sreelakshmiharidos"},"content":"    void testAddDeadlineMissingDetails() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"sreelakshmiharidos"},"content":"        String input \u003d \"return book\"; // Missing /by part","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"sreelakshmiharidos"},"content":"        GiluException exception \u003d assertThrows(GiluException.class, () -\u003e taskList.addDeadline(input, ui, storage));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"sreelakshmiharidos"},"content":"        assertEquals(\"Whoops! Your deadline is missing something. Try: deadline \u003ctask\u003e /by \u003cyyyy-MM-dd HHmm\u003e.\", exception.getMessage());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"sreelakshmiharidos"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"sreelakshmiharidos"},"content":"     * Tests that a GiluException is thrown for an invalid date format.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"sreelakshmiharidos"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"sreelakshmiharidos"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"sreelakshmiharidos"},"content":"    void testAddDeadlineInvalidDateFormat() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"sreelakshmiharidos"},"content":"        String input \u003d \"return book /by 15-12-2023 1800\"; // Invalid date format","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"sreelakshmiharidos"},"content":"        GiluException exception \u003d assertThrows(GiluException.class, () -\u003e taskList.addDeadline(input, ui, storage));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"sreelakshmiharidos"},"content":"        assertEquals(\"Invalid date format! Use: yyyy-MM-dd HHmm (e.g., 2023-12-15 1800)\", exception.getMessage());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"sreelakshmiharidos"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"sreelakshmiharidos"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"sreelakshmiharidos":78}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sreelakshmiharidos"},"content":"todo borrow book","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sreelakshmiharidos"},"content":"deadline return book /by 2023-12-15 1800","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sreelakshmiharidos"},"content":"event project meeting /from 2023-12-10 1400 /to 2023-12-12 1600","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sreelakshmiharidos"},"content":"list","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sreelakshmiharidos"},"content":"list 2023-12-15","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sreelakshmiharidos"},"content":"find book","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sreelakshmiharidos"},"content":"mark 2","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sreelakshmiharidos"},"content":"unmark 2","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sreelakshmiharidos"},"content":"delete 3","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sreelakshmiharidos"},"content":"bye","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"sreelakshmiharidos":11}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sreelakshmiharidos"},"content":"# Define test storage file path","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sreelakshmiharidos"},"content":"TEST_STORAGE_FILE\u003d\"./data/gilu_test.txt\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sreelakshmiharidos"},"content":"# Create bin directory if it doesn\u0027t exist","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sreelakshmiharidos"},"content":"if [ ! -d \"../bin\" ]; then","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sreelakshmiharidos"},"content":"# Delete output from previous run","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sreelakshmiharidos"},"content":"if [ -e \"./ACTUAL.TXT\" ]; then","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sreelakshmiharidos"},"content":"# Ensure the test storage file starts empty","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sreelakshmiharidos"},"content":"rm -f \"$TEST_STORAGE_FILE\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sreelakshmiharidos"},"content":"mkdir -p \"./data\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sreelakshmiharidos"},"content":"touch \"$TEST_STORAGE_FILE\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sreelakshmiharidos"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sreelakshmiharidos"},"content":"# Compile the code into the bin folder, terminate if error occurred","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sreelakshmiharidos"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/gilu/*.java","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sreelakshmiharidos"},"content":"# Run the program, passing the test storage file as an argument","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sreelakshmiharidos"},"content":"java -classpath ../bin gilu.Gilu \"$TEST_STORAGE_FILE\" \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sreelakshmiharidos"},"content":"# Convert to UNIX format","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sreelakshmiharidos"},"content":"# Compare the output to the expected output","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sreelakshmiharidos"},"content":"if [ $? -eq 0 ]; then","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"sreelakshmiharidos":19,"-":24}}]
