[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HAITAO2003"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HAITAO2003"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HAITAO2003"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HAITAO2003"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HAITAO2003"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HAITAO2003"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HAITAO2003"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HAITAO2003"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HAITAO2003"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HAITAO2003"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HAITAO2003"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HAITAO2003"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HAITAO2003"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HAITAO2003"},"content":"    mainClass.set(\"duke.Main\")","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"HAITAO2003":15,"-":40}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HAITAO2003"},"content":"T | 1 | blah blah","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HAITAO2003"},"content":"T | 0 | sfsdf","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HAITAO2003"},"content":"T | 1 | sfds","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HAITAO2003"},"content":"T | 0 | safda","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"HAITAO2003":4}},{"path":"src/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HAITAO2003"},"content":"T | 0 | borrow book","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HAITAO2003"},"content":"D | 0 | return book | Dec. 2 2019, 6:00pm","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"HAITAO2003":2}},{"path":"src/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HAITAO2003"},"content":"T | 1 | chekc","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HAITAO2003"},"content":"T | 1 | dsf","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"HAITAO2003":2}},{"path":"src/main/java/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HAITAO2003"},"content":"package commands;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HAITAO2003"},"content":"import duke.Storage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HAITAO2003"},"content":"import tasks.Task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HAITAO2003"},"content":"import duke.TaskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HAITAO2003"},"content":"import duke.DukeException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HAITAO2003"},"content":"import duke.Ui;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HAITAO2003"},"content":"/**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HAITAO2003"},"content":" * Represents a command to add a task to the task list.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HAITAO2003"},"content":" */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HAITAO2003"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HAITAO2003"},"content":"    private final Task task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HAITAO2003"},"content":"     * Creates a new AddCommand with the given task.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HAITAO2003"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HAITAO2003"},"content":"     * @param task The task to be added to the task list.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HAITAO2003"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HAITAO2003"},"content":"        this.task \u003d task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HAITAO2003"},"content":"     * Executes the add command, adding the task to the task list and saving it.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HAITAO2003"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HAITAO2003"},"content":"     * @param tasks The task list to add the task to.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HAITAO2003"},"content":"     * @param ui The user interface to show the result.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HAITAO2003"},"content":"     * @param storage The storage to save the updated task list.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HAITAO2003"},"content":"     * @throws DukeException If there is an error saving the task list.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HAITAO2003"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HAITAO2003"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HAITAO2003"},"content":"        tasks.addTask(task);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HAITAO2003"},"content":"        storage.save(tasks.getTaskList());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HAITAO2003"},"content":"        ui.showAddedTask(task, tasks.size());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HAITAO2003"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"HAITAO2003":38}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HAITAO2003"},"content":"package commands;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HAITAO2003"},"content":"import duke.Storage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HAITAO2003"},"content":"import duke.TaskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HAITAO2003"},"content":"import duke.DukeException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HAITAO2003"},"content":"import duke.Ui;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HAITAO2003"},"content":"/**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HAITAO2003"},"content":" * Represents an abstract command in the task management system.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HAITAO2003"},"content":" * All commands should inherit from this class.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HAITAO2003"},"content":" */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HAITAO2003"},"content":"public abstract class Command {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HAITAO2003"},"content":"     * Executes the command.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HAITAO2003"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HAITAO2003"},"content":"     * @param tasks The task list to perform the command on.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HAITAO2003"},"content":"     * @param ui The user interface to show results.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HAITAO2003"},"content":"     * @param storage The storage to save any changes.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HAITAO2003"},"content":"     * @throws DukeException If there is an error executing the command.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HAITAO2003"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HAITAO2003"},"content":"     * Returns whether this command should exit the program.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HAITAO2003"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HAITAO2003"},"content":"     * @return true if the program should exit after this command, false otherwise.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HAITAO2003"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HAITAO2003"},"content":"        return false;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HAITAO2003"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"HAITAO2003":30}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HAITAO2003"},"content":"package commands;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HAITAO2003"},"content":"import duke.Storage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HAITAO2003"},"content":"import tasks.Task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HAITAO2003"},"content":"import duke.TaskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HAITAO2003"},"content":"import duke.DukeException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HAITAO2003"},"content":"import duke.Ui;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HAITAO2003"},"content":"/**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HAITAO2003"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HAITAO2003"},"content":" */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HAITAO2003"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HAITAO2003"},"content":"    private final int index;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HAITAO2003"},"content":"     * Creates a new DeleteCommand for the task at the given index.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HAITAO2003"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HAITAO2003"},"content":"     * @param index The index of the task to delete.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HAITAO2003"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HAITAO2003"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HAITAO2003"},"content":"     * Executes the delete command, removing the specified task from the list and saving changes.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HAITAO2003"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HAITAO2003"},"content":"     * @param tasks The task list to delete from.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HAITAO2003"},"content":"     * @param ui The user interface to show the result.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HAITAO2003"},"content":"     * @param storage The storage to save the updated task list.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HAITAO2003"},"content":"     * @throws DukeException If the index is invalid or there is an error saving the task list.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HAITAO2003"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HAITAO2003"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HAITAO2003"},"content":"        Task deletedTask \u003d tasks.deleteTask(index);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HAITAO2003"},"content":"        storage.save(tasks.getTaskList());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HAITAO2003"},"content":"        ui.showDeletedTask(deletedTask, tasks.size());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HAITAO2003"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"HAITAO2003":37}},{"path":"src/main/java/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HAITAO2003"},"content":"package commands;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HAITAO2003"},"content":"import duke.Storage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HAITAO2003"},"content":"import duke.TaskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HAITAO2003"},"content":"import duke.Ui;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HAITAO2003"},"content":"/**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HAITAO2003"},"content":" * Represents a command to exit the program.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HAITAO2003"},"content":" */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HAITAO2003"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HAITAO2003"},"content":"     * Executes the exit command, showing a goodbye message.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HAITAO2003"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HAITAO2003"},"content":"     * @param tasks The task list.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HAITAO2003"},"content":"     * @param ui The user interface to show the goodbye message.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HAITAO2003"},"content":"     * @param storage The storage.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HAITAO2003"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HAITAO2003"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HAITAO2003"},"content":"        ui.showToUser(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HAITAO2003"},"content":"     * Returns true as this is an exit command.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HAITAO2003"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HAITAO2003"},"content":"     * @return true to indicate the program should exit.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HAITAO2003"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HAITAO2003"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HAITAO2003"},"content":"        return true;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HAITAO2003"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"HAITAO2003":32}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HAITAO2003"},"content":"package commands;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HAITAO2003"},"content":"import duke.Storage;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HAITAO2003"},"content":"import duke.TaskList;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HAITAO2003"},"content":"import duke.Ui;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HAITAO2003"},"content":"import tasks.Task;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HAITAO2003"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HAITAO2003"},"content":"import java.util.List;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HAITAO2003"},"content":"/**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HAITAO2003"},"content":" * Represents a command to find tasks containing a specific keyword in their descriptions.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HAITAO2003"},"content":" * The search is case-insensitive.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HAITAO2003"},"content":" */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HAITAO2003"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HAITAO2003"},"content":"    private final String keyword;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HAITAO2003"},"content":"     * Creates a new FindCommand with the specified keyword.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HAITAO2003"},"content":"     * The keyword is converted to lowercase to enable case-insensitive searching.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HAITAO2003"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HAITAO2003"},"content":"     * @param keyword The search term to look for in task descriptions","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HAITAO2003"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HAITAO2003"},"content":"        this.keyword \u003d keyword.toLowerCase();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HAITAO2003"},"content":"     * Executes the find command. Searches through all tasks and displays those","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HAITAO2003"},"content":"     * whose descriptions contain the keyword (case-insensitive).","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HAITAO2003"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HAITAO2003"},"content":"     * @param tasks The task list to search through","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HAITAO2003"},"content":"     * @param ui The user interface to display results","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HAITAO2003"},"content":"     * @param storage The storage manager (unused in this command)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HAITAO2003"},"content":"    @Override","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HAITAO2003"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HAITAO2003"},"content":"        List\u003cTask\u003e allTasks \u003d tasks.getTaskList();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HAITAO2003"},"content":"        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HAITAO2003"},"content":"        for (Task task : allTasks) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HAITAO2003"},"content":"            if (task.getDescription().toLowerCase().contains(keyword)) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HAITAO2003"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HAITAO2003"},"content":"            }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HAITAO2003"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HAITAO2003"},"content":"        ui.showMatchingTasks(matchingTasks);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HAITAO2003"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"HAITAO2003":49}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HAITAO2003"},"content":"package commands;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HAITAO2003"},"content":"import duke.Storage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HAITAO2003"},"content":"import duke.TaskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HAITAO2003"},"content":"import duke.Ui;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HAITAO2003"},"content":"/**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HAITAO2003"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HAITAO2003"},"content":" */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HAITAO2003"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HAITAO2003"},"content":"     * Executes the list command, showing all tasks in the task list.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HAITAO2003"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HAITAO2003"},"content":"     * @param tasks The task list to display.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HAITAO2003"},"content":"     * @param ui The user interface to show the task list.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HAITAO2003"},"content":"     * @param storage The storage.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HAITAO2003"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HAITAO2003"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HAITAO2003"},"content":"        ui.showTaskList(tasks.getTaskList());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HAITAO2003"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"HAITAO2003":22}},{"path":"src/main/java/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HAITAO2003"},"content":"package commands;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HAITAO2003"},"content":"import duke.Storage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HAITAO2003"},"content":"import tasks.Task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HAITAO2003"},"content":"import duke.TaskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HAITAO2003"},"content":"import duke.DukeException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HAITAO2003"},"content":"import duke.Ui;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HAITAO2003"},"content":"/**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HAITAO2003"},"content":" * Represents a command to mark a task as done.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HAITAO2003"},"content":" */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HAITAO2003"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HAITAO2003"},"content":"    private final int taskIndex;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HAITAO2003"},"content":"     * Creates a new MarkCommand for the task at the given index.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HAITAO2003"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HAITAO2003"},"content":"     * @param taskIndex The index of the task to mark as done.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HAITAO2003"},"content":"    public MarkCommand(int taskIndex) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HAITAO2003"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HAITAO2003"},"content":"     * Executes the mark command, marking the specified task as done and saving changes.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HAITAO2003"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HAITAO2003"},"content":"     * @param tasks The task list containing the task to mark.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HAITAO2003"},"content":"     * @param ui The user interface to show the result.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HAITAO2003"},"content":"     * @param storage The storage to save the updated task list.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HAITAO2003"},"content":"     * @throws DukeException If the index is invalid or there is an error saving the task list.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HAITAO2003"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HAITAO2003"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HAITAO2003"},"content":"        Task markedTask \u003d tasks.markTaskDone(taskIndex);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HAITAO2003"},"content":"        storage.save(tasks.getTaskList());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HAITAO2003"},"content":"        ui.showMarkedTask(markedTask);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HAITAO2003"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"HAITAO2003":38}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HAITAO2003"},"content":"package duke;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HAITAO2003"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HAITAO2003"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HAITAO2003"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HAITAO2003"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HAITAO2003"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HAITAO2003"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HAITAO2003"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HAITAO2003"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HAITAO2003"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HAITAO2003"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HAITAO2003"},"content":"import javafx.scene.text.TextAlignment;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HAITAO2003"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HAITAO2003"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HAITAO2003"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HAITAO2003"},"content":"    @FXML","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HAITAO2003"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HAITAO2003"},"content":"    @FXML","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HAITAO2003"},"content":"    private Label avatar;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HAITAO2003"},"content":"    private DialogBox(String text, String avatarText) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HAITAO2003"},"content":"        try {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HAITAO2003"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(DialogBox.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HAITAO2003"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HAITAO2003"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HAITAO2003"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HAITAO2003"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HAITAO2003"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HAITAO2003"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HAITAO2003"},"content":"        // Set up the dialog label","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HAITAO2003"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HAITAO2003"},"content":"        dialog.setWrapText(true);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HAITAO2003"},"content":"        dialog.setMinHeight(Label.USE_PREF_SIZE); // Important: Use preferred size for height","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HAITAO2003"},"content":"        dialog.setPrefWidth(300.0); // Set preferred width","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HAITAO2003"},"content":"        dialog.setMaxWidth(300.0); // Set maximum width","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HAITAO2003"},"content":"        dialog.setPadding(new Insets(10));","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HAITAO2003"},"content":"        dialog.setStyle(\"-fx-background-radius: 15; -fx-background-color: #E8E8E8;\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HAITAO2003"},"content":"        // Set up the avatar label","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HAITAO2003"},"content":"        avatar.setText(avatarText);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HAITAO2003"},"content":"        avatar.setAlignment(Pos.CENTER);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HAITAO2003"},"content":"        avatar.setTextAlignment(TextAlignment.CENTER);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HAITAO2003"},"content":"        avatar.setMinSize(40, 40);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HAITAO2003"},"content":"        avatar.setMaxSize(40, 40);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HAITAO2003"},"content":"        avatar.setStyle(\"-fx-background-radius: 20; -fx-background-color: #7289DA; -fx-text-fill: white; -fx-font-weight: bold;\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HAITAO2003"},"content":"        // Set HBox properties","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HAITAO2003"},"content":"        this.setSpacing(10);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"HAITAO2003"},"content":"        this.setPadding(new Insets(5, 10, 5, 10));","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"HAITAO2003"},"content":"        this.setFillHeight(true); // Important: Allow the HBox to fill height","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"HAITAO2003"},"content":"        this.setMinHeight(USE_PREF_SIZE); // Use preferred size for height","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"HAITAO2003"},"content":"        this.setPrefWidth(Region.USE_COMPUTED_SIZE); // Use computed size for width","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"HAITAO2003"},"content":"        this.setMaxWidth(Double.MAX_VALUE); // Allow maximum width","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"HAITAO2003"},"content":"    private void flip() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"HAITAO2003"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"HAITAO2003"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"HAITAO2003"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"HAITAO2003"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"HAITAO2003"},"content":"        dialog.setStyle(\"-fx-background-radius: 15; -fx-background-color: #DCF8C6;\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"HAITAO2003"},"content":"    public static DialogBox getUserDialog(String text) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"HAITAO2003"},"content":"        var db \u003d new DialogBox(text, \"U\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"HAITAO2003"},"content":"        db.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"HAITAO2003"},"content":"        db.dialog.setAlignment(Pos.CENTER_RIGHT);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"HAITAO2003"},"content":"        return db;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"HAITAO2003"},"content":"    public static DialogBox getDukeDialog(String text) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"HAITAO2003"},"content":"        var db \u003d new DialogBox(text, \"D\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"HAITAO2003"},"content":"        db.flip();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"HAITAO2003"},"content":"        return db;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"HAITAO2003"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"HAITAO2003":80}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HAITAO2003"},"content":"package duke;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HAITAO2003"},"content":"import commands.Command;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HAITAO2003"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HAITAO2003"},"content":"public class Duke {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HAITAO2003"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HAITAO2003"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HAITAO2003"},"content":"    private Ui ui;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HAITAO2003"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HAITAO2003"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HAITAO2003"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HAITAO2003"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HAITAO2003"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HAITAO2003"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HAITAO2003"},"content":"            ui.showLoadingError();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HAITAO2003"},"content":"            // Initialize with empty task list instead of trying to load again","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HAITAO2003"},"content":"            tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HAITAO2003"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HAITAO2003"},"content":"     * Gets a response to user input","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HAITAO2003"},"content":"     * @param input The user input","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HAITAO2003"},"content":"     * @return Duke\u0027s response","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HAITAO2003"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HAITAO2003"},"content":"        try {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HAITAO2003"},"content":"            Command c \u003d Parser.parseCommand(input);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HAITAO2003"},"content":"            StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HAITAO2003"},"content":"            // Capture the response instead of printing to console","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HAITAO2003"},"content":"            ui.captureResponse(() -\u003e {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HAITAO2003"},"content":"                try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HAITAO2003"},"content":"                    c.execute(tasks, ui, storage);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HAITAO2003"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HAITAO2003"},"content":"                    ui.showError(e.getMessage());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HAITAO2003"},"content":"                }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HAITAO2003"},"content":"            }, response);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HAITAO2003"},"content":"            if (c.isExit()) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HAITAO2003"},"content":"                System.exit(0);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HAITAO2003"},"content":"            }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HAITAO2003"},"content":"            return response.toString();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HAITAO2003"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HAITAO2003"},"content":"            return \"☹ OOPS!!! \" + e.getMessage();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HAITAO2003"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HAITAO2003"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"HAITAO2003":51}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HAITAO2003"},"content":"package duke;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HAITAO2003"},"content":"/**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HAITAO2003"},"content":" * Custom exception class for Duke application.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HAITAO2003"},"content":" * Used to handle application-specific errors.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HAITAO2003"},"content":" */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HAITAO2003"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HAITAO2003"},"content":"     * Creates a new DukeException with the specified error message.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HAITAO2003"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HAITAO2003"},"content":"     * @param message The error message","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HAITAO2003"},"content":"    public DukeException(String message) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HAITAO2003"},"content":"        super(message);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HAITAO2003"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"HAITAO2003":16}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HAITAO2003"},"content":"package duke;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HAITAO2003"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HAITAO2003"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HAITAO2003"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HAITAO2003"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HAITAO2003"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HAITAO2003"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HAITAO2003"},"content":"    private Duke duke \u003d new Duke(\"data/tasks.txt\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HAITAO2003"},"content":"    @Override","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HAITAO2003"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HAITAO2003"},"content":"        try {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HAITAO2003"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HAITAO2003"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HAITAO2003"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HAITAO2003"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HAITAO2003"},"content":"            MainWindow mainWindow \u003d fxmlLoader.getController();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HAITAO2003"},"content":"            mainWindow.setDuke(duke);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HAITAO2003"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HAITAO2003"},"content":"            stage.show();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HAITAO2003"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HAITAO2003"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HAITAO2003"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HAITAO2003"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HAITAO2003"},"content":"        launch(args);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HAITAO2003"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"HAITAO2003":34}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HAITAO2003"},"content":"package duke;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HAITAO2003"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HAITAO2003"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HAITAO2003"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HAITAO2003"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HAITAO2003"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HAITAO2003"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HAITAO2003"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HAITAO2003"},"content":"public class MainWindow {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HAITAO2003"},"content":"    @FXML","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HAITAO2003"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HAITAO2003"},"content":"    @FXML","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HAITAO2003"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HAITAO2003"},"content":"    @FXML","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HAITAO2003"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HAITAO2003"},"content":"    @FXML","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HAITAO2003"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HAITAO2003"},"content":"    private Duke duke;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HAITAO2003"},"content":"    @FXML","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HAITAO2003"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HAITAO2003"},"content":"        // Configure ScrollPane","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HAITAO2003"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HAITAO2003"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.AS_NEEDED);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HAITAO2003"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HAITAO2003"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HAITAO2003"},"content":"        // Configure VBox (dialogContainer)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HAITAO2003"},"content":"        dialogContainer.setSpacing(10);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HAITAO2003"},"content":"        dialogContainer.setPadding(new Insets(10));","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HAITAO2003"},"content":"        dialogContainer.setMinWidth(Region.USE_PREF_SIZE);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HAITAO2003"},"content":"        dialogContainer.setPrefWidth(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HAITAO2003"},"content":"        dialogContainer.setMaxWidth(Double.MAX_VALUE);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HAITAO2003"},"content":"        // Bind scroll pane to follow the bottom","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HAITAO2003"},"content":"        dialogContainer.heightProperty().addListener((observable, oldValue, newValue) -\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HAITAO2003"},"content":"                scrollPane.setVvalue(1.0));","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HAITAO2003"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HAITAO2003"},"content":"        duke \u003d d;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HAITAO2003"},"content":"        DialogBox welcomeMessage \u003d DialogBox.getDukeDialog(","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HAITAO2003"},"content":"                \"Hello! I\u0027m Duke\\nWhat can I do for you?\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HAITAO2003"},"content":"        dialogContainer.getChildren().add(welcomeMessage);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HAITAO2003"},"content":"    @FXML","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HAITAO2003"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HAITAO2003"},"content":"        String input \u003d userInput.getText().trim();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"HAITAO2003"},"content":"        if (!input.isEmpty()) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"HAITAO2003"},"content":"            String response \u003d duke.getResponse(input);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"HAITAO2003"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"HAITAO2003"},"content":"                    DialogBox.getUserDialog(input),","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"HAITAO2003"},"content":"                    DialogBox.getDukeDialog(response)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"HAITAO2003"},"content":"            );","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"HAITAO2003"},"content":"            userInput.clear();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"HAITAO2003"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"HAITAO2003"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"HAITAO2003":62}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HAITAO2003"},"content":"package duke;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HAITAO2003"},"content":"import commands.*;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HAITAO2003"},"content":"import tasks.Deadline;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HAITAO2003"},"content":"import tasks.Event;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HAITAO2003"},"content":"import tasks.ToDo;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HAITAO2003"},"content":"/**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HAITAO2003"},"content":" * The Parser class handles the parsing of user input commands for the Duke task manager.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HAITAO2003"},"content":" * It converts string input into appropriate Command objects that can be executed by the system.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HAITAO2003"},"content":" * This class supports various commands including todo, deadline, event, list, mark, delete,","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HAITAO2003"},"content":" * exit, and find operations.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HAITAO2003"},"content":" */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HAITAO2003"},"content":"public class Parser {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HAITAO2003"},"content":"    private static final String COMMAND_TODO \u003d \"todo\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HAITAO2003"},"content":"    private static final String COMMAND_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HAITAO2003"},"content":"    private static final String COMMAND_EVENT \u003d \"event\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HAITAO2003"},"content":"    private static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HAITAO2003"},"content":"    private static final String COMMAND_MARK \u003d \"done\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HAITAO2003"},"content":"    private static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HAITAO2003"},"content":"    private static final String COMMAND_EXIT \u003d \"bye\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HAITAO2003"},"content":"    private static final String COMMAND_FIND \u003d \"find\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HAITAO2003"},"content":"     * Parses a user input string into a Command object.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HAITAO2003"},"content":"     * The input string is expected to contain a command type followed by arguments (if required).","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HAITAO2003"},"content":"     *","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HAITAO2003"},"content":"     * @param input The user input string to be parsed","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HAITAO2003"},"content":"     * @return A Command object corresponding to the user input","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HAITAO2003"},"content":"     * @throws DukeException If the input is empty, invalid, or missing required arguments","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HAITAO2003"},"content":"    public static Command parseCommand(String input) throws DukeException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HAITAO2003"},"content":"        // Assert input is not null","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HAITAO2003"},"content":"        assert input !\u003d null : \"Input string cannot be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HAITAO2003"},"content":"        String[] parts \u003d input.trim().split(\" \", 2);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HAITAO2003"},"content":"        // Assert that after trimming and splitting, we have at least one part","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HAITAO2003"},"content":"        assert parts.length \u003e 0 : \"Split result cannot be empty after trimming\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HAITAO2003"},"content":"        if (parts.length \u003d\u003d 0 || parts[0].isEmpty()) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HAITAO2003"},"content":"            throw new DukeException(\"Empty command!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HAITAO2003"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HAITAO2003"},"content":"        String commandType \u003d parts[0].toLowerCase();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HAITAO2003"},"content":"        String args \u003d parts.length \u003e 1 ? parts[1].trim() : \"\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HAITAO2003"},"content":"        // Assert commandType is lowercase and not empty","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HAITAO2003"},"content":"        assert !commandType.isEmpty() : \"Command type cannot be empty after processing\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HAITAO2003"},"content":"        assert commandType.equals(commandType.toLowerCase()) : \"Command type must be lowercase\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HAITAO2003"},"content":"        switch (commandType) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HAITAO2003"},"content":"            case COMMAND_DEADLINE:","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"HAITAO2003"},"content":"                return parseDeadline(args);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"HAITAO2003"},"content":"            case COMMAND_EVENT:","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"HAITAO2003"},"content":"                return parseEvent(args);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"HAITAO2003"},"content":"            case COMMAND_TODO:","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"HAITAO2003"},"content":"                return parseTodo(args);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"HAITAO2003"},"content":"            case COMMAND_DELETE:","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"HAITAO2003"},"content":"                return parseDelete(args);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"HAITAO2003"},"content":"            case COMMAND_MARK:","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"HAITAO2003"},"content":"                return parseMark(args);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"HAITAO2003"},"content":"            case COMMAND_LIST:","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"HAITAO2003"},"content":"                return new ListCommand();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"HAITAO2003"},"content":"            case COMMAND_EXIT:","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"HAITAO2003"},"content":"                return new ExitCommand();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"HAITAO2003"},"content":"            case COMMAND_FIND:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"HAITAO2003"},"content":"                return parseFind(args);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"HAITAO2003"},"content":"            default:","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"HAITAO2003"},"content":"                throw new DukeException(\"I don\u0027t understand that command. Please try again!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"HAITAO2003"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"HAITAO2003"},"content":"     * Parses a deadline task from the given arguments.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"HAITAO2003"},"content":"     * Expected format: description /by deadline_time","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"HAITAO2003"},"content":"     *","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"HAITAO2003"},"content":"     * @param args The string containing task description and deadline","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"HAITAO2003"},"content":"     * @return AddCommand containing the new Deadline task","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"HAITAO2003"},"content":"     * @throws DukeException If the format is invalid or description is empty","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"HAITAO2003"},"content":"    private static Command parseDeadline(String args) throws DukeException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"HAITAO2003"},"content":"        // Assert args is not null","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"HAITAO2003"},"content":"        assert args !\u003d null : \"Deadline arguments cannot be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"HAITAO2003"},"content":"        if (!args.contains(\"/by\")) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"HAITAO2003"},"content":"            throw new DukeException(\"Please provide a task description and deadline using /by!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"HAITAO2003"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"HAITAO2003"},"content":"        String[] parts \u003d args.split(\"/by\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"HAITAO2003"},"content":"        // Assert we have exactly two parts after splitting by \"/by\"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"HAITAO2003"},"content":"        assert parts.length \u003d\u003d 2 : \"Deadline must have exactly one /by delimiter\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"HAITAO2003"},"content":"        String description \u003d parts[0].strip();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"HAITAO2003"},"content":"        String deadline \u003d parts[1].strip();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"HAITAO2003"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"HAITAO2003"},"content":"            throw new DukeException(\"The task description cannot be empty!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"HAITAO2003"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"HAITAO2003"},"content":"        // Assert both description and deadline are not empty after stripping","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"HAITAO2003"},"content":"        assert !description.isEmpty() \u0026\u0026 !deadline.isEmpty() : \"Description and deadline must not be empty after stripping\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"HAITAO2003"},"content":"        return new AddCommand(new Deadline(description, deadline));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"HAITAO2003"},"content":"     * Parses a find command from the given arguments.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"HAITAO2003"},"content":"     * The argument should contain a non-empty search keyword.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"HAITAO2003"},"content":"     *","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"HAITAO2003"},"content":"     * @param args The search keyword","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"HAITAO2003"},"content":"     * @return FindCommand with the specified search keyword","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"HAITAO2003"},"content":"     * @throws DukeException If the search keyword is empty","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"HAITAO2003"},"content":"    private static Command parseFind(String args) throws DukeException {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"HAITAO2003"},"content":"        // Assert args is not null","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"HAITAO2003"},"content":"        assert args !\u003d null : \"Find arguments cannot be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"HAITAO2003"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"HAITAO2003"},"content":"            throw new DukeException(\"The search keyword cannot be empty!\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"HAITAO2003"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"HAITAO2003"},"content":"        // Assert search keyword is not empty after validation","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"HAITAO2003"},"content":"        assert !args.isEmpty() : \"Search keyword cannot be empty after validation\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"HAITAO2003"},"content":"        return new FindCommand(args);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"HAITAO2003"},"content":"     * Parses an event task from the given arguments.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"HAITAO2003"},"content":"     * Expected format: description /from start_time /to end_time","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"HAITAO2003"},"content":"     *","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"HAITAO2003"},"content":"     * @param args The string containing event description and timing details","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"HAITAO2003"},"content":"     * @return AddCommand containing the new Event task","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"HAITAO2003"},"content":"     * @throws DukeException If the format is invalid or description is empty","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"HAITAO2003"},"content":"    private static Command parseEvent(String args) throws DukeException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"HAITAO2003"},"content":"        // Assert args is not null","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"HAITAO2003"},"content":"        assert args !\u003d null : \"Event arguments cannot be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"HAITAO2003"},"content":"        if (!args.contains(\"/from\") || !args.contains(\"/to\")) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"HAITAO2003"},"content":"            throw new DukeException(\"Please provide event details with /from and /to!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"HAITAO2003"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"HAITAO2003"},"content":"        String[] parts \u003d args.split(\"/from|/to\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"HAITAO2003"},"content":"        // Assert we have exactly three parts after splitting","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"HAITAO2003"},"content":"        assert parts.length \u003d\u003d 3 : \"Event must have exactly one /from and one /to delimiter\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"HAITAO2003"},"content":"        String description \u003d parts[0].strip();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"HAITAO2003"},"content":"        String startTime \u003d parts[1].strip();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"HAITAO2003"},"content":"        String endTime \u003d parts[2].strip();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"HAITAO2003"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"HAITAO2003"},"content":"            throw new DukeException(\"The event description cannot be empty!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"HAITAO2003"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"HAITAO2003"},"content":"        // Assert all parts are not empty after stripping","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"HAITAO2003"},"content":"        assert !description.isEmpty() \u0026\u0026 !startTime.isEmpty() \u0026\u0026 !endTime.isEmpty() :","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"HAITAO2003"},"content":"                \"Description, start time, and end time must not be empty after stripping\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"HAITAO2003"},"content":"        return new AddCommand(new Event(description, startTime, endTime));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"HAITAO2003"},"content":"     * Parses a todo task from the given arguments.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"HAITAO2003"},"content":"     * The argument should contain a non-empty task description.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"HAITAO2003"},"content":"     *","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"HAITAO2003"},"content":"     * @param args The task description","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"HAITAO2003"},"content":"     * @return AddCommand containing the new ToDo task","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"HAITAO2003"},"content":"     * @throws DukeException If the description is empty","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"HAITAO2003"},"content":"    private static Command parseTodo(String args) throws DukeException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"HAITAO2003"},"content":"        // Assert args is not null","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"HAITAO2003"},"content":"        assert args !\u003d null : \"Todo arguments cannot be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"HAITAO2003"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"HAITAO2003"},"content":"            throw new DukeException(\"The description of a todo cannot be empty!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"HAITAO2003"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"HAITAO2003"},"content":"        // Assert description is not empty after validation","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"HAITAO2003"},"content":"        assert !args.isEmpty() : \"Todo description cannot be empty after validation\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"HAITAO2003"},"content":"        return new AddCommand(new ToDo(args));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"HAITAO2003"},"content":"     * Parses a delete command from the given arguments.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"HAITAO2003"},"content":"     * The argument should contain a valid positive integer representing the task index.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"HAITAO2003"},"content":"     *","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"HAITAO2003"},"content":"     * @param args The string containing the task index","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"HAITAO2003"},"content":"     * @return DeleteCommand with the specified task index","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"HAITAO2003"},"content":"     * @throws DukeException If the index is invalid or not a number","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"HAITAO2003"},"content":"    private static Command parseDelete(String args) throws DukeException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"HAITAO2003"},"content":"        // Assert args is not null","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"HAITAO2003"},"content":"        assert args !\u003d null : \"Delete arguments cannot be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"HAITAO2003"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"HAITAO2003"},"content":"            int index \u003d Integer.parseInt(args.trim());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"HAITAO2003"},"content":"            // Assert index is positive","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"HAITAO2003"},"content":"            assert index \u003e 0 : \"Delete index must be positive\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"HAITAO2003"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"HAITAO2003"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"HAITAO2003"},"content":"            throw new DukeException(\"Please provide a valid task number!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"HAITAO2003"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"HAITAO2003"},"content":"     * Parses a mark command from the given arguments.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"HAITAO2003"},"content":"     * The argument should contain a valid positive integer representing the task index.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"HAITAO2003"},"content":"     *","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"HAITAO2003"},"content":"     * @param args The string containing the task index","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"HAITAO2003"},"content":"     * @return MarkCommand with the specified task index","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"HAITAO2003"},"content":"     * @throws DukeException If the index is invalid, not positive, or not a number","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"HAITAO2003"},"content":"    private static Command parseMark(String args) throws DukeException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"HAITAO2003"},"content":"        // Assert args is not null","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"HAITAO2003"},"content":"        assert args !\u003d null : \"Mark arguments cannot be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"HAITAO2003"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"HAITAO2003"},"content":"            if (args.isEmpty()) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"HAITAO2003"},"content":"                throw new DukeException(\"Please specify which task to mark as done!\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"HAITAO2003"},"content":"            }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"HAITAO2003"},"content":"            int index \u003d Integer.parseInt(args.trim());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"HAITAO2003"},"content":"            if (index \u003c\u003d 0) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"HAITAO2003"},"content":"                throw new DukeException(\"Task number must be positive!\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"HAITAO2003"},"content":"            }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"HAITAO2003"},"content":"            // Assert index is positive after validation","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"HAITAO2003"},"content":"            assert index \u003e 0 : \"Mark index must be positive after validation\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"HAITAO2003"},"content":"            return new MarkCommand(index);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"HAITAO2003"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"HAITAO2003"},"content":"            throw new DukeException(\"Please provide a valid task number!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"HAITAO2003"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"HAITAO2003"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"HAITAO2003":229}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HAITAO2003"},"content":"package duke;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HAITAO2003"},"content":"import tasks.Deadline;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HAITAO2003"},"content":"import tasks.Event;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HAITAO2003"},"content":"import tasks.Task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HAITAO2003"},"content":"import tasks.ToDo;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HAITAO2003"},"content":"import java.io.*;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HAITAO2003"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HAITAO2003"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HAITAO2003"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HAITAO2003"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HAITAO2003"},"content":"import java.util.List;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HAITAO2003"},"content":"/**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HAITAO2003"},"content":" * Handles the loading and saving of task data to and from persistent storage.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HAITAO2003"},"content":" * Manages file operations and data conversion between Task objects and their string representation.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HAITAO2003"},"content":" */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HAITAO2003"},"content":"public class Storage {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HAITAO2003"},"content":"    private final String filePath;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HAITAO2003"},"content":"    private static final String DATA_DIR \u003d \"data\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HAITAO2003"},"content":"     * Creates a new Storage instance with the specified file path.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HAITAO2003"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HAITAO2003"},"content":"     * @param filePath The path where tasks will be saved to and loaded from","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HAITAO2003"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HAITAO2003"},"content":"        assert filePath !\u003d null : \"File path cannot be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HAITAO2003"},"content":"        assert !filePath.trim().isEmpty() : \"File path cannot be empty\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HAITAO2003"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HAITAO2003"},"content":"     * Saves the given list of tasks to the storage file.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HAITAO2003"},"content":"     * Creates the data directory if it doesn\u0027t exist.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HAITAO2003"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HAITAO2003"},"content":"     * @param tasks List of tasks to save","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HAITAO2003"},"content":"     * @throws DukeException if there\u0027s an error saving the tasks","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HAITAO2003"},"content":"    public void save(List\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HAITAO2003"},"content":"        assert tasks !\u003d null : \"Tasks list cannot be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HAITAO2003"},"content":"        assert tasks.stream().allMatch(task -\u003e task !\u003d null) : \"Tasks list cannot contain null elements\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HAITAO2003"},"content":"        try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HAITAO2003"},"content":"            ensureDirectoryExists();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HAITAO2003"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HAITAO2003"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HAITAO2003"},"content":"                writer.write(convertTaskToString(task));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HAITAO2003"},"content":"                writer.newLine();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HAITAO2003"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"HAITAO2003"},"content":"            writer.close();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"HAITAO2003"},"content":"            // Verify file exists after writing","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"HAITAO2003"},"content":"            assert new File(filePath).exists() : \"File should exist after saving\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"HAITAO2003"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"HAITAO2003"},"content":"            throw new DukeException(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"HAITAO2003"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"HAITAO2003"},"content":"     * Loads tasks from the storage file.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"HAITAO2003"},"content":"     * Creates the data directory if it doesn\u0027t exist.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"HAITAO2003"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"HAITAO2003"},"content":"     * @return ArrayList of tasks loaded from file","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"HAITAO2003"},"content":"     * @throws DukeException if there\u0027s an error loading the tasks","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"HAITAO2003"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"HAITAO2003"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"HAITAO2003"},"content":"        try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"HAITAO2003"},"content":"            ensureDirectoryExists();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"HAITAO2003"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"HAITAO2003"},"content":"            if (!file.exists()) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"HAITAO2003"},"content":"                return tasks;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"HAITAO2003"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"HAITAO2003"},"content":"            assert file.canRead() : \"File must be readable\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"HAITAO2003"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"HAITAO2003"},"content":"            String line;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"HAITAO2003"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"HAITAO2003"},"content":"                assert !line.trim().isEmpty() : \"Lines in file should not be empty\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"HAITAO2003"},"content":"                Task task \u003d convertStringToTask(line);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"HAITAO2003"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"HAITAO2003"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"HAITAO2003"},"content":"                }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"HAITAO2003"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"HAITAO2003"},"content":"            reader.close();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"HAITAO2003"},"content":"            // Verify all loaded tasks are valid","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"HAITAO2003"},"content":"            assert tasks.stream().allMatch(task -\u003e task !\u003d null) : \"All loaded tasks must be non-null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"HAITAO2003"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"HAITAO2003"},"content":"            throw new DukeException(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"HAITAO2003"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"HAITAO2003"},"content":"        return tasks;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"HAITAO2003"},"content":"     * Creates the data directory if it doesn\u0027t exist.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"HAITAO2003"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"HAITAO2003"},"content":"     * @throws IOException if there\u0027s an error creating the directory","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"HAITAO2003"},"content":"    private void ensureDirectoryExists() throws IOException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"HAITAO2003"},"content":"        assert DATA_DIR !\u003d null \u0026\u0026 !DATA_DIR.trim().isEmpty() : \"Data directory path cannot be null or empty\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"HAITAO2003"},"content":"        Path dirPath \u003d Paths.get(DATA_DIR);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"HAITAO2003"},"content":"        if (!Files.exists(dirPath)) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"HAITAO2003"},"content":"            Files.createDirectory(dirPath);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"HAITAO2003"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"HAITAO2003"},"content":"        assert Files.exists(dirPath) : \"Directory must exist after ensuring existence\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"HAITAO2003"},"content":"        assert Files.isDirectory(dirPath) : \"Path must point to a directory\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"HAITAO2003"},"content":"     * Converts a task object to its string representation for storage.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"HAITAO2003"},"content":"     * Format: [Type]|[Done]|[Description]|[Additional Details]","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"HAITAO2003"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"HAITAO2003"},"content":"     * @param task Task to convert","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"HAITAO2003"},"content":"     * @return String representation of the task","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"HAITAO2003"},"content":"    private String convertTaskToString(Task task) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"HAITAO2003"},"content":"        assert task !\u003d null : \"Task cannot be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"HAITAO2003"},"content":"        assert task.getDescription() !\u003d null : \"Task description cannot be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"HAITAO2003"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"HAITAO2003"},"content":"        if (task instanceof ToDo) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"HAITAO2003"},"content":"            sb.append(\"T\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"HAITAO2003"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"HAITAO2003"},"content":"            sb.append(\"D\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"HAITAO2003"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"HAITAO2003"},"content":"            sb.append(\"E\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"HAITAO2003"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"HAITAO2003"},"content":"        sb.append(\" | \").append(task.isDone() ? \"1\" : \"0\")","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"HAITAO2003"},"content":"                .append(\" | \").append(task.getDescription());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"HAITAO2003"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"HAITAO2003"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"HAITAO2003"},"content":"            assert deadline.getDeadline() !\u003d null : \"Deadline date cannot be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"HAITAO2003"},"content":"            sb.append(\" | \").append(deadline.getDeadline());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"HAITAO2003"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"HAITAO2003"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"HAITAO2003"},"content":"            assert event.getStartTime() !\u003d null : \"Event start time cannot be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"HAITAO2003"},"content":"            assert event.getEndTime() !\u003d null : \"Event end time cannot be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"HAITAO2003"},"content":"            sb.append(\" | \").append(event.getStartTime())","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"HAITAO2003"},"content":"                    .append(\" | \").append(event.getEndTime());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"HAITAO2003"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"HAITAO2003"},"content":"        String result \u003d sb.toString();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"HAITAO2003"},"content":"        assert result !\u003d null \u0026\u0026 !result.isEmpty() : \"Converted string cannot be null or empty\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"HAITAO2003"},"content":"        return result;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"HAITAO2003"},"content":"     * Converts a string from storage back to a Task object.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"HAITAO2003"},"content":"     * Handles ToDo, Deadline, and Event task types.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"HAITAO2003"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"HAITAO2003"},"content":"     * @param line String representation of task","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"HAITAO2003"},"content":"     * @return Task object","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"HAITAO2003"},"content":"     * @throws DukeException if there\u0027s an error parsing the line","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"HAITAO2003"},"content":"    private Task convertStringToTask(String line) throws DukeException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"HAITAO2003"},"content":"        assert line !\u003d null : \"Input line cannot be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"HAITAO2003"},"content":"        assert !line.trim().isEmpty() : \"Input line cannot be empty\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"HAITAO2003"},"content":"        try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"HAITAO2003"},"content":"            String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"HAITAO2003"},"content":"            assert parts.length \u003e\u003d 3 : \"Line must have at least type, status, and description\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"HAITAO2003"},"content":"            String type \u003d parts[0];","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"HAITAO2003"},"content":"            boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"HAITAO2003"},"content":"            String description \u003d parts[2];","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"HAITAO2003"},"content":"            assert type !\u003d null \u0026\u0026 !type.isEmpty() : \"Task type cannot be null or empty\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"HAITAO2003"},"content":"            assert description !\u003d null \u0026\u0026 !description.isEmpty() : \"Description cannot be null or empty\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"HAITAO2003"},"content":"            Task task \u003d null;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"HAITAO2003"},"content":"            switch (type) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"HAITAO2003"},"content":"                case \"T\":","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"HAITAO2003"},"content":"                    task \u003d new ToDo(description);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"HAITAO2003"},"content":"                    break;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"HAITAO2003"},"content":"                case \"D\":","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"HAITAO2003"},"content":"                    assert parts.length \u003e\u003d 4 : \"Deadline task must have a deadline date\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"HAITAO2003"},"content":"                    task \u003d new Deadline(description, parts[3]);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"HAITAO2003"},"content":"                    break;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"HAITAO2003"},"content":"                case \"E\":","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"HAITAO2003"},"content":"                    assert parts.length \u003e\u003d 5 : \"Event task must have start and end times\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"HAITAO2003"},"content":"                    task \u003d new Event(description, parts[3], parts[4]);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"HAITAO2003"},"content":"                    break;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"HAITAO2003"},"content":"                default:","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"HAITAO2003"},"content":"                    throw new DukeException(\"Unknown task type: \" + type);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"HAITAO2003"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"HAITAO2003"},"content":"            if (task !\u003d null \u0026\u0026 isDone) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"HAITAO2003"},"content":"                task.markDone();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"HAITAO2003"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"HAITAO2003"},"content":"            assert task !\u003d null : \"Created task cannot be null\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"HAITAO2003"},"content":"            return task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"HAITAO2003"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"HAITAO2003"},"content":"            throw new DukeException(\"Error parsing line: \" + line + \"\\n\" + e.getMessage());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"HAITAO2003"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"HAITAO2003"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"HAITAO2003":208}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HAITAO2003"},"content":"package duke;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HAITAO2003"},"content":"import tasks.Task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HAITAO2003"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HAITAO2003"},"content":"/**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HAITAO2003"},"content":" * Manages a list of tasks and provides operations to add, delete, and mark tasks as done.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HAITAO2003"},"content":" */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HAITAO2003"},"content":"public class TaskList {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HAITAO2003"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HAITAO2003"},"content":"     * Creates a new TaskList with the given list of tasks.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HAITAO2003"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HAITAO2003"},"content":"     * @param loadedTasks List of tasks to initialize with","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HAITAO2003"},"content":"    public TaskList(ArrayList\u003cTask\u003e loadedTasks) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HAITAO2003"},"content":"        this.list \u003d loadedTasks;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HAITAO2003"},"content":"     * Adds a new task to the list.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HAITAO2003"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HAITAO2003"},"content":"     * @param item Task to add","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HAITAO2003"},"content":"    public void addTask(Task item) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HAITAO2003"},"content":"        this.list.add(item);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HAITAO2003"},"content":"     * Deletes a task at the specified index.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HAITAO2003"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HAITAO2003"},"content":"     * @param index One-based index of the task to delete","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HAITAO2003"},"content":"     * @return The deleted task","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HAITAO2003"},"content":"     * @throws DukeException if the index is invalid","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HAITAO2003"},"content":"    public Task deleteTask(int index) throws DukeException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HAITAO2003"},"content":"        if (index \u003c 1 || index \u003e list.size()) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HAITAO2003"},"content":"            throw new DukeException(\"Invalid task number! Please provide a number between 1 and \" + list.size());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HAITAO2003"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HAITAO2003"},"content":"        return list.remove(index - 1);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HAITAO2003"},"content":"     * Marks a task as done at the specified index.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HAITAO2003"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HAITAO2003"},"content":"     * @param idx One-based index of the task to mark as done","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HAITAO2003"},"content":"     * @return The marked task","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HAITAO2003"},"content":"     * @throws DukeException if the index is invalid","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HAITAO2003"},"content":"    public Task markTaskDone(int idx) throws DukeException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"HAITAO2003"},"content":"        if (idx \u003c 1 || idx \u003e list.size()) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"HAITAO2003"},"content":"            throw new DukeException(\"Invalid task number! Please provide a number between 1 and \" + list.size());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"HAITAO2003"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"HAITAO2003"},"content":"        Task item \u003d this.list.get(idx - 1);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"HAITAO2003"},"content":"        item.markDone();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"HAITAO2003"},"content":"        return item;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"HAITAO2003"},"content":"     * Gets the list of all tasks.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"HAITAO2003"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"HAITAO2003"},"content":"     * @return ArrayList containing all tasks","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"HAITAO2003"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"HAITAO2003"},"content":"        return list;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"HAITAO2003"},"content":"     * Gets the number of tasks in the list.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"HAITAO2003"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"HAITAO2003"},"content":"     * @return The size of the task list","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"HAITAO2003"},"content":"    public int size() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"HAITAO2003"},"content":"        return this.list.size();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"HAITAO2003"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"HAITAO2003":78}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HAITAO2003"},"content":"package duke;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HAITAO2003"},"content":"import tasks.Deadline;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HAITAO2003"},"content":"import tasks.Event;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HAITAO2003"},"content":"import tasks.Task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HAITAO2003"},"content":"import java.util.List;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HAITAO2003"},"content":"public class Ui {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HAITAO2003"},"content":"    private StringBuilder responseCapture;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HAITAO2003"},"content":"    private static final String DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HAITAO2003"},"content":"    public void captureResponse(Runnable action, StringBuilder response) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HAITAO2003"},"content":"        this.responseCapture \u003d response;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HAITAO2003"},"content":"        action.run();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HAITAO2003"},"content":"        this.responseCapture \u003d null;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HAITAO2003"},"content":"    private void appendResponse(String... messages) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HAITAO2003"},"content":"        if (responseCapture !\u003d null) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HAITAO2003"},"content":"            for (String message : messages) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HAITAO2003"},"content":"                responseCapture.append(message).append(\"\\n\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HAITAO2003"},"content":"            }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HAITAO2003"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HAITAO2003"},"content":"    public void showLine() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HAITAO2003"},"content":"        appendResponse(DIVIDER);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HAITAO2003"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HAITAO2003"},"content":"        appendResponse(\"☹ OOPS!!! \" + message);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HAITAO2003"},"content":"    public void showLoadingError() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HAITAO2003"},"content":"        showError(\"Problem loading tasks from file.\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HAITAO2003"},"content":"    public void showToUser(String... messages) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HAITAO2003"},"content":"        for (String message : messages) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HAITAO2003"},"content":"            appendResponse(message);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HAITAO2003"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HAITAO2003"},"content":"    public void showAddedTask(Task task, int totalTasks) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HAITAO2003"},"content":"        showToUser(","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HAITAO2003"},"content":"                \"Got it. I\u0027ve added this task:\",","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HAITAO2003"},"content":"                formatTask(task),","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HAITAO2003"},"content":"                String.format(\"Now you have %d tasks in the list.\", totalTasks)","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HAITAO2003"},"content":"        );","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"HAITAO2003"},"content":"    public void showDeletedTask(Task task, int totalTasks) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"HAITAO2003"},"content":"        showToUser(","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"HAITAO2003"},"content":"                \"Noted. I\u0027ve removed this task:\",","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"HAITAO2003"},"content":"                formatTask(task),","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"HAITAO2003"},"content":"                String.format(\"Now you have %d tasks in the list.\", totalTasks)","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"HAITAO2003"},"content":"        );","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"HAITAO2003"},"content":"    public void showMarkedTask(Task task) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"HAITAO2003"},"content":"        showToUser(","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"HAITAO2003"},"content":"                \"Nice! I\u0027ve marked this task as done:\",","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"HAITAO2003"},"content":"                formatTask(task)","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"HAITAO2003"},"content":"        );","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"HAITAO2003"},"content":"    public void showMatchingTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"HAITAO2003"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"HAITAO2003"},"content":"            showToUser(\"No matching tasks found!\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"HAITAO2003"},"content":"            return;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"HAITAO2003"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"HAITAO2003"},"content":"        showToUser(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"HAITAO2003"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"HAITAO2003"},"content":"            showToUser(String.format(\"%d.%s\", i + 1, formatTask(tasks.get(i))));","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"HAITAO2003"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"HAITAO2003"},"content":"    public void showTaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"HAITAO2003"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"HAITAO2003"},"content":"            showToUser(\"No tasks in your list!\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"HAITAO2003"},"content":"            return;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"HAITAO2003"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"HAITAO2003"},"content":"        showToUser(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"HAITAO2003"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"HAITAO2003"},"content":"            showToUser(String.format(\"%d.%s\", i + 1, formatTask(tasks.get(i))));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"HAITAO2003"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"HAITAO2003"},"content":"    private String formatTask(Task task) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"HAITAO2003"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"HAITAO2003"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"HAITAO2003"},"content":"            return String.format(\"     [%s][%s] %s (by: %s)\",","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"HAITAO2003"},"content":"                    deadline.getTypeIcon(), deadline.getStatusIcon(),","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"HAITAO2003"},"content":"                    deadline.getDescription(), deadline.getDeadline());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"HAITAO2003"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"HAITAO2003"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"HAITAO2003"},"content":"            return String.format(\"     [%s][%s] %s (from: %s to: %s)\",","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"HAITAO2003"},"content":"                    event.getTypeIcon(), event.getStatusIcon(),","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"HAITAO2003"},"content":"                    event.getDescription(), event.getStartTime(), event.getEndTime());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"HAITAO2003"},"content":"        } else {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"HAITAO2003"},"content":"            return String.format(\"     [%s][%s] %s\",","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"HAITAO2003"},"content":"                    task.getTypeIcon(), task.getStatusIcon(),","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"HAITAO2003"},"content":"                    task.getDescription());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"HAITAO2003"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"HAITAO2003"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"HAITAO2003":107}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HAITAO2003"},"content":"package tasks;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HAITAO2003"},"content":"import duke.DukeException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HAITAO2003"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HAITAO2003"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HAITAO2003"},"content":"/**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HAITAO2003"},"content":" * Represents a task with a specific deadline.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HAITAO2003"},"content":" * Deadline tasks have a description and a date/time by which they must be completed.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HAITAO2003"},"content":" */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HAITAO2003"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HAITAO2003"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HAITAO2003"},"content":"     * Creates a new Deadline task.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HAITAO2003"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HAITAO2003"},"content":"     * @param description The description of the deadline task","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HAITAO2003"},"content":"     * @param deadlineStr The deadline date and time in format \"d/M/yyyy HHmm\"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HAITAO2003"},"content":"     * @throws DukeException If the deadline date format is invalid","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HAITAO2003"},"content":"    public Deadline(String description, String deadlineStr) throws DukeException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HAITAO2003"},"content":"        super(description);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HAITAO2003"},"content":"        try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HAITAO2003"},"content":"            this.dateTime \u003d LocalDateTime.parse(deadlineStr.strip(), Task.DATE_TIME_INPUT_FORMAT);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HAITAO2003"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HAITAO2003"},"content":"            throw new DukeException(\"Please enter date in format: d/M/yyyy HHmm (e.g., 2/12/2019 1800)\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HAITAO2003"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HAITAO2003"},"content":"     * Gets the type icon for deadline tasks.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HAITAO2003"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HAITAO2003"},"content":"     * @return The character \"D\" representing a deadline task","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HAITAO2003"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HAITAO2003"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HAITAO2003"},"content":"        return \"D\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HAITAO2003"},"content":"     * Gets the formatted deadline date and time.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HAITAO2003"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HAITAO2003"},"content":"     * @return The deadline date and time formatted according to DATE_TIME_PRINT_FORMAT","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HAITAO2003"},"content":"    public String getDeadline() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HAITAO2003"},"content":"        return dateTime.format(Task.DATE_TIME_PRINT_FORMAT);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HAITAO2003"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"HAITAO2003":49}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HAITAO2003"},"content":"package tasks;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HAITAO2003"},"content":"import duke.DukeException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HAITAO2003"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HAITAO2003"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HAITAO2003"},"content":"/**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HAITAO2003"},"content":" * Represents a task that occurs during a specific time period.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HAITAO2003"},"content":" * Event tasks have a description, start time, and end time.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HAITAO2003"},"content":" */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HAITAO2003"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HAITAO2003"},"content":"    private LocalDateTime startDateTime;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HAITAO2003"},"content":"    private LocalDateTime endDateTime;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HAITAO2003"},"content":"     * Creates a new Event task.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HAITAO2003"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HAITAO2003"},"content":"     * @param description The description of the event","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HAITAO2003"},"content":"     * @param startTimeStr The start date and time in format \"d/M/yyyy HHmm\"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HAITAO2003"},"content":"     * @param endTimeStr The end date and time in format \"d/M/yyyy HHmm\"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HAITAO2003"},"content":"     * @throws DukeException If the date format is invalid or end time is before start time","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HAITAO2003"},"content":"    public Event(String description, String startTimeStr, String endTimeStr) throws DukeException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HAITAO2003"},"content":"        super(description);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HAITAO2003"},"content":"        try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HAITAO2003"},"content":"            this.startDateTime \u003d LocalDateTime.parse(startTimeStr.strip(), Task.DATE_TIME_INPUT_FORMAT);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HAITAO2003"},"content":"            this.endDateTime \u003d LocalDateTime.parse(endTimeStr.strip(), Task.DATE_TIME_INPUT_FORMAT);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HAITAO2003"},"content":"            if (this.endDateTime.isBefore(this.startDateTime)) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HAITAO2003"},"content":"                throw new DukeException(\"End time cannot be before start time!\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HAITAO2003"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HAITAO2003"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HAITAO2003"},"content":"            throw new DukeException(\"Please enter dates in format: d/M/yyyy HHmm (e.g., 2/12/2019 1800)\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HAITAO2003"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HAITAO2003"},"content":"     * Gets the type icon for event tasks.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HAITAO2003"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HAITAO2003"},"content":"     * @return The character \"E\" representing an event task","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HAITAO2003"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HAITAO2003"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HAITAO2003"},"content":"        return \"E\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HAITAO2003"},"content":"     * Gets the formatted start date and time.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HAITAO2003"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HAITAO2003"},"content":"     * @return The start date and time formatted according to DATE_TIME_PRINT_FORMAT","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HAITAO2003"},"content":"    public String getStartTime() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"HAITAO2003"},"content":"        return startDateTime.format(Task.DATE_TIME_PRINT_FORMAT);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"HAITAO2003"},"content":"     * Gets the formatted end date and time.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"HAITAO2003"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"HAITAO2003"},"content":"     * @return The end date and time formatted according to DATE_TIME_PRINT_FORMAT","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"HAITAO2003"},"content":"    public String getEndTime() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"HAITAO2003"},"content":"        return endDateTime.format(Task.DATE_TIME_PRINT_FORMAT);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"HAITAO2003"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"HAITAO2003":64}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HAITAO2003"},"content":"package tasks;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HAITAO2003"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HAITAO2003"},"content":"/**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HAITAO2003"},"content":" * Abstract base class for all types of tasks.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HAITAO2003"},"content":" * Provides common functionality for task management.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HAITAO2003"},"content":" */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HAITAO2003"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HAITAO2003"},"content":"    protected String description;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HAITAO2003"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HAITAO2003"},"content":"    protected static final DateTimeFormatter DATE_TIME_INPUT_FORMAT \u003d","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HAITAO2003"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HAITAO2003"},"content":"    protected static final DateTimeFormatter DATE_TIME_PRINT_FORMAT \u003d","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HAITAO2003"},"content":"            DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mma\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HAITAO2003"},"content":"     * Gets the type icon specific to each task type.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HAITAO2003"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HAITAO2003"},"content":"     * @return A string representing the task type","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HAITAO2003"},"content":"    public abstract String getTypeIcon();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HAITAO2003"},"content":"     * Creates a new task with the given description.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HAITAO2003"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HAITAO2003"},"content":"     * @param description The description of the task","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HAITAO2003"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HAITAO2003"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HAITAO2003"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HAITAO2003"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HAITAO2003"},"content":"    public void markDone() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HAITAO2003"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HAITAO2003"},"content":"     * Gets the status icon indicating whether the task is done.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HAITAO2003"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HAITAO2003"},"content":"     * @return \"X\" if the task is done, \" \" if not done","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HAITAO2003"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HAITAO2003"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HAITAO2003"},"content":"     * Gets the description of the task.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"HAITAO2003"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"HAITAO2003"},"content":"     * @return The task description","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"HAITAO2003"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"HAITAO2003"},"content":"        return this.description;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"HAITAO2003"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"HAITAO2003"},"content":"        return isDone;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"HAITAO2003"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"HAITAO2003":62}},{"path":"src/main/java/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HAITAO2003"},"content":"package tasks;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HAITAO2003"},"content":"import duke.DukeException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HAITAO2003"},"content":"/**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HAITAO2003"},"content":" * Represents a simple todo task without any specific timing requirements.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HAITAO2003"},"content":" * Todo tasks only have a description.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HAITAO2003"},"content":" */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HAITAO2003"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HAITAO2003"},"content":"     * Creates a new ToDo task.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HAITAO2003"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HAITAO2003"},"content":"     * @param description The description of the todo task","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HAITAO2003"},"content":"     * @throws DukeException If the description is empty","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HAITAO2003"},"content":"    public ToDo(String description) throws DukeException {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HAITAO2003"},"content":"        super(description);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HAITAO2003"},"content":"        if (description.trim().isEmpty()) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HAITAO2003"},"content":"            throw new DukeException(\"Task description cannot be empty!\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HAITAO2003"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HAITAO2003"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HAITAO2003"},"content":"     * Gets the type icon for todo tasks.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HAITAO2003"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HAITAO2003"},"content":"     * @return The character \"T\" representing a todo task","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HAITAO2003"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HAITAO2003"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HAITAO2003"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HAITAO2003"},"content":"        return \"T\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HAITAO2003"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"HAITAO2003":32}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"HAITAO2003"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HAITAO2003"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HAITAO2003"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HAITAO2003"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HAITAO2003"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HAITAO2003"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HAITAO2003"},"content":"        \u003cLabel fx:id\u003d\"avatar\" text\u003d\"Label\" /\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HAITAO2003"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HAITAO2003"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"HAITAO2003":11}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"HAITAO2003"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HAITAO2003"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HAITAO2003"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HAITAO2003"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HAITAO2003"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HAITAO2003"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HAITAO2003"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HAITAO2003"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HAITAO2003"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HAITAO2003"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" spacing\u003d\"10\"\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HAITAO2003"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HAITAO2003"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HAITAO2003"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HAITAO2003"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HAITAO2003"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HAITAO2003"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"557.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"43.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HAITAO2003"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"557.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"43.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HAITAO2003"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"HAITAO2003":20}},{"path":"src/test/java/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HAITAO2003"},"content":"package tasks;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HAITAO2003"},"content":"import duke.DukeException;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HAITAO2003"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HAITAO2003"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HAITAO2003"},"content":"public class DeadlineTest {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HAITAO2003"},"content":"    @Test","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HAITAO2003"},"content":"    public void constructor_validDateTime_createsDeadline() throws DukeException {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HAITAO2003"},"content":"        // Test with a valid date time format","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HAITAO2003"},"content":"        Deadline deadline \u003d new Deadline(\"Submit report\", \"2/12/2024 1800\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HAITAO2003"},"content":"        assertEquals(\"Submit report\", deadline.getDescription());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HAITAO2003"},"content":"        assertEquals(\"D\", deadline.getTypeIcon());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HAITAO2003"},"content":"    @Test","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HAITAO2003"},"content":"    public void constructor_invalidDateTime_throwsDukeException() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HAITAO2003"},"content":"        // Test with invalid date time format","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HAITAO2003"},"content":"        Exception exception \u003d assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HAITAO2003"},"content":"            new Deadline(\"Submit report\", \"invalid-date\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HAITAO2003"},"content":"        });","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HAITAO2003"},"content":"        assertEquals(\"Please enter date in format: d/M/yyyy HHmm (e.g., 2/12/2019 1800)\",","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HAITAO2003"},"content":"                exception.getMessage());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HAITAO2003"},"content":"    @Test","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HAITAO2003"},"content":"    public void getDeadline_returnsFormattedDateTime() throws DukeException {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HAITAO2003"},"content":"        // Test the formatted output of the deadline","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HAITAO2003"},"content":"        Deadline deadline \u003d new Deadline(\"Submit report\", \"2/12/2024 1800\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HAITAO2003"},"content":"        assertEquals(\"Dec 2 2024, 6:00pm\", deadline.getDeadline());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HAITAO2003"},"content":"    @Test","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HAITAO2003"},"content":"    public void constructor_withWhitespace_handlesWhitespaceCorrectly() throws DukeException {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HAITAO2003"},"content":"        // Test that whitespace is handled correctly","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HAITAO2003"},"content":"        Deadline deadline \u003d new Deadline(\"Submit report\", \"  2/12/2024 1800  \");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HAITAO2003"},"content":"        assertEquals(\"Dec 2 2024, 6:00pm\", deadline.getDeadline());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HAITAO2003"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HAITAO2003"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"HAITAO2003":40}},{"path":"src/text-ui-test/EXPECTED.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HAITAO2003"},"content":"Hello from","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HAITAO2003"},"content":" ____        _","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HAITAO2003"},"content":"|  * \\ *   *| | *____","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HAITAO2003"},"content":"| | | | | | | |/ / _ \\","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HAITAO2003"},"content":"| |_| | |_| |   \u003c  __/","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HAITAO2003"},"content":"|____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HAITAO2003"},"content":"____________________________________________________________","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HAITAO2003"},"content":"Hello! I\u0027m duke.Duke","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HAITAO2003"},"content":"What can I do for you?","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HAITAO2003"},"content":"____________________________________________________________","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HAITAO2003"},"content":"____________________________________________________________","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HAITAO2003"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HAITAO2003"},"content":"     [T] [ ] read book","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HAITAO2003"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HAITAO2003"},"content":"____________________________________________________________","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HAITAO2003"},"content":"____________________________________________________________","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HAITAO2003"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HAITAO2003"},"content":"     [D] [ ] submit report (by: 2024-01-25)","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HAITAO2003"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HAITAO2003"},"content":"____________________________________________________________","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HAITAO2003"},"content":"____________________________________________________________","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HAITAO2003"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HAITAO2003"},"content":"     [E] [ ] team meeting (from:2024-01-22-14:00 to:2024-01-22-15:00)","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HAITAO2003"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HAITAO2003"},"content":"____________________________________________________________","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HAITAO2003"},"content":"____________________________________________________________","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HAITAO2003"},"content":"Here are the tasks in your list:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HAITAO2003"},"content":"1.[T] [ ] read book","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HAITAO2003"},"content":"2.[D] [ ] submit report (by: 2024-01-25)","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HAITAO2003"},"content":"3.[E] [ ] team meeting (from: 2024-01-22-14:00 to: 2024-01-22-15:00)","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HAITAO2003"},"content":"____________________________________________________________","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HAITAO2003"},"content":"____________________________________________________________","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HAITAO2003"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HAITAO2003"},"content":"  1.[X]read book","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"HAITAO2003"},"content":"____________________________________________________________","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"HAITAO2003"},"content":"____________________________________________________________","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"HAITAO2003"},"content":"Here are the tasks in your list:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"HAITAO2003"},"content":"1.[T] [X] read book","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"HAITAO2003"},"content":"2.[D] [ ] submit report (by: 2024-01-25)","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"HAITAO2003"},"content":"3.[E] [ ] team meeting (from: 2024-01-22-14:00 to: 2024-01-22-15:00)","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"HAITAO2003"},"content":"____________________________________________________________","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"HAITAO2003"},"content":"____________________________________________________________","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"HAITAO2003"},"content":"Deleted: read book","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"HAITAO2003"},"content":"____________________________________________________________","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"HAITAO2003"},"content":"____________________________________________________________","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"HAITAO2003"},"content":"Here are the tasks in your list:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"HAITAO2003"},"content":"1.[D] [ ] submit report (by: 2024-01-25)","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"HAITAO2003"},"content":"2.[E] [ ] team meeting (from: 2024-01-22-14:00 to: 2024-01-22-15:00)","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"HAITAO2003"},"content":"____________________________________________________________","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"HAITAO2003"},"content":"____________________________________________________________","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"HAITAO2003"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"HAITAO2003"},"content":"____________________________________________________________","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"HAITAO2003":52}},{"path":"src/text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HAITAO2003"},"content":"todo read book","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HAITAO2003"},"content":"deadline submit report /by 2024-01-25","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HAITAO2003"},"content":"event team meeting /from 2024-01-22-14:00 /to 2024-01-22-15:00","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HAITAO2003"},"content":"list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HAITAO2003"},"content":"mark 1","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HAITAO2003"},"content":"list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HAITAO2003"},"content":"delete read book","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HAITAO2003"},"content":"list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HAITAO2003"},"content":"bye","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"HAITAO2003":9}},{"path":"src/text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"HAITAO2003"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HAITAO2003"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HAITAO2003"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HAITAO2003"},"content":"then","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HAITAO2003"},"content":"    mkdir ../bin","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HAITAO2003"},"content":"fi","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HAITAO2003"},"content":"# delete output from previous run","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"HAITAO2003"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"HAITAO2003"},"content":"then","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"HAITAO2003"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"HAITAO2003"},"content":"fi","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"HAITAO2003"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"HAITAO2003"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"HAITAO2003"},"content":"then","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"HAITAO2003"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"HAITAO2003"},"content":"    exit 1","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"HAITAO2003"},"content":"fi","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"HAITAO2003"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"HAITAO2003"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"HAITAO2003"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"HAITAO2003"},"content":"# compare the output to the expected output","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"HAITAO2003"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"HAITAO2003"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"HAITAO2003"},"content":"then","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"HAITAO2003"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"HAITAO2003"},"content":"    exit 0","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"HAITAO2003"},"content":"else","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"HAITAO2003"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"HAITAO2003"},"content":"    exit 1","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"HAITAO2003"},"content":"fi","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"HAITAO2003":34}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HAITAO2003"},"content":"todo read book","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"HAITAO2003"},"content":"deadline submit report /by 2024-01-25","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"HAITAO2003"},"content":"event team meeting /from 2024-01-22-14:00 /to 2024-01-22-15:00","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"HAITAO2003"},"content":"list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"HAITAO2003"},"content":"mark 1","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"HAITAO2003"},"content":"list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"HAITAO2003"},"content":"delete read book","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"HAITAO2003"},"content":"list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"HAITAO2003"},"content":"bye","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"HAITAO2003":9}}]
