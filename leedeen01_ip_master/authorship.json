[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"Mavis - Task Manager Chatbot","lastModifiedDate":"2025-01-24T14:54:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"Mavis is a task manager chatbot that helps users manage their to-do lists. Users can add tasks, mark them as done or undone, delete tasks, and list all tasks. The chatbot tracks different types of tasks, including simple to-do items, deadlines, and events.","lastModifiedDate":"2025-01-24T14:54:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-24T14:54:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"Usage:","lastModifiedDate":"2025-01-24T14:54:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"Once you run the program, Mavis will greet you and prompt you to enter commands. Here are the commands you can use:","lastModifiedDate":"2025-01-24T14:54:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-24T14:54:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"Commands","lastModifiedDate":"2025-01-24T14:54:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":"list: Displays all tasks in the list.","lastModifiedDate":"2025-01-24T14:54:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":"todo \u003ctask description\u003e: Adds a new ToDo task.","lastModifiedDate":"2025-01-24T14:54:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":"deadline \u003ctask description\u003e /due \u003cdue date\u003e: Adds a new Deadline task.","lastModifiedDate":"2025-01-24T14:54:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":"event \u003ctask description\u003e /start \u003cstart date\u003e /end \u003cend date\u003e: Adds a new Event task.","lastModifiedDate":"2025-01-24T14:54:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":"mark \u003ctask number\u003e: Marks the specified task as done.","lastModifiedDate":"2025-01-24T14:54:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":"unmark \u003ctask number\u003e: Marks the specified task as undone.","lastModifiedDate":"2025-01-24T14:54:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":"delete \u003ctask number\u003e: Deletes the specified task.","lastModifiedDate":"2025-01-24T14:54:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"bye: Exits the program.","lastModifiedDate":"2025-01-24T14:54:16","isFullCredit":false}],"authorContributionMap":{"leedeen01":15}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":"checkstyle {","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leedeen01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leedeen01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leedeen01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leedeen01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leedeen01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leedeen01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leedeen01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"leedeen01"},"content":"   mainClass.set(\"mavis.Launcher\")","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"leedeen01"},"content":"    archiveBaseName \u003d \"mavis\"","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false}],"authorContributionMap":{"leedeen01":22,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"# Mavis User Guide","lastModifiedDate":"2025-01-22T21:14:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"Mavis is a task management chatbot designed to help users keep track of deadlines, events, and tasks efficiently.","lastModifiedDate":"2025-02-15T11:23:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"**Commands**:","lastModifiedDate":"2025-02-15T11:49:01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"- todo \u003ctask description\u003e: Adds a new ToDo task.","lastModifiedDate":"2025-02-15T11:47:15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":"- deadline \u003ctask description\u003e /due \u003cdue date\u003e: Adds a new Deadline task.","lastModifiedDate":"2025-02-15T11:47:15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"- event \u003ctask description\u003e /start \u003cstart date\u003e /end \u003cend date\u003e: Adds a new - Event task.","lastModifiedDate":"2025-02-15T11:47:15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":"- delete \u003ctask number\u003e: Deletes the specified task.","lastModifiedDate":"2025-02-15T11:47:15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":"- find \u003ctask description\u003e: Find a specific task.","lastModifiedDate":"2025-02-15T11:47:15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":"- mark \u003ctask number\u003e: Marks the specified task as done.","lastModifiedDate":"2025-02-15T11:47:15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":"- unmark \u003ctask number\u003e: Marks the specified task as undone.","lastModifiedDate":"2025-02-15T11:47:15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":"- bye: Exits the program.","lastModifiedDate":"2025-02-15T11:47:15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-15T11:44:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":"## Adding todo","lastModifiedDate":"2025-02-15T11:23:06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"### To add todo \"Buy groceries\"","lastModifiedDate":"2025-02-15T11:23:06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":"Example: todo Buy groceries","lastModifiedDate":"2025-02-15T11:23:06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2025-02-15T11:23:06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"### To add deadline \"Finish report\" by 2025-03-15 1600","lastModifiedDate":"2025-02-15T11:23:06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":"Example: deadline Finish report /by 2025-03-15 1600","lastModifiedDate":"2025-02-15T11:23:06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":"## Adding event","lastModifiedDate":"2025-02-15T11:23:06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leedeen01"},"content":"### To add event \"Team Meeting\" from 2025-03-20 1400 to 2025-03-20 1600","lastModifiedDate":"2025-02-15T11:23:06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":"Example: event Team meeting /start 2025-03-20 1400 /end 2025-03-20 1600","lastModifiedDate":"2025-02-15T11:23:06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leedeen01"},"content":"## Deleting task","lastModifiedDate":"2025-02-15T11:49:01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leedeen01"},"content":"### To delete task 1:","lastModifiedDate":"2025-02-15T11:23:06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leedeen01"},"content":"Example: delete 1","lastModifiedDate":"2025-02-15T11:23:06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leedeen01"},"content":"## Finding task","lastModifiedDate":"2025-02-15T11:49:01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"### To find task \"Finish report\":","lastModifiedDate":"2025-02-15T11:23:06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leedeen01"},"content":"Example: find Finish report","lastModifiedDate":"2025-02-15T11:23:06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leedeen01"},"content":"## List tasks","lastModifiedDate":"2025-02-15T11:49:01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leedeen01"},"content":"### To list all the tasks:","lastModifiedDate":"2025-02-15T11:23:06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leedeen01"},"content":"Example: list","lastModifiedDate":"2025-02-15T11:23:06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"leedeen01"},"content":"## Mark task","lastModifiedDate":"2025-02-15T11:49:01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"leedeen01"},"content":"### To mark task 1 on list:","lastModifiedDate":"2025-02-15T11:23:06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"leedeen01"},"content":"Example: mark 1","lastModifiedDate":"2025-02-15T11:23:06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"leedeen01"},"content":"## Unmark XYZ","lastModifiedDate":"2025-02-15T11:49:01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"leedeen01"},"content":"### To unmark task 1 on list:","lastModifiedDate":"2025-02-15T11:23:06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"leedeen01"},"content":"Example: unmark 1","lastModifiedDate":"2025-02-15T11:23:06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"leedeen01"},"content":"## End program","lastModifiedDate":"2025-02-15T11:49:01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"leedeen01"},"content":"### To exit:","lastModifiedDate":"2025-02-15T11:23:06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"leedeen01"},"content":"Example: bye","lastModifiedDate":"2025-02-15T11:23:06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false}],"authorContributionMap":{"leedeen01":38,"-":11}},{"path":"src/main/data/Mavis.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"T|0|eat food","lastModifiedDate":"2025-02-15T11:23:06","isFullCredit":false}],"authorContributionMap":{"leedeen01":1}},{"path":"src/main/java/mavis/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"package mavis;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":"/**","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":" */","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":"    @FXML","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leedeen01"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":"    @FXML","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leedeen01"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leedeen01"},"content":"     * Constructs a DialogBox object with the provided text and image.","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leedeen01"},"content":"     * The text is displayed in a Label, and the image is displayed in an ImageView.","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leedeen01"},"content":"     * The FXMLLoader is used to load the corresponding FXML layout for the dialog box.","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leedeen01"},"content":"     * @param text The text to be displayed in the dialog box.","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leedeen01"},"content":"     * @param img The image to be displayed in the dialog box.","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leedeen01"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leedeen01"},"content":"        try {","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leedeen01"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"leedeen01"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"leedeen01"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"leedeen01"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"leedeen01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"leedeen01"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"leedeen01"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"leedeen01"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"leedeen01"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"leedeen01"},"content":"    private void flip() {","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"leedeen01"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"leedeen01"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"leedeen01"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"leedeen01"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"leedeen01"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"leedeen01"},"content":"     * Creates a DialogBox representing the user\u0027s dialog with the specified text and image.","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"leedeen01"},"content":"     * @param text The text to be displayed in the dialog box.","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"leedeen01"},"content":"     * @param img The image to be displayed in the dialog box.","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"leedeen01"},"content":"     * @return A DialogBox representing the user\u0027s dialog.","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"leedeen01"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"leedeen01"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"leedeen01"},"content":"     * Creates a DialogBox representing Mavis\u0027 dialog with the specified text and image.","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"leedeen01"},"content":"     * The dialog box is flipped so that the ImageView is on the left and the text is on the right.","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"leedeen01"},"content":"     * @param text The text to be displayed in the dialog box.","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"leedeen01"},"content":"     * @param img The image to be displayed in the dialog box.","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"leedeen01"},"content":"     * @return A DialogBox representing Mavis\u0027 dialog.","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"leedeen01"},"content":"    public static DialogBox getMavisDialog(String text, Image img) {","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"leedeen01"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"leedeen01"},"content":"        db.flip();","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"leedeen01"},"content":"        return db;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false}],"authorContributionMap":{"leedeen01":85}},{"path":"src/main/java/mavis/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"package mavis;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"/**","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":" */","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":"public class Launcher {","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false}],"authorContributionMap":{"leedeen01":12}},{"path":"src/main/java/mavis/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"package mavis;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"import java.io.File;","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":"/**","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":" * A GUI for Mavis using FXML.","lastModifiedDate":"2025-02-07T21:02:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":" */","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":"     * The Mavis instance used to interact with the task management system.","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"     * This object is responsible for handling of UI, storage of tasks","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":"     * and handling user input.","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":"    private Mavis mavisBot;","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leedeen01"},"content":"     * Initializes and starts the JavaFX application by loading the main window\u0027s FXML file,","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leedeen01"},"content":"     * configuring the stage, and displaying the window.","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leedeen01"},"content":"     * This method is called when the application is launched.","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leedeen01"},"content":"     * @param stage The primary stage for this application, provided by the JavaFX runtime.","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"    @Override","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leedeen01"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leedeen01"},"content":"        try {","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leedeen01"},"content":"            // Get the directory where the JAR file is located","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leedeen01"},"content":"            String filePath \u003d getFilePath();","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leedeen01"},"content":"            // Ensure the directory and file exist","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"leedeen01"},"content":"            ensureDirectoryAndFile(filePath);","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"leedeen01"},"content":"            // Initialize Mavis with the file path","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"leedeen01"},"content":"            mavisBot \u003d new Mavis(filePath);","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"leedeen01"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"leedeen01"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"leedeen01"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"leedeen01"},"content":"            configureStage(stage, scene);","lastModifiedDate":"2025-02-08T10:22:38","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"leedeen01"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setMavis(mavisBot);","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"leedeen01"},"content":"            stage.show();","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"leedeen01"},"content":"        } catch (IOException | URISyntaxException e) {","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"leedeen01"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-08T10:22:38","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-02-08T10:22:38","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"leedeen01"},"content":"     * Configures the given {@link Stage} with the specified {@link Scene}.","lastModifiedDate":"2025-02-08T10:22:38","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"leedeen01"},"content":"     * Sets the scene and adjusts the stage\u0027s minimum and maximum dimensions.","lastModifiedDate":"2025-02-08T10:22:38","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-02-08T10:22:38","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"leedeen01"},"content":"     * @param stage The primary stage to configure.","lastModifiedDate":"2025-02-08T10:22:38","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"leedeen01"},"content":"     * @param scene The scene to be set on the stage.","lastModifiedDate":"2025-02-08T10:22:38","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-02-08T10:22:38","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"leedeen01"},"content":"    public void configureStage(Stage stage, Scene scene) {","lastModifiedDate":"2025-02-08T10:22:38","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"leedeen01"},"content":"        stage.setScene(scene);","lastModifiedDate":"2025-02-08T10:22:38","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"leedeen01"},"content":"        stage.setMinHeight(220);","lastModifiedDate":"2025-02-08T10:22:38","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"leedeen01"},"content":"        stage.setMinWidth(417);","lastModifiedDate":"2025-02-08T10:22:38","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"leedeen01"},"content":"        stage.setMaxWidth(417);","lastModifiedDate":"2025-02-08T10:22:38","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-02-08T10:22:38","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"leedeen01"},"content":"     * Constructs the correct file path for Mavis.txt relative to the JAR file\u0027s location.","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"leedeen01"},"content":"     * @return The file path for the Mavis.txt file.","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"leedeen01"},"content":"     * @throws URISyntaxException If there is an error in URI processing.","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"leedeen01"},"content":"    private String getFilePath() throws URISyntaxException {","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"leedeen01"},"content":"        File jarFile \u003d new File(Main.class.getProtectionDomain().getCodeSource().getLocation().toURI());","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"leedeen01"},"content":"        String jarDirectory \u003d jarFile.getParent(); // Path to the directory where the .jar is stored","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"leedeen01"},"content":"        return jarDirectory + File.separator + \"data\" + File.separator + \"Mavis.txt\";","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"leedeen01"},"content":"     * Ensures the \u0027data\u0027 directory exists, and creates it if it doesn\u0027t.","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"leedeen01"},"content":"     * Also creates the Mavis.txt file if it doesn\u0027t already exist.","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"leedeen01"},"content":"     * @param filePath The file path to the Mavis.txt file.","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"leedeen01"},"content":"     * @throws IOException If an error occurs during file or directory creation.","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"leedeen01"},"content":"    private void ensureDirectoryAndFile(String filePath) throws IOException {","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"leedeen01"},"content":"        File directory \u003d new File(filePath).getParentFile();","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"leedeen01"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"leedeen01"},"content":"            boolean dirCreated \u003d directory.mkdirs();","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"leedeen01"},"content":"            if (dirCreated) {","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"leedeen01"},"content":"                System.out.println(\"Directory created: \" + directory.getAbsolutePath());","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"leedeen01"},"content":"            }","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"leedeen01"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"leedeen01"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"leedeen01"},"content":"            boolean fileCreated \u003d file.createNewFile();","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"leedeen01"},"content":"            if (fileCreated) {","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"leedeen01"},"content":"                System.out.println(\"File created: \" + file.getAbsolutePath());","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"leedeen01"},"content":"            }","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false}],"authorContributionMap":{"leedeen01":103}},{"path":"src/main/java/mavis/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"package mavis;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"import java.util.Random;","lastModifiedDate":"2025-02-11T00:22:25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-11T00:22:25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":"/**","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":" * Controller for the main GUI of the Mavis application.","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":" *","lastModifiedDate":"2025-02-15T14:04:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":" * This class manages the main window of the application, handling user input,","lastModifiedDate":"2025-02-11T00:22:25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":" * displaying dialog boxes","lastModifiedDate":"2025-02-11T00:22:25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":" * for interaction, and managing the layout of the user interface.","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":" *","lastModifiedDate":"2025-02-15T14:04:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":" */","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":"    @FXML","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leedeen01"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":"    @FXML","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leedeen01"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leedeen01"},"content":"    @FXML","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leedeen01"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leedeen01"},"content":"    @FXML","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leedeen01"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"    private Mavis mavis;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leedeen01"},"content":"     * The image representing the user in the dialog box.","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leedeen01"},"content":"    private Image userImage;","lastModifiedDate":"2025-02-11T00:22:25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"leedeen01"},"content":"     * The image representing Mavis (the bot) in the dialog box.","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"leedeen01"},"content":"    private Image mavisImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/mavisBot.png\"));","lastModifiedDate":"2025-02-11T00:22:25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"leedeen01"},"content":"    private Image errorImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/error.png\"));","lastModifiedDate":"2025-02-11T00:22:25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"leedeen01"},"content":"    private boolean isLoggedOff \u003d true;","lastModifiedDate":"2025-02-11T10:00:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"leedeen01"},"content":"     * Initializes the main window by binding the scroll pane\u0027s value property to","lastModifiedDate":"2025-02-11T00:22:25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"leedeen01"},"content":"     * the dialog container\u0027s height property","lastModifiedDate":"2025-02-11T00:22:25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"leedeen01"},"content":"     * and adding an initial dialog box from Mavis.","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"leedeen01"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"leedeen01"},"content":"     * This method ensures that the dialog container automatically scrolls as new","lastModifiedDate":"2025-02-11T00:22:25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"leedeen01"},"content":"     * messages are added.","lastModifiedDate":"2025-02-11T00:22:25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"leedeen01"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"leedeen01"},"content":"    @FXML","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"leedeen01"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"leedeen01"},"content":"        // Randomize Mavis\u0027s image","lastModifiedDate":"2025-02-11T00:22:25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"leedeen01"},"content":"        isLoggedOff \u003d false;","lastModifiedDate":"2025-02-11T10:00:52","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"leedeen01"},"content":"        userImage \u003d getRandomPokemonImage();","lastModifiedDate":"2025-02-11T00:22:25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"leedeen01"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"leedeen01"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"leedeen01"},"content":"                DialogBox.getMavisDialog(\"Hello! I\u0027m Nurse Mavis\\nHow can I help you on your journey?\", mavisImage));","lastModifiedDate":"2025-02-11T00:22:25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"leedeen01"},"content":"     * Injects the Mavis instance into this controller to facilitate interaction","lastModifiedDate":"2025-02-11T00:22:25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"leedeen01"},"content":"     * with the task manager.","lastModifiedDate":"2025-02-11T00:22:25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"leedeen01"},"content":"     * @param m The Mavis instance to be injected.","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"leedeen01"},"content":"    public void setMavis(Mavis m) {","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"leedeen01"},"content":"        mavis \u003d m;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"leedeen01"},"content":"     * Handles the user input, creating two dialog boxes: one for the user input and","lastModifiedDate":"2025-02-11T00:22:25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"leedeen01"},"content":"     * one for Mavis\u0027s response.","lastModifiedDate":"2025-02-11T00:22:25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"leedeen01"},"content":"     * The dialog boxes are then added to the dialog container.","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"leedeen01"},"content":"     * The user input field is cleared after processing.","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"leedeen01"},"content":"    @FXML","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"leedeen01"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"leedeen01"},"content":"        if (isLoggedOff) {","lastModifiedDate":"2025-02-11T10:00:52","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"leedeen01"},"content":"            initialize();","lastModifiedDate":"2025-02-11T10:00:52","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-02-11T10:00:52","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"leedeen01"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"leedeen01"},"content":"        String response \u003d mavis.getResponse(input);","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"leedeen01"},"content":"        if (response.startsWith(\"Farewell\")) {","lastModifiedDate":"2025-02-11T10:00:52","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"leedeen01"},"content":"            isLoggedOff \u003d true;","lastModifiedDate":"2025-02-11T10:00:52","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-11T10:00:52","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-02-11T10:00:52","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"leedeen01"},"content":"        Image responseImage \u003d response.startsWith(\"Prepare for trouble\") ? errorImage : mavisImage;","lastModifiedDate":"2025-02-11T10:00:52","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"leedeen01"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"leedeen01"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"leedeen01"},"content":"                DialogBox.getMavisDialog(response, responseImage)","lastModifiedDate":"2025-02-11T10:00:52","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"leedeen01"},"content":"        );","lastModifiedDate":"2025-02-11T10:00:52","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"leedeen01"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-11T00:22:25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-02-11T00:22:25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"leedeen01"},"content":"     * Returns a randomly selected image for Mavis from a predefined set.","lastModifiedDate":"2025-02-15T15:19:36","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-02-11T00:22:25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"leedeen01"},"content":"     * @return A randomly chosen Image object.","lastModifiedDate":"2025-02-11T00:22:25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-02-11T00:22:25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"leedeen01"},"content":"    private Image getRandomPokemonImage() {","lastModifiedDate":"2025-02-11T00:22:25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"leedeen01"},"content":"        String[] images \u003d { \"/images/charmander.png\", \"/images/squirtle.png\", \"/images/bulba.png\" };","lastModifiedDate":"2025-02-11T00:22:25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"leedeen01"},"content":"        Random random \u003d new Random();","lastModifiedDate":"2025-02-11T00:22:25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"leedeen01"},"content":"        String selectedImagePath \u003d images[random.nextInt(images.length)];","lastModifiedDate":"2025-02-11T00:22:25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"leedeen01"},"content":"        return new Image(this.getClass().getResourceAsStream(selectedImagePath));","lastModifiedDate":"2025-02-11T00:22:25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-02-11T00:22:25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false}],"authorContributionMap":{"leedeen01":110}},{"path":"src/main/java/mavis/Mavis.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"package mavis;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"import mavis.command.Command;","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"/**","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":" * Mavis is a simple task management application that interacts with","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":" * the user via the command line to add, delete, mark, and unmark tasks.","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":" * It supports ToDo, Deadline, and Event tasks.","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":" * Invalid input is handled with error messages.","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":" */","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":"public class Mavis {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":"     * Manages the storage of task data, including loading and saving tasks from/to a file.","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":"     * Holds and manages the list of tasks in the application.","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":"     * Tasks are loaded from storage and manipulated through this list.","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leedeen01"},"content":"     * Handles user interactions, providing a user interface for input/output operations.","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-02-08T11:10:15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leedeen01"},"content":"    private Ui ui;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leedeen01"},"content":"     * Constructs a Mavis object with the specified file path.","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leedeen01"},"content":"     * Initializes the UI, storage, and task list.","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"     * @param filePath The file path to load and save tasks.","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leedeen01"},"content":"    public Mavis(final String filePath) {","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leedeen01"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leedeen01"},"content":"        assert ui !\u003d null : \"Ui should not be null\";","lastModifiedDate":"2025-02-08T09:44:54","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leedeen01"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leedeen01"},"content":"        assert storage !\u003d null : \"Storage should not be null\";","lastModifiedDate":"2025-02-08T09:44:54","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"leedeen01"},"content":"        try {","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"leedeen01"},"content":"            this.taskList \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"leedeen01"},"content":"            assert taskList !\u003d null : \"TaskList should not be null\";","lastModifiedDate":"2025-02-08T09:44:54","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"leedeen01"},"content":"        } catch (MavisException e) {","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"leedeen01"},"content":"            this.taskList \u003d new TaskList();","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"leedeen01"},"content":"            storage.saveTasks(taskList);","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-02-08T10:22:38","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"leedeen01"},"content":"     * Processes the user input, executes the corresponding command,","lastModifiedDate":"2025-02-08T10:22:38","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"leedeen01"},"content":"     * and returns the response as a string.","lastModifiedDate":"2025-02-08T10:22:38","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-02-08T10:22:38","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"leedeen01"},"content":"     * This method parses the input into a {@link Command}, executes it","lastModifiedDate":"2025-02-08T10:22:38","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"leedeen01"},"content":"     * using the current task list, UI, and storage, and returns the","lastModifiedDate":"2025-02-08T10:22:38","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"leedeen01"},"content":"     * resulting response. If an exception occurs, an error message is returned.","lastModifiedDate":"2025-02-08T10:22:38","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-02-08T10:22:38","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"leedeen01"},"content":"     * @param input The user input command as a string.","lastModifiedDate":"2025-02-08T10:22:38","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"leedeen01"},"content":"     * @return The response message after executing the command.","lastModifiedDate":"2025-02-08T10:22:38","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-02-08T10:22:38","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"leedeen01"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"leedeen01"},"content":"        try {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"leedeen01"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"leedeen01"},"content":"            String response \u003d c.execute(taskList, ui, storage);","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"leedeen01"},"content":"            return response;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"leedeen01"},"content":"        } catch (MavisException e) {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"leedeen01"},"content":"            return \"Prepare for trouble, and make it double! \" + e.getMessage();","lastModifiedDate":"2025-02-11T00:22:25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false}],"authorContributionMap":{"leedeen01":67}},{"path":"src/main/java/mavis/MavisException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"package mavis;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"/**","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":" * MavisException is a custom exception class for handling errors specific to the Mavis application.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":" * It extends the built-in {@link Exception} class.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":" */","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"public class MavisException extends Exception {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":"     * Constructs a new MavisException with the specified detail message.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":"     * @param message The detail message, which is saved for later retrieval by the","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":"     *     {@link Throwable#getMessage()} method.","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":"    public MavisException(String message) {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":"        super(message);","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false}],"authorContributionMap":{"leedeen01":16}},{"path":"src/main/java/mavis/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"package mavis;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"import mavis.command.AddCommand;","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":"import mavis.command.Command;","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":"import mavis.command.DeleteCommand;","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":"import mavis.command.ExitCommand;","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":"import mavis.command.FindCommand;","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":"import mavis.command.ListCommand;","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":"import mavis.command.MarkCommand;","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":"import mavis.command.UnmarkCommand;","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"import mavis.task.Deadline;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":"import mavis.task.Event;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":"import mavis.task.ToDo;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"/**","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":" * The Parser class is responsible for parsing user input commands and","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":" * converting them into","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":" * corresponding {@link Command} objects that can be executed.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leedeen01"},"content":" * It supports commands to add tasks (ToDo, Deadline, Event), delete tasks, mark","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":" * or unmark tasks,","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leedeen01"},"content":" * exit the application, and list tasks.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leedeen01"},"content":" */","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leedeen01"},"content":"public class Parser {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leedeen01"},"content":"     * Parses the user input string and returns a corresponding {@link Command} object.","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"     * This method identifies the type of command (e.g., \"todo\", \"deadline\", \"event\", etc.)","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leedeen01"},"content":"     * and creates the appropriate {@link Command} object based on the input.","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leedeen01"},"content":"     * @param inputs The user input as a string array.","lastModifiedDate":"2025-02-02T15:21:34","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leedeen01"},"content":"     * @return A {@link Command} object representing the parsed input.","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leedeen01"},"content":"     * @throws MavisException If the input is invalid or the format is incorrect for a task.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"leedeen01"},"content":"    public static Command parse(String... inputs) throws MavisException {","lastModifiedDate":"2025-02-02T15:21:34","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"leedeen01"},"content":"        assert inputs !\u003d null : \"Inputs should not be null\";","lastModifiedDate":"2025-02-08T09:44:54","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"leedeen01"},"content":"        if (inputs.length \u003d\u003d 0 || inputs[0].isEmpty()) {","lastModifiedDate":"2025-02-02T15:21:34","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"leedeen01"},"content":"            throw new MavisException(\"Input cannot be empty.\");","lastModifiedDate":"2025-02-02T15:21:34","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-02-02T15:21:34","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"leedeen01"},"content":"        String input \u003d String.join(\" \", inputs).trim();","lastModifiedDate":"2025-02-02T15:21:34","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"leedeen01"},"content":"        String[] words \u003d input.split(\" \", 2);","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"leedeen01"},"content":"        String commandType \u003d words[0].toLowerCase();","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"leedeen01"},"content":"        String args \u003d words.length \u003e 1 ? words[1].trim() : \"\";","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"leedeen01"},"content":"        switch (commandType) {","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"leedeen01"},"content":"        case \"todo\":","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"leedeen01"},"content":"            return parseToDo(args);","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"leedeen01"},"content":"        case \"deadline\":","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"leedeen01"},"content":"            return parseDeadline(args);","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"leedeen01"},"content":"        case \"event\":","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"leedeen01"},"content":"            return parseEvent(args);","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"leedeen01"},"content":"        case \"delete\":","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"leedeen01"},"content":"            return parseDelete(args);","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"leedeen01"},"content":"        case \"mark\":","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"leedeen01"},"content":"            return parseMark(args);","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"leedeen01"},"content":"        case \"unmark\":","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"leedeen01"},"content":"            return parseUnmark(args);","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"leedeen01"},"content":"        case \"find\":","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"leedeen01"},"content":"            return parseFind(args);","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"leedeen01"},"content":"        case \"bye\":","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"leedeen01"},"content":"            return new ExitCommand();","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"leedeen01"},"content":"        case \"list\":","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"leedeen01"},"content":"            return new ListCommand();","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"leedeen01"},"content":"        default:","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"leedeen01"},"content":"            throw new MavisException(\"I\u0027m sorry, but I don\u0027t know what that means.\");","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"leedeen01"},"content":"     * Parses and creates a ToDo task.","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"leedeen01"},"content":"     * @param args The description of the ToDo task.","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"leedeen01"},"content":"     * @return A {@link Command} to add a ToDo task.","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"leedeen01"},"content":"     * @throws MavisException If the description is empty.","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"leedeen01"},"content":"    private static Command parseToDo(String args) throws MavisException {","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"leedeen01"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"leedeen01"},"content":"            throw new MavisException(\"The description of a ToDo cannot be empty.\");","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"leedeen01"},"content":"        return new AddCommand(new ToDo(args));","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"leedeen01"},"content":"     * Parses and creates a Deadline task.","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"leedeen01"},"content":"     * @param args The description and due date of the Deadline task.","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"leedeen01"},"content":"     * @return A {@link Command} to add a Deadline task.","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"leedeen01"},"content":"     * @throws MavisException If the format is incorrect.","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"leedeen01"},"content":"    private static Command parseDeadline(String args) throws MavisException {","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"leedeen01"},"content":"        String[] parts \u003d args.split(\"/\", 2);","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"leedeen01"},"content":"        if (parts.length \u003c 2 || !parts[1].trim().toLowerCase().startsWith(\"by \")) {","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"leedeen01"},"content":"            throw new MavisException(\"A deadline task must be in this format: task /by yyyy-MM-dd HHmm.\");","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"leedeen01"},"content":"        String desc \u003d parts[0].trim();","lastModifiedDate":"2025-02-02T15:21:34","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"leedeen01"},"content":"        String by \u003d parts[1].trim().substring(3).trim();","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"leedeen01"},"content":"        return new AddCommand(new Deadline(desc, by));","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"leedeen01"},"content":"     * Parses and creates an Event task.","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"leedeen01"},"content":"     * @param args The description, start, and end time of the Event task.","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"leedeen01"},"content":"     * @return A {@link Command} to add an Event task.","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"leedeen01"},"content":"     * @throws MavisException If the format is incorrect or the start time is not before the end time.","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"leedeen01"},"content":"    private static Command parseEvent(String args) throws MavisException {","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"leedeen01"},"content":"        String[] parts \u003d args.split(\"/\", 3);","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"leedeen01"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-02-02T15:21:34","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"leedeen01"},"content":"            throw new MavisException(\"An event task must be in this format: \"","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"leedeen01"},"content":"                + \"task /start yyyy-MM-dd HHmm /end yyyy-MM-dd HHmm.\");","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"leedeen01"},"content":"        String desc \u003d parts[0].trim();","lastModifiedDate":"2025-02-02T15:21:34","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"leedeen01"},"content":"        String start \u003d extractArg(parts[1], \"start\");","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"leedeen01"},"content":"        String end \u003d extractArg(parts[2], \"end\");","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"leedeen01"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"leedeen01"},"content":"        LocalDateTime startDate;","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"leedeen01"},"content":"        LocalDateTime endDate;","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"leedeen01"},"content":"        try {","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"leedeen01"},"content":"            startDate \u003d LocalDateTime.parse(start, formatter);","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"leedeen01"},"content":"            endDate \u003d LocalDateTime.parse(end, formatter);","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"leedeen01"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"leedeen01"},"content":"            throw new MavisException(\"Invalid date format. Use yyyy-MM-dd HHmm.\");","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"leedeen01"},"content":"        if (!startDate.isBefore(endDate)) {","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"leedeen01"},"content":"            throw new MavisException(\"Start time must be before end time.\");","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"leedeen01"},"content":"        return new AddCommand(new Event(desc, startDate, endDate));","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"leedeen01"},"content":"    private static Command parseDelete(String args) throws MavisException {","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"leedeen01"},"content":"        int index \u003d parseIndex(args, \"Delete\");","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"leedeen01"},"content":"        return new DeleteCommand(index);","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"leedeen01"},"content":"    private static Command parseMark(String args) throws MavisException {","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"leedeen01"},"content":"        int index \u003d parseIndex(args, \"Mark\");","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"leedeen01"},"content":"        return new MarkCommand(index);","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-02-02T15:21:34","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"leedeen01"},"content":"    private static Command parseUnmark(String args) throws MavisException {","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"leedeen01"},"content":"        int index \u003d parseIndex(args, \"Unmark\");","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"leedeen01"},"content":"        return new UnmarkCommand(index);","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-02-02T15:21:34","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"leedeen01"},"content":"    private static Command parseFind(String args) throws MavisException {","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"leedeen01"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"leedeen01"},"content":"            throw new MavisException(\"Find command requires a search term.\");","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"leedeen01"},"content":"        return new FindCommand(args);","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-02-02T15:21:34","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"leedeen01"},"content":"    private static int parseIndex(String args, String command) throws MavisException {","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"leedeen01"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"leedeen01"},"content":"            throw new MavisException(command + \" command requires an index.\");","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-02-02T15:21:34","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"leedeen01"},"content":"        try {","lastModifiedDate":"2025-02-02T15:21:34","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"leedeen01"},"content":"            return Integer.parseInt(args);","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"leedeen01"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-02T15:21:34","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"leedeen01"},"content":"            throw new MavisException(\"Invalid index for \" + command + \" command.\");","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-02-02T15:21:34","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-02-02T15:21:34","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"leedeen01"},"content":"    private static String extractArg(String input, String expected) throws MavisException {","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"leedeen01"},"content":"        if (!input.trim().toLowerCase().startsWith(expected + \" \")) {","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"leedeen01"},"content":"            throw new MavisException(\"Expected \u0027/\" + expected + \" yyyy-MM-dd HHmm\u0027.\");","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"leedeen01"},"content":"        return input.trim().substring(expected.length()).trim();","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false}],"authorContributionMap":{"leedeen01":172}},{"path":"src/main/java/mavis/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"package mavis;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"import java.io.File;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":"import mavis.task.Deadline;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":"import mavis.task.Event;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":"import mavis.task.Task;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":"import mavis.task.ToDo;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":"/**","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":" * The Storage class is responsible for loading and saving tasks to and from a file.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":" * It handles task persistence, reading tasks from a specified file path, and saving","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":" * tasks back to the file when updated.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":" */","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"public class Storage {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":"     * The file path to the Mavis data file for this task manager.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":"    private String filePath;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leedeen01"},"content":"     * Constructs a new Storage object with the specified file path.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leedeen01"},"content":"     * @param filePath The path to the file where tasks are saved.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leedeen01"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"        assert filePath !\u003d null \u0026\u0026 !filePath.isEmpty() : \"File path cannot be null or empty\";","lastModifiedDate":"2025-02-08T09:44:54","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leedeen01"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leedeen01"},"content":"     * Loads tasks from the file specified by {@code filePath} into a list of {@link Task} objects.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leedeen01"},"content":"     * If the file is empty or does not exist, an empty list is returned.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"leedeen01"},"content":"     * @return A list of tasks loaded from the file.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"leedeen01"},"content":"     * @throws IOException If an error occurs while reading from the file.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"leedeen01"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws MavisException {","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"leedeen01"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"leedeen01"},"content":"        ArrayList\u003cTask\u003e tasksList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"leedeen01"},"content":"        if (!file.exists() || file.length() \u003d\u003d 0) {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"leedeen01"},"content":"            return tasksList;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"leedeen01"},"content":"        try (Scanner scanner \u003d new Scanner(file)) {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"leedeen01"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"leedeen01"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"leedeen01"},"content":"                Task task \u003d parseFileTask(line);","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"leedeen01"},"content":"                assert task !\u003d null : \"Parsed task should never be null\";","lastModifiedDate":"2025-02-08T09:44:54","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"leedeen01"},"content":"                tasksList.add(task);","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"leedeen01"},"content":"            }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"leedeen01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"leedeen01"},"content":"            System.out.println(\"An error occurred while loading tasks from the file.\");","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"leedeen01"},"content":"        return tasksList;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"leedeen01"},"content":"     * Parses a line of text into a {@link Task} object based on the task type.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"leedeen01"},"content":"     * @param line The line of text to parse.","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"leedeen01"},"content":"     * @return A {@link Task} object if parsing is successful; {@code null} otherwise.","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"leedeen01"},"content":"    public Task parseFileTask(String line) throws MavisException {","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"leedeen01"},"content":"        String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"leedeen01"},"content":"        String taskType \u003d parts[0];","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"leedeen01"},"content":"        Boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"leedeen01"},"content":"        String name \u003d parts[2];","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"leedeen01"},"content":"        Task task \u003d null;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"leedeen01"},"content":"        switch (taskType) {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"leedeen01"},"content":"        case \"T\":","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"leedeen01"},"content":"            task \u003d new ToDo(name, isDone);","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"leedeen01"},"content":"            break;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"leedeen01"},"content":"        case \"D\":","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"leedeen01"},"content":"            assert parts.length \u003d\u003d 4 : \"Deadline task must have 4 parts\";","lastModifiedDate":"2025-02-08T09:44:54","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"leedeen01"},"content":"            String by \u003d parts[3];","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"leedeen01"},"content":"            task \u003d new Deadline(name, by, isDone);","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"leedeen01"},"content":"            break;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"leedeen01"},"content":"        case \"E\":","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"leedeen01"},"content":"            assert parts.length \u003d\u003d 5 : \"Event task must have 5 parts\";","lastModifiedDate":"2025-02-08T09:44:54","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"leedeen01"},"content":"            String from \u003d parts[3];","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"leedeen01"},"content":"            String to \u003d parts[4];","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"leedeen01"},"content":"            task \u003d new Event(name, from, to, isDone);","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"leedeen01"},"content":"            break;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"leedeen01"},"content":"        default:","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"leedeen01"},"content":"            throw new MavisException(\"Invalid task type found in file.\");","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"leedeen01"},"content":"        return task;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"leedeen01"},"content":"     * Saves all tasks in the specified {@link TaskList} to the file at {@code filePath}.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"leedeen01"},"content":"     * If the list is not empty, each task is written to the file, one per line.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"leedeen01"},"content":"     * @param taskList The task list to save.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"leedeen01"},"content":"     * @throws IOException If an error occurs while writing to the file.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"leedeen01"},"content":"    public void saveTasks(TaskList taskList) {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"leedeen01"},"content":"        ArrayList\u003cTask\u003e tasksList \u003d taskList.getTasksList();","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"leedeen01"},"content":"        try (FileWriter fw \u003d new FileWriter(filePath)) {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"leedeen01"},"content":"            if (!tasksList.isEmpty()) {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"leedeen01"},"content":"                for (Task task : tasksList) {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"leedeen01"},"content":"                    assert task !\u003d null : \"Task in list should not be null\";","lastModifiedDate":"2025-02-08T09:44:54","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"leedeen01"},"content":"                    fw.write(task.saveTask() + System.lineSeparator());","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"leedeen01"},"content":"                }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"leedeen01"},"content":"            }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"leedeen01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"leedeen01"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-02-15T13:20:07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"leedeen01"},"content":"            System.out.println(\"An error occurred while saving tasks to the file.\");","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false}],"authorContributionMap":{"leedeen01":113}},{"path":"src/main/java/mavis/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"package mavis;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"import mavis.task.Task;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"/**","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":" * The TaskList class provides functionality to manage a collection of tasks.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":" * It allows performing various operations on tasks, such as:","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":" *","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":" * - Adding new tasks","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":" * - Deleting tasks by their identifier","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":" * - Marking tasks as completed or incomplete","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":" * - Listing all tasks with their current status","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":" *","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":" * This class is designed to efficiently handle task management, providing","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":" * an organized way to interact with a list of tasks.","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":" */","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"public class TaskList {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":"     * An integer variable that keeps track of the total number of tasks in the list.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":"    private Integer taskCount;","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leedeen01"},"content":"     * A list that stores all the tasks managed by the TaskManager.","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leedeen01"},"content":"    private ArrayList\u003cTask\u003e tasksList;","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leedeen01"},"content":"     * Constructs a new TaskList with an empty list of tasks.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leedeen01"},"content":"    public TaskList() {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leedeen01"},"content":"        this.tasksList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leedeen01"},"content":"        taskCount \u003d 0;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"leedeen01"},"content":"     * Constructs a new TaskList with an existing list of tasks.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"leedeen01"},"content":"     * @param tasksList A list of existing tasks to initialize the TaskList.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"leedeen01"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasksList) {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"leedeen01"},"content":"        this.tasksList \u003d tasksList;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"leedeen01"},"content":"        taskCount \u003d tasksList.size();","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"leedeen01"},"content":"     * Adds a new task to the list.","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"leedeen01"},"content":"     * @param task The task to be added.","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"leedeen01"},"content":"    public void addTask(Task task) throws MavisException {","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"leedeen01"},"content":"        checkAnomalies(task);","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"leedeen01"},"content":"        tasksList.add(task);","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"leedeen01"},"content":"        taskCount++;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"leedeen01"},"content":"     * Checks for date and time anomalies between a given task and the list of existing tasks.","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"leedeen01"},"content":"     * If an anomaly (overlap) is found, an exception is thrown.","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"leedeen01"},"content":"     * @param newTask The task to check for anomalies against the existing tasks.","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"leedeen01"},"content":"     * @throws MavisException If a date/time overlap is found between the new task and any existing task.","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"leedeen01"},"content":"    public void checkAnomalies(Task newTask) throws MavisException {","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"leedeen01"},"content":"        for (Task existingTask : tasksList) {","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"leedeen01"},"content":"            if (existingTask.getClass().equals(newTask.getClass())) { // Ensure they are different classes","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"leedeen01"},"content":"                existingTask.checkOverlapAnomalies(newTask);","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"leedeen01"},"content":"            }","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"leedeen01"},"content":"     * Deletes a task from the list based on the given task number.","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"leedeen01"},"content":"     * @param taskNumber The 1-based index of the task to be deleted.","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"leedeen01"},"content":"     * @return The task that was deleted.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"leedeen01"},"content":"     * @throws MavisException If the task number is invalid.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"leedeen01"},"content":"    public Task deleteTask(int taskNumber) throws MavisException {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"leedeen01"},"content":"        if (taskNumber \u003c 1 || taskNumber \u003e tasksList.size()) {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"leedeen01"},"content":"            throw new MavisException(\"Invalid task number. Please enter a valid task number.\");","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"leedeen01"},"content":"        Task task \u003d tasksList.remove(taskNumber - 1);","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"leedeen01"},"content":"        taskCount--;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"leedeen01"},"content":"        return task;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"leedeen01"},"content":"     * Marks a task as done based on the given task number.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"leedeen01"},"content":"     * @param taskNumber The 1-based index of the task to be updated.","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"leedeen01"},"content":"     * @return The task that was marked as done.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"leedeen01"},"content":"     * @throws MavisException If the task number is invalid.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"leedeen01"},"content":"    public Task markDone(int taskNumber) throws MavisException {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"leedeen01"},"content":"        if (taskNumber \u003c 1 || taskNumber \u003e tasksList.size()) {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"leedeen01"},"content":"            throw new MavisException(\"Invalid task number. Please enter a valid task number.\");","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"leedeen01"},"content":"        Task task \u003d tasksList.get(taskNumber - 1);","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"leedeen01"},"content":"        task.setDone(true);","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"leedeen01"},"content":"        return task;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"leedeen01"},"content":"     * Marks a task as undone based on the given task number.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"leedeen01"},"content":"     * @param taskNumber The 1-based index of the task to be updated.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"leedeen01"},"content":"     * @return The task that was marked as undone.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"leedeen01"},"content":"     * @throws MavisException If the task number is invalid.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"leedeen01"},"content":"    public Task unmarkDone(int taskNumber) throws MavisException {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"leedeen01"},"content":"        if (taskNumber \u003c 1 || taskNumber \u003e tasksList.size()) {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"leedeen01"},"content":"            throw new MavisException(\"Invalid task number. Please enter a valid task number.\");","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"leedeen01"},"content":"        Task task \u003d tasksList.get(taskNumber - 1);","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"leedeen01"},"content":"        task.setDone(false);","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"leedeen01"},"content":"        return task;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"leedeen01"},"content":"     * Returns the list of all tasks in the TaskList.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"leedeen01"},"content":"     * @return The list of tasks.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"leedeen01"},"content":"    public ArrayList\u003cTask\u003e getTasksList() {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"leedeen01"},"content":"        return tasksList;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"leedeen01"},"content":"     * Finds tasks in the task list that contain the specified keyword in their name.","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"leedeen01"},"content":"     * @param keyword The keyword to search for in the task names.","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"leedeen01"},"content":"     * @return A list of tasks whose names contain the given keyword.","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"leedeen01"},"content":"    public ArrayList\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"leedeen01"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"leedeen01"},"content":"        for (Task task : tasksList) {","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"leedeen01"},"content":"            if (task.getName().contains(keyword)) {","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"leedeen01"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"leedeen01"},"content":"            }","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"leedeen01"},"content":"        return matchingTasks;","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false}],"authorContributionMap":{"leedeen01":148}},{"path":"src/main/java/mavis/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"package mavis;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"import mavis.task.Task;","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"/**","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":" * The Ui class is responsible for handling user interface interactions,","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":" * including reading commands and displaying messages to the user.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":" *","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":" * It provides methods for showing task-related messages, such as adding, deleting,","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":" * marking, and unmarking tasks, as well as displaying the task list.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":" */","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":"public class Ui {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":"     * Displays a message confirming the addition of a task.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"     * @param task The task that was added.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":"    public String showTaskAdded(Task task) {","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":"        return \"Nice catch! I\u0027ve added this task to your journey:\\r\\n\" + task.report();","lastModifiedDate":"2025-02-11T00:22:25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leedeen01"},"content":"     * Displays a message confirming the deletion of a task.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leedeen01"},"content":"     * @param task The task that was removed.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leedeen01"},"content":"    public String showDeleteTask(Task task) {","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"        return \"Task released! It\u0027s no longer part of your adventure:\\r\\\\n\" + task.report();","lastModifiedDate":"2025-02-11T00:22:25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leedeen01"},"content":"     * Displays a message confirming that a task has been marked as done.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leedeen01"},"content":"     * @param task The task that was marked as done.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"leedeen01"},"content":"    public String showMarkTask(Task task) {","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"leedeen01"},"content":"        return \"Great work, Trainer! This task is now completed:\\r\\n\" + task.report();","lastModifiedDate":"2025-02-11T00:22:25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"leedeen01"},"content":"     * Displays a message confirming that a task has been marked as not done.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"leedeen01"},"content":"     * @param task The task that was marked as not done.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"leedeen01"},"content":"    public String showUnmarkTask(Task task) {","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"leedeen01"},"content":"        return \"Oops! This task isn\u0027t done yet. Keep training!\\r\\n\" + task.report();","lastModifiedDate":"2025-02-11T00:22:25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"leedeen01"},"content":"     * Displays a list of all tasks currently stored in the TaskManager.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"leedeen01"},"content":"     * @param taskList The TaskList object that holds all tasks.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"leedeen01"},"content":"    public String printTasks(TaskList taskList) {","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"leedeen01"},"content":"        StringBuilder list \u003d new StringBuilder();","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"leedeen01"},"content":"        ArrayList\u003cTask\u003e tasksList \u003d taskList.getTasksList();","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"leedeen01"},"content":"        if (tasksList.isEmpty()) {","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"leedeen01"},"content":"            return \"No tasks matched your search! Keep exploring and discovering new challenges.\";","lastModifiedDate":"2025-02-11T00:22:25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"leedeen01"},"content":"        for (int i \u003d 0; i \u003c tasksList.size() - 1; i++) {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"leedeen01"},"content":"            list.append(i + 1).append(\". \").append(tasksList.get(i).report()).append(\"\\n\");","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"leedeen01"},"content":"        list.append(tasksList.size()).append(\". \").append(tasksList.get(tasksList.size() - 1).report());","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"leedeen01"},"content":"        return \"Here are the tasks that match your search:\\n\" + list;","lastModifiedDate":"2025-02-11T00:22:25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"leedeen01"},"content":"     * Displays a goodbye message to the user.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"leedeen01"},"content":"    public String showGoodbyeMessage() {","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"leedeen01"},"content":"        return \"Farewell, Trainer! May your Pokémon grow strong and your journey be legendary!\";","lastModifiedDate":"2025-02-11T00:22:25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"leedeen01"},"content":"     * Displays the tasks that match the search keyword.","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"leedeen01"},"content":"     * If no tasks match, it prints a message indicating no matches were found.","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"leedeen01"},"content":"     * @param matchingTasks The list of tasks that match the search criteria.","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"leedeen01"},"content":"    public String showMatchingTasks(ArrayList\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"leedeen01"},"content":"        StringBuilder list \u003d new StringBuilder();","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"leedeen01"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"leedeen01"},"content":"            return \"No tasks matched your search! Keep exploring and discovering new challenges.\";","lastModifiedDate":"2025-02-11T00:22:25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"leedeen01"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.size() - 1; i++) {","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"leedeen01"},"content":"            list.append(i + 1).append(\". \").append(matchingTasks.get(i).report()).append(\"\\n\");","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"leedeen01"},"content":"        list.append(matchingTasks.size()).append(\". \").append(matchingTasks.get(matchingTasks.size() - 1).report());","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"leedeen01"},"content":"        return \"Here are the tasks that match your search:\\n\" + list;","lastModifiedDate":"2025-02-11T00:22:25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false}],"authorContributionMap":{"leedeen01":94}},{"path":"src/main/java/mavis/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"package mavis.command;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"import mavis.MavisException;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"import mavis.Storage;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"import mavis.TaskList;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":"import mavis.Ui;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"import mavis.task.Task;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":"/**","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":" * The AddCommand class is responsible for adding a task to the task list.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":" * It extends the abstract Command class and implements the logic for adding a task to the TaskList,","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":" * saving the updated task list to storage, and displaying a confirmation message via the UI.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":" */","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":"     * The task to be added to the task list.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"    private Task task;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":"     * Constructs an AddCommand to add the specified task to the task list.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":"     * @param task The task to be added.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leedeen01"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leedeen01"},"content":"        this.task \u003d task;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"     * Executes the add command which adds a task to the task list, saves the updated task list to storage,","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leedeen01"},"content":"     * and returns a response message indicating that the task has been added.","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leedeen01"},"content":"     * @param taskList The list of tasks to which the new task will be added.","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leedeen01"},"content":"     * @param ui The UI component that handles user interactions and displays messages.","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leedeen01"},"content":"     * @param storage The storage component that handles saving and loading tasks from persistent storage.","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leedeen01"},"content":"     * @return A response message indicating that the task has been added.","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"leedeen01"},"content":"     * @throws MavisException If there is an error while saving the tasks to storage.","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"leedeen01"},"content":"    @Override","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"leedeen01"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws MavisException {","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"leedeen01"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"leedeen01"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"leedeen01"},"content":"        String response \u003d ui.showTaskAdded(task);","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"leedeen01"},"content":"        return response;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"leedeen01"},"content":"     * Checks if this command is an exit command.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"leedeen01"},"content":"     * @return false, since the AddCommand does not result in an exit.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"leedeen01"},"content":"    @Override","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"leedeen01"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"leedeen01"},"content":"        return false;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false}],"authorContributionMap":{"leedeen01":57}},{"path":"src/main/java/mavis/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"package mavis.command;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"import mavis.MavisException;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"import mavis.Storage;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"import mavis.TaskList;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":"import mavis.Ui;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":"/**","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":" * The Command class is an abstract base class for all commands in the application.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":" * It defines the structure for commands that can interact with the task list,","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":" * user interface, and storage. Concrete command classes should extend this class","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":" * and implement the specific execution logic.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":" */","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":"public abstract class Command {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":"     * Executes the command and returns the result as a string.","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":"     * @param tasks The list of tasks to be manipulated by the command.","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":"     * @param ui The user interface that interacts with the user.","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":"     * @param storage The storage that handles saving and loading of tasks.","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leedeen01"},"content":"     * @return The result of the command execution as a string.","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":"     * @throws MavisException If an error occurs during command execution.","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leedeen01"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws MavisException;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leedeen01"},"content":"     * Determines whether this command results in an exit action.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leedeen01"},"content":"     * Concrete subclasses should return true if the command leads to the application exiting.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leedeen01"},"content":"     * @return true if the command results in an exit; false otherwise.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leedeen01"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false}],"authorContributionMap":{"leedeen01":35}},{"path":"src/main/java/mavis/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"package mavis.command;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"import mavis.MavisException;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"import mavis.Storage;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"import mavis.TaskList;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":"import mavis.Ui;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"import mavis.task.Task;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":"/**","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":" * The DeleteCommand class represents a command to delete a task from the task list.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":" * It extends the Command class and implements the logic for removing a task by its index.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":" * The task is then deleted from the list, the task list is saved to storage,","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":" * and the user is informed of the deletion.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":" */","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":"     * The index of the task to be deleted in the task list.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"    private int index;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":"     * Constructs a DeleteCommand with the specified index of the task to delete.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":"     * @param index The index of the task to delete in the task list.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leedeen01"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leedeen01"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"     * Executes the delete command by removing the task at the specified index from the task list.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leedeen01"},"content":"     * The task list is then saved to storage, and the user is notified about the task deletion.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leedeen01"},"content":"     * @param taskList The task list that holds all tasks.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leedeen01"},"content":"     * @param ui The user interface used to show feedback to the user.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leedeen01"},"content":"     * @param storage The storage to save the updated task list.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leedeen01"},"content":"     * @throws MavisException If the index is invalid or the task list is empty.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"leedeen01"},"content":"    @Override","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"leedeen01"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws MavisException {","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"leedeen01"},"content":"        Task task \u003d taskList.deleteTask(index);","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"leedeen01"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"leedeen01"},"content":"        String response \u003d ui.showDeleteTask(task);","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"leedeen01"},"content":"        return response;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"leedeen01"},"content":"     * Determines whether this command results in an exit action.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"leedeen01"},"content":"     * Since deleting a task does not cause an exit, this method returns false.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"leedeen01"},"content":"     * @return false as the delete command does not exit the application.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"leedeen01"},"content":"    @Override","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"leedeen01"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"leedeen01"},"content":"        return false;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false}],"authorContributionMap":{"leedeen01":57}},{"path":"src/main/java/mavis/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"package mavis.command;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"import mavis.Storage;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"import mavis.TaskList;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"import mavis.Ui;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"/**","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":" * The ExitCommand class represents a command to exit the application.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":" * It extends the Command class and implements the logic for saving the current task list","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":" * to storage and displaying a goodbye message before exiting the program.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":" */","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"     * Executes the exit command by saving the current task list to storage","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":"     * and displaying a goodbye message to the user.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":"     * @param taskList The task list that holds all tasks.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"     * @param ui The user interface used to show feedback to the user.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":"     * @param storage The storage to save the current task list.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":"    @Override","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leedeen01"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leedeen01"},"content":"        String response \u003d ui.showGoodbyeMessage();","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leedeen01"},"content":"        return response;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leedeen01"},"content":"     * Determines whether this command results in an exit action.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"     * Since this command is meant to exit the application, it returns true.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leedeen01"},"content":"     * @return true, indicating that the exit command results in exiting the program.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leedeen01"},"content":"    @Override","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leedeen01"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leedeen01"},"content":"        return true;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false}],"authorContributionMap":{"leedeen01":39}},{"path":"src/main/java/mavis/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"package mavis.command;","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"import mavis.Storage;","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":"import mavis.TaskList;","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"import mavis.Ui;","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":"import mavis.task.Task;","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":"/**","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":" * Represents a command that searches for tasks in the task list based on a keyword.","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":" */","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":"    private String keyword;","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":"     * Constructs a FindCommand with the specified keyword.","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"     * @param keyword The keyword to search for in the task list.","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leedeen01"},"content":"     * Executes the find command, searching for tasks that match the given keyword.","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leedeen01"},"content":"     * The matching tasks are then displayed to the user.","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leedeen01"},"content":"     * @param taskList The list of tasks to search through.","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leedeen01"},"content":"     * @param ui The user interface that displays the matching tasks.","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"     * @param storage The storage system used to save and retrieve tasks.","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leedeen01"},"content":"    @Override","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leedeen01"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leedeen01"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d taskList.findTasks(keyword);","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leedeen01"},"content":"        String response \u003d ui.showMatchingTasks(matchingTasks);","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leedeen01"},"content":"        return response;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"leedeen01"},"content":"     * Indicates whether this command will terminate the program.","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"leedeen01"},"content":"     * @return false, as the FindCommand does not exit the program.","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"leedeen01"},"content":"    @Override","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"leedeen01"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"leedeen01"},"content":"        return false;","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false}],"authorContributionMap":{"leedeen01":49}},{"path":"src/main/java/mavis/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"package mavis.command;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"import mavis.Storage;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"import mavis.TaskList;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"import mavis.Ui;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"/**","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":" * The ListCommand class represents a command to list all tasks in the task list.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":" * It extends the Command class and implements the logic to display all tasks to the user.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":" */","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":"     * Executes the list command by displaying all the tasks in the current task list.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"     * It retrieves all tasks and passes them to the user interface to be printed.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":"     * @param taskList The task list that holds all the tasks to be displayed.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":"     * @param ui The user interface used to show feedback to the user.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"     * @param storage The storage for saving the current state of tasks (not used in this command).","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":"    @Override","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leedeen01"},"content":"        String response \u003d ui.printTasks(taskList);","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":"        return response;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leedeen01"},"content":"     * Determines whether this command results in an exit action.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leedeen01"},"content":"     * Since this command is for listing tasks, it returns false, indicating that the application will not exit.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"     * @return false, indicating that the list command does not result in exiting the program.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leedeen01"},"content":"    @Override","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leedeen01"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leedeen01"},"content":"        return false;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false}],"authorContributionMap":{"leedeen01":37}},{"path":"src/main/java/mavis/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"package mavis.command;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"import mavis.MavisException;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"import mavis.Storage;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"import mavis.TaskList;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":"import mavis.Ui;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"import mavis.task.Task;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":"/**","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":" * The MarkCommand class represents a command to mark a task as completed (done).","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":" * It extends the Command class and implements the logic to update the task\u0027s completion status.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":" */","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":"    private int taskIndex;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":"     * Constructs a MarkCommand with the specified task index.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":"     * This index will be used to find and mark the corresponding task as done.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":"     * @param taskIndex The index of the task to be marked as done.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":"    public MarkCommand(int taskIndex) {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leedeen01"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leedeen01"},"content":"     * Executes the mark command by updating the task at the specified index to be marked as done.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leedeen01"},"content":"     * It then saves the updated task list and shows feedback to the user.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leedeen01"},"content":"     * @param taskList The task list containing all the tasks.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"     * @param ui The user interface used to display feedback to the user.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leedeen01"},"content":"     * @param storage The storage for saving the updated task list.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leedeen01"},"content":"     * @throws MavisException If an error occurs while marking the task (e.g., invalid index).","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leedeen01"},"content":"    @Override","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leedeen01"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws MavisException {","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leedeen01"},"content":"        Task task \u003d taskList.markDone(taskIndex);","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"leedeen01"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"leedeen01"},"content":"        String response \u003d ui.showMarkTask(task);","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"leedeen01"},"content":"        return response;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"leedeen01"},"content":"     * Determines whether this command results in an exit action.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"leedeen01"},"content":"     * Since this command is to mark task as done, it returns false, indicating that the application will not exit.","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"leedeen01"},"content":"     * @return false, indicating that the mark command does not result in exiting the program.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"leedeen01"},"content":"    @Override","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"leedeen01"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"leedeen01"},"content":"        return false;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false}],"authorContributionMap":{"leedeen01":53}},{"path":"src/main/java/mavis/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"package mavis.command;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"import mavis.MavisException;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"import mavis.Storage;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"import mavis.TaskList;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":"import mavis.Ui;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"import mavis.task.Task;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":"/**","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":" * The UnmarkCommand class represents a command to unmark a task as completed (not done).","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":" * It extends the Command class and implements the logic to update the task\u0027s completion status to incomplete.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":" */","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":"    private Integer taskNumber;","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":"     * Constructs an UnmarkCommand with the specified task number.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":"     * This number will be used to find and unmark the corresponding task as not done.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"     * @param taskNumber The number of the task to be unmarked.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":"    public UnmarkCommand(Integer taskNumber) {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leedeen01"},"content":"     * Executes the unmark command by updating the task at the specified index to be unmarked (not done).","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leedeen01"},"content":"     * It then saves the updated task list and shows feedback to the user.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leedeen01"},"content":"     * @param taskList The task list containing all the tasks.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leedeen01"},"content":"     * @param ui The user interface used to display feedback to the user.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"     * @param storage The storage for saving the updated task list.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leedeen01"},"content":"     * @throws MavisException If an error occurs while unmarking the task (e.g., invalid index).","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leedeen01"},"content":"    @Override","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leedeen01"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws MavisException {","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leedeen01"},"content":"        Task task \u003d taskList.unmarkDone(taskNumber);","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leedeen01"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"leedeen01"},"content":"        String response \u003d ui.showUnmarkTask(task);","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"leedeen01"},"content":"        return response;","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"leedeen01"},"content":"     * Determines whether this command results in an exit action.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"leedeen01"},"content":"     * Since this command is for unmarking a task as not done, it returns false,","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"leedeen01"},"content":"     * indicating that the application will not exit.","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"leedeen01"},"content":"     * @return false, indicating that the unmark command does not result in exiting the program.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"leedeen01"},"content":"    @Override","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"leedeen01"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"leedeen01"},"content":"        return false;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false}],"authorContributionMap":{"leedeen01":53}},{"path":"src/main/java/mavis/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"package mavis.task;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"import mavis.MavisException;","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":"/**","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":" * The Deadline class represents a task that has a specific due date.","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":" * It extends the abstract Task class and adds a due date field.","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":" */","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":"     * The due date of the task.","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":"    private LocalDateTime dueDate;","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":"     * Constructs a Deadline with the specified name and due date.","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":"     * The due date should be provided in the format \"yyyy-MM-dd HHmm\".","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":"     * @param name    The name of the task. It cannot be empty.","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leedeen01"},"content":"     * @param dueDate The due date of the task in the format \"yyyy-MM-dd HHmm\".","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leedeen01"},"content":"     *                It must be a valid date-time string.","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leedeen01"},"content":"     * @throws MavisException If the date format is invalid or if the dueDate is incorrectly formatted.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leedeen01"},"content":"    public Deadline(String name, String dueDate) throws MavisException {","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leedeen01"},"content":"        super(name, false);","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leedeen01"},"content":"        try {","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leedeen01"},"content":"            this.dueDate \u003d LocalDateTime.parse(dueDate, formatter);","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leedeen01"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leedeen01"},"content":"            throw new MavisException(\"Invalid date format. Please use yyyy-MM-dd HHmm. \"","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leedeen01"},"content":"            + \"Example: task /by 2025-02-10 1800\");","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"leedeen01"},"content":"     * Constructs a Deadline object with the specified name, due date, and completion status.","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"leedeen01"},"content":"     * The due date is parsed from a string using the ISO_LOCAL_DATE_TIME format.","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"leedeen01"},"content":"     * @param name    The name of the task or deadline.","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"leedeen01"},"content":"     * @param dueDate The due date of the task in ISO_LOCAL_DATE_TIME format (e.g., \"2025-01-26T15:30:00\").","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"leedeen01"},"content":"     * @param done    A boolean indicating whether the task is completed (true) or not (false).","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"leedeen01"},"content":"    public Deadline(String name, String dueDate, boolean done) {","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"leedeen01"},"content":"        super(name, done);","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"leedeen01"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ISO_LOCAL_DATE_TIME;","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"leedeen01"},"content":"        this.dueDate \u003d LocalDateTime.parse(dueDate, formatter);","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"leedeen01"},"content":"     * Generates a detailed report of the deadline task, including its completion status,","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"leedeen01"},"content":"     * name, and due date.","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"leedeen01"},"content":"     * @return A string representation of the deadline task with its details.","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"leedeen01"},"content":"    @Override","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"leedeen01"},"content":"    public String report() {","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"leedeen01"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"leedeen01"},"content":"        Boolean done \u003d super.getDone();","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"leedeen01"},"content":"        if (done) {","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"leedeen01"},"content":"            return \"[D]\" + \"[X] \" + super.getName() + \" (by: \" + dueDate.format(formatter) + \")\";","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"leedeen01"},"content":"        return \"[D][ ] \" + super.getName() + \" (by: \" + dueDate.format(formatter) + \")\";","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"leedeen01"},"content":"     * Converts the deadline task to a string for saving.","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"leedeen01"},"content":"     * The string includes the task type, completion status, name, and due date.","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"leedeen01"},"content":"     * @return A string representing the task, including its completion status.","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"leedeen01"},"content":"    @Override","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"leedeen01"},"content":"    public String saveTask() {","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"leedeen01"},"content":"        Boolean done \u003d super.getDone();","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"leedeen01"},"content":"        if (done) {","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"leedeen01"},"content":"            return \"D\" + \"|\" + \"1\" + \"|\" + super.getName() + \"|\" + this.dueDate;","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"leedeen01"},"content":"        return \"D\" + \"|\" + \"0\" + \"|\" + super.getName() + \"|\" + this.dueDate;","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"leedeen01"},"content":"     * Checks for overlap anomalies with the given task. If a task with the same name","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"leedeen01"},"content":"     * and due date already exists in the list, throws a MavisException.","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"leedeen01"},"content":"     * @param newTask The new task to check for overlap anomalies.","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"leedeen01"},"content":"     * @throws MavisException If a task with the same name and due date already exists.","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"leedeen01"},"content":"    @Override","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"leedeen01"},"content":"    public void checkOverlapAnomalies(Task newTask) throws MavisException {","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"leedeen01"},"content":"        if (this.getDone()) {","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"leedeen01"},"content":"            return;","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"leedeen01"},"content":"        if (this.getName().equals(newTask.getName()) \u0026\u0026 newTask instanceof Deadline) {","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"leedeen01"},"content":"            Deadline newDeadline \u003d (Deadline) newTask;","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"leedeen01"},"content":"            if (this.dueDate.equals(newDeadline.dueDate)) {","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"leedeen01"},"content":"                throw new MavisException(\"Task with the same name and due date (\"","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"leedeen01"},"content":"                    + newTask.report() + \") already exists in the list.\");","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"leedeen01"},"content":"            }","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false}],"authorContributionMap":{"leedeen01":106}},{"path":"src/main/java/mavis/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"package mavis.task;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":"import mavis.MavisException;","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":"/**","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":" * The Event class represents a task that has a specific start and end date.","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":" * It extends the abstract Task class, adding date-related details.","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":" */","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"     * The start date of the event.","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":"    private LocalDateTime startDate;","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":"     * The end date of the event.","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":"    private LocalDateTime endDate;","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leedeen01"},"content":"     * Constructs an Event with the specified name, start date, and end date.","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leedeen01"},"content":"     * The dates should be provided in the format \"yyyy-MM-dd HHmm\".","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leedeen01"},"content":"     * @param name      The name of the event. It cannot be empty.","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leedeen01"},"content":"     * @param startDate The start date of the event in the format \"yyyy-MM-dd HHmm\".","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leedeen01"},"content":"     *                  It must be a valid date-time string.","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"     * @param endDate   The end date of the event in the format \"yyyy-MM-dd HHmm\".","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leedeen01"},"content":"     *                  It must be a valid date-time string.","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leedeen01"},"content":"     * @throws MavisException If the date format is invalid, or if the startDate or endDate is incorrectly formatted.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leedeen01"},"content":"    public Event(String name, LocalDateTime startDate, LocalDateTime endDate) throws MavisException {","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leedeen01"},"content":"        super(name, false);","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leedeen01"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"leedeen01"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"leedeen01"},"content":"     * Constructs an Event object with the specified name, start and end dates, and completion status.","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"leedeen01"},"content":"     * Both the start and end dates are parsed from strings using the ISO_LOCAL_DATE_TIME format.","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"leedeen01"},"content":"     * @param name      The name of the event.","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"leedeen01"},"content":"     * @param startDate The start date of the event in ISO_LOCAL_DATE_TIME format (e.g., \"2025-01-26T09:00:00\").","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"leedeen01"},"content":"     * @param endDate   The end date of the event in ISO_LOCAL_DATE_TIME format (e.g., \"2025-01-26T17:00:00\").","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"leedeen01"},"content":"     * @param done      A boolean indicating whether the event is completed (true) or not (false).","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"leedeen01"},"content":"    public Event(String name, String startDate, String endDate, boolean done) {","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"leedeen01"},"content":"        super(name, done);","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"leedeen01"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ISO_LOCAL_DATE_TIME;","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"leedeen01"},"content":"        this.startDate \u003d LocalDateTime.parse(startDate, formatter);","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"leedeen01"},"content":"        this.endDate \u003d LocalDateTime.parse(endDate, formatter);","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"leedeen01"},"content":"     * Generates a detailed report of the event, including its completion status,","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"leedeen01"},"content":"     * name, and date range.","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"leedeen01"},"content":"     * @return A string representation of the event with its details.","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"leedeen01"},"content":"    @Override","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"leedeen01"},"content":"    public String report() {","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"leedeen01"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"leedeen01"},"content":"        Boolean done \u003d super.getDone();","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"leedeen01"},"content":"        if (done) {","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"leedeen01"},"content":"            return \"[E]\" + \"[X] \" + super.getName()","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"leedeen01"},"content":"                + \" (from: \" + startDate.format(formatter) + \" -\u003e to: \" + endDate.format(formatter) + \")\";","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"leedeen01"},"content":"        return \"[E][ ] \" + super.getName()","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"leedeen01"},"content":"            + \" (from: \" + startDate.format(formatter) + \" -\u003e to: \" + endDate.format(formatter) + \")\";","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"leedeen01"},"content":"     * Converts the event task to a string for saving.","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"leedeen01"},"content":"     * @return A string representing the task, including its completion status.","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"leedeen01"},"content":"    @Override","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"leedeen01"},"content":"    public String saveTask() {","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"leedeen01"},"content":"        Boolean done \u003d super.getDone();","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"leedeen01"},"content":"        if (done) {","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"leedeen01"},"content":"            return \"E\" + \"|\" + \"1\" + \"|\" + super.getName() + \"|\" + startDate + \"|\" + endDate;","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"leedeen01"},"content":"        return \"E\" + \"|\" + \"0\" + \"|\" + super.getName() + \"|\" + startDate + \"|\" + endDate;","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"leedeen01"},"content":"     * Checks for date and time overlap anomalies between this event and the given task.","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"leedeen01"},"content":"     * If the task has the same name and overlaps with this event\u0027s time frame,","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"leedeen01"},"content":"     * a MavisException will be thrown.","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"leedeen01"},"content":"     * @param newTask The task to check for overlap anomalies.","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"leedeen01"},"content":"     * @throws MavisException If a task with the same name and overlapping time frame exists.","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"leedeen01"},"content":"    @Override","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"leedeen01"},"content":"    public void checkOverlapAnomalies(Task newTask) throws MavisException {","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"leedeen01"},"content":"        if (this.getDone()) {","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"leedeen01"},"content":"            return;","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"leedeen01"},"content":"        if (this.getName().equals(newTask.getName()) \u0026\u0026 newTask instanceof Event) {","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"leedeen01"},"content":"            Event newEvent \u003d (Event) newTask;","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"leedeen01"},"content":"            if (this.startDate.isEqual(newEvent.startDate)","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"leedeen01"},"content":"                || this.endDate.isEqual(newEvent.endDate)","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"leedeen01"},"content":"                || (this.startDate.isBefore(newEvent.startDate) \u0026\u0026 this.endDate.isAfter(newEvent.endDate))","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"leedeen01"},"content":"                || (this.startDate.isAfter(newEvent.startDate) \u0026\u0026 this.endDate.isBefore(newEvent.endDate))","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"leedeen01"},"content":"                || (this.startDate.isBefore(newEvent.startDate) \u0026\u0026 this.endDate.isAfter(newEvent.startDate))","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"leedeen01"},"content":"                || (this.startDate.isAfter(newEvent.startDate) \u0026\u0026 this.startDate.isBefore(newEvent.endDate))) {","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"leedeen01"},"content":"                throw new MavisException(\"This task \" + newTask.report() + \" overlaps with the existing event.\");","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"leedeen01"},"content":"            }","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false}],"authorContributionMap":{"leedeen01":115}},{"path":"src/main/java/mavis/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"package mavis.task;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"import mavis.MavisException;","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"/**","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":" * The Task class represents a generic task with a name and a completion status.","lastModifiedDate":"2025-01-24T15:05:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":" * This class serves as a base class intended to be extended by more specific","lastModifiedDate":"2025-01-24T15:05:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":" * types of tasks that may add additional properties or behavior.","lastModifiedDate":"2025-01-24T15:05:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":" * It provides basic functionality to set and get the task\u0027s name and completion status.","lastModifiedDate":"2025-01-24T15:05:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":" *","lastModifiedDate":"2025-01-24T15:05:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":" * Subclasses should implement more specific task-related logic, such as deadlines,","lastModifiedDate":"2025-01-24T15:05:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":" * priorities, or custom completion conditions.","lastModifiedDate":"2025-01-24T15:05:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":" */","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":"     * The name of the task.","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"    private String name;","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":"     * The completion status of the task. True if the task is done, false otherwise.","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":"    private Boolean isDone;","lastModifiedDate":"2025-02-15T14:04:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leedeen01"},"content":"     * Constructor to create a new task with a given name.","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leedeen01"},"content":"     * By default, the task is marked as not done.","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leedeen01"},"content":"     * @param name The name of the task.","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"     * @param done The completion status of the task. True if the task is done, false otherwise.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leedeen01"},"content":"    public Task(String name, boolean isDone) {","lastModifiedDate":"2025-02-15T14:04:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leedeen01"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leedeen01"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-02-15T14:04:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"leedeen01"},"content":"     * Gets the name of the task.","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"leedeen01"},"content":"     * @return The name of the task.","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"leedeen01"},"content":"    public String getName() {","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"leedeen01"},"content":"        return name;","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"leedeen01"},"content":"     * Gets the completion status of the task.","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"leedeen01"},"content":"     * @return True if the task is done, false otherwise.","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"leedeen01"},"content":"    public Boolean getDone() {","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"leedeen01"},"content":"        return isDone;","lastModifiedDate":"2025-02-15T14:04:24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"leedeen01"},"content":"     * Sets the completion status of the task.","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"leedeen01"},"content":"     * @param isDone True to mark the task as done, false to mark it as not done.","lastModifiedDate":"2025-02-15T14:04:24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"leedeen01"},"content":"    public void setDone(Boolean isDone) {","lastModifiedDate":"2025-02-15T14:04:24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"leedeen01"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-02-15T14:04:24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"leedeen01"},"content":"     * Returns a summary of the task.","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"leedeen01"},"content":"     * @return A string description of the task.","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"leedeen01"},"content":"    public abstract String report();","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"leedeen01"},"content":"     * Converts the task to a string format suitable for saving to a file.","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"leedeen01"},"content":"     * @return A string format of the task.","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"leedeen01"},"content":"    public abstract String saveTask();","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"leedeen01"},"content":"    public abstract void checkOverlapAnomalies(Task newTask) throws MavisException;","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false}],"authorContributionMap":{"leedeen01":80}},{"path":"src/main/java/mavis/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"package mavis.task;","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"import mavis.MavisException;","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"/**","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":" * The ToDo class represents a simple task without a specific due date or event timeline.","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":" * It extends the abstract Task class and provides a basic implementation.","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":" */","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":"     * Constructs a ToDo task with the specified name.","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":"     * @param name The name of the ToDo task.","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":"    public ToDo(String name) {","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":"        super(name, false);","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":"     * Constructs a ToDo task with the specified name and completion status.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leedeen01"},"content":"     * @param name The name of the ToDo task.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":"     * @param done The completion status of the task. True if the task is done, false otherwise.","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27T12:45:03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leedeen01"},"content":"    public ToDo(String name, boolean done) {","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leedeen01"},"content":"        super(name, done);","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"     * Generates a detailed report of the ToDo task, including its completion status and name.","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leedeen01"},"content":"     * @return A string representation of the ToDo task with its details.","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-24T14:47:48","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leedeen01"},"content":"    @Override","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leedeen01"},"content":"    public String report() {","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leedeen01"},"content":"        Boolean done \u003d super.getDone();","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"leedeen01"},"content":"        if (done) {","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"leedeen01"},"content":"            return \"[T]\" + \"[X] \" + super.getName();","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"leedeen01"},"content":"        return \"[T][ ] \" + super.getName();","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"leedeen01"},"content":"     * Converts the to-do task to a string for saving.","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"leedeen01"},"content":"     * @return A string representing the task, including its completion status.","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"leedeen01"},"content":"    @Override","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"leedeen01"},"content":"    public String saveTask() {","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"leedeen01"},"content":"        Boolean done \u003d super.getDone();","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"leedeen01"},"content":"        if (done) {","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"leedeen01"},"content":"            return \"T\" + \"|\" + \"1\" + \"|\" + super.getName();","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"leedeen01"},"content":"        return \"T\" + \"|\" + \"0\" + \"|\" + super.getName();","lastModifiedDate":"2025-01-26T17:16:48","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-26T14:15:08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"leedeen01"},"content":"    @Override","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"leedeen01"},"content":"    public void checkOverlapAnomalies(Task newTask) throws MavisException {","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"leedeen01"},"content":"        if (!this.getDone()) {","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"leedeen01"},"content":"            if (this.getName().equals(newTask.getName())) {","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"leedeen01"},"content":"                throw new MavisException(\"This task \" + newTask.report() + \" already exists in the list\");","lastModifiedDate":"2025-02-12T20:19:12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"leedeen01"},"content":"            }","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-02-08T12:41:21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-01-22T23:27:36","isFullCredit":false}],"authorContributionMap":{"leedeen01":66}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":"    \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":"            \u003cInsets left\u003d\"7.0\" right\u003d\"7.0\" /\u003e","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"            \u003cInsets bottom\u003d\"6.0\" left\u003d\"6.0\" right\u003d\"6.0\" top\u003d\"6.0\" /\u003e","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":"  \u003c/children\u003e","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false}],"authorContributionMap":{"leedeen01":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":"\u003cAnchorPane fx:id\u003d\"root\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"mavis.MainWindow\"\u003e","lastModifiedDate":"2025-02-11T00:22:25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"42.66666666666663\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-02T15:05:19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-11T00:22:25","isFullCredit":false}],"authorContributionMap":{"leedeen01":20}},{"path":"src/test/java/mavis/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"package mavis;","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"import mavis.command.Command;","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":"import mavis.command.ExitCommand;","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":"import mavis.command.ListCommand;","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":"/**","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":" * Test class for the Parser.","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":" */","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":"public class ParserTest {","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":"     * Tests the parsing of the \"bye\" command.","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"     * @throws MavisException if there is an error during parsing.","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":"    @Test","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":"    public void testParseBye() throws MavisException {","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leedeen01"},"content":"        String input \u003d \"bye\";","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":"        Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leedeen01"},"content":"        assertTrue(command instanceof ExitCommand, \"The command should be of type ExitCommand.\");","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leedeen01"},"content":"     * Tests the parsing of the \"list\" command.","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leedeen01"},"content":"     * @throws MavisException if there is an error during parsing.","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leedeen01"},"content":"    @Test","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leedeen01"},"content":"    public void testParseList() throws MavisException {","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leedeen01"},"content":"        String input \u003d \"list\";","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leedeen01"},"content":"        Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leedeen01"},"content":"        assertTrue(command instanceof ListCommand, \"The command should be of type ListCommand.\");","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"leedeen01"},"content":"     * Tests the parsing of an unknown command.","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"leedeen01"},"content":"    @Test","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"leedeen01"},"content":"    public void testParseUnknown() {","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"leedeen01"},"content":"        String input \u003d \"unknown command\";","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"leedeen01"},"content":"        assertThrows(MavisException.class, () -\u003e Parser.parse(input),","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"leedeen01"},"content":"            \"Parsing an unknown command should throw a MavisException.\");","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"leedeen01"},"content":"     * Tests the parsing of a ToDo command with an empty description.","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"leedeen01"},"content":"    @Test","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"leedeen01"},"content":"    public void testParseTodoEmptyDescription() {","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"leedeen01"},"content":"        String input \u003d \"todo\";","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"leedeen01"},"content":"        assertThrows(MavisException.class, () -\u003e Parser.parse(input),","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"leedeen01"},"content":"            \"Parsing a ToDo with empty description should throw a MavisException.\");","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"leedeen01"},"content":"     * Tests the parsing of a Deadline command with a missing \u0027/by\u0027.","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"leedeen01"},"content":"    @Test","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"leedeen01"},"content":"    public void testParseDeadlineMissingBy() {","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"leedeen01"},"content":"        String input \u003d \"deadline Test Deadline\";","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"leedeen01"},"content":"        assertThrows(MavisException.class, () -\u003e Parser.parse(input),","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"leedeen01"},"content":"            \"Parsing a Deadline with missing \u0027/by\u0027 should throw a MavisException.\");","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"leedeen01"},"content":"     * Tests the parsing of an Event command with an invalid format.","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"leedeen01"},"content":"    @Test","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"leedeen01"},"content":"    public void testParseEventInvalidFormat() {","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"leedeen01"},"content":"        String input \u003d \"event Test Event /start 2025-01-28 0900\";","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"leedeen01"},"content":"        assertThrows(MavisException.class, () -\u003e Parser.parse(input),","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"leedeen01"},"content":"            \"Parsing an Event with missing \u0027/end\u0027 should throw a MavisException.\");","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false}],"authorContributionMap":{"leedeen01":78}},{"path":"src/test/java/mavis/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"package mavis;","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":"import mavis.task.ToDo;","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"/**","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":" * This class contains unit tests for the TaskList class.","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":" */","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":"public class TaskListTest {","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":"    private ArrayList\u003cToDo\u003e taskList;","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":"    private ToDo sampleToDo;","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leedeen01"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":"    public void setUp() {","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leedeen01"},"content":"        // Initializing toDoList and a sample ToDo before each test","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leedeen01"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leedeen01"},"content":"        sampleToDo \u003d new ToDo(\"Sample ToDo\");","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"     * Tests that a ToDo can be added to the task list.","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leedeen01"},"content":"    @Test","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leedeen01"},"content":"    public void testAddToDo() {","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leedeen01"},"content":"        taskList.add(sampleToDo);","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leedeen01"},"content":"        assertEquals(1, taskList.size(), \"ToDo should be added.\");","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leedeen01"},"content":"        assertEquals(sampleToDo, taskList.get(0), \"The added ToDo should match the sample ToDo.\");","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"leedeen01"},"content":"     * Tests that a ToDo can be deleted from the task list using a valid index.","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"leedeen01"},"content":"    @Test","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"leedeen01"},"content":"    public void testDeleteToDoValidIndex() {","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"leedeen01"},"content":"        taskList.add(sampleToDo);","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"leedeen01"},"content":"        ToDo deletedToDo \u003d taskList.remove(0);","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"leedeen01"},"content":"        assertEquals(0, taskList.size(), \"ToDo should be removed.\");","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"leedeen01"},"content":"        assertEquals(sampleToDo, deletedToDo, \"The deleted ToDo should match the added ToDo.\");","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"leedeen01"},"content":"     * Tests that deleting a ToDo using an invalid index throws an IndexOutOfBoundsException.","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"leedeen01"},"content":"    @Test","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"leedeen01"},"content":"    public void testDeleteToDoInvalidIndex() {","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"leedeen01"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e taskList.remove(0),","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"leedeen01"},"content":"            \"Deleting an invalid ToDo should throw IndexOutOfBoundsException.\");","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"leedeen01"},"content":"     * Tests that a ToDo can be marked as done.","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"leedeen01"},"content":"    @Test","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"leedeen01"},"content":"    public void testMarkDoneValidToDo() {","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"leedeen01"},"content":"        taskList.add(sampleToDo);","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"leedeen01"},"content":"        sampleToDo.setDone(true);","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"leedeen01"},"content":"        assertTrue(sampleToDo.getDone(), \"The ToDo should be marked as done.\");","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"leedeen01"},"content":"     * Tests that marking a non-existing ToDo as done throws an IndexOutOfBoundsException.","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"leedeen01"},"content":"    @Test","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"leedeen01"},"content":"    public void testMarkDoneInvalidToDo() {","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"leedeen01"},"content":"        // Trying to mark a non-existing ToDo, should not be possible in this context","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"leedeen01"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e taskList.get(1).setDone(true),","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"leedeen01"},"content":"            \"Marking an invalid ToDo should throw IndexOutOfBoundsException.\");","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"leedeen01"},"content":"     * Tests that a ToDo can be marked as not done.","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"leedeen01"},"content":"    @Test","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"leedeen01"},"content":"    public void testUnmarkDoneValidToDo() {","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"leedeen01"},"content":"        taskList.add(sampleToDo);","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"leedeen01"},"content":"        sampleToDo.setDone(true);","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"leedeen01"},"content":"        sampleToDo.setDone(false);","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"leedeen01"},"content":"        assertFalse(sampleToDo.getDone(), \"The ToDo should be marked as not done.\");","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"leedeen01"},"content":"     * Tests that unmarking a non-existing ToDo as not done throws an IndexOutOfBoundsException.","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"leedeen01"},"content":"    @Test","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"leedeen01"},"content":"    public void testUnmarkDoneInvalidToDo() {","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"leedeen01"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e taskList.get(1).setDone(false),","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"leedeen01"},"content":"            \"Unmarking an invalid ToDo should throw IndexOutOfBoundsException.\");","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"leedeen01"},"content":"     * Tests that the initial ToDo list should be empty.","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"leedeen01"},"content":"    @Test","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"leedeen01"},"content":"    public void testInitialToDoList() {","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"leedeen01"},"content":"        assertTrue(taskList.isEmpty(), \"The ToDo list should initially be empty.\");","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"leedeen01"},"content":"     * Tests that the ToDo count is correct after adding a ToDo.","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"leedeen01"},"content":"    @Test","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"leedeen01"},"content":"    public void testToDoCountAfterAdding() {","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"leedeen01"},"content":"        taskList.add(sampleToDo);","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"leedeen01"},"content":"        assertEquals(1, taskList.size(), \"The ToDo count should reflect the number of ToDos in the list.\");","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"leedeen01"},"content":"     * Tests that the ToDo count is correct after deleting a ToDo.","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-02-02T12:41:08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"leedeen01"},"content":"    @Test","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"leedeen01"},"content":"    public void testToDoCountAfterDeleting() {","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"leedeen01"},"content":"        taskList.add(sampleToDo);","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"leedeen01"},"content":"        taskList.remove(0);","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"leedeen01"},"content":"        assertEquals(0, taskList.size(), \"The ToDo count should reflect the number of ToDos after deletion.\");","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-01-27T12:16:01","isFullCredit":false}],"authorContributionMap":{"leedeen01":125}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"todo 2","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"event go home","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"event go home /2","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"event go home /start 2025-03-01 /end 2025-03-01 1700","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"event go home /start 2025-03-01 0900 /end 2025-03-01 1700","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":"list","lastModifiedDate":"2025-01-27T00:32:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"deadline eat food","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":"deadline eat food /2","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":"deadline eat food /by 0900","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":"deadline eat food /by 2025-03-01 0900","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":"list","lastModifiedDate":"2025-01-22T23:54:35","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":"mark 1","lastModifiedDate":"2025-01-22T23:54:35","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":"delete 2","lastModifiedDate":"2025-01-23T00:57:34","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":"list","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"unmark 1","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":"todo homework for cs2103","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":"todo do cs2103 homework","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":"find homework","lastModifiedDate":"2025-01-27T13:27:59","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"bye","lastModifiedDate":"2025-01-22T23:54:35","isFullCredit":false}],"authorContributionMap":{"leedeen01":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"# Get the directory of the script (text-ui-test/)","lastModifiedDate":"2025-02-07T21:02:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"SCRIPT_DIR\u003d\"$(cd \"$(dirname \"$0\")\" \u0026\u0026 pwd)\"","lastModifiedDate":"2025-02-07T21:02:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-07T21:02:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":"# Navigate to the project root","lastModifiedDate":"2025-02-07T21:02:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"PROJECT_ROOT\u003d\"$SCRIPT_DIR/..\"","lastModifiedDate":"2025-02-07T21:02:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-07T21:02:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":"# Define paths relative to the project root","lastModifiedDate":"2025-02-07T21:02:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":"BIN_DIR\u003d\"$PROJECT_ROOT/bin\"","lastModifiedDate":"2025-02-07T21:02:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":"MAVIS_TXT\u003d\"$PROJECT_ROOT/src/main/data/Mavis.txt\"","lastModifiedDate":"2025-02-07T21:02:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":"SRC_DIR\u003d\"$PROJECT_ROOT/src/main/java\"","lastModifiedDate":"2025-02-07T21:02:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":"JAVA_BIN\u003d\"$BIN_DIR\"","lastModifiedDate":"2025-02-07T21:02:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":"INPUT_FILE\u003d\"$SCRIPT_DIR/input.txt\"","lastModifiedDate":"2025-02-07T21:02:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"EXPECTED_FILE\u003d\"$SCRIPT_DIR/EXPECTED.TXT\"","lastModifiedDate":"2025-02-07T21:02:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":"ACTUAL_FILE\u003d\"$SCRIPT_DIR/ACTUAL.TXT\"","lastModifiedDate":"2025-02-07T21:02:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":"EXPECTED_UNIX_FILE\u003d\"$SCRIPT_DIR/EXPECTED-UNIX.TXT\"","lastModifiedDate":"2025-02-07T21:02:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-02-07T21:02:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"# Create bin directory if it doesn\u0027t exist","lastModifiedDate":"2025-02-07T21:02:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":"if [ ! -d \"$BIN_DIR\" ]; then","lastModifiedDate":"2025-02-07T21:02:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":"    mkdir \"$BIN_DIR\"","lastModifiedDate":"2025-02-07T21:02:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":"# Delete previous output","lastModifiedDate":"2025-02-07T21:02:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leedeen01"},"content":"if [ -e \"$ACTUAL_FILE\" ]; then","lastModifiedDate":"2025-02-07T21:02:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leedeen01"},"content":"    rm \"$ACTUAL_FILE\"","lastModifiedDate":"2025-02-07T21:02:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leedeen01"},"content":"# Reset Mavis.txt","lastModifiedDate":"2025-02-07T21:02:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leedeen01"},"content":"if [ -e \"$MAVIS_TXT\" ]; then","lastModifiedDate":"2025-02-07T21:02:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"    rm \"$MAVIS_TXT\"","lastModifiedDate":"2025-02-07T21:02:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leedeen01"},"content":"fi","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leedeen01"},"content":"touch \"$MAVIS_TXT\"","lastModifiedDate":"2025-02-07T21:02:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leedeen01"},"content":"chmod 644 \"$MAVIS_TXT\"","lastModifiedDate":"2025-02-07T21:02:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27T00:12:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leedeen01"},"content":"# Compile Java code into bin folder","lastModifiedDate":"2025-02-07T21:02:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leedeen01"},"content":"if ! javac -cp \"$SRC_DIR/mavis:$SRC_DIR/mavis/command:$SRC_DIR/mavis/task\" -Xlint:none -d \"$JAVA_BIN\" \"$SRC_DIR/mavis/\"*.java \"$SRC_DIR/mavis/command/\"*.java \"$SRC_DIR/mavis/task/\"*.java; then","lastModifiedDate":"2025-02-07T21:02:42","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"leedeen01"},"content":"# Run program, feed commands from input.txt, redirect output to ACTUAL.TXT","lastModifiedDate":"2025-02-07T21:02:42","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"leedeen01"},"content":"java -classpath \"$JAVA_BIN\" mavis.Mavis \u003c \"$INPUT_FILE\" \u003e \"$ACTUAL_FILE\"","lastModifiedDate":"2025-02-07T21:02:42","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"leedeen01"},"content":"# Convert to UNIX format","lastModifiedDate":"2025-02-07T21:02:42","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"leedeen01"},"content":"cp \"$EXPECTED_FILE\" \"$EXPECTED_UNIX_FILE\"","lastModifiedDate":"2025-02-07T21:02:42","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"leedeen01"},"content":"dos2unix \"$ACTUAL_FILE\" \"$EXPECTED_UNIX_FILE\"","lastModifiedDate":"2025-02-07T21:02:42","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"leedeen01"},"content":"# Compare output with expected","lastModifiedDate":"2025-02-07T21:02:42","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"leedeen01"},"content":"diff \"$ACTUAL_FILE\" \"$EXPECTED_UNIX_FILE\"","lastModifiedDate":"2025-02-07T21:02:42","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"leedeen01"},"content":"if [ $? -eq 0 ]; then","lastModifiedDate":"2025-02-07T21:02:42","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"leedeen01":39,"-":18}}]
