[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"Mavis - Task Manager Chatbot","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"Mavis is a task manager chatbot that helps users manage their to-do lists. Users can add tasks, mark them as done or undone, delete tasks, and list all tasks. The chatbot tracks different types of tasks, including simple to-do items, deadlines, and events.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"Usage:","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"Once you run the program, Mavis will greet you and prompt you to enter commands. Here are the commands you can use:","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"Commands","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":"list: Displays all tasks in the list.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":"todo \u003ctask description\u003e: Adds a new ToDo task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":"deadline \u003ctask description\u003e /due \u003cdue date\u003e: Adds a new Deadline task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":"event \u003ctask description\u003e /start \u003cstart date\u003e /end \u003cend date\u003e: Adds a new Event task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":"mark \u003ctask number\u003e: Marks the specified task as done.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":"unmark \u003ctask number\u003e: Marks the specified task as undone.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":"delete \u003ctask number\u003e: Deletes the specified task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"bye: Exits the program.","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"leedeen01":15}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"    mainClass.set(\"mavis.Mavis\")","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leedeen01"},"content":"    archiveBaseName \u003d \"mavis\"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"leedeen01":2,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"# Mavis User Guide","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"leedeen01":1,"-":29}},{"path":"src/main/java/mavis/Mavis.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"package mavis;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"import mavis.command.*;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":" * Mavis is a simple task management application that interacts with the user via","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":" * the command line to add, delete, mark, and unmark tasks.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":" * It supports ToDo, Deadline, and Event tasks.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":" * Invalid input is handled with error messages.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":"public class Mavis {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":"    private Ui ui;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":"     * Constructs a Mavis application with the specified file path for storing tasks.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":"     * ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":"     * @param filePath The path to the file where tasks are stored.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":"    public Mavis(String filePath) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leedeen01"},"content":"        this.taskList \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leedeen01"},"content":"     * Runs the Mavis application, allowing the user to interact with it by entering commands.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leedeen01"},"content":"     * It continuously processes commands until the exit condition is met.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leedeen01"},"content":"    public void run() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leedeen01"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leedeen01"},"content":"        while (!isExit) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leedeen01"},"content":"            try {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leedeen01"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leedeen01"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leedeen01"},"content":"                c.execute(taskList, ui, storage);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"leedeen01"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"leedeen01"},"content":"                ui.showLine();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"leedeen01"},"content":"            } catch (MavisException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"leedeen01"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"leedeen01"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"leedeen01"},"content":"     * The main entry point of the Mavis application.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"leedeen01"},"content":"     * Initializes the Mavis application with a default file path and runs it.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"leedeen01"},"content":"     * ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"leedeen01"},"content":"     * @param args Command-line arguments (not used in this case).","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"leedeen01"},"content":"    ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"leedeen01"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"leedeen01"},"content":"        new Mavis(\"src/main/data/Mavis.txt\").run();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"leedeen01":56}},{"path":"src/main/java/mavis/MavisException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"package mavis;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":" * MavisException is a custom exception class for handling errors specific to the Mavis application.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":" * It extends the built-in {@link Exception} class.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"public class MavisException extends Exception {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":"    ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":"     * Constructs a new MavisException with the specified detail message.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":"     * ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":"     * @param message The detail message, which is saved for later retrieval by the {@link Throwable#getMessage()} method.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":"    public MavisException(String message) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"        super(message);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"leedeen01":17}},{"path":"src/main/java/mavis/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"package mavis;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"import mavis.command.*;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"import mavis.task.Deadline;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"import mavis.task.Event;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":"import mavis.task.ToDo;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":" * The Parser class is responsible for parsing user input commands and converting them into ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":" * corresponding {@link Command} objects that can be executed.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":" * It supports commands to add tasks (ToDo, Deadline, Event), delete tasks, mark or unmark tasks, ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":" * exit the application, and list tasks.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":"public class Parser {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":"     * Parses the user input string and returns a corresponding Command object.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":"     * This method identifies the type of command (e.g., \"todo\", \"deadline\", \"event\", etc.) ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"     * and creates the appropriate Command object based on the input.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":"     * ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":"     * @param input The user input as a string.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":"     * @return A Command object representing the parsed input.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leedeen01"},"content":"     * @throws MavisException If the input is invalid or the format is incorrect for a task.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leedeen01"},"content":"    public static Command parse(String input) throws MavisException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leedeen01"},"content":"        if (input.startsWith(\"todo\")) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leedeen01"},"content":"            String name \u003d input.substring(4).trim();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leedeen01"},"content":"            if (name.isEmpty()) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leedeen01"},"content":"                throw new MavisException(\"The description of a ToDo cannot be empty.\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leedeen01"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"            ToDo todo \u003d new ToDo(name);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leedeen01"},"content":"            return new AddCommand(todo);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leedeen01"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leedeen01"},"content":"            String[] name \u003d input.substring(8).trim().split(\"/\", 3);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leedeen01"},"content":"            if (name.length \u003c 2) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leedeen01"},"content":"                throw new MavisException(\"A deadline task must be in this format (e.g., task /due date).\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leedeen01"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"leedeen01"},"content":"            String desc \u003d name[0].trim();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"leedeen01"},"content":"            String byPart \u003d name[1].trim();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"leedeen01"},"content":"            if (!byPart.toLowerCase().startsWith(\"by\")) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"leedeen01"},"content":"                throw new MavisException(\"The deadline must start with \u0027by\u0027. Example: task /by yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"leedeen01"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"leedeen01"},"content":"            String by \u003d byPart.split(\"by\")[1].trim();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"leedeen01"},"content":"            Deadline deadline \u003d new Deadline(desc, by);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"leedeen01"},"content":"            return new AddCommand(deadline);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"leedeen01"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"leedeen01"},"content":"            String[] name \u003d input.substring(5).trim().split(\"/\", 3);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"leedeen01"},"content":"            if (name.length \u003c 3) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"leedeen01"},"content":"                throw new MavisException(","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"leedeen01"},"content":"                        \"An event task must be in this format (e.g., task /start /end).\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"leedeen01"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"leedeen01"},"content":"            String desc \u003d name[0].trim();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"leedeen01"},"content":"            String startPart \u003d name[1].trim();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"leedeen01"},"content":"            if (!startPart.toLowerCase().startsWith(\"start\")) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"leedeen01"},"content":"                throw new MavisException(\"The event must start with \u0027start\u0027. Example: task /start yyyy-MM-dd HHmm /end yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"leedeen01"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"leedeen01"},"content":"            String start \u003d startPart.split(\"start\")[1].trim();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"leedeen01"},"content":"            String endPart \u003d name[2].trim();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"leedeen01"},"content":"            if (!endPart.toLowerCase().startsWith(\"end\")) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"leedeen01"},"content":"                throw new MavisException(\"The event must start with \u0027end\u0027. Example: task /start yyyy-MM-dd HHmm /end yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"leedeen01"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"leedeen01"},"content":"            String end \u003d endPart.split(\"end\")[1].trim();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"leedeen01"},"content":"            Event event \u003d new Event(desc, start, end);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"leedeen01"},"content":"            return new AddCommand(event);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"leedeen01"},"content":"        } else if(input.startsWith(\"delete\")) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"leedeen01"},"content":"            String[] parts \u003d input.split(\" \");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"leedeen01"},"content":"            int taskIndex \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"leedeen01"},"content":"            return new DeleteCommand(taskIndex);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"leedeen01"},"content":"        } else if(input.startsWith(\"mark\")) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"leedeen01"},"content":"            int num \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"leedeen01"},"content":"            return new MarkCommand(num);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"leedeen01"},"content":"        } else if(input.startsWith(\"unmark\")) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"leedeen01"},"content":"            int num \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"leedeen01"},"content":"            return new UnmarkCommand(num);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"leedeen01"},"content":"        }else if(input.startsWith(\"find\")) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"leedeen01"},"content":"            String toFind \u003d input.split(\"find\")[1].trim();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"leedeen01"},"content":"            return new FindCommand(toFind);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"leedeen01"},"content":"        } else if(input.equals(\"bye\")) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"leedeen01"},"content":"            return new ExitCommand();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"leedeen01"},"content":"        } else if(input.equals(\"list\")) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"leedeen01"},"content":"            return new ListCommand();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"leedeen01"},"content":"        } else {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"leedeen01"},"content":"            throw new MavisException(\"I\u0027m sorry, but I don\u0027t know what that means.\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"leedeen01":93}},{"path":"src/main/java/mavis/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"package mavis;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"import java.io.File;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":"import mavis.task.Deadline;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":"import mavis.task.Event;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":"import mavis.task.Task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":"import mavis.task.ToDo;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":" * The Storage class is responsible for loading and saving tasks to and from a file.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":" * It handles task persistence, reading tasks from a specified file path, and saving","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":" * tasks back to the file when updated.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"public class Storage {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":"     * The file path to the Mavis data file for this task manager.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":"    private String filePath;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leedeen01"},"content":"     * Constructs a new Storage object with the specified file path.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leedeen01"},"content":"     * ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leedeen01"},"content":"     * @param filePath The path to the file where tasks are saved.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leedeen01"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leedeen01"},"content":"     * Loads tasks from the file specified by {@code filePath} into a list of {@link Task} objects.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leedeen01"},"content":"     * If the file is empty or does not exist, an empty list is returned.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"leedeen01"},"content":"     * ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"leedeen01"},"content":"     * @return A list of tasks loaded from the file.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"leedeen01"},"content":"     * @throws IOException If an error occurs while reading from the file.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"leedeen01"},"content":"    public ArrayList\u003cTask\u003e loadTasks() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"leedeen01"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"leedeen01"},"content":"        ArrayList\u003cTask\u003e tasksList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"leedeen01"},"content":"        if (!file.exists() || file.length() \u003d\u003d 0) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"leedeen01"},"content":"            return tasksList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"leedeen01"},"content":"        try (Scanner scanner \u003d new Scanner(file)) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"leedeen01"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"leedeen01"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"leedeen01"},"content":"                Task task \u003d parseFileTask(line);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"leedeen01"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"leedeen01"},"content":"                    tasksList.add(task);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"leedeen01"},"content":"                }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"leedeen01"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"leedeen01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"leedeen01"},"content":"            System.out.println(\"An error occurred while loading tasks from the file.\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"leedeen01"},"content":"        return tasksList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"leedeen01"},"content":"     * Parses a line of text into a {@link Task} object based on the task type.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"leedeen01"},"content":"     * ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"leedeen01"},"content":"     * @param line The line of text to parse.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"leedeen01"},"content":"     * @return A {@link Task} object if parsing is successful; {@code null} otherwise.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"leedeen01"},"content":"    public Task parseFileTask(String line) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"leedeen01"},"content":"        String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"leedeen01"},"content":"        String taskType \u003d parts[0];","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"leedeen01"},"content":"        Boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"leedeen01"},"content":"        String name \u003d parts[2];","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"leedeen01"},"content":"        Task task \u003d null;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"leedeen01"},"content":"        switch (taskType) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"leedeen01"},"content":"            case \"T\":","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"leedeen01"},"content":"                task \u003d new ToDo(name, isDone);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"leedeen01"},"content":"                break;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"leedeen01"},"content":"            case \"D\":","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"leedeen01"},"content":"                String by \u003d parts[3];","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"leedeen01"},"content":"                task \u003d new Deadline(name, by, isDone);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"leedeen01"},"content":"                break;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"leedeen01"},"content":"            case \"E\":","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"leedeen01"},"content":"                String from \u003d parts[3];","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"leedeen01"},"content":"                String to \u003d parts[4];","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"leedeen01"},"content":"                task \u003d new Event(name, from, to, isDone);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"leedeen01"},"content":"                break;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"leedeen01"},"content":"        return task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"leedeen01"},"content":"     * Saves all tasks in the specified {@link TaskList} to the file at {@code filePath}.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"leedeen01"},"content":"     * If the list is not empty, each task is written to the file, one per line.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"leedeen01"},"content":"     * ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"leedeen01"},"content":"     * @param taskList The task list to save.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"leedeen01"},"content":"     * @throws IOException If an error occurs while writing to the file.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"leedeen01"},"content":"    public void saveTasks(TaskList taskList) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"leedeen01"},"content":"        ArrayList\u003cTask\u003e tasksList \u003d taskList.getTasksList();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"leedeen01"},"content":"        try (FileWriter fw \u003d new FileWriter(filePath)) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"leedeen01"},"content":"            if (!tasksList.isEmpty()) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"leedeen01"},"content":"                for (Task task : tasksList) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"leedeen01"},"content":"                    fw.write(task.saveTask() + System.lineSeparator());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"leedeen01"},"content":"                }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"leedeen01"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"leedeen01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"leedeen01"},"content":"            System.out.println(\"An error occurred while saving tasks to the file.\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"leedeen01":111}},{"path":"src/main/java/mavis/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"package mavis;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"import mavis.task.Task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":" * The TaskList class provides functionality to manage a collection of tasks.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":" * It allows performing various operations on tasks, such as:","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":" * ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":" * - Adding new tasks","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":" * - Deleting tasks by their identifier","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":" * - Marking tasks as completed or incomplete","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":" * - Listing all tasks with their current status","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":" * ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":" * This class is designed to efficiently handle task management, providing ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":" * an organized way to interact with a list of tasks.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":"public class TaskList {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":"     * An integer variable that keeps track of the total number of tasks in the list.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leedeen01"},"content":"    Integer taskCount;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leedeen01"},"content":"     * A list that stores all the tasks managed by the TaskManager.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leedeen01"},"content":"    ArrayList\u003cTask\u003e tasksList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"     * Constructs a new TaskList with an empty list of tasks.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leedeen01"},"content":"    public TaskList() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leedeen01"},"content":"        this.tasksList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leedeen01"},"content":"        taskCount \u003d 0;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"leedeen01"},"content":"     * Constructs a new TaskList with an existing list of tasks.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"leedeen01"},"content":"     * ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"leedeen01"},"content":"     * @param tasksList A list of existing tasks to initialize the TaskList.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"leedeen01"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasksList) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"leedeen01"},"content":"        this.tasksList \u003d tasksList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"leedeen01"},"content":"        taskCount \u003d tasksList.size();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"leedeen01"},"content":"     * Adds a new task to the list.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"leedeen01"},"content":"     * ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"leedeen01"},"content":"     * @param task The task to be added.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"leedeen01"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"leedeen01"},"content":"        tasksList.add(task);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"leedeen01"},"content":"        taskCount++;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"leedeen01"},"content":"     * Deletes a task from the list based on the given task number.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"leedeen01"},"content":"     * ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"leedeen01"},"content":"     * @param taskNumber The 1-based index of the task to be deleted.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"leedeen01"},"content":"     * @return The task that was deleted.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"leedeen01"},"content":"     * @throws MavisException If the task number is invalid.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"leedeen01"},"content":"    public Task deleteTask(int taskNumber) throws MavisException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"leedeen01"},"content":"        if (taskNumber \u003c 1 || taskNumber \u003e tasksList.size()) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"leedeen01"},"content":"            throw new MavisException(\"Invalid task number. Please enter a valid task number.\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"leedeen01"},"content":"        Task task \u003d tasksList.remove(taskNumber - 1);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"leedeen01"},"content":"        taskCount--;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"leedeen01"},"content":"        return task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"leedeen01"},"content":"     * Marks a task as done based on the given task number.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"leedeen01"},"content":"     * ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"leedeen01"},"content":"     * @param taskNumber The 1-based index of the task to be updated.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"leedeen01"},"content":"     * @return The task that was marked as done.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"leedeen01"},"content":"     * @throws MavisException If the task number is invalid.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"leedeen01"},"content":"    public Task markDone(int taskNumber) throws MavisException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"leedeen01"},"content":"        if (taskNumber \u003c 1 || taskNumber \u003e tasksList.size()) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"leedeen01"},"content":"            throw new MavisException(\"Invalid task number. Please enter a valid task number.\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"leedeen01"},"content":"        Task task \u003d tasksList.get(taskNumber - 1);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"leedeen01"},"content":"        task.setDone(true);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"leedeen01"},"content":"        return task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"leedeen01"},"content":"     * Marks a task as undone based on the given task number.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"leedeen01"},"content":"     * ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"leedeen01"},"content":"     * @param taskNumber The 1-based index of the task to be updated.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"leedeen01"},"content":"     * @return The task that was marked as undone.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"leedeen01"},"content":"     * @throws MavisException If the task number is invalid.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"leedeen01"},"content":"    public Task unmarkDone(int taskNumber) throws MavisException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"leedeen01"},"content":"        if (taskNumber \u003c 1 || taskNumber \u003e tasksList.size()) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"leedeen01"},"content":"            throw new MavisException(\"Invalid task number. Please enter a valid task number.\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"leedeen01"},"content":"        Task task \u003d tasksList.get(taskNumber - 1);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"leedeen01"},"content":"        task.setDone(false);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"leedeen01"},"content":"        return task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"leedeen01"},"content":"     * Returns the list of all tasks in the TaskList.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"leedeen01"},"content":"     * ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"leedeen01"},"content":"     * @return The list of tasks.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"leedeen01"},"content":"    public ArrayList\u003cTask\u003e getTasksList() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"leedeen01"},"content":"        return tasksList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"leedeen01"},"content":"     * Finds tasks in the task list that contain the specified keyword in their name.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"leedeen01"},"content":"     * @param keyword The keyword to search for in the task names.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"leedeen01"},"content":"     * @return A list of tasks whose names contain the given keyword.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"leedeen01"},"content":"    public ArrayList\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"leedeen01"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"leedeen01"},"content":"        for (Task task : tasksList) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"leedeen01"},"content":"            if (task.getName().contains(keyword)) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"leedeen01"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"leedeen01"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"leedeen01"},"content":"        return matchingTasks;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"leedeen01":131}},{"path":"src/main/java/mavis/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"package mavis;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"import mavis.task.Task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":" * The Ui class is responsible for handling user interface interactions, ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":" * including reading commands and displaying messages to the user.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":" * ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":" * It provides methods for showing task-related messages, such as adding, deleting, ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":" * marking, and unmarking tasks, as well as displaying the task list.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":"public class Ui {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"    ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":"    private Scanner sc;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"     * Constructs a new Ui object with an initialized Scanner for user input.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":"    public Ui() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leedeen01"},"content":"     * Reads a command input by the user from the console.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leedeen01"},"content":"     * ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leedeen01"},"content":"     * @return The command entered by the user as a trimmed string.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leedeen01"},"content":"    public String readCommand() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"        String input \u003d sc.nextLine().trim();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leedeen01"},"content":"        return input;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leedeen01"},"content":"     * Displays a welcome message to the user.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"leedeen01"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"leedeen01"},"content":"        System.out.println(\"Hello! I\u0027m Mavis\\nHow can i help you?\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"leedeen01"},"content":"        showLine();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"leedeen01"},"content":"     * Displays a separator line.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"leedeen01"},"content":"    public void showLine() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"leedeen01"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"leedeen01"},"content":"     * Displays a message confirming the addition of a task.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"leedeen01"},"content":"     * ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"leedeen01"},"content":"     * @param task The task that was added.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"leedeen01"},"content":"    public void showTaskAdded(Task task) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"leedeen01"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\r\\n\" + task.report());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"leedeen01"},"content":"     * Displays a message confirming the deletion of a task.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"leedeen01"},"content":"     * ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"leedeen01"},"content":"     * @param task The task that was removed.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"leedeen01"},"content":"    public void showDeleteTask(Task task) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"leedeen01"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\r\\n\" + task.report());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"leedeen01"},"content":"     * Displays a message confirming that a task has been marked as done.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"leedeen01"},"content":"     * ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"leedeen01"},"content":"     * @param task The task that was marked as done.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"leedeen01"},"content":"    public void showMarkTask(Task task) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"leedeen01"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\r\\n\" + task.report());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"leedeen01"},"content":"     * Displays a message confirming that a task has been marked as not done.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"leedeen01"},"content":"     * ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"leedeen01"},"content":"     * @param task The task that was marked as not done.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"leedeen01"},"content":"    public void showUnmarkTask(Task task) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"leedeen01"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\r\\n\" + task.report());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"leedeen01"},"content":"     * Displays a list of all tasks currently stored in the TaskManager.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"leedeen01"},"content":"     * ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"leedeen01"},"content":"     * @param taskList The TaskList object that holds all tasks.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"leedeen01"},"content":"    public void printTasks(TaskList taskList) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"leedeen01"},"content":"        StringBuilder list \u003d new StringBuilder();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"leedeen01"},"content":"        ArrayList\u003cTask\u003e tasksList \u003d taskList.getTasksList();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"leedeen01"},"content":"        if (tasksList.isEmpty()) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"leedeen01"},"content":"            System.out.println(\"There are no tasks in your list.\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"leedeen01"},"content":"            return;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"leedeen01"},"content":"        for (int i \u003d 0; i \u003c tasksList.size() - 1; i++) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"leedeen01"},"content":"            list.append(i + 1).append(\". \").append(tasksList.get(i).report()).append(\"\\n\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"leedeen01"},"content":"        list.append(tasksList.size()).append(\". \").append(tasksList.get(tasksList.size()-1).report());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"leedeen01"},"content":"        System.out.println(\"Here are the tasks in your list:\\n\" + list);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"leedeen01"},"content":"     * Displays a goodbye message to the user.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"leedeen01"},"content":"    public void showGoodbyeMessage() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"leedeen01"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"leedeen01"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"leedeen01"},"content":"     * ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"leedeen01"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"leedeen01"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"leedeen01"},"content":"        System.out.println(message);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"leedeen01"},"content":"        showLine();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"leedeen01"},"content":"     * Displays the tasks that match the search keyword.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"leedeen01"},"content":"     * If no tasks match, it prints a message indicating no matches were found.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"leedeen01"},"content":"     * ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"leedeen01"},"content":"     * @param matchingTasks The list of tasks that match the search criteria.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"leedeen01"},"content":"    public void showMatchingTasks(ArrayList\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"leedeen01"},"content":"        StringBuilder list \u003d new StringBuilder();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"leedeen01"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"leedeen01"},"content":"            System.out.println(\"There are no matching tasks in your list.\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"leedeen01"},"content":"            return;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"leedeen01"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.size() - 1; i++) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"leedeen01"},"content":"            list.append(i + 1).append(\". \").append(matchingTasks.get(i).report()).append(\"\\n\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"leedeen01"},"content":"        list.append(matchingTasks.size()).append(\". \").append(matchingTasks.get(matchingTasks.size()-1).report());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"leedeen01"},"content":"        System.out.println(\"Here are the matching tasks in your list:\\n\" + list);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"leedeen01":141}},{"path":"src/main/java/mavis/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"package mavis.command;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"import mavis.MavisException;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"import mavis.Storage;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"import mavis.TaskList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":"import mavis.Ui;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"import mavis.task.Task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":" * The AddCommand class is responsible for adding a task to the task list.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":" * It extends the abstract Command class and implements the logic for adding a task to the TaskList,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":" * saving the updated task list to storage, and displaying a confirmation message via the UI.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":"     * The task to be added to the task list.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"    private Task task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":"     * Constructs an AddCommand to add the specified task to the task list.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":"     * @param task The task to be added.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leedeen01"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leedeen01"},"content":"        this.task \u003d task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"     * Executes the AddCommand by adding the task to the task list,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leedeen01"},"content":"     * saving the updated task list to storage, and showing a confirmation message.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leedeen01"},"content":"     * @param taskList The task list to which the task is added.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leedeen01"},"content":"     * @param ui The UI instance used to show the task added confirmation.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leedeen01"},"content":"     * @param storage The storage instance used to save the updated task list.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leedeen01"},"content":"     * @throws MavisException If an error occurs while adding the task or saving to storage.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"leedeen01"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"leedeen01"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws MavisException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"leedeen01"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"leedeen01"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"leedeen01"},"content":"        ui.showTaskAdded(task);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"leedeen01"},"content":"     * Checks if this command is an exit command.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"leedeen01"},"content":"     * @return false, since the AddCommand does not result in an exit.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"leedeen01"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"leedeen01"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"leedeen01"},"content":"        return false;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"leedeen01":55}},{"path":"src/main/java/mavis/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"package mavis.command;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"import mavis.MavisException;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"import mavis.Storage;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"import mavis.TaskList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":"import mavis.Ui;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":" * The Command class is an abstract base class for all commands in the application.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":" * It defines the structure for commands that can interact with the task list,","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":" * user interface, and storage. Concrete command classes should extend this class","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":" * and implement the specific execution logic.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":"public abstract class Command {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":"     * Executes the command with the given task list, user interface, and storage.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":"     * Concrete subclasses should implement the specific logic for executing the command.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":"     * @param tasks The task list to interact with during command execution.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":"     * @param ui The user interface used to interact with the user.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":"     * @param storage The storage used to save data during command execution.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leedeen01"},"content":"     * @throws MavisException If an error occurs while executing the command.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leedeen01"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws MavisException;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leedeen01"},"content":"     * Determines whether this command results in an exit action.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leedeen01"},"content":"     * Concrete subclasses should return true if the command leads to the application exiting.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"     * @return true if the command results in an exit; false otherwise.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leedeen01"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"leedeen01":34}},{"path":"src/main/java/mavis/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"package mavis.command;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"import mavis.MavisException;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"import mavis.Storage;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"import mavis.TaskList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":"import mavis.Ui;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"import mavis.task.Task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":" * The DeleteCommand class represents a command to delete a task from the task list.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":" * It extends the Command class and implements the logic for removing a task by its index.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":" * The task is then deleted from the list, the task list is saved to storage, ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":" * and the user is informed of the deletion.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":"    ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":"     * The index of the task to be deleted in the task list.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":"    private int index;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leedeen01"},"content":"     * Constructs a DeleteCommand with the specified index of the task to delete.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leedeen01"},"content":"     * @param index The index of the task to delete in the task list.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leedeen01"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leedeen01"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leedeen01"},"content":"     * Executes the delete command by removing the task at the specified index from the task list.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leedeen01"},"content":"     * The task list is then saved to storage, and the user is notified about the task deletion.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leedeen01"},"content":"     * @param taskList The task list that holds all tasks.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leedeen01"},"content":"     * @param ui The user interface used to show feedback to the user.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leedeen01"},"content":"     * @param storage The storage to save the updated task list.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"leedeen01"},"content":"     * @throws MavisException If the index is invalid or the task list is empty.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"leedeen01"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"leedeen01"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws MavisException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"leedeen01"},"content":"        Task task \u003d taskList.deleteTask(index);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"leedeen01"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"leedeen01"},"content":"        ui.showDeleteTask(task);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"leedeen01"},"content":"     * Determines whether this command results in an exit action.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"leedeen01"},"content":"     * Since deleting a task does not cause an exit, this method returns false.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"leedeen01"},"content":"     * @return false as the delete command does not exit the application.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"leedeen01"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"leedeen01"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"leedeen01"},"content":"        return false;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"leedeen01":57}},{"path":"src/main/java/mavis/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"package mavis.command;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"import mavis.Storage;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"import mavis.TaskList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"import mavis.Ui;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":" * The ExitCommand class represents a command to exit the application.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":" * It extends the Command class and implements the logic for saving the current task list ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":" * to storage and displaying a goodbye message before exiting the program.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"     * Executes the exit command by saving the current task list to storage ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":"     * and displaying a goodbye message to the user.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":"     * @param taskList The task list that holds all tasks.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"     * @param ui The user interface used to show feedback to the user.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":"     * @param storage The storage to save the current task list.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leedeen01"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leedeen01"},"content":"        ui.showGoodbyeMessage();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leedeen01"},"content":"     * Determines whether this command results in an exit action.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leedeen01"},"content":"     * Since this command is meant to exit the application, it returns true.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leedeen01"},"content":"     * @return true, indicating that the exit command results in exiting the program.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leedeen01"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leedeen01"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leedeen01"},"content":"        return true;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"leedeen01":38}},{"path":"src/main/java/mavis/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"package mavis.command;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"import mavis.Storage;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"import mavis.TaskList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":"import mavis.Ui;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"import mavis.task.Task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":" * Represents a command that searches for tasks in the task list based on a keyword.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":"    private String keyword;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":"     * Constructs a FindCommand with the specified keyword.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":"     * @param keyword The keyword to search for in the task list.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leedeen01"},"content":"     * Executes the find command, searching for tasks that match the given keyword.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leedeen01"},"content":"     * The matching tasks are then displayed to the user.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leedeen01"},"content":"     * @param taskList The list of tasks to search through.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leedeen01"},"content":"     * @param ui The user interface that displays the matching tasks.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leedeen01"},"content":"     * @param storage The storage system used to save and retrieve tasks.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leedeen01"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leedeen01"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leedeen01"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d taskList.findTasks(keyword);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leedeen01"},"content":"        ui.showMatchingTasks(matchingTasks);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"leedeen01"},"content":"     * Indicates whether this command will terminate the program.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"leedeen01"},"content":"     * @return false, as the FindCommand does not exit the program.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"leedeen01"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"leedeen01"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"leedeen01"},"content":"        return false;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"leedeen01":47}},{"path":"src/main/java/mavis/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"package mavis.command;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"import mavis.Storage;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"import mavis.TaskList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"import mavis.Ui;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":" * The ListCommand class represents a command to list all tasks in the task list.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":" * It extends the Command class and implements the logic to display all tasks to the user.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":"     * Executes the list command by displaying all the tasks in the current task list.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"     * It retrieves all tasks and passes them to the user interface to be printed.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":"     * @param taskList The task list that holds all the tasks to be displayed.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":"     * @param ui The user interface used to show feedback to the user.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"     * @param storage The storage for saving the current state of tasks (not used in this command).","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leedeen01"},"content":"        ui.printTasks(taskList);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leedeen01"},"content":"     * Determines whether this command results in an exit action.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leedeen01"},"content":"     * Since this command is for listing tasks, it returns false, indicating that the application will not exit.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leedeen01"},"content":"     * @return false, indicating that the list command does not result in exiting the program.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leedeen01"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leedeen01"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leedeen01"},"content":"        return false;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"leedeen01":36}},{"path":"src/main/java/mavis/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"package mavis.command;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"import mavis.MavisException;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"import mavis.Storage;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"import mavis.TaskList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":"import mavis.Ui;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"import mavis.task.Task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":" * The MarkCommand class represents a command to mark a task as completed (done).","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":" * It extends the Command class and implements the logic to update the task\u0027s completion status.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":"    private int taskIndex;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":"     * Constructs a MarkCommand with the specified task index.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":"     * This index will be used to find and mark the corresponding task as done.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"     * ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":"     * @param taskIndex The index of the task to be marked as done.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":"    public MarkCommand(int taskIndex) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leedeen01"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leedeen01"},"content":"     * Executes the mark command by updating the task at the specified index to be marked as done.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leedeen01"},"content":"     * It then saves the updated task list and shows feedback to the user.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leedeen01"},"content":"     * @param taskList The task list containing all the tasks.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"     * @param ui The user interface used to display feedback to the user.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leedeen01"},"content":"     * @param storage The storage for saving the updated task list.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leedeen01"},"content":"     * @throws MavisException If an error occurs while marking the task (e.g., invalid index).","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leedeen01"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leedeen01"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws MavisException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leedeen01"},"content":"        Task task \u003d taskList.markDone(taskIndex);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"leedeen01"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"leedeen01"},"content":"        ui.showMarkTask(task);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"leedeen01"},"content":"     * Determines whether this command results in an exit action.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"leedeen01"},"content":"     * Since this command is for marking a task as done, it returns false, indicating that the application will not exit.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"leedeen01"},"content":"     * @return false, indicating that the mark command does not result in exiting the program.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"leedeen01"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"leedeen01"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"leedeen01"},"content":"        return false;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"leedeen01":52}},{"path":"src/main/java/mavis/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"package mavis.command;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"import mavis.MavisException;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"import mavis.Storage;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"import mavis.TaskList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":"import mavis.Ui;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"import mavis.task.Task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":" * The UnmarkCommand class represents a command to unmark a task as completed (not done).","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":" * It extends the Command class and implements the logic to update the task\u0027s completion status to incomplete.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":"    private Integer taskNumber;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":"     * Constructs an UnmarkCommand with the specified task number.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":"     * This number will be used to find and unmark the corresponding task as not done.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"     * ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":"     * @param taskNumber The number of the task to be unmarked.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":"    public UnmarkCommand(Integer taskNumber) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leedeen01"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leedeen01"},"content":"     * Executes the unmark command by updating the task at the specified index to be unmarked (not done).","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leedeen01"},"content":"     * It then saves the updated task list and shows feedback to the user.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leedeen01"},"content":"     * @param taskList The task list containing all the tasks.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"     * @param ui The user interface used to display feedback to the user.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leedeen01"},"content":"     * @param storage The storage for saving the updated task list.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leedeen01"},"content":"     * @throws MavisException If an error occurs while unmarking the task (e.g., invalid index).","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leedeen01"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leedeen01"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws MavisException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leedeen01"},"content":"        Task task \u003d taskList.unmarkDone(taskNumber);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"leedeen01"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"leedeen01"},"content":"        ui.showUnmarkTask(task);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"leedeen01"},"content":"     * Determines whether this command results in an exit action.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"leedeen01"},"content":"     * Since this command is for unmarking a task as not done, it returns false, indicating that the application will not exit.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"leedeen01"},"content":"     *","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"leedeen01"},"content":"     * @return false, indicating that the unmark command does not result in exiting the program.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"leedeen01"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"leedeen01"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"leedeen01"},"content":"        return false;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"leedeen01":52}},{"path":"src/main/java/mavis/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"package mavis.task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"import mavis.MavisException;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":" * The Deadline class represents a task that has a specific due date.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":" * It extends the abstract Task class and adds a due date field.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"     * The due date of the task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":"    private LocalDateTime dueDate;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":"     * Constructs a Deadline with the specified name and due date.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":"     * The due date should be provided in the format \"yyyy-MM-dd HHmm\".","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":"     * ","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leedeen01"},"content":"     * @param name    The name of the task. It cannot be empty.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":"     * @param dueDate The due date of the task in the format \"yyyy-MM-dd HHmm\". ","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leedeen01"},"content":"     *                It must be a valid date-time string.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leedeen01"},"content":"     * @throws MavisException If the date format is invalid or if the dueDate is incorrectly formatted.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leedeen01"},"content":"    public Deadline(String name, String dueDate) throws MavisException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leedeen01"},"content":"        super(name, false);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leedeen01"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leedeen01"},"content":"            this.dueDate \u003d LocalDateTime.parse(dueDate, formatter);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leedeen01"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leedeen01"},"content":"            throw new MavisException(\"Invalid date format. Please use yyyy-MM-dd HHmm. Example: task /by 2025-02-10 1800\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"leedeen01"},"content":"     * Constructs a Deadline object with the specified name, due date, and completion status.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"leedeen01"},"content":"     * The due date is parsed from a string using the ISO_LOCAL_DATE_TIME format.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"leedeen01"},"content":"     * ","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"leedeen01"},"content":"     * @param name    The name of the task or deadline.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"leedeen01"},"content":"     * @param dueDate The due date of the task in ISO_LOCAL_DATE_TIME format (e.g., \"2025-01-26T15:30:00\").","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"leedeen01"},"content":"     * @param done    A boolean indicating whether the task is completed (true) or not (false).","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"leedeen01"},"content":"    public Deadline(String name, String dueDate, boolean done) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"leedeen01"},"content":"        super(name, done);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"leedeen01"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ISO_LOCAL_DATE_TIME;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"leedeen01"},"content":"        this.dueDate \u003d LocalDateTime.parse(dueDate, formatter);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"leedeen01"},"content":"     * Generates a detailed report of the deadline task, including its completion status,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"leedeen01"},"content":"     * name, and due date.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"leedeen01"},"content":"     * ","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"leedeen01"},"content":"     * @return A string representation of the deadline task with its details.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"leedeen01"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"leedeen01"},"content":"    public String report() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"leedeen01"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"leedeen01"},"content":"        Boolean done \u003d super.getDone();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"leedeen01"},"content":"        if (done) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"leedeen01"},"content":"            return \"[D]\"  + \"[X] \" + super.getName() + \" (by: \" + dueDate.format(formatter) + \")\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"leedeen01"},"content":"        return \"[D][ ] \" + super.getName() + \" (by: \" + dueDate.format(formatter) + \")\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"leedeen01"},"content":"     * Converts the deadline task to a string for saving.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"leedeen01"},"content":"     * ","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"leedeen01"},"content":"     * @return A string representing the task, including its completion status.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"leedeen01"},"content":"    @Override","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"leedeen01"},"content":"    public String saveTask() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"leedeen01"},"content":"        Boolean done \u003d super.getDone();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"leedeen01"},"content":"        if (done) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"leedeen01"},"content":"            return \"D\"  + \"|\" + \"1\" + \"|\" + super.getName() + \"|\" + this.dueDate;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"leedeen01"},"content":"        return \"D\"  + \"|\" + \"0\" + \"|\" + super.getName() + \"|\" + this.dueDate;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"leedeen01":81}},{"path":"src/main/java/mavis/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"package mavis.task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"import mavis.MavisException;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":" * The Event class represents a task that has a specific start and end date.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":" * It extends the abstract Task class, adding date-related details.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"     * The start date of the event.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":"    private LocalDateTime startDate;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":"     * The end date of the event.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":"    private LocalDateTime endDate;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leedeen01"},"content":"     * Constructs an Event with the specified name, start date, and end date.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leedeen01"},"content":"     * The dates should be provided in the format \"yyyy-MM-dd HHmm\".","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leedeen01"},"content":"     * ","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leedeen01"},"content":"     * @param name      The name of the event. It cannot be empty.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leedeen01"},"content":"     * @param startDate The start date of the event in the format \"yyyy-MM-dd HHmm\". ","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leedeen01"},"content":"     *                  It must be a valid date-time string.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"     * @param endDate   The end date of the event in the format \"yyyy-MM-dd HHmm\". ","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leedeen01"},"content":"     *                  It must be a valid date-time string.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leedeen01"},"content":"     * @throws MavisException If the date format is invalid, or if the startDate or endDate is incorrectly formatted.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leedeen01"},"content":"    public Event(String name, String startDate, String endDate) throws MavisException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leedeen01"},"content":"        super(name, false);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leedeen01"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"leedeen01"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"leedeen01"},"content":"            this.startDate \u003d LocalDateTime.parse(startDate, formatter);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"leedeen01"},"content":"            this.endDate \u003d LocalDateTime.parse(endDate, formatter);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"leedeen01"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"leedeen01"},"content":"            throw new MavisException(\"Invalid date format. Please use yyyy-MM-dd HHmm. Example: task /from 2025-02-10 0900 to 2025-02-10 1700\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"leedeen01"},"content":"     * Constructs an Event object with the specified name, start and end dates, and completion status.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"leedeen01"},"content":"     * Both the start and end dates are parsed from strings using the ISO_LOCAL_DATE_TIME format.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"leedeen01"},"content":"     * ","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"leedeen01"},"content":"     * @param name      The name of the event.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"leedeen01"},"content":"     * @param startDate The start date of the event in ISO_LOCAL_DATE_TIME format (e.g., \"2025-01-26T09:00:00\").","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"leedeen01"},"content":"     * @param endDate   The end date of the event in ISO_LOCAL_DATE_TIME format (e.g., \"2025-01-26T17:00:00\").","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"leedeen01"},"content":"     * @param done      A boolean indicating whether the event is completed (true) or not (false).","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"leedeen01"},"content":"    public Event(String name, String startDate, String endDate, boolean done) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"leedeen01"},"content":"        super(name, done);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"leedeen01"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ISO_LOCAL_DATE_TIME;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"leedeen01"},"content":"        this.startDate \u003d LocalDateTime.parse(startDate, formatter);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"leedeen01"},"content":"        this.endDate \u003d LocalDateTime.parse(endDate, formatter);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"leedeen01"},"content":"     * Generates a detailed report of the event, including its completion status,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"leedeen01"},"content":"     * name, and date range.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"leedeen01"},"content":"     * ","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"leedeen01"},"content":"     * @return A string representation of the event with its details.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"leedeen01"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"leedeen01"},"content":"    public String report() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"leedeen01"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"leedeen01"},"content":"        Boolean done \u003d super.getDone();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"leedeen01"},"content":"        if (done) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"leedeen01"},"content":"            return \"[E]\"  + \"[X] \" + super.getName() + \" (from: \" + startDate.format(formatter) + \" -\u003e to: \" + endDate.format(formatter) + \")\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"leedeen01"},"content":"        return \"[E][ ] \" + super.getName() + \" (from: \" + startDate.format(formatter) + \" -\u003e to: \" +  endDate.format(formatter) + \")\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"leedeen01"},"content":"     * Converts the event task to a string for saving.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"leedeen01"},"content":"     * ","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"leedeen01"},"content":"     * @return A string representing the task, including its completion status.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"leedeen01"},"content":"    @Override","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"leedeen01"},"content":"    public String saveTask() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"leedeen01"},"content":"        Boolean done \u003d super.getDone();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"leedeen01"},"content":"        if (done) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"leedeen01"},"content":"            return \"E\"  + \"|\" + \"1\" + \"|\" + super.getName() + \"|\" + startDate + \"|\" + endDate;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"leedeen01"},"content":"        return \"E\"  + \"|\" + \"0\" + \"|\" + super.getName() + \"|\" + startDate + \"|\" + endDate;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"leedeen01":91}},{"path":"src/main/java/mavis/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"package mavis.task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":" * The Task class represents a generic task with a name and a completion status.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":" * This class serves as a base class intended to be extended by more specific ","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":" * types of tasks that may add additional properties or behavior. ","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":" * It provides basic functionality to set and get the task\u0027s name and completion status.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":" * ","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":" * Subclasses should implement more specific task-related logic, such as deadlines,","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":" * priorities, or custom completion conditions.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"     * The name of the task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":"    String name;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":"    ","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":"     * The completion status of the task. True if the task is done, false otherwise.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":"    Boolean done;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leedeen01"},"content":"     * Constructor to create a new task with a given name.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leedeen01"},"content":"     * By default, the task is marked as not done.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leedeen01"},"content":"     * ","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leedeen01"},"content":"     * @param name The name of the task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leedeen01"},"content":"     * @param done The completion status of the task. True if the task is done, false otherwise.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"    public Task(String name, boolean done) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leedeen01"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leedeen01"},"content":"        this.done \u003d done;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leedeen01"},"content":"     * Gets the name of the task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"leedeen01"},"content":"     * ","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"leedeen01"},"content":"     * @return The name of the task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"leedeen01"},"content":"    public String getName() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"leedeen01"},"content":"        return name;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"leedeen01"},"content":"     * Gets the completion status of the task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"leedeen01"},"content":"     * ","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"leedeen01"},"content":"     * @return True if the task is done, false otherwise.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"leedeen01"},"content":"    public Boolean getDone() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"leedeen01"},"content":"        return done;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"leedeen01"},"content":"     * Sets the completion status of the task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"leedeen01"},"content":"     * ","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"leedeen01"},"content":"     * @param done True to mark the task as done, false to mark it as not done.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"leedeen01"},"content":"    public void setDone(Boolean done) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"leedeen01"},"content":"        this.done \u003d done;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"leedeen01"},"content":"     * Returns a summary of the task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"leedeen01"},"content":"     * ","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"leedeen01"},"content":"     * @return A string description of the task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"leedeen01"},"content":"    public abstract String report();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"leedeen01"},"content":"     * Converts the task to a string format suitable for saving to a file.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"leedeen01"},"content":"     * ","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"leedeen01"},"content":"     * @return A string format of the task.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"leedeen01"},"content":"    public abstract String saveTask();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"leedeen01":76}},{"path":"src/main/java/mavis/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"package mavis.task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"/**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":" * The ToDo class represents a simple task without a specific due date or event timeline.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":" * It extends the abstract Task class and provides a basic implementation.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":" */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":"     * Constructs a ToDo task with the specified name.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":"     * ","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":"     * @param name The name of the ToDo task.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"    public ToDo(String name) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":"        super(name, false);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":"     * Constructs a ToDo task with the specified name and completion status.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":"     * ","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":"     * @param name The name of the ToDo task.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leedeen01"},"content":"     * @param done The completion status of the task. True if the task is done, false otherwise.","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leedeen01"},"content":"    public ToDo(String name, boolean done) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leedeen01"},"content":"        super(name, done);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leedeen01"},"content":"     * Generates a detailed report of the ToDo task, including its completion status and name.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"     * ","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leedeen01"},"content":"     * @return A string representation of the ToDo task with its details.","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leedeen01"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leedeen01"},"content":"    public String report() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leedeen01"},"content":"        Boolean done \u003d super.getDone();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leedeen01"},"content":"        if (done) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"leedeen01"},"content":"            return \"[T]\"  + \"[X] \" + super.getName();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"leedeen01"},"content":"        return \"[T][ ] \" + super.getName();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"leedeen01"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"leedeen01"},"content":"     * Converts the to-do task to a string for saving.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"leedeen01"},"content":"     * ","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"leedeen01"},"content":"     * @return A string representing the task, including its completion status.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"leedeen01"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"leedeen01"},"content":"    @Override","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"leedeen01"},"content":"    public String saveTask() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"leedeen01"},"content":"        Boolean done \u003d super.getDone();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"leedeen01"},"content":"        if (done) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"leedeen01"},"content":"            return \"T\"  + \"|\" + \"1\" + \"|\" + super.getName();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"leedeen01"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"leedeen01"},"content":"        return \"T\"  + \"|\" + \"0\" + \"|\" + super.getName();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"leedeen01":56}},{"path":"src/test/java/mavis/MavisTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"package mavis;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":"class MavisTest {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":"    private final String testFilePath \u003d \"src/test/data/TestMavis.txt\"; // Test data file path","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":"    private ByteArrayOutputStream outputStream; // To capture console output","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":"    void setUp() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":"        // Set up to capture console output for verification","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"        outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":"        // Ensure the test file is empty or reset before tests","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leedeen01"},"content":"        TaskList taskList \u003d new TaskList(); // Create an empty TaskList","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":"        Storage storage \u003d new Storage(testFilePath);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leedeen01"},"content":"        storage.saveTasks(taskList); // Pass TaskList object to saveTasks()","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leedeen01"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leedeen01"},"content":"    void testRun_withValidCommand() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leedeen01"},"content":"        // Simulate user input for adding a ToDo task and exiting","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"        String simulatedInput \u003d \"todo Buy milk\\nbye\\n\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leedeen01"},"content":"        ByteArrayInputStream inputStream \u003d new ByteArrayInputStream(simulatedInput.getBytes());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leedeen01"},"content":"        System.setIn(inputStream);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leedeen01"},"content":"        // Create and run Mavis","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leedeen01"},"content":"        Mavis mavis \u003d new Mavis(testFilePath);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leedeen01"},"content":"        mavis.run();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"leedeen01"},"content":"        // Verify output contains the added task","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"leedeen01"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"leedeen01"},"content":"        assertTrue(output.contains(\"Got it. I\u0027ve added this task:\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"leedeen01"},"content":"        assertTrue(output.contains(\"[T][ ] Buy milk\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"leedeen01"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"leedeen01"},"content":"    void testRun_withInvalidCommand() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"leedeen01"},"content":"        // Simulate invalid user input","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"leedeen01"},"content":"        String simulatedInput \u003d \"invalid_command\\nbye\\n\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"leedeen01"},"content":"        ByteArrayInputStream inputStream \u003d new ByteArrayInputStream(simulatedInput.getBytes());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"leedeen01"},"content":"        System.setIn(inputStream);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"leedeen01"},"content":"        // Create and run Mavis","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"leedeen01"},"content":"        Mavis mavis \u003d new Mavis(testFilePath);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"leedeen01"},"content":"        mavis.run();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"leedeen01"},"content":"        // Verify output contains error message","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"leedeen01"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"leedeen01"},"content":"        assertTrue(output.contains(\"I\u0027m sorry, but I don\u0027t know what that means.\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"leedeen01"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"leedeen01"},"content":"    void testRun_withEmptyInput() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"leedeen01"},"content":"        // Simulate empty input and then exit","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"leedeen01"},"content":"        String simulatedInput \u003d \"\\nbye\\n\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"leedeen01"},"content":"        ByteArrayInputStream inputStream \u003d new ByteArrayInputStream(simulatedInput.getBytes());","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"leedeen01"},"content":"        System.setIn(inputStream);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"leedeen01"},"content":"        // Create and run Mavis","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"leedeen01"},"content":"        Mavis mavis \u003d new Mavis(testFilePath);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"leedeen01"},"content":"        mavis.run();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"leedeen01"},"content":"        // Verify output contains error for empty command","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"leedeen01"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"leedeen01"},"content":"        assertTrue(output.contains(\"I\u0027m sorry, but I don\u0027t know what that means.\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"leedeen01":76}},{"path":"src/test/java/mavis/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"package mavis;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"import mavis.command.*;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":"public class ParserTest {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":"    public void testParseBye() throws MavisException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":"        String input \u003d \"bye\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":"        Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":"        assertTrue(command instanceof ExitCommand, \"The command should be of type ExitCommand.\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"    public void testParseList() throws MavisException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":"        String input \u003d \"list\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":"        Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":"        assertTrue(command instanceof ListCommand, \"The command should be of type ListCommand.\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":"    public void testParseUnknown() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leedeen01"},"content":"        String input \u003d \"unknown command\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":"        assertThrows(MavisException.class, () -\u003e Parser.parse(input), \"Parsing an unknown command should throw a MavisException.\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leedeen01"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leedeen01"},"content":"    public void testParseTodoEmptyDescription() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leedeen01"},"content":"        String input \u003d \"todo\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leedeen01"},"content":"        assertThrows(MavisException.class, () -\u003e Parser.parse(input), \"Parsing a ToDo with empty description should throw a MavisException.\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leedeen01"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leedeen01"},"content":"    public void testParseDeadlineMissingBy() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leedeen01"},"content":"        String input \u003d \"deadline Test Deadline\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leedeen01"},"content":"        assertThrows(MavisException.class, () -\u003e Parser.parse(input), \"Parsing a Deadline with missing \u0027/by\u0027 should throw a MavisException.\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"leedeen01"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"leedeen01"},"content":"    public void testParseEventInvalidFormat() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"leedeen01"},"content":"        String input \u003d \"event Test Event /start 2025-01-28 0900\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"leedeen01"},"content":"        assertThrows(MavisException.class, () -\u003e Parser.parse(input), \"Parsing an Event with missing \u0027/end\u0027 should throw a MavisException.\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"leedeen01":44}},{"path":"src/test/java/mavis/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"package mavis;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":"import mavis.task.ToDo;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":"public class TaskListTest {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":"    private ArrayList\u003cToDo\u003e taskList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":"    private ToDo sampleToDo;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":"    public void setUp() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":"        // Initializing toDoList and a sample ToDo before each test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":"        sampleToDo \u003d new ToDo(\"Sample ToDo\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leedeen01"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":"    public void testAddToDo() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leedeen01"},"content":"        taskList.add(sampleToDo);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leedeen01"},"content":"        assertEquals(1, taskList.size(), \"ToDo should be added.\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leedeen01"},"content":"        assertEquals(sampleToDo, taskList.get(0), \"The added ToDo should match the sample ToDo.\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leedeen01"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"    public void testDeleteToDo_ValidIndex() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leedeen01"},"content":"        taskList.add(sampleToDo);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leedeen01"},"content":"        ToDo deletedToDo \u003d taskList.remove(0);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leedeen01"},"content":"        assertEquals(0, taskList.size(), \"ToDo should be removed.\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leedeen01"},"content":"        assertEquals(sampleToDo, deletedToDo, \"The deleted ToDo should match the added ToDo.\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"leedeen01"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"leedeen01"},"content":"    public void testDeleteToDo_InvalidIndex() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"leedeen01"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e taskList.remove(0), \"Deleting an invalid ToDo should throw IndexOutOfBoundsException.\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"leedeen01"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"leedeen01"},"content":"    public void testMarkDone_ValidToDo() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"leedeen01"},"content":"        taskList.add(sampleToDo);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"leedeen01"},"content":"        sampleToDo.setDone(true);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"leedeen01"},"content":"        assertTrue(sampleToDo.getDone(), \"The ToDo should be marked as done.\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"leedeen01"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"leedeen01"},"content":"    public void testMarkDone_InvalidToDo() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"leedeen01"},"content":"        // Trying to mark a non-existing ToDo, should not be possible in this context","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"leedeen01"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e taskList.get(1).setDone(true), \"Marking an invalid ToDo should throw IndexOutOfBoundsException.\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"leedeen01"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"leedeen01"},"content":"    public void testUnmarkDone_ValidToDo() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"leedeen01"},"content":"        taskList.add(sampleToDo);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"leedeen01"},"content":"        sampleToDo.setDone(true);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"leedeen01"},"content":"        sampleToDo.setDone(false);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"leedeen01"},"content":"        assertFalse(sampleToDo.getDone(), \"The ToDo should be marked as not done.\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"leedeen01"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"leedeen01"},"content":"    public void testUnmarkDone_InvalidToDo() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"leedeen01"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e taskList.get(1).setDone(false), \"Unmarking an invalid ToDo should throw IndexOutOfBoundsException.\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"leedeen01"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"leedeen01"},"content":"    public void testInitialToDoList() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"leedeen01"},"content":"        assertTrue(taskList.isEmpty(), \"The ToDo list should initially be empty.\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"leedeen01"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"leedeen01"},"content":"    public void testToDoCountAfterAdding() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"leedeen01"},"content":"        taskList.add(sampleToDo);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"leedeen01"},"content":"        assertEquals(1, taskList.size(), \"The ToDo count should reflect the number of ToDos in the list.\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"leedeen01"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"leedeen01"},"content":"    public void testToDoCountAfterDeleting() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"leedeen01"},"content":"        taskList.add(sampleToDo);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"leedeen01"},"content":"        taskList.remove(0);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"leedeen01"},"content":"        assertEquals(0, taskList.size(), \"The ToDo count should reflect the number of ToDos after deletion.\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"leedeen01":86}},{"path":"src/test/java/mavis/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"package mavis;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"import mavis.task.Task;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":"import mavis.task.ToDo;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":"class UiTest {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":"    private Ui ui;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":"    private ByteArrayOutputStream outputStream;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":"    void setUp() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"        outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":"        System.setOut(new PrintStream(outputStream));  // Redirect System.out to capture the output","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leedeen01"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":"    void testShowWelcome() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"leedeen01"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"leedeen01"},"content":"        // Check if the welcome message is printed","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"leedeen01"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"leedeen01"},"content":"        assertTrue(output.contains(\"Hello! I\u0027m Mavis\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"leedeen01"},"content":"        assertTrue(output.contains(\"How can i help you?\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"leedeen01"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"leedeen01"},"content":"    void testShowLine() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"leedeen01"},"content":"        ui.showLine();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"leedeen01"},"content":"        // Check if the line separator is printed","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"leedeen01"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"leedeen01"},"content":"        assertTrue(output.contains(\"____________________________________________________________\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"leedeen01"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"leedeen01"},"content":"    void testShowTaskAdded() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"leedeen01"},"content":"        Task task \u003d new ToDo(\"Buy groceries\");  // Example task","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"leedeen01"},"content":"        ui.showTaskAdded(task);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"leedeen01"},"content":"        // Check if the task added message is printed","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"leedeen01"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"leedeen01"},"content":"        assertTrue(output.contains(\"Got it. I\u0027ve added this task:\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"leedeen01"},"content":"        assertTrue(output.contains(\"Buy groceries\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"leedeen01"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"leedeen01"},"content":"    void testShowDeleteTask() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"leedeen01"},"content":"        Task task \u003d new ToDo(\"Read book\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"leedeen01"},"content":"        ui.showDeleteTask(task);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"leedeen01"},"content":"        // Check if the task removal message is printed","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"leedeen01"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"leedeen01"},"content":"        assertTrue(output.contains(\"Noted. I\u0027ve removed this task:\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"leedeen01"},"content":"        assertTrue(output.contains(\"Read book\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"leedeen01"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"leedeen01"},"content":"    void testShowMarkTask() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"leedeen01"},"content":"        Task task \u003d new ToDo(\"Complete homework\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"leedeen01"},"content":"        ui.showMarkTask(task);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"leedeen01"},"content":"        // Check if the task marked message is printed","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"leedeen01"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"leedeen01"},"content":"        assertTrue(output.contains(\"Nice! I\u0027ve marked this task as done:\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"leedeen01"},"content":"        assertTrue(output.contains(\"Complete homework\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"leedeen01"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"leedeen01"},"content":"    void testShowUnmarkTask() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"leedeen01"},"content":"        Task task \u003d new ToDo(\"Do laundry\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"leedeen01"},"content":"        ui.showUnmarkTask(task);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"leedeen01"},"content":"        // Check if the task unmarked message is printed","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"leedeen01"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"leedeen01"},"content":"        assertTrue(output.contains(\"OK, I\u0027ve marked this task as not done yet:\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"leedeen01"},"content":"        assertTrue(output.contains(\"Do laundry\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"leedeen01"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"leedeen01"},"content":"    void testPrintTasks() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"leedeen01"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"leedeen01"},"content":"        Task task1 \u003d new ToDo(\"Task 1\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"leedeen01"},"content":"        Task task2 \u003d new ToDo(\"Task 2\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"leedeen01"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"leedeen01"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"leedeen01"},"content":"        ui.printTasks(taskList);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"leedeen01"},"content":"        // Check if the task list is printed correctly","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"leedeen01"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"leedeen01"},"content":"        assertTrue(output.contains(\"Here are the tasks in your list:\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"leedeen01"},"content":"        assertTrue(output.contains(\"1. [T][ ] Task 1\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"leedeen01"},"content":"        assertTrue(output.contains(\"2. [T][ ] Task 2\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"leedeen01"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"leedeen01"},"content":"    void testShowGoodbyeMessage() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"leedeen01"},"content":"        ui.showGoodbyeMessage();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"leedeen01"},"content":"        // Check if the goodbye message is printed","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"leedeen01"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"leedeen01"},"content":"        assertTrue(output.contains(\"Bye. Hope to see you again soon!\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"leedeen01"},"content":"    @Test","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"leedeen01"},"content":"    void testShowError() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"leedeen01"},"content":"        ui.showError(\"This is an error message\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"leedeen01"},"content":"        // Check if the error message is printed","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"leedeen01"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"leedeen01"},"content":"        assertTrue(output.contains(\"This is an error message\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"leedeen01"},"content":"        assertTrue(output.contains(\"____________________________________________________________\"));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"leedeen01"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"leedeen01"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"leedeen01":121}},{"path":"src/test/java/mavis/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"leedeen01":1}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"leedeen01"},"content":"todo 2","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"leedeen01"},"content":"event go home","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"leedeen01"},"content":"event go home /2","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"leedeen01"},"content":"event go home /start 2025-03-01 /end 2025-03-01 1700","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"leedeen01"},"content":"event go home /start 2025-03-01 0900 /end 2025-03-01 1700","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"leedeen01"},"content":"list","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"leedeen01"},"content":"deadline eat food","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"leedeen01"},"content":"deadline eat food /2","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"leedeen01"},"content":"deadline eat food /by 0900","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"leedeen01"},"content":"deadline eat food /by 2025-03-01 0900","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"leedeen01"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"leedeen01"},"content":"mark 1","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"leedeen01"},"content":"delete 2","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"leedeen01"},"content":"list","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"unmark 1","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":"todo homework for cs2103","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":"todo do cs2103 homework","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":"find homework","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"bye","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"leedeen01":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"leedeen01"},"content":"if [ -e \"../src/main/data/Mavis.txt\" ]","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"leedeen01"},"content":"then","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"leedeen01"},"content":"    rm ../src/main/data/Mavis.txt  # Remove the file if it exists","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"leedeen01"},"content":"    touch ../src/main/data/Mavis.txt  # Create the file again","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"leedeen01"},"content":"    chmod 644 ../src/main/data/Mavis.txt  # Corrected path","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"leedeen01"},"content":"fi","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"leedeen01"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"leedeen01"},"content":"# compile all the code into the bin folder, terminates if error occurred","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"leedeen01"},"content":"if ! javac -cp ../src/main/java/mavis:../src/main/java/mavis/command:../src/main/java/mavis/task -Xlint:none -d ../bin ../src/main/java/mavis/*.java ../src/main/java/mavis/command/*.java ../src/main/java/mavis/task/*.java","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"leedeen01"},"content":"java -classpath ../bin mavis.Mavis \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"leedeen01":11,"-":35}}]
