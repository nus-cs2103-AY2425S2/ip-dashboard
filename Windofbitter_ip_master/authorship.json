[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"    testImplementation group: \u0027org.mockito\u0027, name: \u0027mockito-core\u0027, version: \u00275.15.2\u0027","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"    testRuntimeOnly group: \u0027org.mockito\u0027, name: \u0027mockito-core\u0027, version: \u00275.15.2\u0027","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"sourceSets {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"    test {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"        java {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"            srcDir \u0027src/test/java\u0027","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Windofbitter"},"content":"    mainClass.set(\"wind.Wind\")","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Windofbitter"},"content":"    archiveBaseName \u003d \"Wind\"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"Windofbitter":12,"-":39}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"T | 0 | a","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"T | 0 | a","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"T | 0 | b","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"T | 0 | bb","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"Windofbitter":4}},{"path":"src/main/java/wind/Wind.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package wind;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import wind.command.Command;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import wind.exception.WindException;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import wind.parser.Parser;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import wind.storage.Storage;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import wind.storage.TaskList;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"import wind.ui.Ui;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":" * The main class for the Wind application.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Wind {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"        ui.printWelcome();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"        TaskList todos \u003d new TaskList();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"        storage.loadTask(todos);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        while (true) {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"                Command c \u003d Parser.parse(line, todos);","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"                c.execute(todos, storage, ui);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"                if (c.isExit()) {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"                    break;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"            } catch (WindException e) {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-01-15","isFullCredit":false}],"authorContributionMap":{"Windofbitter":18,"-":19}},{"path":"src/main/java/wind/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package wind.command;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import wind.storage.Storage;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import wind.storage.TaskList;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import wind.ui.Ui;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":" * Represents a command to exit the application.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ByeCommand implements Command {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"     * Executes the ByeCommand, which prints a goodbye message to the user.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"     * @param storage The storage handler.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"     * @param ui The user interface handler.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"        ui.printGoodbye();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"     * Indicates that this command will exit the application.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"     * @return true, as this command exits the application.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-01-15","isFullCredit":false}],"authorContributionMap":{"Windofbitter":23,"-":10}},{"path":"src/main/java/wind/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package wind.command;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import wind.storage.Storage;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import wind.storage.TaskList;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import wind.ui.Ui;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":" * Represents a command that can be executed in the application.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface Command {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"     * Executes the command with the given task list, storage, and user interface.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"     * @param storage The storage handler.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"     * @param ui The user interface handler.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"     * Indicates whether this command will exit the application.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"     * @return true if this command exits the application, false otherwise.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean isExit();","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-01-15","isFullCredit":false}],"authorContributionMap":{"Windofbitter":23,"-":4}},{"path":"src/main/java/wind/command/CommandEnum.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package wind.command;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":" * Represents the different types of commands that can be executed.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"public enum CommandEnum {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"    BYE,","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    LIST,","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    DELETE,","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    MARK,","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    UNMARK,","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    TODO,","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    DEADLINE,","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    EVENT,","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"    FIND,","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    INVALID","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-01-15","isFullCredit":false}],"authorContributionMap":{"Windofbitter":5,"-":12}},{"path":"src/main/java/wind/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package wind.command;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import wind.storage.Storage;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import wind.storage.TaskList;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"import wind.task.Deadline;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"import wind.ui.Ui;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":" * Represents a command to add a deadline task to the task list.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class DeadlineCommand implements Command {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final String description;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"    private final LocalDate by;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"     * Constructs a DeadlineCommand with the specified description and due date.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"     * @param by The due date of the deadline task.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"    public DeadlineCommand(String description, LocalDate by) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"     * Executes the DeadlineCommand, which adds a deadline task to the task list,","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"     * prints a success message, and saves the updated task list.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"     * @param storage The storage handler.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"     * @param ui The user interface handler.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Deadline deadline \u003d new Deadline(this.description, this.by);","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"        taskList.addTask(deadline);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Windofbitter"},"content":"        ui.printAddTaskSuccess(deadline, taskList.getSize());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Windofbitter"},"content":"        storage.save(taskList);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Windofbitter"},"content":"     * Indicates that this command will not exit the application.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Windofbitter"},"content":"     * @return false, as this command does not exit the application.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-01-15","isFullCredit":false}],"authorContributionMap":{"Windofbitter":37,"-":17}},{"path":"src/main/java/wind/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package wind.command;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import wind.storage.Storage;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import wind.storage.TaskList;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import wind.task.Task;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import wind.ui.Ui;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final int index;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"     * Constructs a DeleteCommand with the specified task index.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"     * Executes the DeleteCommand, which deletes a task from the task list,","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"     * prints a success message, and saves the updated task list.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"     * @param storage The storage handler.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"     * @param ui The user interface handler.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"        Task task \u003d taskList.getTask(index - 1);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"        taskList.deleteTask(index - 1);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"        ui.printDeleteTaskSuccess(task, taskList.getSize());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"        storage.save(taskList);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"     * Indicates that this command will not exit the application.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Windofbitter"},"content":"     * @return false, as this command does not exit the application.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-01-15","isFullCredit":false}],"authorContributionMap":{"Windofbitter":32,"-":16}},{"path":"src/main/java/wind/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package wind.command;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import wind.storage.Storage;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import wind.storage.TaskList;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import wind.task.Event;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import wind.ui.Ui;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":" * Represents a command to add an event task to the task list.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class EventCommand implements Command {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String description;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final String from;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String to;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"     * Constructs an EventCommand with the specified description, start time, and end time.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"     * @param from The start time of the event task.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"     * @param to The end time of the event task.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public EventCommand(String description, String from, String to) {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"     * Executes the EventCommand, which adds an event task to the task list,","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"     * prints a success message, and saves the updated task list.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"     * @param storage The storage handler.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"     * @param ui The user interface handler.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Event event \u003d new Event(description, from, to);","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"        taskList.addTask(event);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Windofbitter"},"content":"        ui.printAddTaskSuccess(event, taskList.getSize());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Windofbitter"},"content":"        storage.save(taskList);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Windofbitter"},"content":"     * Indicates that this command will not exit the application.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Windofbitter"},"content":"     * @return false, as this command does not exit the application.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-01-15","isFullCredit":false}],"authorContributionMap":{"Windofbitter":33,"-":21}},{"path":"src/main/java/wind/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package wind.command;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import java.util.LinkedList;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import java.util.List;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import wind.storage.Storage;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import wind.storage.TaskList;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"import wind.task.Task;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"import wind.ui.Ui;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"public class FindCommand implements Command{","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"    private final String keyword;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"        List\u003cTask\u003e matchingTasks \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"        for (Task task : taskList.getTasks()) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"            }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"        ui.printMatchingTasks(matchingTasks);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"    @Override","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"        return false;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"Windofbitter":33}},{"path":"src/main/java/wind/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package wind.command;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import wind.storage.Storage;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import wind.storage.TaskList;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import wind.ui.Ui;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"     * Executes the ListCommand, which prints all tasks in the task list.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"     * @param storage The storage handler.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"     * @param ui The user interface handler.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"        ui.printList(taskList);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"     * Indicates that this command will not exit the application.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"     * @return false, as this command does not exit the application.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-01-15","isFullCredit":false}],"authorContributionMap":{"Windofbitter":23,"-":10}},{"path":"src/main/java/wind/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package wind.command;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import wind.storage.Storage;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import wind.storage.TaskList;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import wind.task.Task;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import wind.ui.Ui;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":" * Represents a command to mark a task as done in the task list.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final int index;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"     * Constructs a MarkCommand with the specified task index.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"     * Executes the MarkCommand, which marks a task as done in the task list,","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"     * prints a success message, and saves the updated task list.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"     * @param storage The storage handler.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"     * @param ui The user interface handler.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"        Task task \u003d taskList.getTask(index - 1);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        task.setIsDone(true);","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"        ui.printMarkTaskSuccess(task);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"        storage.save(taskList);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"     * Indicates that this command will not exit the application.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Windofbitter"},"content":"     * @return false, as this command does not exit the application.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-01-15","isFullCredit":false}],"authorContributionMap":{"Windofbitter":31,"-":17}},{"path":"src/main/java/wind/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package wind.command;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import wind.storage.Storage;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import wind.storage.TaskList;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import wind.task.Task;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import wind.task.Todo;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import wind.ui.Ui;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":" * Represents a command to add a todo task to the task list.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class TodoCommand implements Command {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final String description;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"     * Constructs a TodoCommand with the specified description.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"     * Returns the description of the todo task.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"     * @return The description of the todo task.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return this.description;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"     * Executes the TodoCommand, which adds a todo task to the task list,","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"     * prints a success message, and saves the updated task list.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"     * @param storage The storage handler.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"     * @param ui The user interface handler.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Windofbitter"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Task newTask \u003d new Todo(this.description);","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Windofbitter"},"content":"        taskList.addTask(newTask);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Windofbitter"},"content":"        ui.printAddTaskSuccess(newTask, taskList.getSize());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Windofbitter"},"content":"        storage.save(taskList);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Windofbitter"},"content":"     * Indicates that this command will not exit the application.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Windofbitter"},"content":"     * @return false, as this command does not exit the application.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-01-15","isFullCredit":false}],"authorContributionMap":{"Windofbitter":37,"-":20}},{"path":"src/main/java/wind/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package wind.command;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import wind.storage.Storage;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import wind.storage.TaskList;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import wind.task.Task;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import wind.ui.Ui;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":" * Represents a command to unmark a task as not done in the task list.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class UnmarkCommand implements Command {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final int taskNumber;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"     * Constructs an UnmarkCommand with the specified task number.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"     * @param taskNumber The number of the task to be unmarked as not done.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public UnmarkCommand(int taskNumber) {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"     * Executes the UnmarkCommand, which unmarks a task as not done in the task list,","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"     * prints a success message, and saves the updated task list.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"     * @param storage The storage handler.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"     * @param ui The user interface handler.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"        Task task \u003d taskList.getTask(taskNumber - 1);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        task.setIsDone(false);","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"        ui.printUnmarkTaskSuccess(task);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"        storage.save(taskList);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"     * Indicates that this command will not exit the application.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Windofbitter"},"content":"     * @return false, as this command does not exit the application.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-01-15","isFullCredit":false}],"authorContributionMap":{"Windofbitter":31,"-":17}},{"path":"src/main/java/wind/exception/IllegalArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package wind.exception;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":" * Represents an exception that is thrown when an illegal or inappropriate argument is passed.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalArgumentException extends WindException {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"     * Constructs an IllegalArgumentException with the specified detail message.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"     * @param message The detail message.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public IllegalArgumentException(String message) {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-01-15","isFullCredit":false}],"authorContributionMap":{"Windofbitter":10,"-":6}},{"path":"src/main/java/wind/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package wind.exception;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":" * Represents an exception that is thrown when an invalid command is encountered.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class InvalidCommandException extends WindException {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"     * Constructs an InvalidCommandException with the specified detail message.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"     * @param message The detail message.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-01-15","isFullCredit":false}],"authorContributionMap":{"Windofbitter":10,"-":6}},{"path":"src/main/java/wind/exception/WindException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package wind.exception;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":" * Represents a custom exception for the Wind application.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class WindException extends RuntimeException {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"  /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"   * Constructs a WindException with the specified detail message.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"   *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"   * @param message The detail message.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"   */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"  public WindException(String message) {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    super(message);","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-01-15","isFullCredit":false}],"authorContributionMap":{"Windofbitter":10,"-":6}},{"path":"src/main/java/wind/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package wind.parser;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import wind.command.*;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import wind.exception.InvalidCommandException;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"import wind.storage.TaskList;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":" * Parses user input and returns the corresponding command.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Parser {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"     * Parses the user input and returns the corresponding command.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"     * @param input The user input.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"     * @return The command corresponding to the user input.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"     * @throws IllegalArgumentException If the input is invalid.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"     * @throws InvalidCommandException If the command is invalid.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"    public static Command parse(String input, TaskList taskList) throws IllegalArgumentException, InvalidCommandException {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        String[] words \u003d input.split(\" \");","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        CommandEnum commandEnum \u003d getCommandEnum(words[0]);","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"        return","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"                switch (commandEnum) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"                case BYE -\u003e new ByeCommand();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"                case LIST -\u003e new ListCommand();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"                case DELETE -\u003e {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"                        // try and parse the integer and see if it is valid","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"                        if (words.length \u003c 2) {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"                            String errorMessage \u003d \"Please provide a wind.task number for the delete wind.command.\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"                            // give the correct format","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"                            errorMessage +\u003d \"\\nCorrect format: delete \u003cwind.task number\u003e\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"                            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"                        }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"                        // check whether the wind.task number is valid","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Windofbitter"},"content":"                        if (!words[1].matches(\"\\\\d+\") || Integer.parseInt(words[1]) \u003c 1 || Integer.parseInt(words[1]) \u003e taskList.getSize()) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Windofbitter"},"content":"                            String errorMessage \u003d \"Please provide a valid wind.task number for the delete wind.command.\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"                            // give the correct format","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Windofbitter"},"content":"                            errorMessage +\u003d \"\\nCorrect format: delete \u003cwind.task number\u003e\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"                            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"                        }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"                        yield new DeleteCommand(Integer.parseInt(words[1]));","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"                    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Windofbitter"},"content":"                case MARK -\u003e {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"                        // try and parse the integer and see if it is valid","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"                        if (words.length \u003c 2) {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Windofbitter"},"content":"                            String errorMessage \u003d \"Please provide a wind.task number for the mark wind.command.\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"                            // give the correct format","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Windofbitter"},"content":"                            errorMessage +\u003d \"\\nCorrect format: mark \u003cwind.task number\u003e\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"                            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"                        }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Windofbitter"},"content":"                        // check whether the wind.task number is valid","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Windofbitter"},"content":"                        if (!words[1].matches(\"\\\\d+\") || Integer.parseInt(words[1]) \u003c 1 || Integer.parseInt(words[1]) \u003e taskList.getSize()) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Windofbitter"},"content":"                            String errorMessage \u003d \"Please provide a valid wind.task number for the mark wind.command.\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"                            // give the correct format","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Windofbitter"},"content":"                            errorMessage +\u003d \"\\nCorrect format: mark \u003cwind.task number\u003e\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"                            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"                        }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"                        yield new MarkCommand(Integer.parseInt(words[1]));","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"                    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Windofbitter"},"content":"                case UNMARK -\u003e {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"                        if (words.length \u003c 2) {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Windofbitter"},"content":"                            String errorMessage \u003d \"Please provide a wind.task number for the unmark wind.command.\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"                            // give the correct format","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Windofbitter"},"content":"                            errorMessage +\u003d \"\\nCorrect format: unmark \u003cwind.task number\u003e\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"                            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"                        }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Windofbitter"},"content":"                        if (!words[1].matches(\"\\\\d+\") || Integer.parseInt(words[1]) \u003c 1 || Integer.parseInt(words[1]) \u003e taskList.getSize()) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Windofbitter"},"content":"                            String errorMessage \u003d \"Please provide a valid wind.task number for the unmark wind.command.\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"                            // give the correct format","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Windofbitter"},"content":"                            errorMessage +\u003d \"\\nCorrect format: unmark \u003cwind.task number\u003e\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"                            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"                        }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"                        yield new UnmarkCommand(Integer.parseInt(words[1]));","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"                    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Windofbitter"},"content":"                case TODO -\u003e {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"                        if (input.length() \u003c 6) {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Windofbitter"},"content":"                            String errorMessage \u003d \"Please provide a description for the todo wind.command.\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"                            // give the correct format","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"                            errorMessage +\u003d \"\\nCorrect format: todo \u003cdescription\u003e\";","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"                            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"                        }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"                        yield new TodoCommand(input.substring(5));","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"                    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Windofbitter"},"content":"                case DEADLINE -\u003e {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"                        if (!input.contains(\" /by \")) {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Windofbitter"},"content":"                            String errorMessage \u003d \"Please provide a valid deadline wind.command.\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"                            errorMessage +\u003d \"\\nCorrect format: deadline \u003cdescription\u003e /by \u003cdeadline\u003e\";","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"                            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"                        }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"                        if (input.substring(9).split(\" /by \").length \u003c 2) {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Windofbitter"},"content":"                            String errorMessage \u003d \"Please provide a deadline for the deadline wind.command.\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"                            errorMessage +\u003d \"\\nCorrect format: deadline \u003cdescription\u003e /by \u003cdeadline\u003e\";","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"                            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"                        }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Windofbitter"},"content":"                        try {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"                            String[] deadlineWords \u003d input.substring(9).split(\" /by \");","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Windofbitter"},"content":"                            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Windofbitter"},"content":"                            LocalDate deadline \u003d LocalDate.parse(deadlineWords[1], formatter);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Windofbitter"},"content":"                            yield new DeadlineCommand(deadlineWords[0], deadline);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Windofbitter"},"content":"                        } catch (Exception e) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Windofbitter"},"content":"                            String errorMessage \u003d \"Please provide a valid deadline for the deadline wind.command.\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Windofbitter"},"content":"                            errorMessage +\u003d \"\\nCorrect format: deadline \u003cdescription\u003e /by \u003cdeadline\u003e (yyyy-MM-dd)\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Windofbitter"},"content":"                            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Windofbitter"},"content":"                        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"                    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Windofbitter"},"content":"                case EVENT -\u003e {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"                        // check the format","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"                        if (!input.contains(\" /from \") || !input.contains(\" /to \") || input.indexOf(\" /from \") \u003e input.indexOf(\" /to \")) {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Windofbitter"},"content":"                            String errorMessage \u003d \"Please provide a valid event wind.command.\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"                            errorMessage +\u003d \"\\nCorrect format: event \u003cdescription\u003e /from \u003cstart time\u003e /to \u003cend time\u003e\";","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"                            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"                        }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"                        // check the description","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"                        if (input.substring(6).split(\" /from | /to \").length \u003c 3) {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Windofbitter"},"content":"                            String errorMessage \u003d \"Please provide a description for the event wind.command.\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"                            errorMessage +\u003d \"\\nCorrect format: event \u003cdescription\u003e /from \u003cstart time\u003e /to \u003cend time\u003e\";","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"                            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"                        }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"                        String[] eventParts \u003d input.substring(6).split(\" /from | /to \");","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"                        yield new EventCommand(eventParts[0], eventParts[1], eventParts[2]);","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"                    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Windofbitter"},"content":"                case FIND -\u003e {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Windofbitter"},"content":"                        if (input.length() \u003c 6) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Windofbitter"},"content":"                            String errorMessage \u003d \"Please provide a keyword for the find wind.command.\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Windofbitter"},"content":"                            // give the correct format","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Windofbitter"},"content":"                            errorMessage +\u003d \"\\nCorrect format: find \u003ckeyword\u003e\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Windofbitter"},"content":"                            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Windofbitter"},"content":"                        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Windofbitter"},"content":"                        yield new FindCommand(input.substring(5));","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Windofbitter"},"content":"                    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"                default -\u003e {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"                        String errorMessage \u003d getInvalidCommandMessage();","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"                        throw new InvalidCommandException(errorMessage);","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"                    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"                };","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Windofbitter"},"content":"     * Returns the error message for an invalid command.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Windofbitter"},"content":"     * @return The error message for an invalid command.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private static String getInvalidCommandMessage() {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Windofbitter"},"content":"        String errorMessage \u003d \"I do not understand this command, please try again.\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        errorMessage +\u003d \"\\nHere are the possible commands:\";","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        errorMessage +\u003d \"\\n1. bye\";","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        errorMessage +\u003d \"\\n2. list\";","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Windofbitter"},"content":"        errorMessage +\u003d \"\\n3. mark \u003ctask number\u003e\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Windofbitter"},"content":"        errorMessage +\u003d \"\\n4. unmark \u003ctask number\u003e\";","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        errorMessage +\u003d \"\\n5. todo \u003cdescription\u003e\";","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Windofbitter"},"content":"        errorMessage +\u003d \"\\n6. deadline \u003cdescription\u003e /by \u003cdeadline\u003e (yyyy-MM-dd)\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        errorMessage +\u003d \"\\n7. event \u003cdescription\u003e /from \u003cstart time\u003e /to \u003cend time\u003e\";","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        return errorMessage;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Windofbitter"},"content":"     * Returns the command enum corresponding to the command string.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Windofbitter"},"content":"     * @param command The command string.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Windofbitter"},"content":"     * @return The command enum corresponding to the command string.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"    private static CommandEnum getCommandEnum(String command) {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return switch (command) {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"            case \"bye\" -\u003e CommandEnum.BYE;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"            case \"list\" -\u003e CommandEnum.LIST;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"            case \"delete\" -\u003e CommandEnum.DELETE;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"            case \"mark\" -\u003e CommandEnum.MARK;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"            case \"unmark\" -\u003e CommandEnum.UNMARK;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"            case \"todo\" -\u003e CommandEnum.TODO;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"            case \"deadline\" -\u003e CommandEnum.DEADLINE;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"            case \"event\" -\u003e CommandEnum.EVENT;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Windofbitter"},"content":"            case \"find\" -\u003e CommandEnum.FIND;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"            default -\u003e CommandEnum.INVALID;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-01-15","isFullCredit":false}],"authorContributionMap":{"Windofbitter":88,"-":94}},{"path":"src/main/java/wind/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package wind.storage;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"import wind.task.Deadline;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"import wind.task.Event;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"import wind.task.Task;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"import wind.task.Todo;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":" * Handles the storage of tasks to and from a file.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"public class Storage {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"    private final String filePath \u003d \"./data/tasks.txt\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"     * Saves the tasks to the file.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"    public void save(TaskList tasks) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"        for (Task task : tasks.getTasks()) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"            sb.append(getTaskString(task)).append(\"\\n\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"        try {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"            Path path \u003d Paths.get(filePath);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"            if (Files.notExists(path.getParent())) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"                Files.createDirectories(path.getParent());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"            }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"            Files.write(path, sb.toString().getBytes());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"        } catch (java.io.IOException e) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Windofbitter"},"content":"     * Loads the tasks from the file.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Windofbitter"},"content":"     * @param tasks The list of tasks to be loaded.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Windofbitter"},"content":"    public void loadTask(TaskList tasks) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Windofbitter"},"content":"        try {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Windofbitter"},"content":"            java.io.File f \u003d new java.io.File(filePath);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Windofbitter"},"content":"            if (!f.exists()) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Windofbitter"},"content":"                return;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Windofbitter"},"content":"            }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Windofbitter"},"content":"            java.util.Scanner sc \u003d new java.util.Scanner(f);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Windofbitter"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Windofbitter"},"content":"                String line \u003d sc.nextLine();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Windofbitter"},"content":"                Task task \u003d getTask(line);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Windofbitter"},"content":"                tasks.addTask(task);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Windofbitter"},"content":"            }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Windofbitter"},"content":"        } catch (java.io.FileNotFoundException e) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Windofbitter"},"content":"            System.out.println(\"File not found: \" + e.getMessage());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Windofbitter"},"content":"     * Converts a task to its string representation.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Windofbitter"},"content":"     * @param task The task to be converted.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Windofbitter"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Windofbitter"},"content":"    private String getTaskString(Task task) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Windofbitter"},"content":"        if (task.getClass().equals(Todo.class)) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Windofbitter"},"content":"            return \"T | \" + (task.getIsDone() ? \"1\" : \"0\") + \" | \" + task.getDescription();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Windofbitter"},"content":"        } else if (task.getClass().equals(Event.class)) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Windofbitter"},"content":"            return \"E | \" + (task.getIsDone() ? \"1\" : \"0\") + \" | \" + task.getDescription() + \" | \" + ((Event) task).getStartDate() + \" | \" + ((Event) task).getEndDate();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Windofbitter"},"content":"        } else {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Windofbitter"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Windofbitter"},"content":"            String formattedDate \u003d ((Deadline) task).getDeadline().format(formatter);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Windofbitter"},"content":"            return \"D | \" + (task.getIsDone() ? \"1\" : \"0\") + \" | \" + task.getDescription() + \" | \" + formattedDate;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Windofbitter"},"content":"     * Converts a string representation of a task to a Task object.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Windofbitter"},"content":"     * @param string The string representation of the task.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Windofbitter"},"content":"     * @return The Task object.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Windofbitter"},"content":"    private Task getTask(String string) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Windofbitter"},"content":"        String[] arr \u003d string.split(\" \\\\| \");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Windofbitter"},"content":"        if (arr[0].equals(\"T\")) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Windofbitter"},"content":"            Todo todo \u003d new Todo(arr[2]);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Windofbitter"},"content":"            if (arr[1].equals(\"1\")) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Windofbitter"},"content":"                todo.setIsDone(true);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Windofbitter"},"content":"            }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Windofbitter"},"content":"            return todo;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Windofbitter"},"content":"        } else if (arr[0].equals(\"E\")) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Windofbitter"},"content":"            Event event \u003d new Event(arr[2], arr[3], arr[4]);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Windofbitter"},"content":"            if (arr[1].equals(\"1\")) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Windofbitter"},"content":"                event.setIsDone(true);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Windofbitter"},"content":"            }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Windofbitter"},"content":"            return event;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Windofbitter"},"content":"        } else {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Windofbitter"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Windofbitter"},"content":"            LocalDate deadlineDate \u003d LocalDate.parse(arr[3], formatter);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Windofbitter"},"content":"            Deadline deadline \u003d new Deadline(arr[2], deadlineDate);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Windofbitter"},"content":"            if (arr[1].equals(\"1\")) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Windofbitter"},"content":"                deadline.setIsDone(true);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Windofbitter"},"content":"            }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Windofbitter"},"content":"            return deadline;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"Windofbitter":114}},{"path":"src/main/java/wind/storage/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package wind.storage;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import java.util.LinkedList;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import wind.task.Task;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":" * Represents a list of tasks.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"public class TaskList {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"    private final LinkedList\u003cTask\u003e tasks \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"     * Retrieves the task at the specified index.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"     * Adds a task to the list.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"     * @param task The task to add.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"        tasks.add(task);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"     * Deletes the task at the specified index.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"     * @param index The index of the task to delete.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"        tasks.remove(index);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Windofbitter"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Windofbitter"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Windofbitter"},"content":"    public int getSize() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Windofbitter"},"content":"        return tasks.size();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Windofbitter"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Windofbitter"},"content":"     * @return The list of tasks.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Windofbitter"},"content":"    public LinkedList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Windofbitter"},"content":"        return tasks;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"Windofbitter":59}},{"path":"src/main/java/wind/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package wind.task;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Deadline implements Task {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private final String description;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"    private LocalDate deadline;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private boolean isDone;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"     * Constructs a Deadline task with the specified description and deadline.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"     * @param deadline The deadline of the task.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"    public Deadline(String description, LocalDate deadline) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"     * Returns the description of the task.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"     * @return The description of the task.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return this.description;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"     * Returns the deadline of the task.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"     * @return The deadline of the task.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"    public LocalDate getDeadline() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return this.deadline;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Windofbitter"},"content":"     * Returns whether the task is done.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Windofbitter"},"content":"     * @return True if the task is done, false otherwise.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return this.isDone;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Windofbitter"},"content":"     * Sets the task as done or not done.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Windofbitter"},"content":"     * @param isDone True if the task is done, false otherwise.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Windofbitter"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Windofbitter"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Windofbitter"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Windofbitter"},"content":"        String formattedDate \u003d this.deadline.format(formatter);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Windofbitter"},"content":"        return \"[D]\" + \"[\" + (this.isDone ? \"X\" : \" \") + \"] \" + this.description + \" (by: \" + formattedDate + \")\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-01-15","isFullCredit":false}],"authorContributionMap":{"Windofbitter":44,"-":29}},{"path":"src/main/java/wind/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package wind.task;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":" * Represents an event task with a start and end date.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Event implements Task {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"    private final String description;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private String startDate;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    private String endDate;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private boolean isDone;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"     * Constructs an Event task with the specified description, start date, and end date.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"     * @param startDate The start date of the event.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"     * @param endDate The end date of the event.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Event(String description, String startDate, String endDate) {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"     * Returns the description of the event.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"     * @return The description of the event.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return this.description;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"     * Returns the start date of the event.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"     * @return The start date of the event.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public String getStartDate() {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return this.startDate;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Windofbitter"},"content":"     * Returns the end date of the event.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Windofbitter"},"content":"     * @return The end date of the event.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public String getEndDate() {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return this.endDate;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Windofbitter"},"content":"     * Returns whether the event is done.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Windofbitter"},"content":"     * @return True if the event is done, false otherwise.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return this.isDone;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Windofbitter"},"content":"     * Sets the event as done or not done.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Windofbitter"},"content":"     * @param isDone True if the event is done, false otherwise.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Windofbitter"},"content":"     * Returns the string representation of the event.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Windofbitter"},"content":"     * @return The string representation of the event.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return \"[E]\" + \"[\" + (this.isDone ? \"X\" : \" \") + \"] \" + this.description + \" (from: \" + this.startDate + \" to: \" + this.endDate + \")\";","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-01-15","isFullCredit":false}],"authorContributionMap":{"Windofbitter":41,"-":39}},{"path":"src/main/java/wind/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package wind.task;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":" * Represents a task with a description and completion status.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"public interface Task {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"     * Returns the description of the task.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"     * @return The description of the task.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public String getDescription();","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"     * Sets the task as done or not done.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"     * @param isDone True if the task is done, false otherwise.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void setIsDone(boolean isDone);","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"     * Returns whether the task is done.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"     * @return True if the task is done, false otherwise.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public boolean getIsDone();","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-01-15","isFullCredit":false}],"authorContributionMap":{"Windofbitter":19,"-":9}},{"path":"src/main/java/wind/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package wind.task;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":" * Represents a to-do task.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Todo implements Task {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"    private final String description;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private boolean isDone;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"     * Constructs a Todo task with the specified description.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"     * Returns the description of the task.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"     * @return The description of the task.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return this.description;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"     * Returns whether the task is done.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"     * @return True if the task is done, false otherwise.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return this.isDone;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"     * Sets the task as done or not done.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Windofbitter"},"content":"     * @param isDone True if the task is done, false otherwise.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Windofbitter"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Windofbitter"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return \"[T]\" + \"[\" + (this.isDone ? \"X\" : \" \") + \"] \" + this.description;","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-01-15","isFullCredit":false}],"authorContributionMap":{"Windofbitter":29,"-":27}},{"path":"src/main/java/wind/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package wind.ui;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import java.util.List;","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import wind.storage.TaskList;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import wind.task.Task;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":" * Handles the user interface for the application.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"public class Ui {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"     * Prints a message indicating that a task has been successfully added.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"     * @param task The task that was added.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"     * @param taskCount The current number of tasks in the list.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"    public void printAddTaskSuccess(Task task, int taskCount) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"        System.out.println(\"Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"     * Prints the list of tasks.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"     * @param taskList The list of tasks to print.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"    public void printList(TaskList taskList) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"            System.out.println((i + 1) + \". \" + taskList.getTask(i));","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"     * Prints a message indicating that a task has been successfully marked as done.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Windofbitter"},"content":"     * @param task The task that was marked as done.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Windofbitter"},"content":"    public void printMarkTaskSuccess(Task task) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Windofbitter"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Windofbitter"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Windofbitter"},"content":"     * Prints a message indicating that a task has been successfully marked as not done.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Windofbitter"},"content":"     * @param task The task that was marked as not done.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Windofbitter"},"content":"    public void printUnmarkTaskSuccess(Task task) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Windofbitter"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Windofbitter"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Windofbitter"},"content":"     * Prints a message indicating that a task has been successfully deleted.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Windofbitter"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Windofbitter"},"content":"     * @param taskCount The current number of tasks in the list.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Windofbitter"},"content":"    public void printDeleteTaskSuccess(Task task, int taskCount) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Windofbitter"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Windofbitter"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Windofbitter"},"content":"        System.out.println(\"Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Windofbitter"},"content":"     * Prints a welcome message.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Windofbitter"},"content":"    public void printWelcome() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Windofbitter"},"content":"        System.out.println(\"Hello! I\u0027m Wind\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Windofbitter"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Windofbitter"},"content":"    public void printMatchingTasks(List\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Windofbitter"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Windofbitter"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Windofbitter"},"content":"            System.out.println((i + 1) + \". \" + matchingTasks.get(i));","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Windofbitter"},"content":"     * Prints a goodbye message.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Windofbitter"},"content":"    public void printGoodbye() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Windofbitter"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"Windofbitter":92}},{"path":"src/test/java/wind/DeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package wind;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import wind.command.DeadlineCommand;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import wind.storage.Storage;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import wind.storage.TaskList;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"import wind.task.Deadline;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"import wind.ui.Ui;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"import static org.mockito.Mockito.*;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"public class DeadlineCommandTest {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"    private Ui ui;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"    public void setUp() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"        taskList \u003d mock(TaskList.class);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"        storage \u003d mock(Storage.class);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"        ui \u003d mock(Ui.class);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"    @Test","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"    public void testExecute() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"        // Arrange","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"        String description \u003d \"Submit assignment\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"        LocalDate by \u003d LocalDate.of(2023, 12, 31);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"        DeadlineCommand deadlineCommand \u003d new DeadlineCommand(description, by);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"        Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"        // Act","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"        deadlineCommand.execute(taskList, storage, ui);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"        // Assert","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"        verify(taskList).addTask(any(Deadline.class));","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Windofbitter"},"content":"        verify(ui).printAddTaskSuccess(any(Deadline.class), anyInt());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Windofbitter"},"content":"        verify(storage).save(taskList);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"Windofbitter":44}},{"path":"src/test/java/wind/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package wind;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import wind.command.DeleteCommand;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import wind.storage.Storage;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import wind.storage.TaskList;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"import wind.task.Task;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"import wind.ui.Ui;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"import static org.mockito.Mockito.*;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"    private Ui ui;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"    public void setUp() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"        taskList \u003d mock(TaskList.class);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"        storage \u003d mock(Storage.class);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"        ui \u003d mock(Ui.class);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"    @Test","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"    public void testExecute() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"        // Arrange","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"        int index \u003d 1;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"        Task task \u003d mock(Task.class);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"        when(taskList.getTask(index - 1)).thenReturn(task);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"        when(taskList.getSize()).thenReturn(0);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(index);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"        // Act","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"        deleteCommand.execute(taskList, storage, ui);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"        // Assert","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"        verify(taskList).getTask(index - 1);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"        verify(taskList).deleteTask(index - 1);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Windofbitter"},"content":"        verify(ui).printDeleteTaskSuccess(task, 0);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Windofbitter"},"content":"        verify(storage).save(taskList);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"Windofbitter":44}},{"path":"src/test/java/wind/EventCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package wind;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import wind.command.EventCommand;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import wind.storage.Storage;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import wind.storage.TaskList;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"import wind.task.Event;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"import wind.ui.Ui;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"import static org.mockito.Mockito.*;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"public class EventCommandTest {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"    private Ui ui;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"    public void setUp() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"        taskList \u003d mock(TaskList.class);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"        storage \u003d mock(Storage.class);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"        ui \u003d mock(Ui.class);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"    @Test","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"    public void testExecute() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"        // Arrange","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"        String description \u003d \"Team meeting\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"        String from \u003d \"2021-08-24T14:00\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"        String to \u003d \"2021-08-24T16:00\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"        EventCommand eventCommand \u003d new EventCommand(description, from, to);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"        Event event \u003d new Event(description, from, to);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"        // Act","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"        eventCommand.execute(taskList, storage, ui);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"        // Assert","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"        verify(taskList).addTask(any(Event.class));","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"        verify(ui).printAddTaskSuccess(any(Event.class), anyInt());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Windofbitter"},"content":"        verify(storage).save(taskList);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"Windofbitter":43}},{"path":"src/test/java/wind/ListCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package wind;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import wind.command.ListCommand;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import wind.storage.Storage;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import wind.storage.TaskList;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"import wind.ui.Ui;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"import static org.mockito.Mockito.*;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"public class ListCommandTest {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"    private Ui ui;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"    public void setUp() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"        taskList \u003d mock(TaskList.class);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"        storage \u003d mock(Storage.class);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"        ui \u003d mock(Ui.class);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"    @Test","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"    public void testExecute() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"        // Arrange","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"        ListCommand listCommand \u003d new ListCommand();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"        // Act","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"        listCommand.execute(taskList, storage, ui);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"        // Assert","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"        verify(ui).printList(taskList);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"Windofbitter":36}},{"path":"src/test/java/wind/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package wind;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import wind.command.MarkCommand;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import wind.storage.Storage;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import wind.storage.TaskList;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"import wind.task.Task;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"import wind.ui.Ui;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"import static org.mockito.Mockito.*;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"public class MarkCommandTest {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"    private Ui ui;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"    public void setUp() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"        taskList \u003d mock(TaskList.class);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"        storage \u003d mock(Storage.class);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"        ui \u003d mock(Ui.class);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"    @Test","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"    public void testExecute() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"        // Arrange","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"        int index \u003d 1;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"        MarkCommand markCommand \u003d new MarkCommand(index);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"        Task task \u003d mock(Task.class);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"        when(taskList.getTask(index - 1)).thenReturn(task);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"        // Act","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"        markCommand.execute(taskList, storage, ui);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"        // Assert","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"        verify(task).setIsDone(true);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"        verify(ui).printMarkTaskSuccess(task);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"        verify(storage).save(taskList);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"Windofbitter":42}},{"path":"src/test/java/wind/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package wind;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import wind.command.*;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import wind.exception.InvalidCommandException;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import wind.parser.Parser;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"import wind.storage.TaskList;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"import wind.task.Todo;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"public class ParserTest {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"    public void setUp() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"    @Test","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"    public void testParseByeCommand() throws InvalidCommandException {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"        Command command \u003d Parser.parse(\"bye\", taskList);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"        assertInstanceOf(ByeCommand.class, command);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"    @Test","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"    public void testParseListCommand() throws InvalidCommandException {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"        Command command \u003d Parser.parse(\"list\", taskList);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"        assertInstanceOf(ListCommand.class, command);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"    @Test","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"    public void testParseMarkCommand() throws InvalidCommandException {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"        taskList.addTask(new Todo(\"Test task\"));","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"        Command command \u003d Parser.parse(\"mark 1\", taskList);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"        assertInstanceOf(MarkCommand.class, command);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Windofbitter"},"content":"    @Test","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Windofbitter"},"content":"    public void testParseUnmarkCommand() throws InvalidCommandException {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Windofbitter"},"content":"        taskList.addTask(new Todo(\"Test task\"));","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Windofbitter"},"content":"        Command command \u003d Parser.parse(\"unmark 1\", taskList);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Windofbitter"},"content":"        assertInstanceOf(UnmarkCommand.class, command);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Windofbitter"},"content":"    @Test","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Windofbitter"},"content":"    public void testParseTodoCommand() throws InvalidCommandException {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Windofbitter"},"content":"        Command command \u003d Parser.parse(\"todo Test task\", taskList);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Windofbitter"},"content":"        assertInstanceOf(TodoCommand.class, command);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Windofbitter"},"content":"    @Test","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Windofbitter"},"content":"    public void testParseDeadlineCommand() throws InvalidCommandException {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Windofbitter"},"content":"        Command command \u003d Parser.parse(\"deadline Test task /by 2023-12-31\", taskList);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Windofbitter"},"content":"        assertInstanceOf(DeadlineCommand.class, command);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Windofbitter"},"content":"    @Test","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Windofbitter"},"content":"    public void testParseEventCommand() throws InvalidCommandException {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Windofbitter"},"content":"        Command command \u003d Parser.parse(\"event Test event /from 2023-12-31T10:00 /to 2023-12-31T12:00\", taskList);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Windofbitter"},"content":"        assertInstanceOf(EventCommand.class, command);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Windofbitter"},"content":"    @Test","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Windofbitter"},"content":"    public void testParseInvalidCommand() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Windofbitter"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e Parser.parse(\"invalid\", taskList));","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"Windofbitter":70}},{"path":"src/test/java/wind/TodoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package wind;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import wind.command.TodoCommand;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import wind.storage.Storage;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import wind.storage.TaskList;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"import wind.task.Task;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"import wind.ui.Ui;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"import static org.mockito.Mockito.*;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"public class TodoCommandTest {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"    private Ui ui;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"    public void setUp() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"        taskList \u003d mock(TaskList.class);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"        storage \u003d mock(Storage.class);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"        ui \u003d mock(Ui.class);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"    @Test","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"    public void testExecute() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"        // Arrange","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"        String description \u003d \"test\";","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"        TodoCommand todoCommand \u003d new TodoCommand(description);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"        // Act","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"        todoCommand.execute(taskList, storage, ui);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"        // Assert","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"        verify(taskList).addTask(any(Task.class));","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"        verify(ui).printAddTaskSuccess(any(Task.class), anyInt());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"        verify(storage).save(taskList);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"Windofbitter":40}},{"path":"src/test/java/wind/UnmarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package wind;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import wind.command.UnmarkCommand;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import wind.storage.Storage;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import wind.storage.TaskList;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"import wind.task.Task;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"import wind.ui.Ui;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"import static org.mockito.Mockito.*;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"public class UnmarkCommandTest {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"    private Ui ui;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"    @BeforeEach","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"    public void setUp() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"        taskList \u003d mock(TaskList.class);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"        storage \u003d mock(Storage.class);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"        ui \u003d mock(Ui.class);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"    @Test","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"    public void testExecute() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"        // Arrange","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"        int index \u003d 1;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"        UnmarkCommand unmarkCommand \u003d new UnmarkCommand(index);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"        Task task \u003d mock(Task.class);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"        when(taskList.getTask(index - 1)).thenReturn(task);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"        // Act","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"        unmarkCommand.execute(taskList, storage, ui);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"        // Assert","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"        verify(task).setIsDone(false);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"        verify(ui).printUnmarkTaskSuccess(task);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"        verify(storage).save(taskList);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"Windofbitter":42}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"java -classpath ..\\bin main.java.wind.Wind \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"pause","lastModifiedDate":"2025-01-15","isFullCredit":false}],"authorContributionMap":{"Windofbitter":1,"-":22}}]
