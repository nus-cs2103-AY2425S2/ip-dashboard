[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bkkuan"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter-api:5.10.0\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bkkuan"},"content":"    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine:5.10.0\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bkkuan"},"content":"    mainClass \u003d \u0027seedu.bryan.Bryan\u0027","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bkkuan"},"content":"    archiveBaseName \u003d \"Bryan\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bkkuan"},"content":"    archiveVersion \u003d \"0.1.0\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"bkkuan":5,"-":27}},{"path":"data/bryan.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bkkuan"},"content":"E | 0 | project meeting | Aug 6th 2pm | Aug 6th 4pm","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bkkuan"},"content":"D | 0 | Submit report | 2023-12-25","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bkkuan"},"content":"T | 0 | le","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bkkuan"},"content":"T | 0 | sleep","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"bkkuan":4}},{"path":"src/main/java/Bryan.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bkkuan"},"content":"package seedu.bryan;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bkkuan"},"content":"import bryan.command.Command;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bkkuan"},"content":"import bryan.exception.BryanException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bkkuan"},"content":"import bryan.parser.Parser;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bkkuan"},"content":"import bryan.storage.Storage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bkkuan"},"content":"import bryan.taskmanager.TaskManager;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bkkuan"},"content":"import bryan.ui.Ui;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bkkuan"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bkkuan"},"content":" * Main class for Bryan.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bkkuan"},"content":" * Initializes the application and starts the command loop.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bkkuan"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bkkuan"},"content":"public class Bryan {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bkkuan"},"content":"    private final Storage storage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bkkuan"},"content":"    private final TaskManager taskManager;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bkkuan"},"content":"    private final Ui ui;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bkkuan"},"content":"     * Constructs the Bryan application with the specified file path for storage.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bkkuan"},"content":"     * @param filePath the path to the data file","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bkkuan"},"content":"    public Bryan(final String filePath) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bkkuan"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bkkuan"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bkkuan"},"content":"        taskManager \u003d new TaskManager(storage.load());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bkkuan"},"content":"     * Runs the application by continuously reading and executing user commands.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bkkuan"},"content":"    public void run() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bkkuan"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bkkuan"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bkkuan"},"content":"        while (!isExit) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bkkuan"},"content":"            try {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bkkuan"},"content":"                final String input \u003d ui.readCommand();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bkkuan"},"content":"                final Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bkkuan"},"content":"                command.execute(taskManager, ui, storage);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bkkuan"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bkkuan"},"content":"            } catch (final BryanException e) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bkkuan"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bkkuan"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bkkuan"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bkkuan"},"content":"     * Main method to launch the application.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bkkuan"},"content":"     * @param args command-line arguments (not used)","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bkkuan"},"content":"    public static void main(final String[] args) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bkkuan"},"content":"        new Bryan(\"data/bryan.txt\").run();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bkkuan"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"bkkuan":56}},{"path":"src/main/java/bryan/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bkkuan"},"content":"package bryan.command;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bkkuan"},"content":"import bryan.exception.BryanException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bkkuan"},"content":"import bryan.taskmanager.TaskManager;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bkkuan"},"content":"import bryan.ui.Ui;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bkkuan"},"content":"import bryan.storage.Storage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bkkuan"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bkkuan"},"content":" * Command that adds a new task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bkkuan"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bkkuan"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bkkuan"},"content":"    private final String input;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bkkuan"},"content":"     * Constructs an {@code AddCommand} with the specified input.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bkkuan"},"content":"     * @param input the command input, e.g., \"todo read book\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bkkuan"},"content":"    public AddCommand(final String input) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bkkuan"},"content":"        this.input \u003d input;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bkkuan"},"content":"     * Executes the add command by adding a task and saving the updated list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bkkuan"},"content":"     * @param taskManager the task manager","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bkkuan"},"content":"     * @param ui the user interface","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bkkuan"},"content":"     * @param storage the storage object to persist tasks","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bkkuan"},"content":"     * @throws BryanException if an error occurs when adding the task","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bkkuan"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bkkuan"},"content":"    public void execute(final TaskManager taskManager, final Ui ui, final Storage storage)","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bkkuan"},"content":"            throws BryanException {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bkkuan"},"content":"        taskManager.addTask(input);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bkkuan"},"content":"        storage.save(taskManager.getTasks());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bkkuan"},"content":"        ui.showMessage(\"Added task:\\n  \"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bkkuan"},"content":"                + taskManager.getTasks().get(taskManager.getTasks().size() - 1));","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bkkuan"},"content":"     * Indicates that this command does not cause the application to exit.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bkkuan"},"content":"     * @return {@code false}","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bkkuan"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bkkuan"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bkkuan"},"content":"        return false;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bkkuan"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"bkkuan":50}},{"path":"src/main/java/bryan/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bkkuan"},"content":"package bryan.command;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bkkuan"},"content":"import bryan.exception.BryanException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bkkuan"},"content":"import bryan.storage.Storage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bkkuan"},"content":"import bryan.taskmanager.TaskManager;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bkkuan"},"content":"import bryan.ui.Ui;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bkkuan"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bkkuan"},"content":" * Abstract class representing a command that can be executed by Bryan.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bkkuan"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bkkuan"},"content":"public abstract class Command {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bkkuan"},"content":"     * Executes the command with the given task manager, UI, and storage.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bkkuan"},"content":"     * @param taskManager the task manager containing the tasks","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bkkuan"},"content":"     * @param ui the user interface for displaying messages","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bkkuan"},"content":"     * @param storage the storage to save and load tasks","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bkkuan"},"content":"     * @throws BryanException if there is an error during execution","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bkkuan"},"content":"    public abstract void execute(final TaskManager taskManager, final Ui ui,","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bkkuan"},"content":"                                 final Storage storage) throws BryanException;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bkkuan"},"content":"     * Indicates whether the command should cause the application to exit.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bkkuan"},"content":"     * @return {@code true} if the command is an exit command, {@code false} otherwise","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bkkuan"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bkkuan"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"bkkuan":30}},{"path":"src/main/java/bryan/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bkkuan"},"content":"package bryan.command;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bkkuan"},"content":"import bryan.taskmanager.TaskManager;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bkkuan"},"content":"import bryan.ui.Ui;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bkkuan"},"content":"import bryan.storage.Storage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bkkuan"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bkkuan"},"content":" * Command that deletes a task at a given index.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bkkuan"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bkkuan"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bkkuan"},"content":"    private final int index;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bkkuan"},"content":"     * Constructs a {@code DeleteCommand} by parsing the input to determine which task to delete.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bkkuan"},"content":"     * @param input the command input, e.g., \"delete 2\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bkkuan"},"content":"    public DeleteCommand(final String input) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bkkuan"},"content":"        this.index \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bkkuan"},"content":"     * Executes the delete command by removing the specified task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bkkuan"},"content":"     * @param taskManager the task manager","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bkkuan"},"content":"     * @param ui the user interface","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bkkuan"},"content":"     * @param storage the storage object to persist tasks","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bkkuan"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bkkuan"},"content":"    public void execute(final TaskManager taskManager, final Ui ui, final Storage storage) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bkkuan"},"content":"        taskManager.deleteTask(index);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bkkuan"},"content":"        storage.save(taskManager.getTasks());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bkkuan"},"content":"        ui.showMessage(\"Deleted task \" + (index + 1) + \".\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bkkuan"},"content":"     * Indicates that this command does not cause the application to exit.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bkkuan"},"content":"     * @return {@code false}","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bkkuan"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bkkuan"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bkkuan"},"content":"        return false;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bkkuan"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"bkkuan":45}},{"path":"src/main/java/bryan/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bkkuan"},"content":"package bryan.command;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bkkuan"},"content":"import bryan.storage.Storage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bkkuan"},"content":"import bryan.taskmanager.TaskManager;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bkkuan"},"content":"import bryan.ui.Ui;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bkkuan"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bkkuan"},"content":" * Command to exit the application.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bkkuan"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bkkuan"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bkkuan"},"content":"     * Executes the exit command by showing a goodbye message.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bkkuan"},"content":"     * @param taskManager the task manager","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bkkuan"},"content":"     * @param ui the user interface","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bkkuan"},"content":"     * @param storage the storage object (unused in this command)","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bkkuan"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bkkuan"},"content":"    public void execute(final TaskManager taskManager, final Ui ui, final Storage storage) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bkkuan"},"content":"        ui.showGoodbye();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bkkuan"},"content":"     * Indicates that this command causes the application to exit.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bkkuan"},"content":"     * @return {@code true}","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bkkuan"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bkkuan"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bkkuan"},"content":"        return true;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bkkuan"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"bkkuan":33}},{"path":"src/main/java/bryan/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bkkuan"},"content":"package bryan.command;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bkkuan"},"content":"import bryan.taskmanager.TaskManager;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bkkuan"},"content":"import bryan.ui.Ui;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bkkuan"},"content":"import bryan.storage.Storage;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bkkuan"},"content":"import bryan.tasks.Tasks;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bkkuan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bkkuan"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bkkuan"},"content":" * Command that finds tasks by searching for a keyword in the task description.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bkkuan"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bkkuan"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bkkuan"},"content":"    private final String keyword;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bkkuan"},"content":"     * Constructs a {@code FindCommand} with the specified keyword.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bkkuan"},"content":"     * @param input the command input, e.g., \"find book\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bkkuan"},"content":"    public FindCommand(final String input) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bkkuan"},"content":"        // Assumes input starts with \"find \" and extracts the keyword.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bkkuan"},"content":"        this.keyword \u003d input.substring(5).trim();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bkkuan"},"content":"     * Executes the find command by searching for tasks whose descriptions contain the keyword.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bkkuan"},"content":"     * @param taskManager the task manager containing tasks","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bkkuan"},"content":"     * @param ui the user interface for displaying messages","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bkkuan"},"content":"     * @param storage the storage object (unused in this command)","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bkkuan"},"content":"    @Override","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bkkuan"},"content":"    public void execute(final TaskManager taskManager, final Ui ui, final Storage storage) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bkkuan"},"content":"        final ArrayList\u003cTasks\u003e matchingTasks \u003d taskManager.findTasks(keyword);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bkkuan"},"content":"        final StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bkkuan"},"content":"        output.append(\"____________________________________________________________\\n\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bkkuan"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bkkuan"},"content":"            output.append(\"No matching tasks found.\\n\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bkkuan"},"content":"        } else {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bkkuan"},"content":"            output.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bkkuan"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bkkuan"},"content":"                output.append((i + 1) + \".\" + matchingTasks.get(i).toString() + \"\\n\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bkkuan"},"content":"            }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bkkuan"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bkkuan"},"content":"        output.append(\"____________________________________________________________\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bkkuan"},"content":"        ui.showMessage(output.toString());","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bkkuan"},"content":"     * Indicates that this command does not cause the application to exit.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bkkuan"},"content":"     * @return {@code false}","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bkkuan"},"content":"    @Override","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bkkuan"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bkkuan"},"content":"        return false;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bkkuan"},"content":"}","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"bkkuan":58}},{"path":"src/main/java/bryan/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bkkuan"},"content":"package bryan.command;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bkkuan"},"content":"import bryan.taskmanager.TaskManager;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bkkuan"},"content":"import bryan.ui.Ui;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bkkuan"},"content":"import bryan.storage.Storage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bkkuan"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bkkuan"},"content":" * Command that lists all tasks.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bkkuan"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bkkuan"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bkkuan"},"content":"     * Executes the list command by printing all tasks.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bkkuan"},"content":"     * @param taskManager the task manager containing tasks","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bkkuan"},"content":"     * @param ui the user interface for output","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bkkuan"},"content":"     * @param storage the storage object (unused in this command)","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bkkuan"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bkkuan"},"content":"    public void execute(final TaskManager taskManager, final Ui ui, final Storage storage) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bkkuan"},"content":"        taskManager.printTasks();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bkkuan"},"content":"     * Indicates that this command does not cause the application to exit.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bkkuan"},"content":"     * @return {@code false}","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bkkuan"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bkkuan"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bkkuan"},"content":"        return false;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bkkuan"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"bkkuan":33}},{"path":"src/main/java/bryan/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bkkuan"},"content":"package bryan.command;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bkkuan"},"content":"import bryan.taskmanager.TaskManager;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bkkuan"},"content":"import bryan.ui.Ui;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bkkuan"},"content":"import bryan.storage.Storage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bkkuan"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bkkuan"},"content":" * Command that marks a task as done.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bkkuan"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bkkuan"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bkkuan"},"content":"    private final int index;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bkkuan"},"content":"     * Constructs a {@code MarkCommand} by parsing the task index from the input.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bkkuan"},"content":"     * @param input the command input, e.g., \"mark 1\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bkkuan"},"content":"    public MarkCommand(final String input) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bkkuan"},"content":"        this.index \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bkkuan"},"content":"     * Executes the mark command by marking the specified task as done.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bkkuan"},"content":"     * @param taskManager the task manager","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bkkuan"},"content":"     * @param ui the user interface","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bkkuan"},"content":"     * @param storage the storage object to persist tasks","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bkkuan"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bkkuan"},"content":"    public void execute(final TaskManager taskManager, final Ui ui, final Storage storage) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bkkuan"},"content":"        taskManager.markTask(index);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bkkuan"},"content":"        storage.save(taskManager.getTasks());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bkkuan"},"content":"        ui.showMessage(\"Marked task \" + (index + 1) + \" as done.\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bkkuan"},"content":"     * Indicates that this command does not cause the application to exit.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bkkuan"},"content":"     * @return {@code false}","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bkkuan"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bkkuan"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bkkuan"},"content":"        return false;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bkkuan"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"bkkuan":45}},{"path":"src/main/java/bryan/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bkkuan"},"content":"package bryan.command;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bkkuan"},"content":"import bryan.taskmanager.TaskManager;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bkkuan"},"content":"import bryan.ui.Ui;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bkkuan"},"content":"import bryan.storage.Storage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bkkuan"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bkkuan"},"content":" * Command that marks a task as not done.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bkkuan"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bkkuan"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bkkuan"},"content":"    private final int index;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bkkuan"},"content":"     * Constructs an {@code UnmarkCommand} by parsing the task index from the input.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bkkuan"},"content":"     * @param input the command input, e.g., \"unmark 1\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bkkuan"},"content":"    public UnmarkCommand(final String input) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bkkuan"},"content":"        this.index \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bkkuan"},"content":"     * Executes the unmark command by marking the specified task as not done.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bkkuan"},"content":"     * @param taskManager the task manager","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bkkuan"},"content":"     * @param ui the user interface","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bkkuan"},"content":"     * @param storage the storage object to persist tasks","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bkkuan"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bkkuan"},"content":"    public void execute(final TaskManager taskManager, final Ui ui, final Storage storage) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bkkuan"},"content":"        taskManager.unmarkTask(index);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bkkuan"},"content":"        storage.save(taskManager.getTasks());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bkkuan"},"content":"        ui.showMessage(\"Marked task \" + (index + 1) + \" as not done.\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bkkuan"},"content":"     * Indicates that this command does not cause the application to exit.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bkkuan"},"content":"     * @return {@code false}","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bkkuan"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bkkuan"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bkkuan"},"content":"        return false;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bkkuan"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"bkkuan":45}},{"path":"src/main/java/bryan/exception/BryanException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bkkuan"},"content":"package bryan.exception;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bkkuan"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bkkuan"},"content":" * Custom exception class for errors occurring in Bryan.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bkkuan"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bkkuan"},"content":"public class BryanException extends Exception {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bkkuan"},"content":"     * Constructs a new {@code BryanException} with the specified detail message.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bkkuan"},"content":"     * @param message the detail message","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bkkuan"},"content":"    public BryanException(final String message) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bkkuan"},"content":"        super(message);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bkkuan"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"bkkuan":16}},{"path":"src/main/java/bryan/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bkkuan"},"content":"package bryan.parser;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bkkuan"},"content":"import bryan.command.*;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bkkuan"},"content":"import bryan.exception.BryanException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bkkuan"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bkkuan"},"content":" * Parser class responsible for parsing user input and returning the appropriate command.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bkkuan"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bkkuan"},"content":"public class Parser {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bkkuan"},"content":"     * Parses the given input string and returns a corresponding command.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bkkuan"},"content":"     * @param input the user input","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bkkuan"},"content":"     * @return the command corresponding to the input","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bkkuan"},"content":"     * @throws BryanException if the command is unknown or input is invalid","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bkkuan"},"content":"    public static Command parse(final String input) throws BryanException {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bkkuan"},"content":"        final String commandWord \u003d input.split(\" \")[0].toLowerCase();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bkkuan"},"content":"        switch (commandWord) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bkkuan"},"content":"            case \"bye\":","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bkkuan"},"content":"                return new ExitCommand();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bkkuan"},"content":"            case \"list\":","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bkkuan"},"content":"                return new ListCommand();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bkkuan"},"content":"            case \"mark\":","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bkkuan"},"content":"                return new MarkCommand(input);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bkkuan"},"content":"            case \"unmark\":","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bkkuan"},"content":"                return new UnmarkCommand(input);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bkkuan"},"content":"            case \"delete\":","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bkkuan"},"content":"                return new DeleteCommand(input);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bkkuan"},"content":"            case \"find\":","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bkkuan"},"content":"                return new FindCommand(input);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bkkuan"},"content":"            case \"todo\":","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bkkuan"},"content":"            case \"deadline\":","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bkkuan"},"content":"            case \"event\":","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bkkuan"},"content":"                return new AddCommand(input);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bkkuan"},"content":"            default:","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bkkuan"},"content":"                throw new BryanException(\"Unknown command\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bkkuan"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bkkuan"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"bkkuan":41}},{"path":"src/main/java/bryan/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bkkuan"},"content":"package bryan.storage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bkkuan"},"content":"import bryan.tasks.Deadline;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bkkuan"},"content":"import bryan.tasks.Event;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bkkuan"},"content":"import bryan.tasks.Tasks;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bkkuan"},"content":"import bryan.tasks.Todo;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bkkuan"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bkkuan"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bkkuan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bkkuan"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bkkuan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bkkuan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bkkuan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bkkuan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bkkuan"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bkkuan"},"content":" * Storage class handles loading tasks from and saving tasks to a file.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bkkuan"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bkkuan"},"content":"public class Storage {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bkkuan"},"content":"    private final Path filePath;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bkkuan"},"content":"     * Constructs a Storage instance for the given file name.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bkkuan"},"content":"     * @param fileName the path to the file where tasks are stored","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bkkuan"},"content":"    public Storage(final String fileName) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bkkuan"},"content":"        this.filePath \u003d Paths.get(fileName);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bkkuan"},"content":"     * Loads tasks from the storage file.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bkkuan"},"content":"     * @return an {@code ArrayList} of tasks loaded from the file","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bkkuan"},"content":"    public ArrayList\u003cTasks\u003e load() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bkkuan"},"content":"        final ArrayList\u003cTasks\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bkkuan"},"content":"        try {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bkkuan"},"content":"            if (!Files.exists(filePath)) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bkkuan"},"content":"                return tasks;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bkkuan"},"content":"            }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bkkuan"},"content":"            for (final String line : Files.readAllLines(filePath)) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bkkuan"},"content":"                final String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bkkuan"},"content":"                if (parts.length \u003c 3) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bkkuan"},"content":"                    continue; // Minimal parts required","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bkkuan"},"content":"                }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bkkuan"},"content":"                final boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bkkuan"},"content":"                Tasks task \u003d null;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bkkuan"},"content":"                switch (parts[0]) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bkkuan"},"content":"                    case \"T\":","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bkkuan"},"content":"                        if (parts.length \u003e\u003d 3) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bkkuan"},"content":"                            task \u003d new Todo(parts[2]);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bkkuan"},"content":"                        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bkkuan"},"content":"                        break;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bkkuan"},"content":"                    case \"D\":","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bkkuan"},"content":"                        if (parts.length \u003e\u003d 4) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bkkuan"},"content":"                            task \u003d createDeadlineFromParts(parts);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bkkuan"},"content":"                        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"bkkuan"},"content":"                        break;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"bkkuan"},"content":"                    case \"E\":","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"bkkuan"},"content":"                        if (parts.length \u003e\u003d 5) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"bkkuan"},"content":"                            task \u003d new Event(parts[2], parts[3], parts[4]);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"bkkuan"},"content":"                        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"bkkuan"},"content":"                        break;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"bkkuan"},"content":"                    default:","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"bkkuan"},"content":"                        break;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"bkkuan"},"content":"                }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"bkkuan"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"bkkuan"},"content":"                    if (isDone) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"bkkuan"},"content":"                        task.taskDone();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"bkkuan"},"content":"                    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"bkkuan"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"bkkuan"},"content":"                }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"bkkuan"},"content":"            }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"bkkuan"},"content":"        } catch (final IOException e) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"bkkuan"},"content":"            System.out.println(\"Error loading tasks.\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"bkkuan"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"bkkuan"},"content":"        return tasks;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"bkkuan"},"content":"     * Creates a {@code Deadline} task from parts of a line read from the file.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"bkkuan"},"content":"     * @param parts the string parts split by \" | \"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"bkkuan"},"content":"     * @return a {@code Deadline} task","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"bkkuan"},"content":"    private Deadline createDeadlineFromParts(final String[] parts) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"bkkuan"},"content":"        final String dateString \u003d parts[3];","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"bkkuan"},"content":"        LocalDate date;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"bkkuan"},"content":"        try {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"bkkuan"},"content":"            date \u003d LocalDate.parse(dateString);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"bkkuan"},"content":"        } catch (final DateTimeParseException e1) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"bkkuan"},"content":"            try {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"bkkuan"},"content":"                final DateTimeFormatter oldFormat \u003d","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"bkkuan"},"content":"                        DateTimeFormatter.ofPattern(\"MMMM d[\u0027th\u0027][\u0027st\u0027][\u0027nd\u0027][\u0027rd\u0027]\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"bkkuan"},"content":"                date \u003d LocalDate.parse(dateString, oldFormat);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"bkkuan"},"content":"            } catch (final DateTimeParseException e2) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"bkkuan"},"content":"                System.out.println(\"Invalid date format: \" + dateString + \". Using today\u0027s date.\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"bkkuan"},"content":"                date \u003d LocalDate.now();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"bkkuan"},"content":"            }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"bkkuan"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"bkkuan"},"content":"        return new Deadline(parts[2], date);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"bkkuan"},"content":"     * Saves the given list of tasks to the storage file.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"bkkuan"},"content":"     * @param tasks the list of tasks to save","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"bkkuan"},"content":"    public void save(final ArrayList\u003cTasks\u003e tasks) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"bkkuan"},"content":"        try {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"bkkuan"},"content":"            Files.createDirectories(filePath.getParent());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"bkkuan"},"content":"            final ArrayList\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"bkkuan"},"content":"            for (final Tasks task : tasks) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"bkkuan"},"content":"                lines.add(task.toFileFormat());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"bkkuan"},"content":"            }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"bkkuan"},"content":"            Files.write(filePath, lines);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"bkkuan"},"content":"        } catch (final IOException e) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"bkkuan"},"content":"            System.out.println(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"bkkuan"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"bkkuan"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"bkkuan":123}},{"path":"src/main/java/bryan/taskmanager/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bkkuan"},"content":"package bryan.taskmanager;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bkkuan"},"content":"import bryan.exception.BryanException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bkkuan"},"content":"import bryan.tasks.Deadline;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bkkuan"},"content":"import bryan.tasks.Event;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bkkuan"},"content":"import bryan.tasks.Tasks;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bkkuan"},"content":"import bryan.tasks.Todo;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bkkuan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bkkuan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bkkuan"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bkkuan"},"content":" * TaskManager class manages the list of tasks and operations on them.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bkkuan"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bkkuan"},"content":"public class TaskManager {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bkkuan"},"content":"    private final ArrayList\u003cTasks\u003e tasks;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bkkuan"},"content":"     * Constructs a TaskManager with an empty list of tasks.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bkkuan"},"content":"    public TaskManager() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bkkuan"},"content":"        this(new ArrayList\u003c\u003e());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bkkuan"},"content":"     * Constructs a TaskManager with the provided list of tasks.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bkkuan"},"content":"     * @param tasks the initial list of tasks","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bkkuan"},"content":"    public TaskManager(final ArrayList\u003cTasks\u003e tasks) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bkkuan"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bkkuan"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bkkuan"},"content":"     * @return an {@code ArrayList} of tasks","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bkkuan"},"content":"    public ArrayList\u003cTasks\u003e getTasks() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bkkuan"},"content":"        return tasks;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bkkuan"},"content":"     * Adds a task based on the input string.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bkkuan"},"content":"     * @param input the input specifying the task details","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bkkuan"},"content":"     * @throws BryanException if the task description is invalid","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bkkuan"},"content":"    public void addTask(final String input) throws BryanException {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bkkuan"},"content":"        final Tasks task \u003d createTask(input);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bkkuan"},"content":"        tasks.add(task);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bkkuan"},"content":"        printAddConfirmation(task);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bkkuan"},"content":"     * Creates a task from the input string.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bkkuan"},"content":"     * @param input the input string","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bkkuan"},"content":"     * @return a {@code Tasks} object representing the new task","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"bkkuan"},"content":"     * @throws BryanException if the input does not specify a valid task","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"bkkuan"},"content":"    private Tasks createTask(final String input) throws BryanException {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"bkkuan"},"content":"        if (input.startsWith(\"todo \")) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"bkkuan"},"content":"            return createTodo(input);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"bkkuan"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"bkkuan"},"content":"        if (input.startsWith(\"deadline \")) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"bkkuan"},"content":"            return createDeadline(input);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"bkkuan"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"bkkuan"},"content":"        if (input.startsWith(\"event \")) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"bkkuan"},"content":"            return createEvent(input);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"bkkuan"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"bkkuan"},"content":"        throw new BryanException(\"Empty description. Please specify a task\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"bkkuan"},"content":"     * Creates a {@code Todo} task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"bkkuan"},"content":"     * @param input the input string","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"bkkuan"},"content":"     * @return a {@code Todo} task","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"bkkuan"},"content":"     * @throws BryanException if the description is empty","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"bkkuan"},"content":"    private Todo createTodo(final String input) throws BryanException {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"bkkuan"},"content":"        final String description \u003d input.substring(5).trim();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"bkkuan"},"content":"        validateDescription(description);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"bkkuan"},"content":"        return new Todo(description);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"bkkuan"},"content":"     * Creates a {@code Deadline} task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"bkkuan"},"content":"     * @param input the input string in the format \"deadline description /by date\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"bkkuan"},"content":"     * @return a {@code Deadline} task","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"bkkuan"},"content":"     * @throws BryanException if the input format is invalid or the date is wrong","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"bkkuan"},"content":"    private Deadline createDeadline(final String input) throws BryanException {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"bkkuan"},"content":"        final String[] parts \u003d input.substring(9).split(\"/by\", 2);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"bkkuan"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"bkkuan"},"content":"            throw new BryanException(\"Invalid deadline format\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"bkkuan"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"bkkuan"},"content":"        final String description \u003d parts[0].trim();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"bkkuan"},"content":"        final String dateString \u003d parts[1].trim();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"bkkuan"},"content":"        try {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"bkkuan"},"content":"            return new Deadline(description, dateString);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"bkkuan"},"content":"        } catch (final DateTimeParseException e) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"bkkuan"},"content":"            throw new BryanException(\"Invalid date format. Use yyyy-mm-dd\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"bkkuan"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"bkkuan"},"content":"     * Creates an {@code Event} task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"bkkuan"},"content":"     * @param input the input string in the format \"event description /from start /to end\"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"bkkuan"},"content":"     * @return an {@code Event} task","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"bkkuan"},"content":"     * @throws BryanException if the input format is invalid","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"bkkuan"},"content":"    private Event createEvent(final String input) throws BryanException {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"bkkuan"},"content":"        final String[] parts \u003d input.substring(6).split(\"/from|/to\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"bkkuan"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"bkkuan"},"content":"            throw new BryanException(\"Invalid event format\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"bkkuan"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"bkkuan"},"content":"        return new Event(parts[0].trim(), parts[1].trim(), parts[2].trim());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"bkkuan"},"content":"     * Prints all tasks to the console.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"bkkuan"},"content":"    public void printTasks() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"bkkuan"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"bkkuan"},"content":"            System.out.println(\"Your task list is empty. Let\u0027s get started!\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"bkkuan"},"content":"            return;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"bkkuan"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"bkkuan"},"content":"        System.out.println(\"Here are your tasks:\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"bkkuan"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"bkkuan"},"content":"            System.out.printf(\"%d. %s\\n\", i + 1, tasks.get(i));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"bkkuan"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"bkkuan"},"content":"     * Marks the task at the given index as done.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"bkkuan"},"content":"     * @param index the index of the task to mark as done","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"bkkuan"},"content":"    public void markTask(final int index) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"bkkuan"},"content":"        validateIndex(index);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"bkkuan"},"content":"        tasks.get(index).taskDone();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"bkkuan"},"content":"        System.out.printf(\"Marked task %d as done:\\n  %s\\n\", index + 1, tasks.get(index));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"bkkuan"},"content":"     * Marks the task at the given index as not done.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"bkkuan"},"content":"     * @param index the index of the task to unmark","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"bkkuan"},"content":"    public void unmarkTask(final int index) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"bkkuan"},"content":"        validateIndex(index);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"bkkuan"},"content":"        tasks.get(index).taskNotDone();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"bkkuan"},"content":"        System.out.printf(\"Marked task %d as not done:\\n  %s\\n\", index + 1, tasks.get(index));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"bkkuan"},"content":"     * Deletes the task at the specified index.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"bkkuan"},"content":"     * @param index the index of the task to delete","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"bkkuan"},"content":"    public void deleteTask(final int index) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"bkkuan"},"content":"        validateIndex(index);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"bkkuan"},"content":"        final Tasks removed \u003d tasks.remove(index);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"bkkuan"},"content":"        System.out.printf(\"Removed task %d:\\n  %s\\nNow you have %d tasks\\n\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"bkkuan"},"content":"                index + 1, removed, tasks.size());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"bkkuan"},"content":"     * Validates that the task description is not empty.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"bkkuan"},"content":"     * @param description the task description","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"bkkuan"},"content":"     * @throws BryanException if the description is empty","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"bkkuan"},"content":"    private void validateDescription(final String description) throws BryanException {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"bkkuan"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"bkkuan"},"content":"            throw new BryanException(\"Task description cannot be empty\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"bkkuan"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"bkkuan"},"content":"     * Validates that the given index is within the bounds of the task list.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"bkkuan"},"content":"     * @param index the task index","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"bkkuan"},"content":"     * @throws IllegalArgumentException if the index is invalid","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"bkkuan"},"content":"    private void validateIndex(final int index) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"bkkuan"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"bkkuan"},"content":"            throw new IllegalArgumentException(\"Invalid task number\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"bkkuan"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"bkkuan"},"content":"     * Prints a confirmation message when a task is added.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"bkkuan"},"content":"     * @param task the task that was added","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"bkkuan"},"content":"    private void printAddConfirmation(final Tasks task) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"bkkuan"},"content":"        System.out.printf(\"Added task:\\n  %s\\nNow you have %d tasks\\n\", task, tasks.size());","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"bkkuan"},"content":"     * Finds tasks that contain the given keyword in their description.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"bkkuan"},"content":"     * @param keyword the search keyword","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"bkkuan"},"content":"     * @return an {@code ArrayList} of tasks whose descriptions contain the keyword","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"bkkuan"},"content":"    public ArrayList\u003cTasks\u003e findTasks(final String keyword) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"bkkuan"},"content":"        final ArrayList\u003cTasks\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"bkkuan"},"content":"        for (final Tasks task : tasks) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"bkkuan"},"content":"            // Use toString() or a dedicated getter if available.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"bkkuan"},"content":"            if (task.toString().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"bkkuan"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"bkkuan"},"content":"            }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"bkkuan"},"content":"        }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"bkkuan"},"content":"        return matchingTasks;","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"bkkuan"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"bkkuan":221}},{"path":"src/main/java/bryan/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bkkuan"},"content":"package bryan.tasks;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bkkuan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bkkuan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bkkuan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bkkuan"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bkkuan"},"content":" * Represents a deadline task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bkkuan"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bkkuan"},"content":"public class Deadline extends Tasks {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bkkuan"},"content":"    protected LocalDate by;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bkkuan"},"content":"     * Constructs a deadline task with the given description and due date.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bkkuan"},"content":"     * @param information the task description","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bkkuan"},"content":"     * @param by the due date","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bkkuan"},"content":"    public Deadline(final String information, final LocalDate by) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bkkuan"},"content":"        super(information);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bkkuan"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bkkuan"},"content":"     * Constructs a deadline task with the given description and due date string.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bkkuan"},"content":"     * @param information the task description","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bkkuan"},"content":"     * @param dateString the due date in string format","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bkkuan"},"content":"     * @throws DateTimeParseException if the date string is invalid","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bkkuan"},"content":"    public Deadline(final String information, final String dateString)","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bkkuan"},"content":"            throws DateTimeParseException {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bkkuan"},"content":"        super(information);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bkkuan"},"content":"        this.by \u003d LocalDate.parse(dateString);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bkkuan"},"content":"     * Converts this deadline into a file-friendly string format.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bkkuan"},"content":"     * @return a formatted string representing the deadline","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bkkuan"},"content":"    @Override","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bkkuan"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bkkuan"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + information + \" | \" + by;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bkkuan"},"content":"     * Returns a string representation of the deadline.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bkkuan"},"content":"     * @return a formatted string with task details and due date","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bkkuan"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bkkuan"},"content":"    public String toString() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bkkuan"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bkkuan"},"content":"                + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bkkuan"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"bkkuan":57}},{"path":"src/main/java/bryan/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bkkuan"},"content":"package bryan.tasks;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bkkuan"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bkkuan"},"content":" * Represents an event task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bkkuan"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bkkuan"},"content":"public class Event extends Tasks {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bkkuan"},"content":"    protected String from;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bkkuan"},"content":"    protected String to;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bkkuan"},"content":"     * Constructs an event task with the given description, start, and end times.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bkkuan"},"content":"     * @param information the event description","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bkkuan"},"content":"     * @param from the start time/date","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bkkuan"},"content":"     * @param to the end time/date","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bkkuan"},"content":"    public Event(final String information, final String from, final String to) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bkkuan"},"content":"        super(information);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bkkuan"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bkkuan"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bkkuan"},"content":"     * Converts this event into a file-friendly string format.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bkkuan"},"content":"     * @return a formatted string representing the event","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bkkuan"},"content":"    @Override","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bkkuan"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bkkuan"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + information + \" | \" + from + \" | \" + to;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bkkuan"},"content":"     * Returns a string representation of the event.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bkkuan"},"content":"     * @return a formatted string with event details","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bkkuan"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bkkuan"},"content":"    public String toString() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bkkuan"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bkkuan"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"bkkuan":43}},{"path":"src/main/java/bryan/tasks/Tasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bkkuan"},"content":"package bryan.tasks;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bkkuan"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bkkuan"},"content":" * Abstract class representing a generic task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bkkuan"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bkkuan"},"content":"public abstract class Tasks {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bkkuan"},"content":"    protected String information;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bkkuan"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bkkuan"},"content":"     * Constructs a task with the given description.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bkkuan"},"content":"     * @param information the task description","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bkkuan"},"content":"    public Tasks(final String information) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bkkuan"},"content":"        this.information \u003d information;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bkkuan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bkkuan"},"content":"     * Marks this task as done.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bkkuan"},"content":"    public void taskDone() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bkkuan"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bkkuan"},"content":"     * Marks this task as not done.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bkkuan"},"content":"    public void taskNotDone() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bkkuan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bkkuan"},"content":"     * Converts the task into a string representation suitable for file storage.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bkkuan"},"content":"     * @return a formatted string representing the task","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bkkuan"},"content":"    public abstract String toFileFormat();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bkkuan"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bkkuan"},"content":"     * @return \"[X]\" if done, \"[ ]\" otherwise","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bkkuan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bkkuan"},"content":"        return isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bkkuan"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bkkuan"},"content":"     * @return a string containing the status icon and the description","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bkkuan"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bkkuan"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bkkuan"},"content":"        return getStatusIcon() + \" \" + information;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bkkuan"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"bkkuan":59}},{"path":"src/main/java/bryan/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bkkuan"},"content":"package bryan.tasks;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bkkuan"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bkkuan"},"content":" * Represents a todo task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bkkuan"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bkkuan"},"content":"public class Todo extends Tasks {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bkkuan"},"content":"     * Constructs a todo task with the given description.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bkkuan"},"content":"     * @param information the task description","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bkkuan"},"content":"    public Todo(final String information) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bkkuan"},"content":"        super(information);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bkkuan"},"content":"     * Converts this todo into a file-friendly string format.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bkkuan"},"content":"     * @return a formatted string representing the todo","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bkkuan"},"content":"    @Override","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bkkuan"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bkkuan"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + information;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bkkuan"},"content":"     * Returns a string representation of the todo.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bkkuan"},"content":"     * @return a formatted string with todo details","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bkkuan"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bkkuan"},"content":"    public String toString() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bkkuan"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bkkuan"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"bkkuan":36}},{"path":"src/main/java/bryan/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bkkuan"},"content":"package bryan.ui;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bkkuan"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bkkuan"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bkkuan"},"content":" * The Ui class handles user interactions and displays messages.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bkkuan"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bkkuan"},"content":"public class Ui {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bkkuan"},"content":"    private final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bkkuan"},"content":"     * Displays a welcome message.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bkkuan"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bkkuan"},"content":"        System.out.println(\"Hello! I\u0027m Bryan, your trustworthy support\\nWhat can I do for you?\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bkkuan"},"content":"     * Displays a goodbye message.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bkkuan"},"content":"    public void showGoodbye() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bkkuan"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bkkuan"},"content":"     * Reads a command from the user.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bkkuan"},"content":"     * @return the trimmed command string entered by the user","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bkkuan"},"content":"    public String readCommand() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bkkuan"},"content":"        return scanner.nextLine().trim();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bkkuan"},"content":"     * Displays an error message.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bkkuan"},"content":"     * @param message the error message to display","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bkkuan"},"content":"    public void showError(final String message) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bkkuan"},"content":"        System.out.println(\"Error: \" + message);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bkkuan"},"content":"     * Displays a general message.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bkkuan"},"content":"     * @param message the message to display","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bkkuan"},"content":"    public void showMessage(final String message) {","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bkkuan"},"content":"        System.out.println(message);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bkkuan"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"bkkuan":51}},{"path":"src/test/java/bryan/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bkkuan"},"content":"package bryan.storage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bkkuan"},"content":"import bryan.tasks.Deadline;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bkkuan"},"content":"import bryan.tasks.Event;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bkkuan"},"content":"import bryan.tasks.Tasks;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bkkuan"},"content":"import bryan.tasks.Todo;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bkkuan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bkkuan"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bkkuan"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bkkuan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bkkuan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bkkuan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bkkuan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bkkuan"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bkkuan"},"content":" * Test class for verifying the functionality of the Storage class.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bkkuan"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bkkuan"},"content":"class StorageTest {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bkkuan"},"content":"     * Tests that tasks saved by the Storage class can be correctly loaded.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bkkuan"},"content":"     * @throws IOException if an I/O error occurs during testing","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bkkuan"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bkkuan"},"content":"    void saveAndLoadTasks_success() throws IOException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bkkuan"},"content":"        // Arrange","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bkkuan"},"content":"        final Path tempFile \u003d Files.createTempFile(\"tasks\", \".txt\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bkkuan"},"content":"        final Storage storage \u003d new Storage(tempFile.toString());","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bkkuan"},"content":"        final ArrayList\u003cTasks\u003e tasksToSave \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bkkuan"},"content":"        tasksToSave.add(new Todo(\"Read book\"));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bkkuan"},"content":"        tasksToSave.add(new Deadline(\"Return book\", LocalDate.now()));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bkkuan"},"content":"        tasksToSave.add(new Event(\"Project meeting\", \"2023-10-01\", \"2023-10-02\"));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bkkuan"},"content":"        // Act","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bkkuan"},"content":"        storage.save(tasksToSave);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bkkuan"},"content":"        final ArrayList\u003cTasks\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bkkuan"},"content":"        // Assert","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bkkuan"},"content":"        assertEquals(tasksToSave.size(), loadedTasks.size(),","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bkkuan"},"content":"                \"Number of tasks saved and loaded should match.\");","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bkkuan"},"content":"        // Clean up","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bkkuan"},"content":"        Files.deleteIfExists(tempFile);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bkkuan"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"bkkuan":49}},{"path":"src/test/java/bryan/taskmanager/TaskManagerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bkkuan"},"content":"package bryan.taskmanager;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bkkuan"},"content":"import bryan.exception.BryanException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bkkuan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bkkuan"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bkkuan"},"content":"/**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bkkuan"},"content":" * Test class for verifying the functionality of the TaskManager class.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bkkuan"},"content":" */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bkkuan"},"content":"class TaskManagerTest {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bkkuan"},"content":"     * Tests adding a valid todo task.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bkkuan"},"content":"     *","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bkkuan"},"content":"     * @throws BryanException if adding the task fails","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bkkuan"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bkkuan"},"content":"    void addTask_validTodo_success() throws BryanException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bkkuan"},"content":"        final TaskManager taskManager \u003d new TaskManager();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bkkuan"},"content":"        taskManager.addTask(\"todo read book\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bkkuan"},"content":"        assertEquals(1, taskManager.getTasks().size());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bkkuan"},"content":"    /**","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bkkuan"},"content":"     * Tests that adding an invalid todo task throws an exception.","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bkkuan"},"content":"     */","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bkkuan"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bkkuan"},"content":"    void addTask_invalidTodo_throwsException() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bkkuan"},"content":"        final TaskManager taskManager \u003d new TaskManager();","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bkkuan"},"content":"        assertThrows(BryanException.class, () -\u003e taskManager.addTask(\"todo\"));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bkkuan"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bkkuan"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bkkuan"},"content":"","lastModifiedDate":"2025-02-08","isFullCredit":false}],"authorContributionMap":{"bkkuan":33}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bkkuan"},"content":"todo read book","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bkkuan"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bkkuan"},"content":"event project meeting /from Monday /to Tuesday","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bkkuan"},"content":"list","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bkkuan"},"content":"bye","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"bkkuan":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bkkuan"},"content":"java -classpath ..\\bin Bryan \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"bkkuan":1,"-":20}}]
