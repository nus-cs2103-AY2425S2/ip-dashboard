[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Kaidama97"},"content":"# ui.Kaidama project","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kaidama97"},"content":"1. After that, locate the `src/main/java/Kaidam.java` file, right-click it, and choose `Run ui.Kaidama.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"   _  __     _     _                       ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kaidama97"},"content":"   | |/ /__ _(_) __| | __ _ _ __ ___   __ _","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kaidama97"},"content":"   | \u0027 // _` | |/ _` |/ _` | \u0027_ ` _ \\ / _` |","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kaidama97"},"content":"   | . \\ (_| | | (_| | (_| | | | | | | (_| |","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kaidama97"},"content":"   |_|\\_\\__,_|_|\\__,_|\\__,_|_| |_| |_|\\__,_|","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false}],"authorContributionMap":{"Kaidama97":6,"-":20}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kaidama97"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kaidama97"},"content":"}","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kaidama97"},"content":"checkstyle {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kaidama97"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kaidama97"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kaidama97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kaidama97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kaidama97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kaidama97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kaidama97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kaidama97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kaidama97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kaidama97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kaidama97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kaidama97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kaidama97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kaidama97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kaidama97"},"content":"    mainClass.set(\"kaidama.Launcher\")","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kaidama97"},"content":"    archiveBaseName \u003d \"kaidama\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kaidama97"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kaidama97"},"content":"    archiveFileName \u003d \u0027kaidama.jar\u0027","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kaidama97"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"Kaidama97":26,"-":37}},{"path":"data/kaidama.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Kaidama97"},"content":"T | 0 | cook dinner | MEDIUM","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kaidama97"},"content":"E | 0 | cs2103 pe | MEDIUM | 20/04/2025 0900-20/04/2025 1600","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kaidama97"},"content":"T | 0 | buy groceries | MEDIUM","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"Kaidama97":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Kaidama97"},"content":"# Kaidama User Guide","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kaidama97"},"content":"![Ui.png](Ui.png)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kaidama97"},"content":"Kaidama is a Personal Assistant Chatbot that helps users keep track of various thing using the","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kaidama97"},"content":"Command Line Interface (CLI)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kaidama97"},"content":"---","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kaidama97"},"content":"## Table of Contents","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kaidama97"},"content":"- [Add Todo](#add-todo)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kaidama97"},"content":"- [Add Deadline](#add-deadline)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kaidama97"},"content":"- [Add Event](#add-event)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kaidama97"},"content":"- [Mark Task](#mark-task)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kaidama97"},"content":"- [Unmark Task](#unmark-task)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kaidama97"},"content":"- [List Tasks](#list-tasks)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kaidama97"},"content":"- [Delete Task](#delete-task)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kaidama97"},"content":"- [Find Task](#find-task)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kaidama97"},"content":"- [Set Priority](#set-priority)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kaidama97"},"content":"- [Exit](#exit)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kaidama97"},"content":"- [Save Data to Text File](#save-data)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kaidama97"},"content":"- [Acknowledgements](#Acknowledgements)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kaidama97"},"content":"- [Command Summary](#Command-Summary)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kaidama97"},"content":"---","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kaidama97"},"content":"## Add Todo","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kaidama97"},"content":"To add a new task without a deadline or event, use the following format:","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kaidama97"},"content":"**Format:**  ","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kaidama97"},"content":"`todo \u003cDESCRIPTION\u003e`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kaidama97"},"content":"**Example:**  ","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kaidama97"},"content":"`todo read book`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kaidama97"},"content":"---","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kaidama97"},"content":"## Add Deadline","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kaidama97"},"content":"To add a task with a deadline, use this format:","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kaidama97"},"content":"**Format:**  ","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kaidama97"},"content":"`deadline \u003cDESCRIPTION\u003e /by \u003cDATE\u003e`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kaidama97"},"content":"**Example:**  ","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kaidama97"},"content":"`deadline Submit assignment /by 20/02/2025 2359`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kaidama97"},"content":"---","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kaidama97"},"content":"## Add Event","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kaidama97"},"content":"To add an event that spans a period of time:","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kaidama97"},"content":"**Format:**  ","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kaidama97"},"content":"`event \u003cDESCRIPTION\u003e /from \u003cSTART DATE\u003e /to \u003cEND DATE\u003e`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kaidama97"},"content":"**Example:**  ","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kaidama97"},"content":"`event Project meeting /from 20/02/2025 0800 /to 20/02/2025 2359`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kaidama97"},"content":"---","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kaidama97"},"content":"## Mark Task","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kaidama97"},"content":"To mark a task as completed:","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kaidama97"},"content":"**Format:**  ","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kaidama97"},"content":"`mark \u003cTASK NUMBER\u003e`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kaidama97"},"content":"**Example:**  ","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kaidama97"},"content":"`mark 1`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kaidama97"},"content":"---","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Kaidama97"},"content":"## Unmark Task","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Kaidama97"},"content":"To unmark a completed task:","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Kaidama97"},"content":"**Format:**  ","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Kaidama97"},"content":"`unmark \u003cTASK NUMBER\u003e`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Kaidama97"},"content":"**Example:**  ","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Kaidama97"},"content":"`unmark 1`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Kaidama97"},"content":"---","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Kaidama97"},"content":"## List Tasks","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Kaidama97"},"content":"To view all tasks:","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Kaidama97"},"content":"**Format:**  ","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Kaidama97"},"content":"`list`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Kaidama97"},"content":"---","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Kaidama97"},"content":"## Delete Task","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Kaidama97"},"content":"To delete a specific task:","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Kaidama97"},"content":"**Format:**  ","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Kaidama97"},"content":"`delete \u003ctask number\u003e`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Kaidama97"},"content":"**Example:**  ","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Kaidama97"},"content":"`delete 2`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Kaidama97"},"content":"---","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Kaidama97"},"content":"## Find Task","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Kaidama97"},"content":"To search for tasks that contain a specific keyword:","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Kaidama97"},"content":"**Format:**  ","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Kaidama97"},"content":"`find [keyword]`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Kaidama97"},"content":"**Example:**  ","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Kaidama97"},"content":"`find books`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Kaidama97"},"content":"This will return all tasks containing the word \"books\"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Kaidama97"},"content":"---","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Kaidama97"},"content":"## Set Priority","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Kaidama97"},"content":"To set a priority level for a task:","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Kaidama97"},"content":"**Format:**  ","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Kaidama97"},"content":"`set priority [task number] [priority level]`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Kaidama97"},"content":"Priority levels: `high`, `medium`, `low`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Kaidama97"},"content":"**Example:**  ","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Kaidama97"},"content":"`set priority 3 high`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Kaidama97"},"content":"---","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Kaidama97"},"content":"## Exit","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Kaidama97"},"content":"To exit the program:","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Kaidama97"},"content":"**Format:**  ","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Kaidama97"},"content":"`bye`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Kaidama97"},"content":"---","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Kaidama97"},"content":"## Save Data","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Kaidama97"},"content":"Task list data are saved automatically as a TXT file `[JAR file location]/data/kaidama.txt`.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Kaidama97"},"content":"Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Kaidama97"},"content":"❗**Caution**: If your changes to the data file makes its format invalid, ","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Kaidama97"},"content":"Kaidama will return an error parsing data. ","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Kaidama97"},"content":"Hence, it is recommended to take a backup of the file before editing it. ","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Kaidama97"},"content":"Edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Kaidama97"},"content":"---","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Kaidama97"},"content":"# Acknowledgements","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Kaidama97"},"content":"---","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Kaidama97"},"content":"Some of the JavaDocs comments were generated with ChatGPT and DeepSeek.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Kaidama97"},"content":"Command Summary in README.md is generated with ChatGPT.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Kaidama97"},"content":"---","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Kaidama97"},"content":"# Command Summary","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Kaidama97"},"content":"| **Action**       | **Format, Examples**                                                                 |","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Kaidama97"},"content":"|-------------------|-------------------------------------------------------------------------------------|","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Kaidama97"},"content":"| **Add Todo**      | `todo \u003cDESCRIPTION\u003e` \u003cbr\u003e e.g., `todo Buy groceries`                                |","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Kaidama97"},"content":"| **Add Deadline**  | `deadline \u003cDESCRIPTION\u003e /by \u003cDATE\u003e` \u003cbr\u003e e.g., `deadline Submit assignment /by 20/02/2025 2359` |","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Kaidama97"},"content":"| **Add Event**     | `event \u003cDESCRIPTION\u003e /from \u003cSTART DATE\u003e /to \u003cEND DATE\u003e` \u003cbr\u003e e.g., `event Project meeting /from 22/02/2025 /to 23/02/2025` |","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Kaidama97"},"content":"| **Mark Task**     | `mark \u003cTASK NUMBER\u003e` \u003cbr\u003e e.g., `mark 1`                                           |","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Kaidama97"},"content":"| **Unmark Task**   | `unmark \u003cTASK NUMBER\u003e` \u003cbr\u003e e.g., `unmark 1`                                       |","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Kaidama97"},"content":"| **List Tasks**    | `list`                                                                             |","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Kaidama97"},"content":"| **Delete Task**   | `delete \u003cTASK NUMBER\u003e` \u003cbr\u003e e.g., `delete 2`                                       |","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Kaidama97"},"content":"| **Find Task**     | `find \u003cKEYWORD\u003e` \u003cbr\u003e e.g., `find books`                                           |","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Kaidama97"},"content":"| **Set Priority**  | `set priority \u003cTASK NUMBER\u003e \u003cPRIORITY LEVEL\u003e` \u003cbr\u003e e.g., `set priority 3 high`     |","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Kaidama97"},"content":"| **Exit**          | `bye`                                                                              |","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Kaidama97"},"content":"| **Save Data**     | Data is automatically saved to a text file.                                        |","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"Kaidama97":152,"-":14}},{"path":"src/main/java/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kaidama97"},"content":"package command;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kaidama97"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kaidama97"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kaidama97"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kaidama97"},"content":"import exception.KaidamaException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kaidama97"},"content":"import parser.Parser;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kaidama97"},"content":"import storage.Storage;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kaidama97"},"content":"import task.Deadline;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kaidama97"},"content":"import task.Event;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kaidama97"},"content":"import task.Task;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kaidama97"},"content":"import task.TaskList;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kaidama97"},"content":"import task.ToDo;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kaidama97"},"content":"import ui.Ui;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kaidama97"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kaidama97"},"content":" * The AddCommand class represents a command Todo, Deadline, and Event. Add task into the TaskList","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kaidama97"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kaidama97"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kaidama97"},"content":"    private static final String MISSING_TODO_DESCRIPTION_ERROR \u003d \"Please enter a description of the todo task.\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kaidama97"},"content":"    private static final String MISSING_DEADLINE_DESCRIPTION_ERROR \u003d \"Please enter a description of the deadline.\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kaidama97"},"content":"    private static final String MISSING_DEADLINE_DATE_ERROR \u003d \"Please enter the due date of the task.\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kaidama97"},"content":"    private static final String MISSING_EVENT_DESCRIPTION_ERROR \u003d \"Please enter a description of the event.\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kaidama97"},"content":"    private static final String MISSING_EVENT_DATES_ERROR \u003d \"Please enter the event dates of the task.\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kaidama97"},"content":"    private static final String MISSING_EVENT_START_TIME_ERROR \u003d \"Please enter a start time of the event.\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kaidama97"},"content":"    private static final String MISSING_EVENT_END_TIME_ERROR \u003d \"Please enter an end time of the event.\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kaidama97"},"content":"    private static final String INVALID_DATE_FORMAT_ERROR \u003d \"Invalid date format. Please use %s.%s\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kaidama97"},"content":"    private static final String WRONG_DATE_FORMAT_ERROR \u003d \"Oh no! Wrong date format!\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kaidama97"},"content":"    private static final String EXPECTED_DATE_FORMAT \u003d \" Example: 16/02/2025 2359\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kaidama97"},"content":"    private static final String INVALID_EVENT_END_DATE_ERROR \u003d \"Invalid end date, end date should be after start date.\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kaidama97"},"content":"    private String input;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kaidama97"},"content":"    private Task task;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kaidama97"},"content":"     * Constructs an AddCommand object with the user input.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kaidama97"},"content":"     * @param input The user input containing the task details.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kaidama97"},"content":"    public AddCommand(String input) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kaidama97"},"content":"        this.input \u003d input;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kaidama97"},"content":"     * Executes command to add a task to the task list.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kaidama97"},"content":"     * @param tasks   The list of tasks to which the new task will be added.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kaidama97"},"content":"     * @param ui      Deals with interactions with the user.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kaidama97"},"content":"     * @param storage The storage deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kaidama97"},"content":"     * @return A message confirming the addition of the task.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kaidama97"},"content":"     * @throws KaidamaException If there is an error in the task details or format.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kaidama97"},"content":"     * @throws IOException      If there is an error writing to the file.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kaidama97"},"content":"     * @throws AssertionError if tasks, ui, and storage is null.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kaidama97"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kaidama97"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws KaidamaException, IOException {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kaidama97"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kaidama97"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kaidama97"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kaidama97"},"content":"        if (input.startsWith(\"todo\")) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kaidama97"},"content":"            setTodo();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kaidama97"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kaidama97"},"content":"            setDeadLine();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kaidama97"},"content":"        } else {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kaidama97"},"content":"            setEvent();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kaidama97"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Kaidama97"},"content":"        storage.writeFile(task.toStorageString());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Kaidama97"},"content":"        tasks.addTask(task);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Kaidama97"},"content":"        return Ui.addNewTask(task, tasks.getTaskCount());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Kaidama97"},"content":"     * Indicates whether the command is an exit command.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Kaidama97"},"content":"     * @return False, as this command does not exit the application.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Kaidama97"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Kaidama97"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Kaidama97"},"content":"        return false;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Kaidama97"},"content":"     * Sets todo task based on the user input.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Kaidama97"},"content":"     * @throws KaidamaException If the description of the Todo task is empty.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Kaidama97"},"content":"    private void setTodo() throws KaidamaException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Kaidama97"},"content":"        String[] splitTaskInput \u003d input.trim().split(\" \");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Kaidama97"},"content":"        if (splitTaskInput.length \u003d\u003d 1) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Kaidama97"},"content":"            throw new KaidamaException(MISSING_TODO_DESCRIPTION_ERROR);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Kaidama97"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Kaidama97"},"content":"        task \u003d new ToDo(input.replace(\"todo \", \"\"));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Kaidama97"},"content":"     * Sets deadline based on the user input.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Kaidama97"},"content":"     * @throws KaidamaException If the description or due date of the Deadline task is invalid.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Kaidama97"},"content":"    private void setDeadLine() throws KaidamaException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Kaidama97"},"content":"        String[] splitTaskInput \u003d input.trim().split(\" \", 2);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Kaidama97"},"content":"        String[] split \u003d splitTaskInput[1].trim().split(\"/by \");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Kaidama97"},"content":"        String[] dateSplit;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Kaidama97"},"content":"        if (split[0].isEmpty()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Kaidama97"},"content":"            throw new KaidamaException(MISSING_DEADLINE_DESCRIPTION_ERROR);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Kaidama97"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Kaidama97"},"content":"        if (split.length \u003d\u003d 1 || split[1].trim().isEmpty()) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Kaidama97"},"content":"            throw new KaidamaException(MISSING_DEADLINE_DATE_ERROR);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Kaidama97"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Kaidama97"},"content":"        dateSplit \u003d split[1].split(\" \");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Kaidama97"},"content":"        task \u003d new Deadline(split[0].trim(), parseAndValidateDate(dateSplit, split[1], \"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Kaidama97"},"content":"     * Sets event based on the user input.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Kaidama97"},"content":"     * @throws KaidamaException If the description, start time, or end time of the Event task is invalid.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Kaidama97"},"content":"    private void setEvent() throws KaidamaException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Kaidama97"},"content":"        String[] splitTaskInput \u003d input.trim().split(\" \", 2);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Kaidama97"},"content":"        String[] split \u003d splitTaskInput[1].trim().split(\"/from \");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Kaidama97"},"content":"        isValidEventInput(split);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Kaidama97"},"content":"        String[] toSplit \u003d split[1].trim().split(\"/to \");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Kaidama97"},"content":"        String[] startDate \u003d toSplit[0].trim().split(\" \");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Kaidama97"},"content":"        String[] endDate \u003d toSplit[1].trim().split(\" \");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Kaidama97"},"content":"        task \u003d new Event(","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Kaidama97"},"content":"                split[0].trim(),","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Kaidama97"},"content":"                parseAndValidateDate(startDate, toSplit[0].trim(), \"dd/MM/yyyy HHmm\"),","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Kaidama97"},"content":"                parseAndValidateDate(endDate, toSplit[1].trim(), \"dd/MM/yyyy HHmm\")","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Kaidama97"},"content":"        );","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Kaidama97"},"content":"    private boolean isValidEventInput(String[] split) throws KaidamaException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Kaidama97"},"content":"        if (split[0].trim().isEmpty()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Kaidama97"},"content":"            throw new KaidamaException(MISSING_EVENT_DESCRIPTION_ERROR);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Kaidama97"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Kaidama97"},"content":"        if (split.length \u003d\u003d 1) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Kaidama97"},"content":"            throw new KaidamaException(MISSING_EVENT_DATES_ERROR);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Kaidama97"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Kaidama97"},"content":"        String[] toSplit \u003d split[1].split(\"/to \");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Kaidama97"},"content":"        if (toSplit[0].trim().isEmpty()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Kaidama97"},"content":"            throw new KaidamaException(MISSING_EVENT_START_TIME_ERROR);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Kaidama97"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Kaidama97"},"content":"        if (toSplit.length \u003d\u003d 1 || toSplit[1].trim().isEmpty()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Kaidama97"},"content":"            throw new KaidamaException(MISSING_EVENT_END_TIME_ERROR);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Kaidama97"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Kaidama97"},"content":"        if (isValidEndDate(toSplit)) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Kaidama97"},"content":"            return true;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Kaidama97"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Kaidama97"},"content":"        throw new KaidamaException(INVALID_EVENT_END_DATE_ERROR);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Kaidama97"},"content":"    private boolean isValidEndDate(String[] dates) throws KaidamaException {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Kaidama97"},"content":"        LocalDateTime start \u003d Parser.parseDate(dates[0].trim());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Kaidama97"},"content":"        LocalDateTime end \u003d Parser.parseDate(dates[1].trim());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Kaidama97"},"content":"        return end.isAfter(start);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Kaidama97"},"content":"     * Parses and validates a date string.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Kaidama97"},"content":"     * @param dateSplit The date string to parse.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Kaidama97"},"content":"     * @param dateFormat The expected date format.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Kaidama97"},"content":"     * @return The parsed date string.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Kaidama97"},"content":"     * @throws KaidamaException If the date string is invalid.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Kaidama97"},"content":"    private LocalDateTime parseAndValidateDate(String[] dateSplit, String date, String dateFormat)","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Kaidama97"},"content":"            throws KaidamaException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Kaidama97"},"content":"        try {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Kaidama97"},"content":"            if (Parser.isDateFormat(dateSplit[0].trim())) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Kaidama97"},"content":"                return Parser.parseDate(date);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Kaidama97"},"content":"            } else {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Kaidama97"},"content":"                throw new KaidamaException(String.format(INVALID_DATE_FORMAT_ERROR, dateFormat,","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Kaidama97"},"content":"                        EXPECTED_DATE_FORMAT));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Kaidama97"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Kaidama97"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Kaidama97"},"content":"            throw new KaidamaException(WRONG_DATE_FORMAT_ERROR + EXPECTED_DATE_FORMAT);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Kaidama97"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Kaidama97"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"Kaidama97":187}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kaidama97"},"content":"package command;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kaidama97"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kaidama97"},"content":"import exception.KaidamaException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kaidama97"},"content":"import storage.Storage;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kaidama97"},"content":"import task.TaskList;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kaidama97"},"content":"import ui.Ui;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kaidama97"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kaidama97"},"content":" * Represents an abstract command in the Kaidama application.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kaidama97"},"content":" *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kaidama97"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kaidama97"},"content":"public abstract class Command {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kaidama97"},"content":"     * Executes the command on the task list, interacting with the user interface and save/read storage(file).","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kaidama97"},"content":"     * @param taskList The list of tasks to perform the command on.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kaidama97"},"content":"     * @param ui       The user interface that handles interactions with the user.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kaidama97"},"content":"     * @param storage  The storage that manages saving and loading tasks from the file.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kaidama97"},"content":"     * @return A message confirming the action of the task.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kaidama97"},"content":"     * @throws KaidamaException If there is an error in processing the command (e.g., invalid task data).","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kaidama97"},"content":"     * @throws IOException      If there is an error reading from or writing to the storage file.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kaidama97"},"content":"    public abstract String execute(TaskList taskList, Ui ui, Storage storage) throws KaidamaException,","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kaidama97"},"content":"            IOException;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kaidama97"},"content":"     * Determines whether the command signals the application to exit.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kaidama97"},"content":"     * @return true if the command causes the application to exit, false otherwise.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kaidama97"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kaidama97"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"Kaidama97":35}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kaidama97"},"content":"package command;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kaidama97"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kaidama97"},"content":"import exception.KaidamaException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kaidama97"},"content":"import storage.Storage;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kaidama97"},"content":"import task.Task;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kaidama97"},"content":"import task.TaskList;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kaidama97"},"content":"import ui.Ui;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kaidama97"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kaidama97"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kaidama97"},"content":" * delete command removes a specific task from the task list and updates the storage file.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kaidama97"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kaidama97"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kaidama97"},"content":"    private static final String MISSING_TASK_NUMBER_ERROR \u003d \"Please enter a task to delete.\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kaidama97"},"content":"    private static final String INVALID_TASK_NUMBER_ERROR \u003d \"No task found with the given number.\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kaidama97"},"content":"    private String input;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kaidama97"},"content":"     * Constructs a DeleteCommand with the given input.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kaidama97"},"content":"     * @param input The user input specifying the task to delete.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kaidama97"},"content":"    public DeleteCommand(String input) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kaidama97"},"content":"        this.input \u003d input;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kaidama97"},"content":"     * Executes the command to delete a task from the task list.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kaidama97"},"content":"     * @param tasks   The list of tasks to which the new task will be deleted from.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kaidama97"},"content":"     * @param ui      Deals with interactions with the user.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kaidama97"},"content":"     * @param storage The storage deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kaidama97"},"content":"     * @return A message confirming the deletion of the task.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kaidama97"},"content":"     * @throws KaidamaException If there is an error in the task details or format.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kaidama97"},"content":"     * @throws IOException      If there is an error writing to the file.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kaidama97"},"content":"     * @throws AssertionError if tasks, ui, and storage is null.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kaidama97"},"content":"     * @throws AssertionError If TaskList is less than 0.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kaidama97"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kaidama97"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws KaidamaException, IOException {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kaidama97"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kaidama97"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kaidama97"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kaidama97"},"content":"        String[] split \u003d input.split(\" \");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kaidama97"},"content":"        if (split.length \u003c 2) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kaidama97"},"content":"            throw new KaidamaException(MISSING_TASK_NUMBER_ERROR);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kaidama97"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kaidama97"},"content":"        int idx \u003d Integer.parseInt(split[1].trim());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kaidama97"},"content":"        assert tasks.getTaskCount() \u003e\u003d 0 : \"task should be more than 0\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kaidama97"},"content":"        if (idx \u003e tasks.getTaskCount()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kaidama97"},"content":"            throw new KaidamaException(INVALID_TASK_NUMBER_ERROR);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kaidama97"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kaidama97"},"content":"        Task task \u003d tasks.getTask(idx);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kaidama97"},"content":"        tasks.deleteTask(idx);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kaidama97"},"content":"        storage.updateTaskInFile(tasks.getTaskList());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kaidama97"},"content":"        return ui.deleteTaskMsg(task, tasks.getTaskCount());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kaidama97"},"content":"     * Indicates whether the command is an exit command.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kaidama97"},"content":"     * @return False, as this command does not exit the application.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Kaidama97"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Kaidama97"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Kaidama97"},"content":"        return false;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Kaidama97"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"Kaidama97":73}},{"path":"src/main/java/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kaidama97"},"content":"package command;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kaidama97"},"content":"import exception.KaidamaException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kaidama97"},"content":"import storage.Storage;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kaidama97"},"content":"import task.TaskList;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kaidama97"},"content":"import ui.Ui;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kaidama97"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kaidama97"},"content":" * Represents a command to exit the application.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kaidama97"},"content":" * It does not modify the task list or interact with the storage, as its primary purpose is to exit the program.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kaidama97"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kaidama97"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kaidama97"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kaidama97"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws KaidamaException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kaidama97"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kaidama97"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kaidama97"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kaidama97"},"content":"        return ui.exitMsg();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kaidama97"},"content":"     * Indicates whether the command is an exit command.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kaidama97"},"content":"     * @return True, as this command exit the application.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kaidama97"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kaidama97"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kaidama97"},"content":"        return true;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kaidama97"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"Kaidama97":33}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kaidama97"},"content":"package command;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kaidama97"},"content":"import exception.KaidamaException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kaidama97"},"content":"import storage.Storage;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kaidama97"},"content":"import task.Task;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kaidama97"},"content":"import task.TaskList;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kaidama97"},"content":"import ui.Ui;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kaidama97"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kaidama97"},"content":" * Represents a command to find tasks with keywords from the task list.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kaidama97"},"content":" * find command list down all the words that contained user-defined substring.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kaidama97"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kaidama97"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kaidama97"},"content":"    private static final String NO_KEYWORD_ERROR \u003d \"Please provide a keyword to search for.\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kaidama97"},"content":"    private static final String NO_MATCHING_TASKS_MESSAGE \u003d \"No matching tasks found.\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kaidama97"},"content":"    private static final String MATCHING_TASKS_HEADER \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kaidama97"},"content":"    private String input;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kaidama97"},"content":"    public FindCommand(String input) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kaidama97"},"content":"        this.input \u003d input;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kaidama97"},"content":"     * Indicates whether the command is an exit command.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kaidama97"},"content":"     * @return False, as this command does not exit the application.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kaidama97"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kaidama97"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kaidama97"},"content":"        return false;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kaidama97"},"content":"     * Executes the find command by searching for tasks that contain the specified keyword.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kaidama97"},"content":"     * @param tasks The list of tasks to search through.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kaidama97"},"content":"     * @param ui       Handles input and output with the user.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kaidama97"},"content":"     * @param storage  Manages loading and saving of tasks.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kaidama97"},"content":"     * @return A formatted string containing the matching tasks.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kaidama97"},"content":"     * @throws KaidamaException If no keyword is provided or the input format is incorrect.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kaidama97"},"content":"     * @throws AssertionError if tasks, ui, and storage is null.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kaidama97"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kaidama97"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws KaidamaException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kaidama97"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kaidama97"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kaidama97"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kaidama97"},"content":"        int count \u003d 1;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kaidama97"},"content":"        StringBuilder outputStr \u003d new StringBuilder();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kaidama97"},"content":"        String[] inputSplit \u003d input.split(\" \");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kaidama97"},"content":"        if (inputSplit.length \u003c 2) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kaidama97"},"content":"            throw new KaidamaException(NO_KEYWORD_ERROR);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kaidama97"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kaidama97"},"content":"        String keyword \u003d input.split(\" \")[1].trim();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kaidama97"},"content":"        outputStr.append(ui.printOutputString(MATCHING_TASKS_HEADER)).append(\"\\n\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kaidama97"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.getTaskCount(); i++) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kaidama97"},"content":"            Task task \u003d tasks.getTask(i);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kaidama97"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kaidama97"},"content":"                outputStr.append(ui.printOutputString(count + \".\" + task.toString())).append(\"\\n\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kaidama97"},"content":"                count++;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kaidama97"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kaidama97"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kaidama97"},"content":"        if (count \u003d\u003d 1) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kaidama97"},"content":"            return ui.printOutputString(NO_MATCHING_TASKS_MESSAGE);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kaidama97"},"content":"        }","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kaidama97"},"content":"        return outputStr.toString();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kaidama97"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"Kaidama97":68}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kaidama97"},"content":"package command;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kaidama97"},"content":"import exception.KaidamaException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kaidama97"},"content":"import storage.Storage;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kaidama97"},"content":"import task.TaskList;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kaidama97"},"content":"import ui.Ui;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kaidama97"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kaidama97"},"content":" * Represents a command to display the list of task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kaidama97"},"content":" * It does not modify the task list or interact with the storage, as its primary purpose is to display the list.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kaidama97"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kaidama97"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kaidama97"},"content":"     * Retrieve the list of tasks. Print the taskList with the ui class.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kaidama97"},"content":"     * @param tasks   The TaskList contains the task list e.g., it has operations to add/delete tasks in the list.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kaidama97"},"content":"     * @param ui      The user interface deals with interactions with the user.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kaidama97"},"content":"     * @param storage The storage to deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kaidama97"},"content":"     * @return A formatted list of string containing the list of tasks.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kaidama97"},"content":"     * @throws KaidamaException If the input is invalid or the task index is out of bounds.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kaidama97"},"content":"     * @throws AssertionError if tasks, ui, and storage is null.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kaidama97"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kaidama97"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws KaidamaException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kaidama97"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kaidama97"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kaidama97"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kaidama97"},"content":"        return ui.getList(tasks);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kaidama97"},"content":"     * Indicates whether the command is an exit command.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kaidama97"},"content":"     * @return False, as this command does not exit the application.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kaidama97"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kaidama97"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kaidama97"},"content":"        return false;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kaidama97"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"Kaidama97":42}},{"path":"src/main/java/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kaidama97"},"content":"package command;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kaidama97"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kaidama97"},"content":"import exception.KaidamaException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kaidama97"},"content":"import storage.Storage;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kaidama97"},"content":"import task.Task;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kaidama97"},"content":"import task.TaskList;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kaidama97"},"content":"import ui.Ui;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kaidama97"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kaidama97"},"content":" * Represents a command to unmark a task as not done.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kaidama97"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kaidama97"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kaidama97"},"content":"    private final String input;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kaidama97"},"content":"     * Constructs an MarkCommand with the given input.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kaidama97"},"content":"     * @param input The user input specifying the task to unmark.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kaidama97"},"content":"     * @throws AssertionError if input must is null.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kaidama97"},"content":"    public MarkCommand(String input) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kaidama97"},"content":"        assert input !\u003d null : \"Input cannot be null\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kaidama97"},"content":"        this.input \u003d input;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kaidama97"},"content":"     * Executes the command to mark a task as done. Retrieve task from list and mark task as done","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kaidama97"},"content":"     * @param tasks   The TaskList contains the task list e.g., it has operations to add/delete tasks in the list.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kaidama97"},"content":"     * @param ui      The user interface deals with interactions with the user.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kaidama97"},"content":"     * @param storage The storage to deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kaidama97"},"content":"     * @return A message confirming the completion of the task.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kaidama97"},"content":"     * @throws KaidamaException If the input is invalid or the task index is out of bounds.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kaidama97"},"content":"     * @throws IOException      If there is an error updating the storage file.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kaidama97"},"content":"     * @throws AssertionError if tasks, ui, and storage is null.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kaidama97"},"content":"     * @throws AssertionError If TaskList is less than 0.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kaidama97"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kaidama97"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws KaidamaException, IOException {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kaidama97"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kaidama97"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kaidama97"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kaidama97"},"content":"        String[] split \u003d input.split(\" \");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kaidama97"},"content":"        if (split.length \u003d\u003d 1) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kaidama97"},"content":"            throw new KaidamaException(\"Please enter a task to mark\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kaidama97"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kaidama97"},"content":"        int idx \u003d Integer.parseInt(split[1].trim());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kaidama97"},"content":"        assert tasks.getTaskCount() \u003e\u003d 0 : \"TaskList length should be more than or equal to zero\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kaidama97"},"content":"        if (idx \u003e tasks.getTaskCount()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kaidama97"},"content":"            throw new KaidamaException(\"No task found\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kaidama97"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kaidama97"},"content":"        Task task \u003d tasks.getTask(idx);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kaidama97"},"content":"        tasks.setTaskDone(idx);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kaidama97"},"content":"        storage.updateTaskInFile(tasks.getTaskList());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kaidama97"},"content":"        return ui.markedMsg(task);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kaidama97"},"content":"     * Indicates whether the command is an exit command.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kaidama97"},"content":"     * @return False, as this command does not exit the application.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kaidama97"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kaidama97"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kaidama97"},"content":"        return false;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Kaidama97"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"Kaidama97":70}},{"path":"src/main/java/command/SetPriorityCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kaidama97"},"content":"package command;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kaidama97"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kaidama97"},"content":"import exception.KaidamaException;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kaidama97"},"content":"import storage.Storage;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kaidama97"},"content":"import task.Task;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kaidama97"},"content":"import task.TaskList;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kaidama97"},"content":"import ui.Ui;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kaidama97"},"content":"/**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kaidama97"},"content":" * Represents a command to set the priority of a task.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kaidama97"},"content":" * This command allows users to update the priority level of a task in the task list.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kaidama97"},"content":" */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kaidama97"},"content":"public class SetPriorityCommand extends Command {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kaidama97"},"content":"    private String input;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kaidama97"},"content":"     * Constructs an SetPriorityCommand with the given input.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kaidama97"},"content":"     * @param input The user input specifying the task number and priority level.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kaidama97"},"content":"     * @throws AssertionError if input must is null.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kaidama97"},"content":"    public SetPriorityCommand(String input) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kaidama97"},"content":"        assert input !\u003d null : \"Input cannot be null\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kaidama97"},"content":"        this.input \u003d input;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kaidama97"},"content":"     * Executes the command to change a task\u0027s priority level.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kaidama97"},"content":"     * Retrieve task from list and change task priority","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kaidama97"},"content":"     * @param taskList   The TaskList contains the task list e.g. it has operations to add/delete tasks in the list.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kaidama97"},"content":"     * @param ui      The user interface deals with interactions with the user.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kaidama97"},"content":"     * @param storage The storage to deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kaidama97"},"content":"     * @return A message confirming the completion of the task.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kaidama97"},"content":"     * @throws KaidamaException If the input is invalid or the task index is out of bounds.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kaidama97"},"content":"     * @throws IOException      If there is an error updating the storage file.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kaidama97"},"content":"     * @throws AssertionError if tasks, ui, and storage is null.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kaidama97"},"content":"     * @throws AssertionError If TaskList is less than 0.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kaidama97"},"content":"    @Override","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kaidama97"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws KaidamaException, IOException {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kaidama97"},"content":"        assert taskList !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kaidama97"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kaidama97"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kaidama97"},"content":"        String removeCommandFromString \u003d input.replace(\"set priority \", \"\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kaidama97"},"content":"        String[] splitPriority \u003d removeCommandFromString.split(\" \");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kaidama97"},"content":"        if (splitPriority.length !\u003d 2) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kaidama97"},"content":"            throw new KaidamaException(\"Wrong number of arguments\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kaidama97"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kaidama97"},"content":"        int idx \u003d Integer.parseInt(splitPriority[0].trim());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kaidama97"},"content":"        assert taskList.getTaskCount() \u003e\u003d 0 : \"TaskList length should be more than or equal to zero\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kaidama97"},"content":"        if (idx \u003e taskList.getTaskCount()) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kaidama97"},"content":"            throw new KaidamaException(\"No task found\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kaidama97"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kaidama97"},"content":"        String priority \u003d splitPriority[1].trim().toUpperCase();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kaidama97"},"content":"        Task task \u003d taskList.getTask(idx);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kaidama97"},"content":"        task.setPriority(priority);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kaidama97"},"content":"        storage.updateTaskInFile(taskList.getTaskList());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kaidama97"},"content":"        return ui.setPriorityMsg(task);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kaidama97"},"content":"    @Override","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kaidama97"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kaidama97"},"content":"        return false;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Kaidama97"},"content":"}","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"Kaidama97":71}},{"path":"src/main/java/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kaidama97"},"content":"package command;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kaidama97"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kaidama97"},"content":"import exception.KaidamaException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kaidama97"},"content":"import storage.Storage;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kaidama97"},"content":"import task.Task;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kaidama97"},"content":"import task.TaskList;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kaidama97"},"content":"import ui.Ui;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kaidama97"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kaidama97"},"content":" * Represents a command to unmark a task as not done.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kaidama97"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kaidama97"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kaidama97"},"content":"    private String input;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kaidama97"},"content":"     * Constructs an UnmarkCommand with the given input.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kaidama97"},"content":"     * @param input The user input specifying the task to unmark.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kaidama97"},"content":"     * @throws AssertionError if input must is null.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kaidama97"},"content":"    public UnmarkCommand(String input) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kaidama97"},"content":"        assert input !\u003d null : \"Input cannot be null\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kaidama97"},"content":"        this.input \u003d input;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kaidama97"},"content":"     * Executes the command to mark a task as undone. Retrieve task from list and mark task as undone","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kaidama97"},"content":"     * @param tasks   The TaskList contains the task list e.g., it has operations to add/delete tasks in the list.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kaidama97"},"content":"     * @param ui      The user interface deals with interactions with the user.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kaidama97"},"content":"     * @param storage The storage to deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kaidama97"},"content":"     * @return A message confirming mark task as uncompleted.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kaidama97"},"content":"     * @throws KaidamaException If the input is invalid or the task index is out of bounds.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kaidama97"},"content":"     * @throws IOException      If there is an error updating the storage file.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kaidama97"},"content":"     * @throws AssertionError if tasks, ui, and storage is null.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kaidama97"},"content":"     * @throws AssertionError If TaskList is less than 0.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kaidama97"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kaidama97"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws KaidamaException, IOException {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kaidama97"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kaidama97"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kaidama97"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kaidama97"},"content":"        String[] split \u003d this.input.split(\" \");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kaidama97"},"content":"        if (split.length \u003d\u003d 1) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kaidama97"},"content":"            throw new KaidamaException(\"Please enter a task to unmark\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kaidama97"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kaidama97"},"content":"        int idx \u003d Integer.parseInt(split[1].trim());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kaidama97"},"content":"        assert tasks.getTaskCount() \u003e\u003d 0 : \"TaskList length should be more than or equal to zero\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kaidama97"},"content":"        if (idx \u003e tasks.getTaskCount()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kaidama97"},"content":"            throw new KaidamaException(\"No task found\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kaidama97"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kaidama97"},"content":"        Task task \u003d tasks.getTask(idx);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kaidama97"},"content":"        tasks.setTaskUndone(idx);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kaidama97"},"content":"        storage.updateTaskInFile(tasks.getTaskList());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kaidama97"},"content":"        return Ui.unMarkedMsg(task);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kaidama97"},"content":"     * Indicates whether the command is an exit command.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kaidama97"},"content":"     * @return False, as this command does not exit the application.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kaidama97"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kaidama97"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kaidama97"},"content":"        return false;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Kaidama97"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"Kaidama97":70}},{"path":"src/main/java/exception/KaidamaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kaidama97"},"content":"package exception;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kaidama97"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kaidama97"},"content":" * Exception class to handle Kaidama application errors.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kaidama97"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kaidama97"},"content":"public class KaidamaException extends Exception {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kaidama97"},"content":"    private final String msg \u003d \"OH NO!!!\";","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kaidama97"},"content":"    private String errorMsg;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kaidama97"},"content":"     * Constructs a new KaidamaException with the specified detail message.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kaidama97"},"content":"     * @param errorMsg the detail message","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kaidama97"},"content":"    public KaidamaException(String errorMsg) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kaidama97"},"content":"        super(errorMsg);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kaidama97"},"content":"        this.errorMsg \u003d errorMsg;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kaidama97"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kaidama97"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kaidama97"},"content":"        return msg + \" \" + this.errorMsg;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kaidama97"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"Kaidama97":27}},{"path":"src/main/java/kaidama/Kaidama.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kaidama97"},"content":"package kaidama;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kaidama97"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kaidama97"},"content":"import command.Command;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kaidama97"},"content":"import command.ExitCommand;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kaidama97"},"content":"import exception.KaidamaException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kaidama97"},"content":"import parser.Parser;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kaidama97"},"content":"import storage.Storage;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kaidama97"},"content":"import task.TaskList;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kaidama97"},"content":"import ui.Ui;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kaidama97"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kaidama97"},"content":" * The Kaidama class represents the main application that manages tasks.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kaidama97"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kaidama97"},"content":"public class Kaidama {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kaidama97"},"content":"    private static final String DATA_PATH \u003d \"./data/kaidama.txt\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kaidama97"},"content":"    private static final String EXIT_RESPONSE \u003d \"bye\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kaidama97"},"content":"    private static final String FILE_READ_ERROR \u003d \"Error reading file\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kaidama97"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kaidama97"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kaidama97"},"content":"    private Ui ui;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kaidama97"},"content":"     * Constructs a Kaidama instance that calls a constructor with the data path as an argument.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kaidama97"},"content":"    public Kaidama() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kaidama97"},"content":"        this(DATA_PATH);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kaidama97"},"content":"     * Constructs a Kaidama instance with the specified file path for task storage.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kaidama97"},"content":"     * @param filePath the file path to store and retrieve tasks.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kaidama97"},"content":"     * @throws AssertionError If filePath is null.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kaidama97"},"content":"    private Kaidama(String filePath) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kaidama97"},"content":"        assert filePath !\u003d null : \"filePath cannot be null\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kaidama97"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kaidama97"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kaidama97"},"content":"        try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kaidama97"},"content":"            tasks \u003d new TaskList(storage.readFile());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kaidama97"},"content":"        } catch (KaidamaException | IOException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kaidama97"},"content":"            ui.errorMsg(FILE_READ_ERROR);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kaidama97"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kaidama97"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kaidama97"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kaidama97"},"content":"        Command c;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kaidama97"},"content":"        try {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kaidama97"},"content":"            c \u003d Parser.parseCommand(userInput);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kaidama97"},"content":"            if (c instanceof ExitCommand) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kaidama97"},"content":"                return EXIT_RESPONSE;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kaidama97"},"content":"            }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kaidama97"},"content":"            return c.execute(tasks, ui, storage);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kaidama97"},"content":"        } catch (KaidamaException | IOException e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kaidama97"},"content":"            return ui.errorMsg(e.getMessage());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kaidama97"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kaidama97"},"content":"    public String getInitMessage() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kaidama97"},"content":"        return Ui.initMsg();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kaidama97"},"content":"    private void run() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kaidama97"},"content":"        Ui.initMsg();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kaidama97"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kaidama97"},"content":"        while (!isExit) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kaidama97"},"content":"            try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Kaidama97"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Kaidama97"},"content":"                Command c \u003d Parser.parseCommand(fullCommand);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Kaidama97"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Kaidama97"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Kaidama97"},"content":"            } catch (KaidamaException | IOException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Kaidama97"},"content":"                ui.errorMsg(e.getMessage());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Kaidama97"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Kaidama97"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Kaidama97"},"content":"        ui.exitMsg();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29","isFullCredit":false}],"authorContributionMap":{"Kaidama97":78,"-":1}},{"path":"src/main/java/kaidama/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kaidama97"},"content":"package kaidama;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kaidama97"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kaidama97"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kaidama97"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kaidama97"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kaidama97"},"content":"public class Launcher {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kaidama97"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kaidama97"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kaidama97"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Kaidama97":12}},{"path":"src/main/java/kaidama/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kaidama97"},"content":"package kaidama;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kaidama97"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kaidama97"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kaidama97"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kaidama97"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kaidama97"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kaidama97"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kaidama97"},"content":"import ui.gui.MainWindow;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kaidama97"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kaidama97"},"content":" * A GUI for Kaidama using FXML.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kaidama97"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kaidama97"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kaidama97"},"content":"    private Kaidama kaidama \u003d new Kaidama();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kaidama97"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kaidama97"},"content":"    public void start(Stage stage) throws Exception {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kaidama97"},"content":"        try {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kaidama97"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kaidama97"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kaidama97"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kaidama97"},"content":"            stage.setTitle(\"Kaidama Chatbot\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kaidama97"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kaidama97"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setKaidama(kaidama);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kaidama97"},"content":"            stage.show();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kaidama97"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kaidama97"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kaidama97"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kaidama97"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Kaidama97":34}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kaidama97"},"content":"package parser;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kaidama97"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kaidama97"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kaidama97"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kaidama97"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kaidama97"},"content":"import command.AddCommand;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kaidama97"},"content":"import command.Command;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kaidama97"},"content":"import command.DeleteCommand;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kaidama97"},"content":"import command.ExitCommand;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kaidama97"},"content":"import command.FindCommand;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kaidama97"},"content":"import command.ListCommand;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kaidama97"},"content":"import command.MarkCommand;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kaidama97"},"content":"import command.SetPriorityCommand;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kaidama97"},"content":"import command.UnmarkCommand;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kaidama97"},"content":"import exception.KaidamaException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kaidama97"},"content":"import task.Deadline;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kaidama97"},"content":"import task.Event;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kaidama97"},"content":"import task.Task;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kaidama97"},"content":"import task.ToDo;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kaidama97"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kaidama97"},"content":" * The Parser class is responsible for parsing user input and converting it into","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kaidama97"},"content":" * commands and tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kaidama97"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kaidama97"},"content":"public class Parser {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kaidama97"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kaidama97"},"content":"    private static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kaidama97"},"content":"    private static final String TASK_DONE_FLAG \u003d \"1\"; // Constant for task done status","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kaidama97"},"content":"    private static final String INVALID_INPUT_ERROR \u003d","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kaidama97"},"content":"            \"Please enter a valid input (mark, unmark, todo, deadline or event only)\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kaidama97"},"content":"     * Converts a string representation of a task into a Task object.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kaidama97"},"content":"     * Handle inputs from file","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kaidama97"},"content":"     * @param input The string representation of the task from file.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kaidama97"},"content":"     * @return A Task(Todo, Deadline, Event) object corresponding to the input string.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kaidama97"},"content":"     * @throws AssertionError If input from file does not start with T or D or E.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kaidama97"},"content":"    public static Task inputToTask(String input) throws KaidamaException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kaidama97"},"content":"        assert input.startsWith(\"T\") || input.startsWith(\"D\") || input.startsWith(\"E\")","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kaidama97"},"content":"                : \"Input must start with either \u0027T\u0027 or \u0027D\u0027 or \u0027E\u0027\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kaidama97"},"content":"        String[] tokens \u003d input.split(\"\\\\|\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kaidama97"},"content":"        boolean isDone \u003d tokens[1].trim().equals(TASK_DONE_FLAG);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kaidama97"},"content":"        if (input.startsWith(\"T\")) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kaidama97"},"content":"            return new ToDo(isDone, tokens[2].trim(), tokens[3].trim());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kaidama97"},"content":"        } else if (input.startsWith(\"D\")) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kaidama97"},"content":"            return new Deadline(isDone, tokens[2].trim(), parseDate(tokens[4].trim()), tokens[3].trim());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kaidama97"},"content":"        } else if (input.startsWith(\"E\")) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kaidama97"},"content":"            String[] time \u003d tokens[4].split(\"-\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kaidama97"},"content":"            return new Event(isDone, tokens[2].trim(), Parser.parseDate(time[0].trim()),","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kaidama97"},"content":"                    Parser.parseDate(time[1].trim()), tokens[3].trim());","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kaidama97"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kaidama97"},"content":"        throw new KaidamaException(\"Error reading from file\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kaidama97"},"content":"     * Parses a date string into a LocalDateTime object.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kaidama97"},"content":"     * @param date The date string to parse.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kaidama97"},"content":"     * @return A LocalDateTime object representing the parsed date format (dd/MM/yyyy HHmm).","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kaidama97"},"content":"    public static LocalDateTime parseDate(String date) throws KaidamaException {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kaidama97"},"content":"        try {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kaidama97"},"content":"            return LocalDateTime.parse(date, DATE_TIME_FORMATTER);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Kaidama97"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Kaidama97"},"content":"            throw new KaidamaException(\"Date time format should follow: dd/MM/yyyy HHmm\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Kaidama97"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Kaidama97"},"content":"     * Checks if a string is in the correct date format (dd/MM/yyyy).","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Kaidama97"},"content":"     * @param dateString The string to check.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Kaidama97"},"content":"     * @return True if the string is in the correct date format, false otherwise.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Kaidama97"},"content":"    public static boolean isDateFormat(String dateString) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Kaidama97"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Kaidama97"},"content":"            LocalDate.parse(dateString, DATE_FORMATTER);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Kaidama97"},"content":"            return true;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Kaidama97"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Kaidama97"},"content":"            return false;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Kaidama97"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Kaidama97"},"content":"     * Parses a user input string into a Command object. Either bye, list, mark, set priority,","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Kaidama97"},"content":"     * unmark, delete,deadline, todo or event.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Kaidama97"},"content":"     * @param input The user input string.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Kaidama97"},"content":"     * @return A Command object corresponding to the input.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Kaidama97"},"content":"     * @throws KaidamaException If the input is invalid or unrecognized.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Kaidama97"},"content":"    public static Command parseCommand(String input) throws KaidamaException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Kaidama97"},"content":"        input \u003d input.toLowerCase();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Kaidama97"},"content":"        if (input.contains(\"find\")) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Kaidama97"},"content":"            return new FindCommand(input);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Kaidama97"},"content":"        } else if (input.equals(\"bye\")) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Kaidama97"},"content":"            return new ExitCommand();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Kaidama97"},"content":"        } else if (input.trim().equals(\"list\")) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Kaidama97"},"content":"            return new ListCommand();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Kaidama97"},"content":"        } else if (input.contains(\"unmark\")) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Kaidama97"},"content":"            return new UnmarkCommand(input);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Kaidama97"},"content":"        } else if (input.contains(\"mark\")) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Kaidama97"},"content":"            return new MarkCommand(input);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Kaidama97"},"content":"        } else if (input.contains(\"delete\")) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Kaidama97"},"content":"            return new DeleteCommand(input);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Kaidama97"},"content":"        } else if (input.startsWith(\"deadline\") || input.startsWith(\"todo\") || input.startsWith(\"event\")) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Kaidama97"},"content":"            return new AddCommand(input);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Kaidama97"},"content":"        } else if (input.contains(\"set priority\")) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Kaidama97"},"content":"            return new SetPriorityCommand(input);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Kaidama97"},"content":"        } else {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Kaidama97"},"content":"            throw new KaidamaException(INVALID_INPUT_ERROR);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Kaidama97"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Kaidama97"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"Kaidama97":123}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kaidama97"},"content":"package storage;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kaidama97"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kaidama97"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kaidama97"},"content":"import java.io.File;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kaidama97"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kaidama97"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kaidama97"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kaidama97"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kaidama97"},"content":"import exception.KaidamaException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kaidama97"},"content":"import parser.Parser;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kaidama97"},"content":"import task.Task;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kaidama97"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kaidama97"},"content":" * The Storage class handles reading from and writing to a file located at ./data.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kaidama97"},"content":" * Provides methods to load tasks from a file, save tasks to a file, and update tasks in the file.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kaidama97"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kaidama97"},"content":"public class Storage {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kaidama97"},"content":"    private File file;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kaidama97"},"content":"    private String filePath;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kaidama97"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kaidama97"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kaidama97"},"content":"     * Reads tasks from the file and returns them as a list of Task objects.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kaidama97"},"content":"     * @return A list of Task objects loaded from the file.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kaidama97"},"content":"     * @throws KaidamaException If there is an error reading the file.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kaidama97"},"content":"     * @throws IOException      If an I/O error occurs.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kaidama97"},"content":"    public ArrayList\u003cTask\u003e readFile() throws KaidamaException, IOException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kaidama97"},"content":"        ArrayList\u003cString\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kaidama97"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kaidama97"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kaidama97"},"content":"        BufferedReader br \u003d null;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kaidama97"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kaidama97"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kaidama97"},"content":"            file.createNewFile();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kaidama97"},"content":"            return tasks;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kaidama97"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kaidama97"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kaidama97"},"content":"            String readLine;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kaidama97"},"content":"            br \u003d new BufferedReader(new FileReader(this.filePath));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kaidama97"},"content":"            readLine \u003d br.readLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kaidama97"},"content":"            while (readLine !\u003d null) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kaidama97"},"content":"                list.add(readLine);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kaidama97"},"content":"                readLine \u003d br.readLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kaidama97"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kaidama97"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kaidama97"},"content":"            throw new KaidamaException(\"Error reading file: \" + e.getMessage());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kaidama97"},"content":"        } finally {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kaidama97"},"content":"            if (br !\u003d null) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kaidama97"},"content":"                br.close();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kaidama97"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kaidama97"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kaidama97"},"content":"        for (String line : list) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kaidama97"},"content":"            tasks.add(Parser.inputToTask(line));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kaidama97"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kaidama97"},"content":"        return tasks;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Kaidama97"},"content":"     * Append a single task to the last line of the file in the predefined format.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Kaidama97"},"content":"     * @param line String representation of the task data to append to the file.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Kaidama97"},"content":"     * @throws KaidamaException if there is any error when writing to the file","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Kaidama97"},"content":"     * @throws IOException if there is an I/O error","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Kaidama97"},"content":"    public void writeFile(String line) throws KaidamaException, IOException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Kaidama97"},"content":"        BufferedWriter bw \u003d null;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Kaidama97"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Kaidama97"},"content":"            bw \u003d new BufferedWriter(new FileWriter(filePath, true));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Kaidama97"},"content":"            bw.write(line);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Kaidama97"},"content":"            bw.newLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Kaidama97"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Kaidama97"},"content":"            throw new KaidamaException(\"Error writing to file: \" + e.getMessage());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Kaidama97"},"content":"        } finally {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Kaidama97"},"content":"            if (bw !\u003d null) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Kaidama97"},"content":"                bw.close();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Kaidama97"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Kaidama97"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Kaidama97"},"content":"     * Updates the entire file with the provided new list of tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Kaidama97"},"content":"     * clear file and rewrite the whole file","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Kaidama97"},"content":"     * @param taskList The list of tasks to write to the file.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Kaidama97"},"content":"     * @throws KaidamaException If there is an error writing to the file.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Kaidama97"},"content":"     * @throws IOException      If an I/O error occurs.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Kaidama97"},"content":"    public void updateTaskInFile(ArrayList\u003cTask\u003e taskList) throws KaidamaException, IOException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Kaidama97"},"content":"        assert taskList !\u003d null : \"taskList cannot be null\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Kaidama97"},"content":"        BufferedWriter bw \u003d null;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Kaidama97"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Kaidama97"},"content":"            bw \u003d new BufferedWriter(new FileWriter(filePath));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Kaidama97"},"content":"            bw.write(\"\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Kaidama97"},"content":"            bw.close();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Kaidama97"},"content":"            bw \u003d new BufferedWriter(new FileWriter(filePath, true));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Kaidama97"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Kaidama97"},"content":"                bw.write(task.toStorageString());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Kaidama97"},"content":"                bw.newLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Kaidama97"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Kaidama97"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Kaidama97"},"content":"            throw new KaidamaException(\"Error updating file: \" + e.getMessage());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Kaidama97"},"content":"        } finally {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Kaidama97"},"content":"            if (bw !\u003d null) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Kaidama97"},"content":"                bw.close();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Kaidama97"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Kaidama97"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Kaidama97"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Kaidama97":120}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kaidama97"},"content":"package task;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kaidama97"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kaidama97"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kaidama97"},"content":"import exception.KaidamaException;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kaidama97"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kaidama97"},"content":" * Represents a deadline task","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kaidama97"},"content":" * This class extends the Task class and adds functionality to handle deadlines.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kaidama97"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kaidama97"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kaidama97"},"content":"    private static final DateTimeFormatter STORAGE_DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kaidama97"},"content":"    private static final DateTimeFormatter DISPLAY_DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kaidama97"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kaidama97"},"content":"     * Constructs a Deadlines task with the specified completion status, description, and deadline.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kaidama97"},"content":"     * This constructor is use when perform read from file operation","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kaidama97"},"content":"     * @param isDone      The completion status of the task (true or false).","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kaidama97"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kaidama97"},"content":"     * @param deadline    The deadline of the task. Date format: dd/MM/yyyy HHmm","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kaidama97"},"content":"    public Deadline(boolean isDone, String description, LocalDateTime deadline, String priority) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kaidama97"},"content":"        super(isDone, description, priority);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kaidama97"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kaidama97"},"content":"     * Constructs a Deadlines task with the specified description and deadline.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kaidama97"},"content":"     * This constructor is use when the user type a task in the command line","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kaidama97"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kaidama97"},"content":"     * @param deadline    The deadline of the task. Date format: dd/MM/yyyy HHmm","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kaidama97"},"content":"    public Deadline(String description, LocalDateTime deadline) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kaidama97"},"content":"        super(description);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kaidama97"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kaidama97"},"content":"     * Formats the deadline date into a string suitable for storage.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kaidama97"},"content":"     * @param date The deadline date to format(dd/MM/yyyy HHmm).","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kaidama97"},"content":"     * @return A string representation of the date in the storage format.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kaidama97"},"content":"    private String formatDateForStorage(LocalDateTime date) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kaidama97"},"content":"        return date.format(STORAGE_DATE_FORMATTER);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kaidama97"},"content":"     * Sets the priority of the task.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kaidama97"},"content":"     * The priority can be one of the following values: \"low\", \"medium\", or \"high\".","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kaidama97"},"content":"     * @param priority the priority level to set; must be \"low\", \"medium\", or \"high\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kaidama97"},"content":"     * @throws KaidamaException if the provided priority is not one of the valid values","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kaidama97"},"content":"    @Override","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kaidama97"},"content":"    public void setPriority(String priority) throws KaidamaException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kaidama97"},"content":"        super.setPriority(priority);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kaidama97"},"content":"     * Converts the task into a string format suitable for storage.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Kaidama97"},"content":"     * @return A string representation of the task for storage.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Kaidama97"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Kaidama97"},"content":"    public String toStorageString() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Kaidama97"},"content":"        return \"D \" + super.toStorageString() + \" | \" + formatDateForStorage(this.deadline);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Kaidama97"},"content":"     * Converts the task into a string format suitable for display.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Kaidama97"},"content":"     * @return A string representation of the task for display.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Kaidama97"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Kaidama97"},"content":"    public String toString() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Kaidama97"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.deadline.format(DISPLAY_DATE_FORMATTER) + \")\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Kaidama97"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Kaidama97":85}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kaidama97"},"content":"package task;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kaidama97"},"content":"import exception.KaidamaException;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kaidama97"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kaidama97"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kaidama97"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kaidama97"},"content":" * Represents a task with a specific Events.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kaidama97"},"content":" * This class extends the Task class and adds functionality to handle events.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kaidama97"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kaidama97"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kaidama97"},"content":"    private static final DateTimeFormatter STORAGE_DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kaidama97"},"content":"    private static final DateTimeFormatter DISPLAY_DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kaidama97"},"content":"    private LocalDateTime from;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kaidama97"},"content":"    private LocalDateTime to;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kaidama97"},"content":"     * Constructs an Event task with the specified description, start time and end time.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kaidama97"},"content":"     * This constructor is use when the user type a task in the command line","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kaidama97"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kaidama97"},"content":"     * @param from    The start time of the task. Date format: dd/MM/yyyy HHmm","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kaidama97"},"content":"     * @param to      The end time of the task. Date format: dd/MM/yyyy HHmm","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kaidama97"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kaidama97"},"content":"        super(description);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kaidama97"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kaidama97"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kaidama97"},"content":"     * Constructs an Event task with the specified is the task completed, description, start time and end time","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kaidama97"},"content":"     * This constructor is use when perform read from file operation","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kaidama97"},"content":"     * @param isDone      The completion status of the task (true or false).","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kaidama97"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kaidama97"},"content":"     * @param from    The start time of the task. Date format: dd/MM/yyyy HHmm","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kaidama97"},"content":"     * @param to      The end time of the task. Date format: dd/MM/yyyy HHmm","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kaidama97"},"content":"    public Event(boolean isDone, String description, LocalDateTime from, LocalDateTime to, String priority) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kaidama97"},"content":"        super(isDone, description, priority);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kaidama97"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kaidama97"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kaidama97"},"content":"     * Formats the deadline date into a string suitable for storage.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kaidama97"},"content":"     * @param date The deadline date to format(dd/MM/yyyy HHmm).","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kaidama97"},"content":"     * @return A string representation of the date in the storage format.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kaidama97"},"content":"    private String formatDateForStorage(LocalDateTime date) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kaidama97"},"content":"        return date.format(STORAGE_DATE_FORMATTER);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kaidama97"},"content":"     * Converts the task into a string format suitable for storage.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kaidama97"},"content":"     * @return A string representation of the task for storage.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kaidama97"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kaidama97"},"content":"    public String toStorageString() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kaidama97"},"content":"        return \"E \" + super.toStorageString() + \" | \" + formatDateForStorage(this.from) + \"-\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kaidama97"},"content":"                + formatDateForStorage(this.to);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Kaidama97"},"content":"     * Sets the priority of the task.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Kaidama97"},"content":"     * The priority can be one of the following values: \"low\", \"medium\", or \"high\".","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Kaidama97"},"content":"     * @param priority the priority level to set; must be \"low\", \"medium\", or \"high\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Kaidama97"},"content":"     * @throws KaidamaException if the provided priority is not one of the valid values","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Kaidama97"},"content":"    @Override","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Kaidama97"},"content":"    public void setPriority(String priority) throws KaidamaException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Kaidama97"},"content":"        super.setPriority(priority);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Kaidama97"},"content":"     * Converts the task into a string format suitable for display.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Kaidama97"},"content":"     * @return A string representation of the task for display.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Kaidama97"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Kaidama97"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Kaidama97"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from.format(DISPLAY_DATE_FORMATTER)","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Kaidama97"},"content":"                + \" \" + \"to: \" + this.to.format(DISPLAY_DATE_FORMATTER) + \")\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Kaidama97"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"Kaidama97":91}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kaidama97"},"content":"package task;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kaidama97"},"content":"import exception.KaidamaException;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kaidama97"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kaidama97"},"content":" * Represents a task with a description and completion status.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kaidama97"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kaidama97"},"content":"public class Task {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kaidama97"},"content":"    private static final String DEFAULT_PRIORITY \u003d \"MEDIUM\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kaidama97"},"content":"    protected String description;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kaidama97"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kaidama97"},"content":"    protected String priority;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kaidama97"},"content":"     * Constructs a new Task with the specified description.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kaidama97"},"content":"     * The task is initially not done.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kaidama97"},"content":"     * This constructor is called when the user input an action.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kaidama97"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kaidama97"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kaidama97"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kaidama97"},"content":"        this.priority \u003d DEFAULT_PRIORITY;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kaidama97"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kaidama97"},"content":"     * Constructs a new Task with the specified status and description.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kaidama97"},"content":"     * This constructor executes when reading task from file.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kaidama97"},"content":"     * @param isDone The completion status of the task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kaidama97"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kaidama97"},"content":"    public Task(boolean isDone, String description, String priority) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kaidama97"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kaidama97"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kaidama97"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kaidama97"},"content":"    public void setDone() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kaidama97"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kaidama97"},"content":"    public void setUndone() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kaidama97"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kaidama97"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kaidama97"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kaidama97"},"content":"    public String getDescription() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kaidama97"},"content":"        return this.description;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kaidama97"},"content":"     * Sets the priority of the task.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kaidama97"},"content":"     * The priority must be one of the following values: \"LOW\", \"MEDIUM\", or \"HIGH\".","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kaidama97"},"content":"     * The input is case-insensitive and will be converted to uppercase.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kaidama97"},"content":"     * @param priority the priority level to set; must be \"LOW\", \"MEDIUM\", or \"HIGH\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kaidama97"},"content":"     * @throws KaidamaException if the provided priority is not one of the valid values","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kaidama97"},"content":"    public void setPriority(String priority) throws KaidamaException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kaidama97"},"content":"        priority \u003d priority.toUpperCase();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kaidama97"},"content":"        if (!priority.equals(\"LOW\") \u0026\u0026 !priority.equals(\"MEDIUM\") \u0026\u0026 !priority.equals(\"HIGH\")) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kaidama97"},"content":"            throw new KaidamaException(\"Input a correct priority level. LOW, MEDIUM or HIGH\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kaidama97"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kaidama97"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Kaidama97"},"content":"     * Converts the task into a string format suitable for storage.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Kaidama97"},"content":"     * @return A string representation of the task for storage.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Kaidama97"},"content":"    public String toStorageString() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Kaidama97"},"content":"        StringBuilder out \u003d new StringBuilder();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Kaidama97"},"content":"        out.append(\"| \");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Kaidama97"},"content":"        if (isDone) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Kaidama97"},"content":"            out.append(\"1\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Kaidama97"},"content":"        } else {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Kaidama97"},"content":"            out.append(\"0\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Kaidama97"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Kaidama97"},"content":"        out.append(\" | \");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Kaidama97"},"content":"        out.append(description);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Kaidama97"},"content":"        out.append(\" | \");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Kaidama97"},"content":"        return out.append(priority).toString();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Kaidama97"},"content":"     * Converts the task into a string format suitable for display.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Kaidama97"},"content":"     * @return A string representation of the task for display.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Kaidama97"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Kaidama97"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Kaidama97"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description + \" Priority: \" + this.priority;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Kaidama97"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"Kaidama97":99}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kaidama97"},"content":"package task;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kaidama97"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kaidama97"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kaidama97"},"content":" * Represents a list of tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kaidama97"},"content":" * The class allow user to add, delete, mark/unmark task as completed, get size of list and get task","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kaidama97"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kaidama97"},"content":"public class TaskList {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kaidama97"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kaidama97"},"content":"     * Constructor for empty TaskList.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kaidama97"},"content":"    public TaskList() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kaidama97"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kaidama97"},"content":"     * Constructs a TaskList with the given list of tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kaidama97"},"content":"     * This constructor will be used when read task from file","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kaidama97"},"content":"     * @param taskList The list of tasks to initialize the TaskList.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kaidama97"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kaidama97"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kaidama97"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kaidama97"},"content":"     * @param task The task to add.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kaidama97"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kaidama97"},"content":"        taskList.add(task);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kaidama97"},"content":"     * Marks a task as done.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kaidama97"},"content":"     * @param index The index of the task to mark as done.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kaidama97"},"content":"    public void setTaskDone(int index) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kaidama97"},"content":"        getTask(index).setDone();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kaidama97"},"content":"     * Marks a task as undone.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kaidama97"},"content":"     * @param index The index of the task to mark as undone.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kaidama97"},"content":"    public void setTaskUndone(int index) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kaidama97"},"content":"        getTask(index).setUndone();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kaidama97"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kaidama97"},"content":"     * @param index The index of the task to delete.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kaidama97"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kaidama97"},"content":"        taskList.remove(index - 1);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kaidama97"},"content":"     * Retrieves a task from the task list.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kaidama97"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Kaidama97"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Kaidama97"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Kaidama97"},"content":"        return taskList.get(index - 1);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Kaidama97"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Kaidama97"},"content":"     * @return The number of tasks in the task list.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Kaidama97"},"content":"    public int getTaskCount() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Kaidama97"},"content":"        return taskList.size();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Kaidama97"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Kaidama97"},"content":"     * @return The list of tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Kaidama97"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Kaidama97"},"content":"        return taskList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Kaidama97"},"content":"     * Converts the task into a string format suitable for display.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Kaidama97"},"content":"     * @return A string representation of the task for display.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Kaidama97"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Kaidama97"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Kaidama97"},"content":"        StringBuilder out \u003d new StringBuilder();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Kaidama97"},"content":"        int count;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Kaidama97"},"content":"        String str \u003d \"\";","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Kaidama97"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Kaidama97"},"content":"            count \u003d (i + 1);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Kaidama97"},"content":"            out.append(\"    \").append(count).append(\".\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Kaidama97"},"content":"            out.append(taskList.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Kaidama97"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Kaidama97"},"content":"        return out.toString();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Kaidama97"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"Kaidama97":111}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kaidama97"},"content":"package task;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kaidama97"},"content":"import exception.KaidamaException;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kaidama97"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kaidama97"},"content":" * Represents a Todo task","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kaidama97"},"content":" * This class extends the Task class and adds functionality to handle Todo functions.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kaidama97"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kaidama97"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kaidama97"},"content":"     * Constructs a Todo task with the specified description.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kaidama97"},"content":"     * This constructor is use when the user type a task in the command line","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kaidama97"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kaidama97"},"content":"    public ToDo(String description) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kaidama97"},"content":"        super(description);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kaidama97"},"content":"     * Constructs a Todo task with the specified completion status and description.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kaidama97"},"content":"     * This constructor is use when perform read from file operation","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kaidama97"},"content":"     * @param isDone      The completion status of the task (true or false).","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kaidama97"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kaidama97"},"content":"    public ToDo(boolean isDone, String description, String priority) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kaidama97"},"content":"        super(isDone, description, priority);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kaidama97"},"content":"     * Converts the task into a string format suitable for storage.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kaidama97"},"content":"     * @return A string representation of the task for storage.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kaidama97"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kaidama97"},"content":"    public String toStorageString() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kaidama97"},"content":"        return \"T \" + super.toStorageString();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kaidama97"},"content":"     * Sets the priority of the task.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kaidama97"},"content":"     * The priority can be one of the following values: \"low\", \"medium\", or \"high\".","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kaidama97"},"content":"     * @param priority the priority level to set; must be \"low\", \"medium\", or \"high\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kaidama97"},"content":"     * @throws KaidamaException if the provided priority is not one of the valid values","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kaidama97"},"content":"    @Override","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kaidama97"},"content":"    public void setPriority(String priority) throws KaidamaException {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kaidama97"},"content":"        super.setPriority(priority);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kaidama97"},"content":"     * Converts the task into a string format suitable for display.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kaidama97"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kaidama97"},"content":"     * @return A string representation of the task for display.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kaidama97"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kaidama97"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kaidama97"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kaidama97"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"Kaidama97":63}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kaidama97"},"content":"package ui;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kaidama97"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kaidama97"},"content":"import task.Task;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kaidama97"},"content":"import task.TaskList;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kaidama97"},"content":"public class Ui {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kaidama97"},"content":"    private static final String TAB_SEPARATOR \u003d \"    \";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kaidama97"},"content":"    private static final String DIVIDER_LINE \u003d (TAB_SEPARATOR + \"_\".repeat(60));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kaidama97"},"content":"    private Scanner sc;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kaidama97"},"content":"    public Ui() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kaidama97"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kaidama97"},"content":"    public String readCommand() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kaidama97"},"content":"        return sc.nextLine();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kaidama97"},"content":"    public static String initMsg() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kaidama97"},"content":"        return TAB_SEPARATOR + \"Hello! I\u0027m Kaidama.\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kaidama97"},"content":"                + TAB_SEPARATOR + \"What can I do for you?\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kaidama97"},"content":"    public String exitMsg() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kaidama97"},"content":"        return DIVIDER_LINE + \"\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kaidama97"},"content":"                + TAB_SEPARATOR + \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kaidama97"},"content":"    public String getList(TaskList list) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kaidama97"},"content":"        return TAB_SEPARATOR + \"Here are the tasks in your list:\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kaidama97"},"content":"                + list.toString();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kaidama97"},"content":"    public static String unMarkedMsg(Task task) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kaidama97"},"content":"        return TAB_SEPARATOR + \"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kaidama97"},"content":"                + TAB_SEPARATOR + TAB_SEPARATOR + task.toString();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kaidama97"},"content":"    public static String markedMsg(Task task) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kaidama97"},"content":"        return TAB_SEPARATOR + \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kaidama97"},"content":"                + TAB_SEPARATOR + TAB_SEPARATOR + task.toString();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kaidama97"},"content":"    public static String setPriorityMsg(Task task) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kaidama97"},"content":"        return TAB_SEPARATOR + \"I\u0027ve set this task\u0027s priority level to:\\n\"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kaidama97"},"content":"                + TAB_SEPARATOR + TAB_SEPARATOR + task.toString();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kaidama97"},"content":"    public static String addNewTask(Task task, int taskCount) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kaidama97"},"content":"        return TAB_SEPARATOR + \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kaidama97"},"content":"                + TAB_SEPARATOR + TAB_SEPARATOR + task.toString() + \"\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kaidama97"},"content":"                + TAB_SEPARATOR + \"Now you have \" + taskCount + \" task(s) in the list\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kaidama97"},"content":"    public String errorMsg(String msg) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kaidama97"},"content":"        return TAB_SEPARATOR + \"OH NO!!! \" + msg;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kaidama97"},"content":"    public static String deleteTaskMsg(Task task, int taskCount) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kaidama97"},"content":"        return TAB_SEPARATOR + \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kaidama97"},"content":"                + TAB_SEPARATOR + TAB_SEPARATOR + task.toString() + \"\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kaidama97"},"content":"                + TAB_SEPARATOR + \"Now you have \" + taskCount + \" task(s) in the list\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Kaidama97"},"content":"    public static String printDivider() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Kaidama97"},"content":"        return DIVIDER_LINE;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Kaidama97"},"content":"    public static String printOutputString(String output) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Kaidama97"},"content":"        return TAB_SEPARATOR + output;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Kaidama97"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"Kaidama97":80}},{"path":"src/main/java/ui/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kaidama97"},"content":"package ui.gui;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kaidama97"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kaidama97"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kaidama97"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kaidama97"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kaidama97"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kaidama97"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kaidama97"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kaidama97"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kaidama97"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kaidama97"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kaidama97"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kaidama97"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kaidama97"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kaidama97"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kaidama97"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kaidama97"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kaidama97"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kaidama97"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kaidama97"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kaidama97"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kaidama97"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kaidama97"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kaidama97"},"content":"        try {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kaidama97"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kaidama97"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kaidama97"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kaidama97"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kaidama97"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kaidama97"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kaidama97"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kaidama97"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kaidama97"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kaidama97"},"content":"        applyRoundedEdge();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kaidama97"},"content":"    private void applyRoundedEdge() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kaidama97"},"content":"        double radius \u003d Math.min(displayPicture.getFitWidth(), displayPicture.getFitHeight()) / 2; // Ensures a perfect circle","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kaidama97"},"content":"        javafx.scene.shape.Circle clip \u003d new javafx.scene.shape.Circle(radius);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kaidama97"},"content":"        clip.setCenterX(displayPicture.getFitWidth() / 2);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kaidama97"},"content":"        clip.setCenterY(displayPicture.getFitHeight() / 2);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kaidama97"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kaidama97"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kaidama97"},"content":"    private void flip() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kaidama97"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kaidama97"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kaidama97"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kaidama97"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kaidama97"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kaidama97"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kaidama97"},"content":"    public static DialogBox getKaidamaDialog(String text, Image img) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kaidama97"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kaidama97"},"content":"        db.flip();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Kaidama97"},"content":"        return db;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Kaidama97"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Kaidama97":69}},{"path":"src/main/java/ui/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kaidama97"},"content":"package ui.gui;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kaidama97"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kaidama97"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kaidama97"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kaidama97"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kaidama97"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kaidama97"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kaidama97"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kaidama97"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kaidama97"},"content":"import kaidama.Kaidama;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kaidama97"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kaidama97"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kaidama97"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kaidama97"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kaidama97"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kaidama97"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kaidama97"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kaidama97"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kaidama97"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kaidama97"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kaidama97"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kaidama97"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kaidama97"},"content":"    private Kaidama kaidama;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kaidama97"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kaidama97"},"content":"    private Image kaidamaImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Rick.png\"));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kaidama97"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kaidama97"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kaidama97"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kaidama97"},"content":"     * Create a Kaidama instance","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kaidama97"},"content":"     * */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kaidama97"},"content":"    public void setKaidama(Kaidama k) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kaidama97"},"content":"        this.kaidama \u003d k;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kaidama97"},"content":"        String response \u003d kaidama.getInitMessage();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kaidama97"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kaidama97"},"content":"                DialogBox.getKaidamaDialog(response, kaidamaImage)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kaidama97"},"content":"        );","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kaidama97"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kaidama97"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kaidama97"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kaidama97"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kaidama97"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kaidama97"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kaidama97"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kaidama97"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kaidama97"},"content":"        String response \u003d kaidama.getResponse(input);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kaidama97"},"content":"        if (input.trim().equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kaidama97"},"content":"            Platform.exit();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kaidama97"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kaidama97"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kaidama97"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kaidama97"},"content":"                DialogBox.getKaidamaDialog(response, kaidamaImage)","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kaidama97"},"content":"        );","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Kaidama97"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Kaidama97"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Kaidama97":65}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Kaidama97"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kaidama97"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kaidama97"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kaidama97"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kaidama97"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kaidama97"},"content":"\u003cfx:root alignment\u003d\"CENTER_RIGHT\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kaidama97"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kaidama97"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kaidama97"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kaidama97"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kaidama97"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kaidama97"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kaidama97"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kaidama97"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kaidama97"},"content":"               alignment\u003d\"CENTER\" textAlignment\u003d\"LEFT\" /\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kaidama97"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kaidama97"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kaidama97"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kaidama97"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kaidama97"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kaidama97"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Kaidama97":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Kaidama97"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kaidama97"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kaidama97"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kaidama97"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kaidama97"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kaidama97"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kaidama97"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kaidama97"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kaidama97"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kaidama97"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kaidama97"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kaidama97"},"content":"            fx:controller\u003d\"ui.gui.MainWindow\"\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kaidama97"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kaidama97"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kaidama97"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kaidama97"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kaidama97"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kaidama97"},"content":"                   prefWidth\u003d\"324.0\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kaidama97"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kaidama97"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kaidama97"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kaidama97"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kaidama97"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kaidama97"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kaidama97"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kaidama97"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kaidama97"},"content":"                text\u003d\"Send\" /\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kaidama97"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kaidama97"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kaidama97"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kaidama97"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kaidama97"},"content":"                    prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kaidama97"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kaidama97"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kaidama97"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kaidama97"},"content":"                      prefHeight\u003d\"552.0\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kaidama97"},"content":"                      prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kaidama97"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kaidama97"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kaidama97"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kaidama97"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"Kaidama97":44}},{"path":"src/test/java/command/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kaidama97"},"content":"package command;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kaidama97"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kaidama97"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kaidama97"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kaidama97"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kaidama97"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kaidama97"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kaidama97"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kaidama97"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kaidama97"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kaidama97"},"content":"import exception.KaidamaException;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kaidama97"},"content":"import storage.Storage;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kaidama97"},"content":"import task.TaskList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kaidama97"},"content":"import ui.Ui;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kaidama97"},"content":"public class AddCommandTest {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kaidama97"},"content":"    private static final Path FILE_PATH \u003d Paths.get(\"./data/kaidama.txt\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kaidama97"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kaidama97"},"content":"    private Ui ui;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kaidama97"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kaidama97"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kaidama97"},"content":"    public void setUp() throws IOException {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kaidama97"},"content":"        Files.deleteIfExists(FILE_PATH); // Clean up before each test","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kaidama97"},"content":"        if (!Files.exists(FILE_PATH.getParent())) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kaidama97"},"content":"            Files.createDirectory(FILE_PATH.getParent());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kaidama97"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kaidama97"},"content":"    @AfterEach","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kaidama97"},"content":"    public void clearAll() throws IOException {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kaidama97"},"content":"        Files.deleteIfExists(FILE_PATH); // Clean up after each test","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kaidama97"},"content":"    @Test","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kaidama97"},"content":"    public void addEventToTaskList_invalidEndDate_throwsException() throws KaidamaException {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kaidama97"},"content":"        storage \u003d new Storage(\"./data/kaidama.txt\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kaidama97"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kaidama97"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kaidama97"},"content":"        String inputString \u003d \"event CS2103 Midterms /from 20/02/2025 1800 /to 20/02/2025 1700\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kaidama97"},"content":"        assertThrows(KaidamaException.class, () -\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kaidama97"},"content":"                new AddCommand(inputString).execute(taskList, ui, storage));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Kaidama97"},"content":"    @Test","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Kaidama97"},"content":"    public void addEventToTaskList_validEventEntry_addTask() throws KaidamaException, IOException {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Kaidama97"},"content":"        storage \u003d new Storage(\"./data/kaidama.txt\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Kaidama97"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Kaidama97"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Kaidama97"},"content":"        String expectedOutput \u003d","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Kaidama97"},"content":"                \"    Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Kaidama97"},"content":"                        + \"        [E][ ] CS2103 Midterms Priority: \"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Kaidama97"},"content":"                        + \"MEDIUM (from: Feb 20 2025 1800 to: Feb 20 2025 1900)\\n\"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Kaidama97"},"content":"                        + \"    Now you have 1 task(s) in the list\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Kaidama97"},"content":"        String inputString \u003d \"event CS2103 Midterms /from 20/02/2025 1800 /to 20/02/2025 1900\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Kaidama97"},"content":"        String output \u003d new AddCommand(inputString).execute(taskList, ui, storage);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Kaidama97"},"content":"        assertEquals(expectedOutput, output);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Kaidama97"},"content":"}","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"Kaidama97":62}},{"path":"src/test/java/command/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kaidama97"},"content":"package command;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kaidama97"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kaidama97"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kaidama97"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kaidama97"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kaidama97"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kaidama97"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kaidama97"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kaidama97"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kaidama97"},"content":"import exception.KaidamaException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kaidama97"},"content":"import storage.Storage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kaidama97"},"content":"import task.TaskList;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kaidama97"},"content":"import ui.Ui;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kaidama97"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kaidama97"},"content":"    private static final Path FILE_PATH \u003d Paths.get(\"./data/kaidama.txt\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kaidama97"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kaidama97"},"content":"    private Ui ui;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kaidama97"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kaidama97"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kaidama97"},"content":"    public void setUp() throws IOException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Kaidama97"},"content":"        Files.deleteIfExists(FILE_PATH); // Clean up before each test","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Kaidama97"},"content":"        if (!Files.exists(FILE_PATH.getParent())) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Kaidama97"},"content":"            Files.createDirectory(FILE_PATH.getParent());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Kaidama97"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Kaidama97"},"content":"    @AfterEach","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Kaidama97"},"content":"    public void clearAll() throws IOException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Kaidama97"},"content":"        Files.deleteIfExists(FILE_PATH); // Clean up after each test","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Kaidama97"},"content":"    @Test","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Kaidama97"},"content":"    public void deleteTaskFromTaskList_invalidData_throwsException() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Kaidama97"},"content":"        storage \u003d new Storage(\"./data/kaidama.txt\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Kaidama97"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Kaidama97"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Kaidama97"},"content":"        assertThrows(KaidamaException.class, ()","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Kaidama97"},"content":"                -\u003e new DeleteCommand(\"delete 123\").execute(taskList, ui, storage));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Kaidama97"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"Kaidama97":46}},{"path":"src/test/java/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kaidama97"},"content":"package parser;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kaidama97"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kaidama97"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kaidama97"},"content":"import exception.KaidamaException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kaidama97"},"content":"public class ParserTest {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kaidama97"},"content":"    @Test","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kaidama97"},"content":"    public void isDateFormatTest() throws KaidamaException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kaidama97"},"content":"        String dateFail \u003d \"2020/12/02\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kaidama97"},"content":"        String dateSuccess \u003d \"02/02/2024\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kaidama97"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kaidama97"},"content":"        assertEquals(false, parser.isDateFormat(dateFail));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kaidama97"},"content":"        assertEquals(true, parser.isDateFormat(dateSuccess));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kaidama97"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"Kaidama97":20}},{"path":"src/test/java/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kaidama97"},"content":"package storage;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kaidama97"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kaidama97"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kaidama97"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kaidama97"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kaidama97"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kaidama97"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kaidama97"},"content":"import java.util.List;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kaidama97"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kaidama97"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kaidama97"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kaidama97"},"content":"import exception.KaidamaException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kaidama97"},"content":"import parser.Parser;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kaidama97"},"content":"import task.Deadline;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kaidama97"},"content":"import task.Task;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kaidama97"},"content":"public class StorageTest {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kaidama97"},"content":"    private static final Path FILE_PATH \u003d Paths.get(\"./data/kaidama.txt\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    //@@author lesterlimjj-reused","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    //solution reused from lesterlimjj ip storageTest.java","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    //implement minor modifications to fit my requirment","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void setUp() throws IOException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        Files.deleteIfExists(FILE_PATH); // Clean up before each test","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!Files.exists(FILE_PATH.getParent())) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Files.createDirectory(FILE_PATH.getParent());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    //@author","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @AfterEach","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void clearAll() throws IOException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Files.deleteIfExists(FILE_PATH); // Clean up after each test","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void appendNewTasktoFile_validTask_taskAppended() throws IOException, KaidamaException {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Storage storage \u003d new Storage(\"./data/kaidama.txt\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String initialData \u003d \"T | 1 | MEDIUM | Sample Todo\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        storage.writeFile(initialData);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        LocalDateTime dateTime \u003d Parser.parseDate(\"03/02/2019 1800\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String priority \u003d \"HIGH\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Task deadline \u003d new Deadline(false, \"test deadline\", dateTime, priority);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        storage.writeFile(deadline.toStorageString());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(FILE_PATH);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(2, lines.size());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(\"T | 1 | MEDIUM | Sample Todo\", lines.get(0));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(\"D | 0 | test deadline | HIGH | 03/02/2019 1800\", lines.get(1));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"Kaidama97":22,"-":33}},{"path":"src/test/java/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kaidama97"},"content":"package task;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kaidama97"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kaidama97"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kaidama97"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kaidama97"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kaidama97"},"content":"public class DeadlineTest {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kaidama97"},"content":"    @Test","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kaidama97"},"content":"    public void creatDeadline_vailddata_created() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kaidama97"},"content":"        String expectedOutput \u003d \"[D][X] Test Deadline Priority: HIGH (by: Feb 02 2023 1030)\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kaidama97"},"content":"        String dateTimeStr \u003d \"02/02/2023 1030\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kaidama97"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kaidama97"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(dateTimeStr, formatter);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kaidama97"},"content":"        String priority \u003d \"HIGH\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kaidama97"},"content":"        Deadline task \u003d new Deadline(true, \"Test Deadline\", dateTime, priority);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kaidama97"},"content":"        assertEquals(expectedOutput, task.toString());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kaidama97"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"Kaidama97":22}},{"path":"src/test/java/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kaidama97"},"content":"package task;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kaidama97"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kaidama97"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kaidama97"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kaidama97"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kaidama97"},"content":"public class TaskListTest {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kaidama97"},"content":"    @Test","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kaidama97"},"content":"    public void addTaskToTaskList_vaildTask_taskAdded() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kaidama97"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kaidama97"},"content":"        String fromDateTimeStr \u003d \"02/02/2023 1030\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kaidama97"},"content":"        String toDateTimeStr \u003d \"02/02/2023 1030\";","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kaidama97"},"content":"        LocalDateTime fromDateTime \u003d LocalDateTime.parse(fromDateTimeStr, formatter);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kaidama97"},"content":"        LocalDateTime toDateTime \u003d LocalDateTime.parse(toDateTimeStr, formatter);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kaidama97"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kaidama97"},"content":"        String priority \u003d \"MEDIUM\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kaidama97"},"content":"        Task task \u003d new Event(false, \"Test Event\", fromDateTime, toDateTime, priority);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kaidama97"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kaidama97"},"content":"        assertEquals(1, taskList.getTaskCount());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kaidama97"},"content":"        assertEquals(task, taskList.getTask(1));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kaidama97"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Kaidama97"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"Kaidama97":26}},{"path":"text-ui-test/data/Kaidama.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Kaidama97"},"content":"T | 1 | borrow books | MEDIUM","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kaidama97"},"content":"D | 1 | return books | HIGH | 02/02/2023 0800","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kaidama97"},"content":"D | 0 | buy books | HIGH | 03/02/2023 0800","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"Kaidama97":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Kaidama97"},"content":"mark 1","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Kaidama97"},"content":"todo","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Kaidama97"},"content":"todo borrow books","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Kaidama97"},"content":"unmark 1","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Kaidama97"},"content":"mark 2","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Kaidama97"},"content":"mark 1","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Kaidama97"},"content":"mark","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Kaidama97"},"content":"unmark","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kaidama97"},"content":"list","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kaidama97"},"content":"add new task","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kaidama97"},"content":"deadline /by 01/02/2023 0800","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Kaidama97"},"content":"deadline do CS2103 ip /by","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kaidama97"},"content":"deadline return books /by 02/02/2023 0800","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Kaidama97"},"content":"deadline buy books /by 03/02/2023 0800","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Kaidama97"},"content":"mark 2","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Kaidama97"},"content":"mark 3","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Kaidama97"},"content":"unmark 3","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Kaidama97"},"content":"list","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Kaidama97"},"content":"event /from 01/02/2023 0800 /to 01/02/2023 0800","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Kaidama97"},"content":"event party /from  /to 01/02/2023 1400","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kaidama97"},"content":"event party /from 01/02/2023 0100 /to","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Kaidama97"},"content":"event project meeting /from 01/02/2023 0200 /to 01/02/2023 1000","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Kaidama97"},"content":"list","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Kaidama97"},"content":"delete 4","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Kaidama97"},"content":"bye","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"Kaidama97":25}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Kaidama97"},"content":"REM delete saved data from previous run","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Kaidama97"},"content":"if exist .\\data\\Kaidama.txt del .\\data\\Kaidama.txt","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Kaidama97"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Kaidama97"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\kaidama\\*.java","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Kaidama97"},"content":"java -classpath ..\\bin ui.Kaidama \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"Kaidama97":5,"-":19}}]
