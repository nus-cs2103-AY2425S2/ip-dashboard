[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jiancheng37"},"content":"    mainClass.set(\"jimmy.Jimmy\")","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jiancheng37"},"content":"    archiveFileName \u003d \u0027jimmy.jar\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"jiancheng37":2,"-":38}},{"path":"data/jimmy.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jiancheng37"},"content":"T | 0 | Read book","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jiancheng37"},"content":"T | 0 | Read magazine","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jiancheng37"},"content":"D | 1 | Do homework | 2002-10-10 0000","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"jiancheng37":3}},{"path":"src/main/java/jimmy/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiancheng37"},"content":"package jimmy;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jiancheng37"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jiancheng37"},"content":" * The {@code AddDeadlineCommand} class represents a command to add a new deadline task","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jiancheng37"},"content":" * to the task list. It parses the user\u0027s input to extract the task description and the due date,","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jiancheng37"},"content":" * validates the input format, and handles task creation and storage.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jiancheng37"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jiancheng37"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jiancheng37"},"content":"    private final String description;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jiancheng37"},"content":"    private final String dueDate;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jiancheng37"},"content":"     * Constructs an {@code AddDeadlineCommand} by parsing the user\u0027s input.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jiancheng37"},"content":"     * @param input the input string containing the task description and due date.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jiancheng37"},"content":"     *              The input format should be: {@code description /by [due date]}.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jiancheng37"},"content":"     * @throws JimmyException if the input format is invalid or missing the required \u0027/by\u0027 separator.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jiancheng37"},"content":"    public AddDeadlineCommand(String input) throws JimmyException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jiancheng37"},"content":"        super();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jiancheng37"},"content":"        String[] parts \u003d input.split(\" /by \");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jiancheng37"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jiancheng37"},"content":"            throw new JimmyException(\"The deadline command must include \u0027/by\u0027.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jiancheng37"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jiancheng37"},"content":"        this.description \u003d parts[0].trim();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jiancheng37"},"content":"        this.dueDate \u003d parts[1].trim();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jiancheng37"},"content":"     * Executes the add-deadline command by creating a new deadline task, adding it to the task list,","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jiancheng37"},"content":"     * saving the updated task list to storage, and notifying the user.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jiancheng37"},"content":"     * @param tasks   the {@code TaskList} containing all current tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jiancheng37"},"content":"     * @param ui      the {@code Ui} instance for displaying messages to the user.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jiancheng37"},"content":"     * @param storage the {@code Storage} instance responsible for saving tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jiancheng37"},"content":"     * @throws JimmyException if an error occurs while creating or saving the deadline task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jiancheng37"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jiancheng37"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws JimmyException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jiancheng37"},"content":"        Task deadlineTask \u003d new Deadline(description, dueDate);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jiancheng37"},"content":"        tasks.addTask(deadlineTask);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jiancheng37"},"content":"        storage.save(tasks.getAllTasks());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jiancheng37"},"content":"        ui.showMessage(\"Got it. I\u0027ve added this task:\\n  \" + deadlineTask","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jiancheng37"},"content":"                + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jiancheng37"},"content":"     * Indicates whether this command should terminate the program.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jiancheng37"},"content":"     * @return {@code false} as the add-deadline command does not exit the application.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jiancheng37"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jiancheng37"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jiancheng37"},"content":"        return false;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jiancheng37"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"jiancheng37":56}},{"path":"src/main/java/jimmy/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiancheng37"},"content":"package jimmy;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jiancheng37"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jiancheng37"},"content":" * The {@code AddEventCommand} class represents a command to add a new event task","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jiancheng37"},"content":" * to the task list. It parses the input to extract the event description, start time,","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jiancheng37"},"content":" * and end time, and handles validation to ensure proper formatting.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jiancheng37"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jiancheng37"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jiancheng37"},"content":"    private final String description;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jiancheng37"},"content":"    private final String from;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jiancheng37"},"content":"    private final String to;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jiancheng37"},"content":"     * Constructs an {@code AddEventCommand} by parsing the user\u0027s input.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jiancheng37"},"content":"     * @param input the input string containing the event description, start time, and end time.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jiancheng37"},"content":"     *              The input format should be: {@code description /from [start time] /to [end time]}.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jiancheng37"},"content":"     * @throws JimmyException if the input format is invalid or missing required parts.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jiancheng37"},"content":"    public AddEventCommand(String input) throws JimmyException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jiancheng37"},"content":"        super();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jiancheng37"},"content":"        String[] parts \u003d input.split(\" /from | /to \");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jiancheng37"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jiancheng37"},"content":"            throw new JimmyException(\"The event command must include \u0027/from\u0027 and \u0027/to\u0027.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jiancheng37"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jiancheng37"},"content":"        this.description \u003d parts[0].trim();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jiancheng37"},"content":"        this.from \u003d parts[1].trim();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jiancheng37"},"content":"        this.to \u003d parts[2].trim();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jiancheng37"},"content":"     * Executes the add-event command by creating a new event task, adding it to the task list,","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jiancheng37"},"content":"     * saving the updated task list to storage, and notifying the user.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jiancheng37"},"content":"     * @param tasks   the {@code TaskList} containing all current tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jiancheng37"},"content":"     * @param ui      the {@code Ui} instance for displaying messages to the user.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jiancheng37"},"content":"     * @param storage the {@code Storage} instance responsible for saving tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jiancheng37"},"content":"     * @throws JimmyException if an error occurs while creating or saving the event task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jiancheng37"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jiancheng37"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws JimmyException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jiancheng37"},"content":"        Task event \u003d new Event(description, from, to);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jiancheng37"},"content":"        tasks.addTask(event);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jiancheng37"},"content":"        storage.save(tasks.getAllTasks());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jiancheng37"},"content":"        ui.showMessage(\"Got it. I\u0027ve added this task:\\n  \" + event + ","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jiancheng37"},"content":"                       \"\\nNow you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jiancheng37"},"content":"     * Indicates whether this command should terminate the program.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jiancheng37"},"content":"     * @return {@code false} as the add-event command does not exit the application.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jiancheng37"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jiancheng37"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jiancheng37"},"content":"        return false;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jiancheng37"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"jiancheng37":58}},{"path":"src/main/java/jimmy/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiancheng37"},"content":"package jimmy;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jiancheng37"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jiancheng37"},"content":" * The {@code AddTodoCommand} class represents a command to add a new to-do task","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jiancheng37"},"content":" * to the task list. It validates the task description, adds the task, updates storage,","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jiancheng37"},"content":" * and provides feedback to the user.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jiancheng37"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jiancheng37"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jiancheng37"},"content":"    private final String description;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jiancheng37"},"content":"     * Constructs an {@code AddTodoCommand} with the specified task description.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jiancheng37"},"content":"     * @param description the description of the to-do task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jiancheng37"},"content":"     * @throws JimmyException if the description is null or blank.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jiancheng37"},"content":"    public AddTodoCommand(String description) throws JimmyException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jiancheng37"},"content":"        super();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jiancheng37"},"content":"        if (description \u003d\u003d null || description.isBlank()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jiancheng37"},"content":"            throw new JimmyException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jiancheng37"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jiancheng37"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jiancheng37"},"content":"     * Executes the add-to-do command by creating a new to-do task, adding it to the task list,","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jiancheng37"},"content":"     * saving the updated task list to storage, and notifying the user.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jiancheng37"},"content":"     * @param tasks   the {@code TaskList} containing all current tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jiancheng37"},"content":"     * @param ui      the {@code Ui} instance for displaying messages to the user.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jiancheng37"},"content":"     * @param storage the {@code Storage} instance responsible for saving tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jiancheng37"},"content":"     * @throws JimmyException if an error occurs while saving the task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jiancheng37"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jiancheng37"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws JimmyException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jiancheng37"},"content":"        Task todo \u003d new Todo(description);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jiancheng37"},"content":"        tasks.addTask(todo);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jiancheng37"},"content":"        storage.save(tasks.getAllTasks());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jiancheng37"},"content":"        ui.showMessage(\"Got it. I\u0027ve added this task:\\n  \" + todo + ","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jiancheng37"},"content":"                       \"\\nNow you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jiancheng37"},"content":"     * Indicates whether this command should terminate the program.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jiancheng37"},"content":"     * @return {@code false} as the add-to-do command does not exit the application.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jiancheng37"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jiancheng37"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jiancheng37"},"content":"        return false;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jiancheng37"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"jiancheng37":52}},{"path":"src/main/java/jimmy/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiancheng37"},"content":"package jimmy;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jiancheng37"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jiancheng37"},"content":" * The {@code Command} class represents an abstract command that can be executed","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jiancheng37"},"content":" * in the Jimmy application. Subclasses should implement specific command behaviors","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jiancheng37"},"content":" * such as adding tasks, deleting tasks, marking tasks, etc.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jiancheng37"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jiancheng37"},"content":"public abstract class Command {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jiancheng37"},"content":"     * Constructs a {@code Command}.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jiancheng37"},"content":"    public Command() {}","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jiancheng37"},"content":"     * Executes the command with the given task list, user interface, and storage.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jiancheng37"},"content":"     * This method must be implemented by all subclasses to define specific command behavior.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jiancheng37"},"content":"     * @param tasks   the {@code TaskList} containing all current tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jiancheng37"},"content":"     * @param ui      the {@code Ui} instance for interacting with the user.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jiancheng37"},"content":"     * @param storage the {@code Storage} instance for saving or loading data.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jiancheng37"},"content":"     * @throws JimmyException if an error occurs during command execution.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jiancheng37"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws JimmyException;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jiancheng37"},"content":"     * Indicates whether this command should terminate the program.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jiancheng37"},"content":"     * @return {@code true} if the command should exit the application, otherwise {@code false}.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jiancheng37"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jiancheng37"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"jiancheng37":32}},{"path":"src/main/java/jimmy/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiancheng37"},"content":"package jimmy;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jiancheng37"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jiancheng37"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jiancheng37"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jiancheng37"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jiancheng37"},"content":" * The {@code Deadline} class represents a task with a specific deadline.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jiancheng37"},"content":" * It includes a due date ({@code by}) and provides methods for formatting","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jiancheng37"},"content":" * the task for both display and file storage.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jiancheng37"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jiancheng37"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jiancheng37"},"content":"    private LocalDateTime by;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jiancheng37"},"content":"    /** Formatter for parsing input date-time strings (e.g., \"yyyy-MM-dd HHmm\"). */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jiancheng37"},"content":"    protected static final DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jiancheng37"},"content":"    /** Formatter for displaying date-time in a user-friendly format (e.g., \"MMM dd yyyy, h:mm a\"). */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jiancheng37"},"content":"    protected static final DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jiancheng37"},"content":"     * Constructs a {@code Deadline} task with the specified name and due date.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jiancheng37"},"content":"     * @param name the name or description of the task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jiancheng37"},"content":"     * @param by   the due date of the task in the format \"yyyy-MM-dd HHmm\".","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jiancheng37"},"content":"     * @throws JimmyException if the date format is invalid.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jiancheng37"},"content":"    public Deadline(String name, String by) throws JimmyException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jiancheng37"},"content":"        super(name);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jiancheng37"},"content":"        try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jiancheng37"},"content":"            this.by \u003d LocalDateTime.parse(by, inputFormatter);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jiancheng37"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jiancheng37"},"content":"            this.by \u003d null;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jiancheng37"},"content":"            throw new JimmyException(\"Invalid date format. Please use yyyy-MM-dd HHmm (e.g., 2019-12-02 1800).\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jiancheng37"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jiancheng37"},"content":"     * Retrieves the due date of the deadline task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jiancheng37"},"content":"     * @return the {@code LocalDateTime} representing the task\u0027s due date.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jiancheng37"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jiancheng37"},"content":"        return this.by;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jiancheng37"},"content":"     * Converts the deadline task to a file-friendly format for saving.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jiancheng37"},"content":"     * The format is:","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jiancheng37"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jiancheng37"},"content":"     * D | [1 or 0] | [task name] | [due date]","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jiancheng37"},"content":"     * \u003c/pre\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jiancheng37"},"content":"     * @return the string representation of the task for file storage.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jiancheng37"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jiancheng37"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jiancheng37"},"content":"        return \"D | \" + (isCompleted ? \"1\" : \"0\") + \" | \" + name + \" | \" + by.format(inputFormatter);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jiancheng37"},"content":"     * Returns the string representation of the deadline task for display in the UI.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jiancheng37"},"content":"     * The format is:","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jiancheng37"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jiancheng37"},"content":"     * [D][✓] Task Name (by: Dec 02 2019, 6:00 PM)","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jiancheng37"},"content":"     * \u003c/pre\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jiancheng37"},"content":"     * @return the formatted string representation of the deadline task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jiancheng37"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jiancheng37"},"content":"    public String toString() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jiancheng37"},"content":"        return \"[D][\" + getStatus() + \"] \" + name + \" (by: \" + by.format(outputFormatter) + \")\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jiancheng37"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"jiancheng37":74}},{"path":"src/main/java/jimmy/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiancheng37"},"content":"package jimmy;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jiancheng37"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jiancheng37"},"content":" * The {@code DeleteCommand} class represents a command to delete a specific task","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jiancheng37"},"content":" * from the task list. It removes the task, updates the storage, and notifies the user.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jiancheng37"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jiancheng37"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jiancheng37"},"content":"    private final int index;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jiancheng37"},"content":"     * Constructs a {@code DeleteCommand} with the specified task index.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jiancheng37"},"content":"     * @param index the 1-based index of the task to be deleted, provided as a string.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jiancheng37"},"content":"     * @throws JimmyException if the provided index is not a valid integer.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jiancheng37"},"content":"    public DeleteCommand(String index) throws JimmyException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jiancheng37"},"content":"        super();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jiancheng37"},"content":"        try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jiancheng37"},"content":"            this.index \u003d Integer.parseInt(index) - 1; // Convert to zero-based index","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jiancheng37"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jiancheng37"},"content":"            throw new JimmyException(\"Invalid index for delete command.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jiancheng37"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jiancheng37"},"content":"     * Executes the delete command by removing the specified task from the task list,","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jiancheng37"},"content":"     * saving the updated task list to storage, and notifying the user.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jiancheng37"},"content":"     * @param tasks   the {@code TaskList} containing all current tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jiancheng37"},"content":"     * @param ui      the {@code Ui} instance for displaying messages to the user.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jiancheng37"},"content":"     * @param storage the {@code Storage} instance responsible for saving tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jiancheng37"},"content":"     * @throws JimmyException if the task index is out of bounds.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jiancheng37"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jiancheng37"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws JimmyException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jiancheng37"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jiancheng37"},"content":"            throw new JimmyException(\"Task index out of bounds.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jiancheng37"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jiancheng37"},"content":"        Task removedTask \u003d tasks.deleteTask(index);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jiancheng37"},"content":"        storage.save(tasks.getAllTasks());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jiancheng37"},"content":"        ui.showMessage(\"Noted. I\u0027ve removed this task:\\n  \" + removedTask + ","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jiancheng37"},"content":"                       \"\\nNow you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jiancheng37"},"content":"     * Indicates whether this command should terminate the program.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jiancheng37"},"content":"     * @return {@code false} as the delete command does not exit the application.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jiancheng37"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jiancheng37"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jiancheng37"},"content":"        return false;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jiancheng37"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"jiancheng37":54}},{"path":"src/main/java/jimmy/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiancheng37"},"content":"package jimmy;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jiancheng37"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jiancheng37"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jiancheng37"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jiancheng37"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jiancheng37"},"content":" * The {@code Event} class represents a task that occurs within a specific time frame.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jiancheng37"},"content":" * It includes the start ({@code from}) and end ({@code to}) times for the event,","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jiancheng37"},"content":" * and provides methods to format the event for display and file storage.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jiancheng37"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jiancheng37"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jiancheng37"},"content":"    private LocalDateTime from;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jiancheng37"},"content":"    private LocalDateTime to;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jiancheng37"},"content":"    /** Formatter for parsing input date-time strings (e.g., \"yyyy-MM-dd HHmm\"). */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jiancheng37"},"content":"    protected static final DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jiancheng37"},"content":"    /** Formatter for displaying date-time in a user-friendly format (e.g., \"MMM dd yyyy, h:mm a\"). */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jiancheng37"},"content":"    protected static final DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jiancheng37"},"content":"     * Constructs an {@code Event} with the specified name, start time, and end time.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jiancheng37"},"content":"     * @param name the name or description of the event.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jiancheng37"},"content":"     * @param from the start time of the event in the format \"yyyy-MM-dd HHmm\".","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jiancheng37"},"content":"     * @param to   the end time of the event in the format \"yyyy-MM-dd HHmm\".","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jiancheng37"},"content":"     * @throws JimmyException if the date format is invalid.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jiancheng37"},"content":"    public Event(String name, String from, String to) throws JimmyException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jiancheng37"},"content":"        super(name);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jiancheng37"},"content":"        try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jiancheng37"},"content":"            this.from \u003d LocalDateTime.parse(from, inputFormatter);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jiancheng37"},"content":"            this.to \u003d LocalDateTime.parse(to, inputFormatter);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jiancheng37"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jiancheng37"},"content":"            this.from \u003d null;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jiancheng37"},"content":"            this.to \u003d null;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jiancheng37"},"content":"            throw new JimmyException(\"Invalid date format. Please use yyyy-MM-dd HHmm (e.g., 2019-12-02 1800).\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jiancheng37"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jiancheng37"},"content":"     * Retrieves the start time of the event.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jiancheng37"},"content":"     * @return the {@code LocalDateTime} representing when the event starts.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jiancheng37"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jiancheng37"},"content":"        return from;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jiancheng37"},"content":"     * Retrieves the end time of the event.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jiancheng37"},"content":"     * @return the {@code LocalDateTime} representing when the event ends.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jiancheng37"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jiancheng37"},"content":"        return to;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jiancheng37"},"content":"     * Converts the event to a file-friendly format for saving.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jiancheng37"},"content":"     * The format is:","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jiancheng37"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jiancheng37"},"content":"     * E | [1 or 0] | [event name] | [from date] | [to date]","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jiancheng37"},"content":"     * \u003c/pre\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jiancheng37"},"content":"     * @return the string representation of the event for file storage.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jiancheng37"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jiancheng37"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jiancheng37"},"content":"        return \"E | \" + (isCompleted ? \"1\" : \"0\") + \" | \" + name + \" | \" + from.format(inputFormatter) + \" | \" + to.format(inputFormatter);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jiancheng37"},"content":"     * Returns the string representation of the event for display in the UI.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jiancheng37"},"content":"     * The format is:","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jiancheng37"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jiancheng37"},"content":"     * [E][✓] Event Name (from: Dec 02 2019, 6:00 PM to: Dec 02 2019, 8:00 PM)","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jiancheng37"},"content":"     * \u003c/pre\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jiancheng37"},"content":"     * @return the formatted string representation of the event.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jiancheng37"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jiancheng37"},"content":"    public String toString() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jiancheng37"},"content":"        return \"[E][\" + getStatus() + \"] \" + name + \" (from: \" + from.format(outputFormatter) + \" to: \" + to.format(outputFormatter) + \")\";","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jiancheng37"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"jiancheng37":88}},{"path":"src/main/java/jimmy/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiancheng37"},"content":"package jimmy;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jiancheng37"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jiancheng37"},"content":" * The {@code ExitCommand} class represents a command to terminate the application.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jiancheng37"},"content":" * When executed, it displays a goodbye message to the user and signals the program to exit.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jiancheng37"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jiancheng37"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jiancheng37"},"content":"     * Constructs an {@code ExitCommand}.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jiancheng37"},"content":"    public ExitCommand() {}","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jiancheng37"},"content":"     * Executes the exit command by displaying a goodbye message to the user.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jiancheng37"},"content":"     * @param tasks   the {@code TaskList} containing all current tasks (not used in this command).","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jiancheng37"},"content":"     * @param ui      the {@code Ui} instance for displaying messages to the user.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jiancheng37"},"content":"     * @param storage the {@code Storage} instance (not used in this command).","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jiancheng37"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jiancheng37"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jiancheng37"},"content":"        ui.showGoodbye();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jiancheng37"},"content":"     * Indicates whether this command should terminate the program.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jiancheng37"},"content":"     * @return {@code true} to signal the application to exit.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jiancheng37"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jiancheng37"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jiancheng37"},"content":"        return true;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jiancheng37"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"jiancheng37":35}},{"path":"src/main/java/jimmy/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiancheng37"},"content":"package jimmy;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jiancheng37"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jiancheng37"},"content":"    private final String input;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jiancheng37"},"content":"    public FindCommand(String input) throws JimmyException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jiancheng37"},"content":"        super();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jiancheng37"},"content":"        this.input \u003d input;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jiancheng37"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jiancheng37"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws JimmyException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jiancheng37"},"content":"        ui.showMessage(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jiancheng37"},"content":"        int index \u003d 1;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jiancheng37"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jiancheng37"},"content":"            if (tasks.getTask(i).getName().toLowerCase().contains(input.toLowerCase())) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jiancheng37"},"content":"                ui.showMessage((index) + \". \" + tasks.getTask(i));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jiancheng37"},"content":"                index++;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jiancheng37"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jiancheng37"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jiancheng37"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jiancheng37"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jiancheng37"},"content":"        return false;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jiancheng37"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"jiancheng37":27}},{"path":"src/main/java/jimmy/Jimmy.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiancheng37"},"content":"package jimmy;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jiancheng37"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jiancheng37"},"content":" * The {@code Jimmy} class serves as the main entry point of the application.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jiancheng37"},"content":" * It initializes the user interface, storage, and task list, and manages the","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jiancheng37"},"content":" * main program loop for handling user commands.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jiancheng37"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jiancheng37"},"content":"public class Jimmy {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jiancheng37"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jiancheng37"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jiancheng37"},"content":"    private Ui ui;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jiancheng37"},"content":"     * Constructs a {@code Jimmy} instance with the specified file path for data storage.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jiancheng37"},"content":"     * Initializes the UI, loads tasks from storage, and handles loading errors gracefully.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jiancheng37"},"content":"     * @param filePath the path to the file where tasks are stored.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jiancheng37"},"content":"    public Jimmy(String filePath) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jiancheng37"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jiancheng37"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jiancheng37"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jiancheng37"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jiancheng37"},"content":"        } catch (JimmyException e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jiancheng37"},"content":"            ui.showLoadingError();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jiancheng37"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jiancheng37"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jiancheng37"},"content":"     * Runs the main program loop, which continuously reads user commands,","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jiancheng37"},"content":"     * processes them, and handles any exceptions until an exit command is issued.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jiancheng37"},"content":"    public void run() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jiancheng37"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jiancheng37"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jiancheng37"},"content":"        while (!isExit) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jiancheng37"},"content":"            try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jiancheng37"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jiancheng37"},"content":"                ui.showLine();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jiancheng37"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jiancheng37"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jiancheng37"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jiancheng37"},"content":"            } catch (JimmyException e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jiancheng37"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jiancheng37"},"content":"            } finally {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jiancheng37"},"content":"                ui.showLine();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jiancheng37"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jiancheng37"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jiancheng37"},"content":"     * The main method that serves as the application\u0027s entry point.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jiancheng37"},"content":"     * Initializes the {@code Jimmy} application with the default data file path.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jiancheng37"},"content":"     * @param args command-line arguments (not used).","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jiancheng37"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jiancheng37"},"content":"        new Jimmy(\"data/jimmy.txt\").run();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jiancheng37"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"jiancheng37":61}},{"path":"src/main/java/jimmy/JimmyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiancheng37"},"content":"package jimmy;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jiancheng37"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jiancheng37"},"content":" * The {@code JimmyException} class represents custom exceptions specific to the Jimmy application.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jiancheng37"},"content":" * It extends the {@code Exception} class to handle application-specific error messages.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jiancheng37"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jiancheng37"},"content":"public class JimmyException extends Exception {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jiancheng37"},"content":"     * Constructs a new {@code JimmyException} with the specified error message.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jiancheng37"},"content":"     * @param message the detail message explaining the cause of the exception.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jiancheng37"},"content":"    public JimmyException(String message) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jiancheng37"},"content":"        super(message);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jiancheng37"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"jiancheng37":17}},{"path":"src/main/java/jimmy/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiancheng37"},"content":"package jimmy;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jiancheng37"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jiancheng37"},"content":" * The {@code ListCommand} class represents a command to display all tasks","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jiancheng37"},"content":" * in the task list. It provides feedback to the user via the UI, showing either","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jiancheng37"},"content":" * the list of tasks or a message indicating that the task list is empty.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jiancheng37"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jiancheng37"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jiancheng37"},"content":"     * Constructs a {@code ListCommand}.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jiancheng37"},"content":"    public ListCommand() {}","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jiancheng37"},"content":"     * Executes the list command by displaying all tasks in the task list.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jiancheng37"},"content":"     * If the list is empty, it notifies the user accordingly.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jiancheng37"},"content":"     * @param tasks   the {@code TaskList} containing all current tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jiancheng37"},"content":"     * @param ui      the {@code Ui} instance for displaying messages to the user.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jiancheng37"},"content":"     * @param storage the {@code Storage} instance (not used in this command).","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jiancheng37"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jiancheng37"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jiancheng37"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jiancheng37"},"content":"            ui.showMessage(\"Your task list is empty.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jiancheng37"},"content":"        } else {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jiancheng37"},"content":"            ui.showMessage(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jiancheng37"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jiancheng37"},"content":"                ui.showMessage((i + 1) + \". \" + tasks.getTask(i));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jiancheng37"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jiancheng37"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jiancheng37"},"content":"     * Indicates whether this command should terminate the program.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jiancheng37"},"content":"     * @return {@code false} as the list command does not exit the application.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jiancheng37"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jiancheng37"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jiancheng37"},"content":"        return false;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jiancheng37"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"jiancheng37":44}},{"path":"src/main/java/jimmy/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiancheng37"},"content":"package jimmy;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jiancheng37"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jiancheng37"},"content":" * The {@code MarkCommand} class represents a command to mark a specific task","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jiancheng37"},"content":" * as completed in the task list. This command updates the task\u0027s status,","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jiancheng37"},"content":" * saves the changes to storage, and notifies the user via the UI.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jiancheng37"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jiancheng37"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jiancheng37"},"content":"    private final int index;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jiancheng37"},"content":"     * Constructs a {@code MarkCommand} with the specified task index.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jiancheng37"},"content":"     * @param index the 1-based index of the task to be marked as completed, provided as a string.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jiancheng37"},"content":"     * @throws JimmyException if the provided index is not a valid integer.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jiancheng37"},"content":"    public MarkCommand(String index) throws JimmyException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jiancheng37"},"content":"        super();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jiancheng37"},"content":"        try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jiancheng37"},"content":"            this.index \u003d Integer.parseInt(index) - 1; // Convert to zero-based index","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jiancheng37"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jiancheng37"},"content":"            throw new JimmyException(\"Invalid index for mark command.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jiancheng37"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jiancheng37"},"content":"     * Executes the mark command by marking the specified task as completed,","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jiancheng37"},"content":"     * saving the updated task list to storage, and notifying the user.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jiancheng37"},"content":"     * @param tasks   the {@code TaskList} containing all current tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jiancheng37"},"content":"     * @param ui      the {@code Ui} instance for displaying messages to the user.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jiancheng37"},"content":"     * @param storage the {@code Storage} instance responsible for saving tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jiancheng37"},"content":"     * @throws JimmyException if the task index is out of bounds.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jiancheng37"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jiancheng37"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws JimmyException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jiancheng37"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jiancheng37"},"content":"            throw new JimmyException(\"Task index out of bounds.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jiancheng37"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jiancheng37"},"content":"        Task task \u003d tasks.getTask(index);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jiancheng37"},"content":"        task.mark();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jiancheng37"},"content":"        storage.save(tasks.getAllTasks());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jiancheng37"},"content":"        ui.showMessage(\"Nice! I\u0027ve marked this task as done:\\n  \" + task);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jiancheng37"},"content":"     * Indicates whether this command should terminate the program.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jiancheng37"},"content":"     * @return {@code false} as the mark command does not exit the application.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jiancheng37"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jiancheng37"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jiancheng37"},"content":"        return false;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jiancheng37"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"jiancheng37":55}},{"path":"src/main/java/jimmy/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiancheng37"},"content":"package jimmy;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jiancheng37"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jiancheng37"},"content":" * The {@code Parser} class handles the interpretation of user input.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jiancheng37"},"content":" * It converts raw input strings into corresponding {@code Command} objects","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jiancheng37"},"content":" * that can be executed by the program.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jiancheng37"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jiancheng37"},"content":"public class Parser {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jiancheng37"},"content":"     * Parses the user input and returns the corresponding {@code Command} object.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jiancheng37"},"content":"     * @param input the user\u0027s input string.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jiancheng37"},"content":"     * @return a {@code Command} representing the user\u0027s request.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jiancheng37"},"content":"     * @throws JimmyException if the command is invalid or the input is incomplete.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jiancheng37"},"content":"    public static Command parse(String input) throws JimmyException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jiancheng37"},"content":"        String[] words \u003d input.trim().split(\" \", 2);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jiancheng37"},"content":"        String commandWord \u003d words[0];","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jiancheng37"},"content":"        switch (commandWord) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jiancheng37"},"content":"        case \"bye\":","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jiancheng37"},"content":"            if (words.length \u003e 1) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jiancheng37"},"content":"                throw new JimmyException(\"The \u0027bye\u0027 command should not have additional arguments.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jiancheng37"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jiancheng37"},"content":"            return new ExitCommand();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jiancheng37"},"content":"        case \"list\":","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jiancheng37"},"content":"            if (words.length \u003e 1) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jiancheng37"},"content":"                throw new JimmyException(\"The \u0027list\u0027 command does not require additional arguments.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jiancheng37"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jiancheng37"},"content":"            return new ListCommand();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jiancheng37"},"content":"        case \"mark\":","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jiancheng37"},"content":"            if (words.length \u003c 2 || words[1].isBlank()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jiancheng37"},"content":"                throw new JimmyException(\"The \u0027mark\u0027 command requires a task index. Example: mark 2\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jiancheng37"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jiancheng37"},"content":"            return new MarkCommand(words[1]);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jiancheng37"},"content":"        case \"unmark\":","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jiancheng37"},"content":"            if (words.length \u003c 2 || words[1].isBlank()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jiancheng37"},"content":"                throw new JimmyException(\"The \u0027unmark\u0027 command requires a task index. Example: unmark 2\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jiancheng37"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jiancheng37"},"content":"            return new UnmarkCommand(words[1]);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jiancheng37"},"content":"        case \"delete\":","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jiancheng37"},"content":"            if (words.length \u003c 2 || words[1].isBlank()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jiancheng37"},"content":"                throw new JimmyException(\"The \u0027delete\u0027 command requires a task index. Example: delete 3\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jiancheng37"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jiancheng37"},"content":"            return new DeleteCommand(words[1]);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jiancheng37"},"content":"        case \"todo\":","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jiancheng37"},"content":"            if (words.length \u003c 2 || words[1].isBlank()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jiancheng37"},"content":"                throw new JimmyException(\"The \u0027todo\u0027 command requires a description. Example: todo read book\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jiancheng37"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jiancheng37"},"content":"            return new AddTodoCommand(words[1]);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jiancheng37"},"content":"        case \"deadline\":","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jiancheng37"},"content":"            if (words.length \u003c 2 || words[1].isBlank()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jiancheng37"},"content":"                throw new JimmyException(\"The \u0027deadline\u0027 command requires a description and a due date. Example: deadline submit report /by 2024-12-31 2359\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jiancheng37"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jiancheng37"},"content":"            return new AddDeadlineCommand(words[1]);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jiancheng37"},"content":"        case \"event\":","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jiancheng37"},"content":"            if (words.length \u003c 2 || words[1].isBlank()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jiancheng37"},"content":"                throw new JimmyException(\"The \u0027event\u0027 command requires a description, start time, and end time. Example: event project meeting /from 2024-12-01 1400 /to 2024-12-01 1600\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jiancheng37"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jiancheng37"},"content":"            return new AddEventCommand(words[1]);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jiancheng37"},"content":"        case \"find\":","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jiancheng37"},"content":"            if (words.length \u003c 2 || words[1].isBlank()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jiancheng37"},"content":"                throw new JimmyException(\"The \u0027find\u0027 command requires a keyword to search for. Example: find meeting\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jiancheng37"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jiancheng37"},"content":"            return new FindCommand(words[1]);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jiancheng37"},"content":"        default:","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jiancheng37"},"content":"            throw new JimmyException(\"Invalid command. Please enter a valid command like \u0027list\u0027, \u0027todo\u0027, \u0027find\u0027, etc.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jiancheng37"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jiancheng37"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"jiancheng37":80}},{"path":"src/main/java/jimmy/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiancheng37"},"content":"package jimmy;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jiancheng37"},"content":"import java.io.*;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jiancheng37"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jiancheng37"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jiancheng37"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jiancheng37"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jiancheng37"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jiancheng37"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jiancheng37"},"content":" * Handles the loading and saving of tasks to a file for persistent storage.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jiancheng37"},"content":" * Ensures that the file and its directories exist, and supports reading from","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jiancheng37"},"content":" * and writing to the file in a specific format.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jiancheng37"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jiancheng37"},"content":"public class Storage {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jiancheng37"},"content":"    private Path filePath;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jiancheng37"},"content":"     * Constructs a {@code Storage} object with the specified file path.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jiancheng37"},"content":"     * Ensures that the file and its parent directories exist.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jiancheng37"},"content":"     * @param filePath the path to the file where tasks will be stored.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jiancheng37"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jiancheng37"},"content":"        this.filePath \u003d Paths.get(filePath);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jiancheng37"},"content":"        ensureFileExists();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jiancheng37"},"content":"     * Ensures the file and its parent directories exist.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jiancheng37"},"content":"     * Creates them if they do not exist.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jiancheng37"},"content":"    private void ensureFileExists() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jiancheng37"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jiancheng37"},"content":"            Path dir \u003d filePath.getParent();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jiancheng37"},"content":"            if (dir !\u003d null \u0026\u0026 !Files.exists(dir)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jiancheng37"},"content":"                Files.createDirectories(dir);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jiancheng37"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jiancheng37"},"content":"            if (!Files.exists(filePath)) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jiancheng37"},"content":"                Files.createFile(filePath);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jiancheng37"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jiancheng37"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jiancheng37"},"content":"            System.out.println(\"Error ensuring file exists: \" + e.getMessage());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jiancheng37"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jiancheng37"},"content":"     * Loads tasks from the file into an {@code ArrayList}.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jiancheng37"},"content":"     * Parses each line of the file to recreate the corresponding {@code Task} objects.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jiancheng37"},"content":"     * @return a list of tasks loaded from the file.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jiancheng37"},"content":"     * @throws JimmyException if an I/O error occurs during file reading.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jiancheng37"},"content":"    public ArrayList\u003cTask\u003e load() throws JimmyException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jiancheng37"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jiancheng37"},"content":"        try (BufferedReader br \u003d new BufferedReader(new FileReader(filePath.toString()))) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jiancheng37"},"content":"            String line;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jiancheng37"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jiancheng37"},"content":"                String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jiancheng37"},"content":"                Task task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jiancheng37"},"content":"                switch (parts[0]) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jiancheng37"},"content":"                case \"T\":","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jiancheng37"},"content":"                    task \u003d new Todo(parts[2]);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jiancheng37"},"content":"                    break;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jiancheng37"},"content":"                case \"D\":","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jiancheng37"},"content":"                    try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jiancheng37"},"content":"                        task \u003d new Deadline(parts[2], parts[3]);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jiancheng37"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jiancheng37"},"content":"                        System.out.println(\"Error: Invalid date format in file.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jiancheng37"},"content":"                        continue;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jiancheng37"},"content":"                    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jiancheng37"},"content":"                    break;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jiancheng37"},"content":"                case \"E\":","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jiancheng37"},"content":"                    try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jiancheng37"},"content":"                        task \u003d new Event(parts[2], parts[3], parts[4]);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jiancheng37"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jiancheng37"},"content":"                        System.out.println(\"Error: Invalid date format in file.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jiancheng37"},"content":"                        continue;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jiancheng37"},"content":"                    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jiancheng37"},"content":"                    break;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jiancheng37"},"content":"                default:","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jiancheng37"},"content":"                    continue;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jiancheng37"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jiancheng37"},"content":"                if (parts[1].equals(\"1\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jiancheng37"},"content":"                    task.mark();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jiancheng37"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jiancheng37"},"content":"                tasks.add(task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jiancheng37"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jiancheng37"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jiancheng37"},"content":"            throw new JimmyException(\"Error loading tasks from file.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jiancheng37"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jiancheng37"},"content":"        return tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jiancheng37"},"content":"     * Saves the provided list of tasks to the file.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jiancheng37"},"content":"     * Each task is converted to a file-friendly format before saving.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jiancheng37"},"content":"     * @param tasks the list of tasks to be saved.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jiancheng37"},"content":"     * @throws JimmyException if an I/O error occurs during file writing.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jiancheng37"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) throws JimmyException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jiancheng37"},"content":"        try (BufferedWriter bw \u003d new BufferedWriter(new FileWriter(filePath.toString()))) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jiancheng37"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jiancheng37"},"content":"                bw.write(task.toFileFormat());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jiancheng37"},"content":"                bw.newLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jiancheng37"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jiancheng37"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jiancheng37"},"content":"            throw new JimmyException(\"Error saving tasks to file.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jiancheng37"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jiancheng37"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"jiancheng37":114}},{"path":"src/main/java/jimmy/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiancheng37"},"content":"package jimmy;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jiancheng37"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jiancheng37"},"content":" * Represents an abstract task with a name and completion status.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jiancheng37"},"content":" * Subclasses should define specific task types like Todo, Deadline, etc.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jiancheng37"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jiancheng37"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jiancheng37"},"content":"    protected String name;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jiancheng37"},"content":"    protected boolean isCompleted;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jiancheng37"},"content":"     * Constructs a task with the specified name.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jiancheng37"},"content":"     * @param name the name or description of the task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jiancheng37"},"content":"    public Task(String name) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jiancheng37"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jiancheng37"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jiancheng37"},"content":"     * Marks the task as completed.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jiancheng37"},"content":"    public void mark() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jiancheng37"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jiancheng37"},"content":"     * Marks the task as not completed.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jiancheng37"},"content":"    public void unmark() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jiancheng37"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jiancheng37"},"content":"     * Retrieves the name of the task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jiancheng37"},"content":"     * @return the task name.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jiancheng37"},"content":"    public String getName() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jiancheng37"},"content":"        return name;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jiancheng37"},"content":"     * Checks if the task is completed.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jiancheng37"},"content":"     * @return {@code true} if the task is completed, otherwise {@code false}.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jiancheng37"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jiancheng37"},"content":"        return isCompleted;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jiancheng37"},"content":"     * Returns the task\u0027s completion status as a symbol.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jiancheng37"},"content":"     * @return \"X\" if completed, otherwise a blank space \" \".","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jiancheng37"},"content":"    public String getStatus() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jiancheng37"},"content":"        return isCompleted ? \"X\" : \" \";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jiancheng37"},"content":"     * Converts the task to a file-friendly format for storage.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jiancheng37"},"content":"     * @return the string representation of the task for file saving.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jiancheng37"},"content":"    public abstract String toFileFormat();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jiancheng37"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"jiancheng37":68}},{"path":"src/main/java/jimmy/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiancheng37"},"content":"package jimmy;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jiancheng37"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jiancheng37"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jiancheng37"},"content":" * Manages a list of tasks, providing methods to add, retrieve, and delete tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jiancheng37"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jiancheng37"},"content":"public class TaskList {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jiancheng37"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jiancheng37"},"content":"     * Creates an empty task list.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jiancheng37"},"content":"    public TaskList() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jiancheng37"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jiancheng37"},"content":"     * Creates a task list with existing tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jiancheng37"},"content":"     * @param tasks the list of tasks to initialize with.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jiancheng37"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jiancheng37"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jiancheng37"},"content":"     * Adds a task to the list.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jiancheng37"},"content":"     * @param task the task to be added.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jiancheng37"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jiancheng37"},"content":"        tasks.add(task);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jiancheng37"},"content":"     * Retrieves a task by its index.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jiancheng37"},"content":"     * @param index the index of the task to retrieve.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jiancheng37"},"content":"     * @return the task at the specified index.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jiancheng37"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jiancheng37"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jiancheng37"},"content":"     * Deletes a task by its index.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jiancheng37"},"content":"     * @param index the index of the task to delete.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jiancheng37"},"content":"     * @return the deleted task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jiancheng37"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jiancheng37"},"content":"        return tasks.remove(index);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jiancheng37"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jiancheng37"},"content":"     * @return the size of the task list.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jiancheng37"},"content":"    public int size() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jiancheng37"},"content":"        return tasks.size();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jiancheng37"},"content":"     * Retrieves all tasks in the list.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jiancheng37"},"content":"     * @return the list of all tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jiancheng37"},"content":"    public ArrayList\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jiancheng37"},"content":"        return tasks;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jiancheng37"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"jiancheng37":73}},{"path":"src/main/java/jimmy/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiancheng37"},"content":"package jimmy;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jiancheng37"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jiancheng37"},"content":" * The {@code Todo} class represents a task without any date/time attached to it.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jiancheng37"},"content":" * It is a subclass of {@code Task} and provides specific implementations for","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jiancheng37"},"content":" * representing a to-do task both in the UI and when saving to a file.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jiancheng37"},"content":" *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jiancheng37"},"content":" * \u003cp\u003eTo-do tasks are typically simple tasks that need to be done without any","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jiancheng37"},"content":" * specific deadline or schedule.\u003c/p\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jiancheng37"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jiancheng37"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jiancheng37"},"content":"     * Constructs a {@code Todo} task with the specified name.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jiancheng37"},"content":"     * @param name the description of the to-do task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jiancheng37"},"content":"    public Todo(String name) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jiancheng37"},"content":"        super(name);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jiancheng37"},"content":"     * Converts the to-do task into a file-friendly format for saving.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jiancheng37"},"content":"     * The format is:","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jiancheng37"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jiancheng37"},"content":"     * T | [1 or 0] | [task name]","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jiancheng37"},"content":"     * \u003c/pre\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jiancheng37"},"content":"     * Where:","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jiancheng37"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jiancheng37"},"content":"     *     \u003cli\u003e\u003cb\u003eT\u003c/b\u003e indicates it\u0027s a to-do task.\u003c/li\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jiancheng37"},"content":"     *     \u003cli\u003e\u003cb\u003e1\u003c/b\u003e indicates the task is completed, and \u003cb\u003e0\u003c/b\u003e means it\u0027s not done.\u003c/li\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jiancheng37"},"content":"     *     \u003cli\u003e\u003cb\u003e[task name]\u003c/b\u003e is the description of the task.\u003c/li\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jiancheng37"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jiancheng37"},"content":"     * @return the string representation of the task for file storage.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jiancheng37"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jiancheng37"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jiancheng37"},"content":"        return \"T | \" + (isCompleted ? \"1\" : \"0\") + \" | \" + name;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jiancheng37"},"content":"     * Returns the string representation of the to-do task for display in the UI.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jiancheng37"},"content":"     * The format is:","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jiancheng37"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jiancheng37"},"content":"     * [T][✓] Task Name","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jiancheng37"},"content":"     * \u003c/pre\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jiancheng37"},"content":"     * or","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jiancheng37"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jiancheng37"},"content":"     * [T][✗] Task Name","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jiancheng37"},"content":"     * \u003c/pre\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jiancheng37"},"content":"     * depending on whether the task is completed or not.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jiancheng37"},"content":"     * @return the string representation of the task for display.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jiancheng37"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jiancheng37"},"content":"    public String toString() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jiancheng37"},"content":"        return \"[T][\" + getStatus() + \"] \" + name;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jiancheng37"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"jiancheng37":60}},{"path":"src/main/java/jimmy/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiancheng37"},"content":"package jimmy;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jiancheng37"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jiancheng37"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jiancheng37"},"content":" * The Ui class handles all interactions with the user.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jiancheng37"},"content":" * It provides methods to display messages, errors, and receive input from the user.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jiancheng37"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jiancheng37"},"content":"public class Ui {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jiancheng37"},"content":"    private final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jiancheng37"},"content":"     * Displays the welcome message when the application starts.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jiancheng37"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jiancheng37"},"content":"        showLine();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jiancheng37"},"content":"        System.out.println(\"    Hello! I\u0027m Jimmy. What can I do for you?\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jiancheng37"},"content":"        showLine();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jiancheng37"},"content":"     * Displays the goodbye message when the application exits.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jiancheng37"},"content":"    public void showGoodbye() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jiancheng37"},"content":"        System.out.println(\"    Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jiancheng37"},"content":"     * Reads the next line of user input.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jiancheng37"},"content":"     * @return the user\u0027s input as a String.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jiancheng37"},"content":"    public String readCommand() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jiancheng37"},"content":"        return sc.nextLine();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jiancheng37"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jiancheng37"},"content":"     * @param message the error message to display.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jiancheng37"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jiancheng37"},"content":"        System.out.println(\"    Error: \" + message);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jiancheng37"},"content":"     * Displays an error message related to loading tasks from the file.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jiancheng37"},"content":"    public void showLoadingError() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jiancheng37"},"content":"        System.out.println(\"    Error loading tasks from file.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jiancheng37"},"content":"     * Displays a separator line for better readability.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jiancheng37"},"content":"    public void showLine() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jiancheng37"},"content":"        System.out.println(\"    _________________________________________________\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jiancheng37"},"content":"     * Displays a general message to the user.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jiancheng37"},"content":"     * @param message the message to display.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jiancheng37"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jiancheng37"},"content":"        System.out.println(message);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jiancheng37"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"jiancheng37":68}},{"path":"src/main/java/jimmy/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiancheng37"},"content":"package jimmy;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jiancheng37"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jiancheng37"},"content":" * The {@code UnmarkCommand} class represents a command to unmark a specific task","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jiancheng37"},"content":" * as not done in the task list. This command is typically triggered when a user","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jiancheng37"},"content":" * wants to mark a task as incomplete after previously marking it as done.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jiancheng37"},"content":" *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jiancheng37"},"content":" * \u003cp\u003eIt parses the provided task index, validates it, updates the task status,","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jiancheng37"},"content":" * saves the updated task list to storage, and notifies the user via the UI.\u003c/p\u003e","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jiancheng37"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jiancheng37"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jiancheng37"},"content":"    /** The zero-based index of the task to be unmarked. */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jiancheng37"},"content":"    private final int index;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jiancheng37"},"content":"     * Constructs an {@code UnmarkCommand} with the specified task index.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jiancheng37"},"content":"     * @param index the 1-based index of the task to be unmarked (provided as a string).","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jiancheng37"},"content":"     * @throws JimmyException if the provided index is not a valid integer.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jiancheng37"},"content":"    public UnmarkCommand(String index) throws JimmyException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jiancheng37"},"content":"        super();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jiancheng37"},"content":"        try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jiancheng37"},"content":"            this.index \u003d Integer.parseInt(index) - 1; // Convert to zero-based index","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jiancheng37"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jiancheng37"},"content":"            throw new JimmyException(\"Invalid index for unmark command.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jiancheng37"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jiancheng37"},"content":"     * Executes the unmark command by unmarking the specified task as not done,","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jiancheng37"},"content":"     * saving the updated task list to storage, and notifying the user.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jiancheng37"},"content":"     * @param tasks   the {@code TaskList} containing all current tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jiancheng37"},"content":"     * @param ui      the {@code Ui} instance for displaying messages to the user.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jiancheng37"},"content":"     * @param storage the {@code Storage} instance responsible for saving tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jiancheng37"},"content":"     * @throws JimmyException if the task index is out of bounds.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jiancheng37"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jiancheng37"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws JimmyException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jiancheng37"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jiancheng37"},"content":"            throw new JimmyException(\"Task index out of bounds.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jiancheng37"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jiancheng37"},"content":"        Task task \u003d tasks.getTask(index);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jiancheng37"},"content":"        task.unmark();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jiancheng37"},"content":"        storage.save(tasks.getAllTasks());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jiancheng37"},"content":"        ui.showMessage(\"OK, I\u0027ve marked this task as not done yet:\\n  \" + task);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jiancheng37"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jiancheng37"},"content":"     * Indicates whether this command should terminate the program.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jiancheng37"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jiancheng37"},"content":"     * @return {@code false} as the unmark command does not exit the application.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jiancheng37"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jiancheng37"},"content":"    @Override","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jiancheng37"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jiancheng37"},"content":"        return false;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jiancheng37"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"jiancheng37":59}},{"path":"src/test/java/jimmy/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiancheng37"},"content":"package jimmy;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jiancheng37"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jiancheng37"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jiancheng37"},"content":"import jimmy.TaskList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jiancheng37"},"content":"import jimmy.Task;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jiancheng37"},"content":"import jimmy.Todo;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jiancheng37"},"content":"class TaskListTest {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jiancheng37"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jiancheng37"},"content":"    void testAddTask() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jiancheng37"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jiancheng37"},"content":"        Task task \u003d new Todo(\"Complete assignment\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jiancheng37"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jiancheng37"},"content":"        assertEquals(1, taskList.size(), \"TaskList should contain 1 task after adding.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jiancheng37"},"content":"        assertEquals(task, taskList.getTask(0), \"The added task should be retrievable.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jiancheng37"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jiancheng37"},"content":"    void testDeleteTask() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jiancheng37"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jiancheng37"},"content":"        Task task \u003d new Todo(\"Complete assignment\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jiancheng37"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jiancheng37"},"content":"        Task deletedTask \u003d taskList.deleteTask(0);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jiancheng37"},"content":"        assertEquals(task, deletedTask, \"The deleted task should be the same as the added one.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jiancheng37"},"content":"        assertEquals(0, taskList.size(), \"TaskList should be empty after deletion.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jiancheng37"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jiancheng37"},"content":"    void testDeleteFromEmptyList() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jiancheng37"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jiancheng37"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e taskList.deleteTask(0), \"Deleting from an empty list should throw IndexOutOfBoundsException.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jiancheng37"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jiancheng37"},"content":"    void testGetInvalidIndex() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jiancheng37"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jiancheng37"},"content":"        taskList.addTask(new Todo(\"Complete assignment\"));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jiancheng37"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e taskList.getTask(5), \"Getting a task with an invalid index should throw IndexOutOfBoundsException.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jiancheng37"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jiancheng37"},"content":"    void testMultipleTasks() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jiancheng37"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jiancheng37"},"content":"        Task task1 \u003d new Todo(\"Task 1\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jiancheng37"},"content":"        Task task2 \u003d new Todo(\"Task 2\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jiancheng37"},"content":"        Task task3 \u003d new Todo(\"Task 3\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jiancheng37"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jiancheng37"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jiancheng37"},"content":"        taskList.addTask(task3);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jiancheng37"},"content":"        assertEquals(3, taskList.size(), \"TaskList should contain 3 tasks.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jiancheng37"},"content":"        assertEquals(task2, taskList.getTask(1), \"The second task should be retrievable correctly.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jiancheng37"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"jiancheng37":62}},{"path":"src/test/java/jimmy/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiancheng37"},"content":"package jimmy;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jiancheng37"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jiancheng37"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jiancheng37"},"content":"class TaskTest {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jiancheng37"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jiancheng37"},"content":"    void testMark() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jiancheng37"},"content":"        Task task \u003d new Todo(\"Read book\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jiancheng37"},"content":"        task.mark();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jiancheng37"},"content":"        assertTrue(task.isCompleted(), \"Task should be marked as done.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jiancheng37"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jiancheng37"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jiancheng37"},"content":"    void testUnmark() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jiancheng37"},"content":"        Task task \u003d new Todo(\"Read book\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jiancheng37"},"content":"        task.mark();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jiancheng37"},"content":"        task.unmark();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jiancheng37"},"content":"        assertFalse(task.isCompleted(), \"Task should be marked as not done.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jiancheng37"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jiancheng37"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"jiancheng37":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jiancheng37"},"content":"todo borrow book","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jiancheng37"},"content":"list","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jiancheng37"},"content":"mark 1","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jiancheng37"},"content":"list","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jiancheng37"},"content":"event visit market /from 2pm /to 5pm","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jiancheng37"},"content":"list","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jiancheng37"},"content":"deadline cs2103 assignment /by 8pm","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jiancheng37"},"content":"list","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jiancheng37"},"content":"mark 3","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jiancheng37"},"content":"list","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jiancheng37"},"content":"mark 2","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jiancheng37"},"content":"list","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jiancheng37"},"content":"unmark 2","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jiancheng37"},"content":"list","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jiancheng37"},"content":"unmark 3","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jiancheng37"},"content":"list","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jiancheng37"},"content":"bye","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"jiancheng37":17}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jiancheng37"},"content":"java -classpath ..\\bin Jimmy \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"jiancheng37":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jiancheng37"},"content":"java -classpath ../bin Jimmy \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"jiancheng37":1,"-":37}}]
