[{"path":"AI.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"adoubleb"},"content":"## Record of AI use in this Project","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adoubleb"},"content":"1. To generate javadocs","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"adoubleb":3}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"adoubleb"},"content":"# Brownie","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adoubleb"},"content":"\u003cimg width\u003d\"422\" alt\u003d\"Ui\" src\u003d\"https://github.com/user-attachments/assets/e835c90d-df5b-408f-a450-624d04261065\" /\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adoubleb"},"content":"This is a simple chatbot-like application that helps you manage your life by keeping track of your tasks.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adoubleb"},"content":"It is named Brownie after a guide dog that accompanied me hiking in Kedarkantha. ","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adoubleb"},"content":"Given below are instructions on how to use it.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adoubleb"},"content":"You can keep track of 3 types of tasks.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adoubleb"},"content":"1. Todo","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adoubleb"},"content":"   * A task with no time constraint","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adoubleb"},"content":"3. Deadline","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adoubleb"},"content":"   * A task with a deadline","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adoubleb"},"content":"5. Event","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adoubleb"},"content":"   * A task with a start time and end time.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adoubleb"},"content":"## Adding todo","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adoubleb"},"content":"Adds a todo task to the list of tasks.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adoubleb"},"content":"Format: `todo {description}`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adoubleb"},"content":"Example: `todo Hit the gym!`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adoubleb"},"content":"## Adding deadline","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adoubleb"},"content":"Adds a deadline task to the list of tasks.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adoubleb"},"content":"Format: `deadline {description} by: {dd-mm-yyyy} {mm:hh}`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adoubleb"},"content":"Example: `deadline Complete IP by: 20-02-2025 23:59`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adoubleb"},"content":"## Adding event","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adoubleb"},"content":"Adds a event task to the list of tasks.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adoubleb"},"content":"Format: `event {description} start: {dd-mm-yyyy} {mm:hh} end: {dd-mm-yyyy} {mm:hh}`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adoubleb"},"content":"Example: `event Hari Raya Dinner start: 22-04-2025 19:00 end: 22-04-2025 21:00`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adoubleb"},"content":"## Listing all tasks","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adoubleb"},"content":"Lists all the tasks in the list of tasks.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adoubleb"},"content":"Command: `list`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adoubleb"},"content":"1. *T*[ ] Hit the gym!","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adoubleb"},"content":"2. *D*[ ] Complete IP (by: 20 Feb 2025 11:59 PM)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adoubleb"},"content":"2. *E*[ ] Hari Raya Dinner (start: 22 April 2025 07:00 PM) (end: 22 April 2025 09:00 PM)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adoubleb"},"content":"## Deleting a task","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adoubleb"},"content":"Deletes a task based on the index in the list","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adoubleb"},"content":"Format: `delete {index}`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adoubleb"},"content":"## Marking a task","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adoubleb"},"content":"Marks a task based on the index in the list. Marked task remains marked.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adoubleb"},"content":"Format: `mark {index}`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adoubleb"},"content":"## Unmarking a task","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adoubleb"},"content":"Unmarks a task based on the index in the list. Unmarked task remains unmarked.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adoubleb"},"content":"Format: `unmmark {index}`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"adoubleb"},"content":"## Finding a task","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"adoubleb"},"content":"Returns the list of tasks with description containing `target_string`. Search is not case-sensitive.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"adoubleb"},"content":"Format: `find {target_string}`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"adoubleb"},"content":"Example: `find dinner`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"adoubleb"},"content":"Example Output:","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"adoubleb"},"content":"```","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"adoubleb"},"content":"1. *E*[ ] Hari Raya Dinner (start: 22 April 2025 07:00 PM) (end: 22 April 2025 09:00 PM)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"adoubleb"},"content":"```","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"adoubleb"},"content":"## Exiting ","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"adoubleb"},"content":"Exits the app","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"adoubleb"},"content":"Command: `bye`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"adoubleb"},"content":"# Declaration of AI use","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"adoubleb"},"content":"The project was assisted by JetBrains AI Assistant through the use of auto-code completion. ","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"adoubleb"},"content":"Automated code generation was also used extensively for creating JavaDocs.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false}],"authorContributionMap":{"adoubleb":80,"-":7}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adoubleb"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adoubleb"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adoubleb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adoubleb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adoubleb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adoubleb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adoubleb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adoubleb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adoubleb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adoubleb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adoubleb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adoubleb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adoubleb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adoubleb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adoubleb"},"content":"    mainClass.set(\"launcher.Launcher\")","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adoubleb"},"content":"    archiveBaseName \u003d \"brownie\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adoubleb"},"content":"    archiveFileName \u003d \u0027brownie.jar\u0027","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adoubleb"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adoubleb"},"content":"checkstyle {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adoubleb"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adoubleb"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"adoubleb":24,"-":39}},{"path":"data/brownie/tasklist.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"adoubleb"},"content":"T | 0 | something","lastModifiedDate":"2025-02-17","isFullCredit":false}],"authorContributionMap":{"adoubleb":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"adoubleb"},"content":"# Brownie","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adoubleb"},"content":"\u003cimg width\u003d\"422\" alt\u003d\"Ui\" src\u003d\"https://github.com/user-attachments/assets/e835c90d-df5b-408f-a450-624d04261065\" /\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adoubleb"},"content":"This is a simple chatbot-like application that helps you manage your life by keeping track of your tasks.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adoubleb"},"content":"It is named Brownie after a guide dog that accompanied me hiking in Kedarkantha.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adoubleb"},"content":"Given below are instructions on how to use it.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adoubleb"},"content":"You can keep track of 3 types of tasks.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adoubleb"},"content":"1. Todo","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adoubleb"},"content":"    * A task with no time constraint","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adoubleb"},"content":"3. Deadline","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adoubleb"},"content":"    * A task with a deadline","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adoubleb"},"content":"5. Event","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adoubleb"},"content":"    * A task with a start time and end time.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adoubleb"},"content":"## Adding todo","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adoubleb"},"content":"Adds a todo task to the list of tasks.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adoubleb"},"content":"Format: `todo {description}`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adoubleb"},"content":"Example: `todo Hit the gym!`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adoubleb"},"content":"## Adding deadline","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adoubleb"},"content":"Adds a deadline task to the list of tasks.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adoubleb"},"content":"Format: `deadline {description} by: {dd-mm-yyyy} {mm:hh}`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adoubleb"},"content":"Example: `deadline Complete IP by: 20-02-2025 23:59`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adoubleb"},"content":"## Adding event","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adoubleb"},"content":"Adds a event task to the list of tasks.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adoubleb"},"content":"Format: `event {description} start: {dd-mm-yyyy} {mm:hh} end: {dd-mm-yyyy} {mm:hh}`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adoubleb"},"content":"Example: `event Hari Raya Dinner start: 22-04-2025 19:00 end: 22-04-2025 21:00`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adoubleb"},"content":"## Listing all tasks","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adoubleb"},"content":"Lists all the tasks in the list of tasks.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adoubleb"},"content":"Command: `list`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adoubleb"},"content":"```","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adoubleb"},"content":"1. *T*[ ] Hit the gym!","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adoubleb"},"content":"2. *D*[ ] Complete IP (by: 20 Feb 2025 11:59 PM)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adoubleb"},"content":"2. *E*[ ] Hari Raya Dinner (start: 22 April 2025 07:00 PM) (end: 22 April 2025 09:00 PM)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adoubleb"},"content":"```","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adoubleb"},"content":"## Deleting a task","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adoubleb"},"content":"Deletes a task based on the index in the list","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adoubleb"},"content":"Format: `delete {index}`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adoubleb"},"content":"## Marking a task","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adoubleb"},"content":"Marks a task based on the index in the list. Marked task remains marked.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adoubleb"},"content":"Format: `mark {index}`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adoubleb"},"content":"## Unmarking a task","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adoubleb"},"content":"Unmarks a task based on the index in the list. Unmarked task remains unmarked.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adoubleb"},"content":"Format: `unmmark {index}`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"adoubleb"},"content":"## Finding a task","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"adoubleb"},"content":"Returns the list of tasks with description containing `target_string`. Search is not case-sensitive.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"adoubleb"},"content":"Format: `find {target_string}`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"adoubleb"},"content":"Example: `find dinner`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"adoubleb"},"content":"Example Output:","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"adoubleb"},"content":"1. *E*[ ] Hari Raya Dinner (start: 22 April 2025 07:00 PM) (end: 22 April 2025 09:00 PM)","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"adoubleb"},"content":"## Exiting","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"adoubleb"},"content":"Exits the app","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"adoubleb"},"content":"Command: `bye`","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"adoubleb"},"content":"# Declaration of AI use","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"adoubleb"},"content":"The project was assisted by JetBrains AI Assistant through the use of auto-code completion.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"adoubleb"},"content":"Automated code generation was also used extensively for creating JavaDocs.","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"adoubleb":71,"-":16}},{"path":"src/main/java/boxes/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adoubleb"},"content":"package boxes;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adoubleb"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adoubleb"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adoubleb"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adoubleb"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adoubleb"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adoubleb"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adoubleb"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adoubleb"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adoubleb"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adoubleb"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adoubleb"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adoubleb"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adoubleb"},"content":"import windows.MainWindow;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adoubleb"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adoubleb"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adoubleb"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adoubleb"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adoubleb"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adoubleb"},"content":"    @FXML","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adoubleb"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adoubleb"},"content":"    @FXML","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adoubleb"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adoubleb"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adoubleb"},"content":"        try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adoubleb"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adoubleb"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adoubleb"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adoubleb"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adoubleb"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adoubleb"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adoubleb"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adoubleb"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adoubleb"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adoubleb"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adoubleb"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adoubleb"},"content":"    private void flip() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adoubleb"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adoubleb"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adoubleb"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adoubleb"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adoubleb"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adoubleb"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adoubleb"},"content":"    public static DialogBox getBrownieDialog(String text, Image img) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adoubleb"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adoubleb"},"content":"        db.flip();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adoubleb"},"content":"        return db;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adoubleb"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"adoubleb":60}},{"path":"src/main/java/brownie/Brownie.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adoubleb"},"content":"package brownie;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adoubleb"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adoubleb"},"content":"import java.util.function.BiConsumer;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adoubleb"},"content":"import commands.Command;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adoubleb"},"content":"import iomanager.TasklistManager;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adoubleb"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adoubleb"},"content":"import parser.UserInput;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adoubleb"},"content":"import task.Task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adoubleb"},"content":"import ui.Ui;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adoubleb"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adoubleb"},"content":" * Represents the main Brownie application that manages tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adoubleb"},"content":" * It initializes necessary components, loads tasks from file,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adoubleb"},"content":" * and handles user interactions via the command-line interface.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adoubleb"},"content":" *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adoubleb"},"content":" * The Brownie class coordinates interactions between the user interface,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adoubleb"},"content":" * task list, and file storage. It serves as the entry point of the application.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adoubleb"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adoubleb"},"content":"public class Brownie {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adoubleb"},"content":"    private final TasklistManager tasklistManager;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adoubleb"},"content":"    private ArrayList\u003cTask\u003e items;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adoubleb"},"content":"    private Ui ui;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adoubleb"},"content":"    private BiConsumer\u003cString, Image\u003e dialogUpdater;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adoubleb"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adoubleb"},"content":"     * Constructs a new instance of the Brownie application.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adoubleb"},"content":"     * Initializes core components including the User Interface (Ui),","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adoubleb"},"content":"     * TasklistManager, and task list. It attempts to load tasks from","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adoubleb"},"content":"     * the storage file and handles any exceptions that occur during","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adoubleb"},"content":"     * initialization.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adoubleb"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adoubleb"},"content":"     * The constructor performs the following actions:","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adoubleb"},"content":"     * - Initializes the user interface to facilitate interaction with the user.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adoubleb"},"content":"     * - Creates an instance of TasklistManager to handle task storage and management.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adoubleb"},"content":"     * - Attempts to load an existing task list from the file, if available;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adoubleb"},"content":"     *   otherwise, ensures the necessary file setup is complete.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adoubleb"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adoubleb"},"content":"     * If any exception occurs during task list initialization or loading,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adoubleb"},"content":"     * the exception is printed to the error stream.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adoubleb"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adoubleb"},"content":"    public Brownie() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adoubleb"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adoubleb"},"content":"        this.tasklistManager \u003d new TasklistManager();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adoubleb"},"content":"        this.tasklistManager.initializeTasklist();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adoubleb"},"content":"        this.items \u003d tasklistManager.loadTasksFromFile();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adoubleb"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adoubleb"},"content":"     * Executes the main logic loop of the application.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adoubleb"},"content":"     * This method is responsible for user interaction, command parsing,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adoubleb"},"content":"     * and command execution within the application.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adoubleb"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adoubleb"},"content":"     * The method performs the following steps in a continuous loop:","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adoubleb"},"content":"     * 1. Displays a welcome message to the user at the start of the application.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adoubleb"},"content":"     * 2. Repeatedly reads user input from the command line.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adoubleb"},"content":"     * 3. Parses the user input into a command using the {@code UserInput} class.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adoubleb"},"content":"     * 4. Executes the parsed command by delegating to the command\u0027s {@code execute} method.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adoubleb"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adoubleb"},"content":"     * Exceptions that occur during user input reading, parsing, or command execution","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adoubleb"},"content":"     * are caught and their stack traces are printed to the error stream.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"adoubleb"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"adoubleb"},"content":"     * This method runs indefinitely until termination is explicitly handled","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"adoubleb"},"content":"     * through a command such as \u0027bye\u0027.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"adoubleb"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"adoubleb"},"content":"    public void setDialogUpdater(BiConsumer\u003cString, Image\u003e dialogUpdater) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"adoubleb"},"content":"        this.dialogUpdater \u003d dialogUpdater;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"adoubleb"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"adoubleb"},"content":"     * Processes the user input and generates an appropriate response by parsing and executing the input command.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"adoubleb"},"content":"     * Delegates command parsing to the {@code UserInput} and execution to the corresponding {@code Command}.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"adoubleb"},"content":"     * Handles any exceptions during the process, ensuring errors are captured and a response is generated.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"adoubleb"},"content":"     * Optionally updates the dialog UI using the configured callback method.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"adoubleb"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"adoubleb"},"content":"     * @param input The raw input string provided by the user. This is expected to contain a command and optional","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"adoubleb"},"content":"     *              arguments.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"adoubleb"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"adoubleb"},"content":"    public void respondToUser(String input) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"adoubleb"},"content":"        String response;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"adoubleb"},"content":"        assert dialogUpdater !\u003d null;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"adoubleb"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"adoubleb"},"content":"            UserInput userInput \u003d new UserInput(input);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"adoubleb"},"content":"            Command command \u003d userInput.parse();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"adoubleb"},"content":"            response \u003d command.execute(items, ui, tasklistManager);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"adoubleb"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"adoubleb"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"adoubleb"},"content":"            response \u003d \"Error: \" + e.getMessage();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"adoubleb"},"content":"        if (!tasklistManager.isInitializedCorrectly()) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"adoubleb"},"content":"            response +\u003d \"Data file cannot be initialized correctly. Program cannot store data to memory.\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"adoubleb"},"content":"        dialogUpdater.accept(response, new Image(\"/images/Brownie.jpg\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"adoubleb"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"adoubleb":102}},{"path":"src/main/java/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adoubleb"},"content":"package commands;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adoubleb"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adoubleb"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adoubleb"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adoubleb"},"content":"import iomanager.TasklistManager;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adoubleb"},"content":"import parser.DateTimeExtractor;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adoubleb"},"content":"import task.Deadline;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adoubleb"},"content":"import task.Event;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adoubleb"},"content":"import task.Task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adoubleb"},"content":"import task.TaskType;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adoubleb"},"content":"import task.Todo;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adoubleb"},"content":"import ui.Ui;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adoubleb"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adoubleb"},"content":" * Represents a command to add a task to the task list. This class extends the","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adoubleb"},"content":" * abstract Command class and provides the implementation for adding tasks of","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adoubleb"},"content":" * type TODO, EVENT, or DEADLINE.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adoubleb"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adoubleb"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adoubleb"},"content":"    private static final String START_DELIMITER \u003d \"start:\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adoubleb"},"content":"    private static final String BY_DELIMITER \u003d \"by:\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adoubleb"},"content":"    private final TaskType taskType;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adoubleb"},"content":"    private final String content;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adoubleb"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adoubleb"},"content":"     * @param taskType the type of task to be added (TODO, EVENT, or DEADLINE)","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adoubleb"},"content":"     * @param content  the details or description of the task, including any","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adoubleb"},"content":"     *                 additional information such as dates or times for EVENTS","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adoubleb"},"content":"     *                 and DEADLINES","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adoubleb"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adoubleb"},"content":"    public AddCommand(TaskType taskType, String content) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adoubleb"},"content":"        super();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adoubleb"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adoubleb"},"content":"        this.content \u003d content.trim();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adoubleb"},"content":"    private boolean hasDuplicate(ArrayList\u003cTask\u003e tasks, Task taskToAdd) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adoubleb"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adoubleb"},"content":"            if (t.equals(taskToAdd)) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adoubleb"},"content":"                return true;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adoubleb"},"content":"            }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adoubleb"},"content":"        return false;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adoubleb"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adoubleb"},"content":"     * @param tasks The list of tasks to which the new task will be added.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adoubleb"},"content":"     * @param ui The user interface instance for displaying messages and feedback.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adoubleb"},"content":"     * @param tasklistManager The manager responsible for saving and managing the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adoubleb"},"content":"     * @throws InvalidCommandException If the task type is invalid or the content cannot be parsed.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adoubleb"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adoubleb"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adoubleb"},"content":"    public String execute(ArrayList\u003cTask\u003e tasks, Ui ui, TasklistManager tasklistManager) throws","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adoubleb"},"content":"            InvalidCommandException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adoubleb"},"content":"        String result;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adoubleb"},"content":"        Task taskToAdd;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adoubleb"},"content":"        switch (taskType) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adoubleb"},"content":"        case TODO:","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adoubleb"},"content":"            taskToAdd \u003d createTodo(content);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adoubleb"},"content":"            break;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"adoubleb"},"content":"        case EVENT:","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"adoubleb"},"content":"            taskToAdd \u003d createEvent(content);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"adoubleb"},"content":"            break;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"adoubleb"},"content":"        case DEADLINE:","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"adoubleb"},"content":"            taskToAdd \u003d createDeadline(content);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"adoubleb"},"content":"            break;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"adoubleb"},"content":"        default:","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"adoubleb"},"content":"            throw new InvalidCommandException(\"Invalid task type\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"adoubleb"},"content":"        assert taskToAdd !\u003d null;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"adoubleb"},"content":"        result \u003d \"\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"adoubleb"},"content":"        if (hasDuplicate(tasks, taskToAdd)) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"adoubleb"},"content":"            result +\u003d \"Note: An exact copy of the task exists in the list. The new task is added anyways.\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"adoubleb"},"content":"        tasks.add(taskToAdd);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"adoubleb"},"content":"        tasklistManager.saveTasksToFile(tasks);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"adoubleb"},"content":"        int userFriendlyIndex \u003d tasks.size() - 1;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"adoubleb"},"content":"        result +\u003d ui.addSuccessMessage(userFriendlyIndex, taskToAdd.toString());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"adoubleb"},"content":"        return result;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"adoubleb"},"content":"    private Task createTodo(String content) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"adoubleb"},"content":"        return new Todo(content);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"adoubleb"},"content":"    private Task createEvent(String content) throws InvalidCommandException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"adoubleb"},"content":"        int startIndex \u003d content.indexOf(START_DELIMITER);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"adoubleb"},"content":"        String description \u003d content.substring(0, startIndex).trim();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"adoubleb"},"content":"        DateTimeExtractor extractDateTime \u003d new DateTimeExtractor(this.content);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"adoubleb"},"content":"        ArrayList\u003cLocalDateTime\u003e datetimesEvent \u003d extractDateTime.eventDateTime();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"adoubleb"},"content":"        Task taskToAdd \u003d new Event(description, datetimesEvent.get(0), datetimesEvent.get(1));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"adoubleb"},"content":"        return taskToAdd;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"adoubleb"},"content":"    private Task createDeadline(String content) throws InvalidCommandException {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"adoubleb"},"content":"        int byIndex \u003d content.indexOf(BY_DELIMITER);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"adoubleb"},"content":"        String description \u003d content.substring(0, byIndex).trim();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"adoubleb"},"content":"        DateTimeExtractor extractDateTime \u003d new DateTimeExtractor(this.content);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"adoubleb"},"content":"        ArrayList\u003cLocalDateTime\u003e datetimesDeadline \u003d extractDateTime.deadlineDateTime();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"adoubleb"},"content":"        Task taskToAdd \u003d new Deadline(description, datetimesDeadline.get(0));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"adoubleb"},"content":"        return taskToAdd;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"adoubleb"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"adoubleb":106}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adoubleb"},"content":"package commands;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adoubleb"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adoubleb"},"content":"import iomanager.TasklistManager;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adoubleb"},"content":"import task.Task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adoubleb"},"content":"import ui.Ui;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adoubleb"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adoubleb"},"content":" * Represents an abstract command in the task management application.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adoubleb"},"content":" * Each subclass of Command encapsulates a specific action or user instruction","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adoubleb"},"content":" * such as adding, deleting, marking, or listing tasks. This design allows for","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adoubleb"},"content":" * extending the application by implementing new commands while adhering to the","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adoubleb"},"content":" * same structure.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adoubleb"},"content":" *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adoubleb"},"content":" * Subclasses are required to implement the `execute` method, which defines","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adoubleb"},"content":" * the specific behavior of the command. Commands executed can modify the task list,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adoubleb"},"content":" * interact with the user interface, and utilize the task list manager for file persistence.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adoubleb"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adoubleb"},"content":"public abstract class Command {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adoubleb"},"content":"    public abstract String execute(ArrayList\u003cTask\u003e tasks, Ui ui, TasklistManager tasklistManager) throws Exception;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adoubleb"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"adoubleb":22}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adoubleb"},"content":"package commands;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adoubleb"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adoubleb"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adoubleb"},"content":"import iomanager.TasklistManager;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adoubleb"},"content":"import task.Task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adoubleb"},"content":"import ui.Ui;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adoubleb"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adoubleb"},"content":" * Represents a command that deletes a specific task from the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adoubleb"},"content":" * The task to be deleted is specified via its index in the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adoubleb"},"content":" * This index is 0-based.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adoubleb"},"content":" *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adoubleb"},"content":" * When executed, the command removes the task from the list, saves the updated list","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adoubleb"},"content":" * using the TasklistManager, and notifies the user through the UI. If the provided","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adoubleb"},"content":" * index is invalid (negative or greater than the largest index in the task list),","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adoubleb"},"content":" * an InvalidCommandException is thrown.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adoubleb"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adoubleb"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adoubleb"},"content":"    private int index;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adoubleb"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adoubleb"},"content":"     * Constructs a DeleteCommand to delete a task at the specified index in the task list.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adoubleb"},"content":"     * The index provided is 0-indexed, meaning the first element in the list has index 0.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adoubleb"},"content":"     * If executed, this command will remove the task from the list, save the updated","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adoubleb"},"content":"     * task list, and provide feedback to the user. An exception will be thrown if","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adoubleb"},"content":"     * the index is negative or out of bounds.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adoubleb"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adoubleb"},"content":"     * @param index The 0-based index of the task to be deleted from the task list.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adoubleb"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adoubleb"},"content":"    public DeleteCommand(int index) { //attention! index here is 0-indexed","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adoubleb"},"content":"        super();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adoubleb"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adoubleb"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adoubleb"},"content":"     * Executes the delete command by removing a task from the provided task list,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adoubleb"},"content":"     * saving the updated list to the file using TasklistManager, and displaying a","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adoubleb"},"content":"     * confirmation message to the user using the UI.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adoubleb"},"content":"     * If the provided task index is invalid (negative or out of bounds),","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adoubleb"},"content":"     * an InvalidCommandException is thrown.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adoubleb"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adoubleb"},"content":"     * @param tasks The current list of tasks from which the task will be deleted.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adoubleb"},"content":"     * @param ui The UI instance used to display messages to the user.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adoubleb"},"content":"     * @param tasklistManager The TasklistManager instance used to save the updated list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adoubleb"},"content":"     * @throws InvalidCommandException If the specified task index is negative or exceeds the task list size.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adoubleb"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adoubleb"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adoubleb"},"content":"    public String execute(ArrayList\u003cTask\u003e tasks, Ui ui, TasklistManager tasklistManager) throws","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adoubleb"},"content":"            InvalidCommandException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adoubleb"},"content":"        if (this.index \u003c 0) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adoubleb"},"content":"            throw new InvalidCommandException(\"Can\u0027t delete negative index\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adoubleb"},"content":"        } else if (index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adoubleb"},"content":"            throw new InvalidCommandException(\"Can\u0027t delete index: \" + (this.index + 1)","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adoubleb"},"content":"                   + \". Biggest index is \" + tasks.size());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adoubleb"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adoubleb"},"content":"        tasks.remove(index);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adoubleb"},"content":"        tasklistManager.saveTasksToFile(tasks);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adoubleb"},"content":"        return ui.deleteSuccessMessage(index, task.toString());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"adoubleb"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"adoubleb":64}},{"path":"src/main/java/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adoubleb"},"content":"package commands;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adoubleb"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adoubleb"},"content":"import iomanager.TasklistManager;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adoubleb"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adoubleb"},"content":"import javafx.util.Duration;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adoubleb"},"content":"import ui.Ui;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adoubleb"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adoubleb"},"content":" * Represents a command to terminate the application.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adoubleb"},"content":" * When executed, it displays a goodbye message to the user and then exits the program.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adoubleb"},"content":" * Responsibilities:","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adoubleb"},"content":" * 1. Interacts with the Ui class to display a goodbye message.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adoubleb"},"content":" * 2. Terminates the application process.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adoubleb"},"content":" * Overrides the execute method from the Command class.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adoubleb"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adoubleb"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adoubleb"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adoubleb"},"content":"    public String execute(ArrayList\u003ctask.Task\u003e tasks, Ui ui, TasklistManager tasklistManager) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adoubleb"},"content":"        handleBye();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adoubleb"},"content":"        return ui.showGoodbye();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adoubleb"},"content":"    private void handleBye() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adoubleb"},"content":"        PauseTransition pause \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adoubleb"},"content":"        pause.setOnFinished(event -\u003e {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adoubleb"},"content":"            System.exit(0);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adoubleb"},"content":"        });","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adoubleb"},"content":"        // Start the pause","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adoubleb"},"content":"        pause.play();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adoubleb"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false}],"authorContributionMap":{"adoubleb":36}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adoubleb"},"content":"package commands;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adoubleb"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adoubleb"},"content":"import iomanager.TasklistManager;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adoubleb"},"content":"import task.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adoubleb"},"content":"import ui.Ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adoubleb"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adoubleb"},"content":" * The FindCommand class represents a command to search for tasks","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adoubleb"},"content":" * in the task list containing a specific keyword in their descriptions.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adoubleb"},"content":" *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adoubleb"},"content":" * Upon execution, this command filters tasks whose descriptions match","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adoubleb"},"content":" * the keyword (case-insensitive) and displays the result using the user interface.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adoubleb"},"content":" * If no matching tasks are found, a message is displayed indicating this.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adoubleb"},"content":" *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adoubleb"},"content":" * This command interacts with the task list, user interface,","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adoubleb"},"content":" * and optionally the tasklist manager for execution.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adoubleb"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adoubleb"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adoubleb"},"content":"    private String keyword;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adoubleb"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adoubleb"},"content":"     * Constructs a FindCommand with the specified keyword.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adoubleb"},"content":"     * This command is used to search for tasks in the task list","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adoubleb"},"content":"     * containing the provided keyword in their description.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adoubleb"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adoubleb"},"content":"     * @param keyword The keyword to search for in the descriptions of tasks.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adoubleb"},"content":"     *                The search is case-insensitive.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adoubleb"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adoubleb"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adoubleb"},"content":"        super();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adoubleb"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adoubleb"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adoubleb"},"content":"    public String execute(ArrayList\u003cTask\u003e tasks, Ui ui, TasklistManager tasklistManager) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adoubleb"},"content":"        ArrayList\u003cTask\u003e res \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adoubleb"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adoubleb"},"content":"            if (t.getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adoubleb"},"content":"                res.add(t);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adoubleb"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adoubleb"},"content":"        boolean isEmpty \u003d res.size() \u003d\u003d 0;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adoubleb"},"content":"        if (isEmpty) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adoubleb"},"content":"            return \"No matching tasks found with description containing \\\"\" + keyword + \"\\\"\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adoubleb"},"content":"        return ui.showTasklist(res);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adoubleb"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"adoubleb":52}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adoubleb"},"content":"package commands;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adoubleb"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adoubleb"},"content":"import iomanager.TasklistManager;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adoubleb"},"content":"import task.Task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adoubleb"},"content":"import ui.Ui;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adoubleb"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adoubleb"},"content":" * Represents the ListCommand that lists all tasks currently stored in the application\u0027s task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adoubleb"},"content":" * This command, when executed, displays the list of tasks to the user through the user interface.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adoubleb"},"content":" *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adoubleb"},"content":" * The command does not modify the task list but relies on the Ui class to handle user interaction","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adoubleb"},"content":" * and display the task list in a readable format.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adoubleb"},"content":" *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adoubleb"},"content":" * This class extends the abstract Command class and implements the execute method to perform its","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adoubleb"},"content":" * specific functionality.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adoubleb"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adoubleb"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adoubleb"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adoubleb"},"content":"     * Executes the ListCommand, which displays all tasks currently stored","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adoubleb"},"content":"     * in the user\u0027s task list using the provided Ui object.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adoubleb"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adoubleb"},"content":"     * @param tasks The list of tasks to be displayed, represented as an ArrayList of Task objects.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adoubleb"},"content":"     * @param ui The Ui object responsible for displaying the list of tasks to the user.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adoubleb"},"content":"     * @param tasklistManager The TasklistManager managing operations on the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adoubleb"},"content":"     *                        This parameter is not utilized in this implementation of the execute method.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adoubleb"},"content":"     * @throws Exception If any unexpected errors occur during the execution of the command.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adoubleb"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adoubleb"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adoubleb"},"content":"    public String execute(ArrayList\u003cTask\u003e tasks, Ui ui, TasklistManager tasklistManager) throws Exception {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adoubleb"},"content":"        return ui.showTasklist(tasks);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adoubleb"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"adoubleb":35}},{"path":"src/main/java/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adoubleb"},"content":"package commands;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adoubleb"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adoubleb"},"content":"import iomanager.TasklistManager;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adoubleb"},"content":"import task.Task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adoubleb"},"content":"import ui.Ui;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adoubleb"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adoubleb"},"content":" * Represents a command to mark a task in the task list as done or undone.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adoubleb"},"content":" * This command is used to toggle the completion status of a specific task","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adoubleb"},"content":" * based on the user’s input.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adoubleb"},"content":" *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adoubleb"},"content":" * The command requires the index of the task in the task list and a boolean","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adoubleb"},"content":" * value indicating whether the task should be marked as done or undone.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adoubleb"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adoubleb"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adoubleb"},"content":"    private final int index;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adoubleb"},"content":"    private final boolean isMarkedDone;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adoubleb"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adoubleb"},"content":"     * Constructs a MarkCommand with the index of the task to be marked and a flag","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adoubleb"},"content":"     * indicating whether the task should be marked as done or undone.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adoubleb"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adoubleb"},"content":"     * @param index The zero-based index of the task in the task list to be marked.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adoubleb"},"content":"     * @param markAsDone A boolean flag indicating if the task should be marked as done (true) or undone (false).","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adoubleb"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adoubleb"},"content":"    public MarkCommand(int index, boolean markAsDone) { //index should be 0-index","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adoubleb"},"content":"        super();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adoubleb"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adoubleb"},"content":"        this.isMarkedDone \u003d markAsDone;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adoubleb"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adoubleb"},"content":"     * Executes the MarkCommand by marking a specified task in the task list as either done or undone.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adoubleb"},"content":"     * Updates and saves the task list after the operation and displays the updated list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adoubleb"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adoubleb"},"content":"     * @param tasks The current list of tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adoubleb"},"content":"     * @param ui An instance of the Ui class responsible for displaying messages to the user.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adoubleb"},"content":"     * @param tasklistManager The manager responsible for saving changes to the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adoubleb"},"content":"     * @throws Exception If the operation fails, typically due to invalid input or saving errors.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adoubleb"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adoubleb"},"content":"    public String execute(ArrayList\u003cTask\u003e tasks, Ui ui, TasklistManager tasklistManager) throws Exception {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adoubleb"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adoubleb"},"content":"        String res;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adoubleb"},"content":"        if (isMarkedDone) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adoubleb"},"content":"            task.markAsDone();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adoubleb"},"content":"            res \u003d ui.markSuccessMessage(index, task.toString(), true);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adoubleb"},"content":"        } else {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adoubleb"},"content":"            task.markAsUndone();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adoubleb"},"content":"            res \u003d ui.markSuccessMessage(index, task.toString(), false);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adoubleb"},"content":"        tasklistManager.saveTasksToFile(tasks);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adoubleb"},"content":"        res +\u003d \"\\n\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adoubleb"},"content":"        res +\u003d ui.showTasklist(tasks);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adoubleb"},"content":"        return res;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adoubleb"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"adoubleb":58}},{"path":"src/main/java/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adoubleb"},"content":"package exceptions;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adoubleb"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adoubleb"},"content":" * Represents an exception that is thrown when an invalid or unrecognized command is encountered.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adoubleb"},"content":" * This custom exception is typically used in the application to handle errors related to","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adoubleb"},"content":" * user input when parsing commands.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adoubleb"},"content":" *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adoubleb"},"content":" * This class extends the {@code Exception} class and provides a constructor to initialize the error message.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adoubleb"},"content":" *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adoubleb"},"content":" * Usage scenarios:","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adoubleb"},"content":" * - Thrown when the user provides an invalid or undefined command.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adoubleb"},"content":" * - Used to indicate input-related errors during command processing.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adoubleb"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adoubleb"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adoubleb"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adoubleb"},"content":"        super(message);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adoubleb"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"adoubleb":18}},{"path":"src/main/java/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adoubleb"},"content":"package gui;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adoubleb"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adoubleb"},"content":"import brownie.Brownie;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adoubleb"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adoubleb"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adoubleb"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adoubleb"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adoubleb"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adoubleb"},"content":"import windows.MainWindow;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adoubleb"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adoubleb"},"content":" * Main class serves as the entry point for the JavaFX application.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adoubleb"},"content":" * It initializes and sets up the primary stage, loads the main FXML layout,","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adoubleb"},"content":" * and links the application logic (Brownie instance) to the GUI controller.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adoubleb"},"content":" *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adoubleb"},"content":" * This class extends the Application class and overrides the start method","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adoubleb"},"content":" * to configure the JavaFX GUI components.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adoubleb"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adoubleb"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adoubleb"},"content":"    private Brownie brownie \u003d new Brownie();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adoubleb"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adoubleb"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adoubleb"},"content":"        try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adoubleb"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adoubleb"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adoubleb"},"content":"            stage.setTitle(\"Brownie\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adoubleb"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adoubleb"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adoubleb"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBrownie(brownie);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adoubleb"},"content":"            stage.show();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adoubleb"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adoubleb"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adoubleb"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"adoubleb":38}},{"path":"src/main/java/iomanager/TasklistManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adoubleb"},"content":"package iomanager;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adoubleb"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adoubleb"},"content":"import java.io.File;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adoubleb"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adoubleb"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adoubleb"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adoubleb"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adoubleb"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adoubleb"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adoubleb"},"content":"import task.Task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adoubleb"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adoubleb"},"content":" * Manages the tasklist operations such as initialization, saving tasks, and loading tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adoubleb"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adoubleb"},"content":"public class TasklistManager {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adoubleb"},"content":"    private static final String DATA_FOLDER_PATH \u003d \"./data/brownie\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adoubleb"},"content":"    private static final String TASKLIST_FILE_PATH \u003d DATA_FOLDER_PATH + \"/tasklist.txt\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adoubleb"},"content":"    private final PrintWriter writer;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adoubleb"},"content":"    private final BufferedReader reader;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adoubleb"},"content":"    private boolean isInitializedCorrectly \u003d false;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adoubleb"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adoubleb"},"content":"     * Constructs a new instance of the TasklistManager.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adoubleb"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adoubleb"},"content":"     * This constructor initializes the input and output streams used by the manager","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adoubleb"},"content":"     * to interact with the system. Specifically:","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adoubleb"},"content":"     * - A PrintWriter is initialized to allow writing output messages to the system\u0027s","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adoubleb"},"content":"     *   standard output stream.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adoubleb"},"content":"     * - A BufferedReader is initialized to read input from the system\u0027s standard input stream.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adoubleb"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adoubleb"},"content":"     * These streams are utilized by various methods in the TasklistManager to handle","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adoubleb"},"content":"     * user interaction and file management tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adoubleb"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adoubleb"},"content":"    public TasklistManager() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adoubleb"},"content":"        this.writer \u003d new PrintWriter(System.out);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adoubleb"},"content":"        this.reader \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adoubleb"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adoubleb"},"content":"     * Ensures that the tasklist file is available and valid.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adoubleb"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adoubleb"},"content":"    public void initializeTasklist() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adoubleb"},"content":"        File dataFolder \u003d new File(DATA_FOLDER_PATH);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adoubleb"},"content":"        File tasklistFile \u003d new File(TASKLIST_FILE_PATH);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adoubleb"},"content":"        ensureDataFolderExists(dataFolder);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adoubleb"},"content":"        if (!tasklistFile.exists()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adoubleb"},"content":"            createNewTasklistFile(tasklistFile);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adoubleb"},"content":"        } else if (isFileCorrupted(tasklistFile)) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adoubleb"},"content":"            handleCorruptedFile(tasklistFile);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adoubleb"},"content":"        isInitializedCorrectly \u003d true;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adoubleb"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adoubleb"},"content":"     * Ensures the data folder exists, and creates it if it doesn\u0027t.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adoubleb"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adoubleb"},"content":"    private void ensureDataFolderExists(File dataFolder) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adoubleb"},"content":"        if (!dataFolder.exists()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"adoubleb"},"content":"            if (dataFolder.mkdirs()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"adoubleb"},"content":"                writer.println(\"Data folder created at \" + DATA_FOLDER_PATH);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"adoubleb"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"adoubleb"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"adoubleb"},"content":"     * Attempts to create a new tasklist.txt file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"adoubleb"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"adoubleb"},"content":"    private void createNewTasklistFile(File tasklistFile) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"adoubleb"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"adoubleb"},"content":"            tasklistFile.createNewFile();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"adoubleb"},"content":"            writer.println(\"tasklist.txt created successfully at \" + TASKLIST_FILE_PATH);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"adoubleb"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"adoubleb"},"content":"            writer.println(\"Error while creating tasklist.txt: \" + e.getMessage());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"adoubleb"},"content":"            writer.flush();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"adoubleb"},"content":"            System.exit(1);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"adoubleb"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"adoubleb"},"content":"     * Checks if the file is corrupted.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"adoubleb"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"adoubleb"},"content":"    private boolean isFileCorrupted(File tasklistFile) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"adoubleb"},"content":"        try (BufferedReader fileReader \u003d new BufferedReader(new FileReader(tasklistFile))) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"adoubleb"},"content":"            String firstLine \u003d fileReader.readLine();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"adoubleb"},"content":"            // corruption check: file is empty","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"adoubleb"},"content":"            return firstLine \u003d\u003d null || firstLine.trim().isEmpty();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"adoubleb"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"adoubleb"},"content":"            return true; // File cannot be read","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"adoubleb"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"adoubleb"},"content":"     * Handles cases where the file is corrupted.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"adoubleb"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"adoubleb"},"content":"    private void handleCorruptedFile(File tasklistFile) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"adoubleb"},"content":"        recreateTasklistFile(tasklistFile);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"adoubleb"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"adoubleb"},"content":"     * Deletes the existing corrupted file and creates a new one.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"adoubleb"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"adoubleb"},"content":"    private void recreateTasklistFile(File tasklistFile) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"adoubleb"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"adoubleb"},"content":"            if (tasklistFile.delete() \u0026\u0026 tasklistFile.createNewFile()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"adoubleb"},"content":"                writer.println(\"New tasklist.txt created successfully at \" + TASKLIST_FILE_PATH);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"adoubleb"},"content":"                writer.flush();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"adoubleb"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"adoubleb"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"adoubleb"},"content":"            writer.println(\"Error while recreating tasklist.txt: \" + e.getMessage());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"adoubleb"},"content":"            writer.flush();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"adoubleb"},"content":"            System.exit(1);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"adoubleb"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"adoubleb"},"content":"     * Saves the current list of tasks to the file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"adoubleb"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"adoubleb"},"content":"     * @param items The list of tasks to save.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"adoubleb"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"adoubleb"},"content":"    public void saveTasksToFile(ArrayList\u003cTask\u003e items) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"adoubleb"},"content":"        try (PrintWriter fileWriter \u003d new PrintWriter(new FileWriter(TASKLIST_FILE_PATH))) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"adoubleb"},"content":"            for (Task task : items) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"adoubleb"},"content":"                fileWriter.println(task.serialize()); // Serialize each task to a line in the file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"adoubleb"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"adoubleb"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"adoubleb"},"content":"            writer.println(\"Error saving tasks to file: \" + e.getMessage());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"adoubleb"},"content":"            writer.flush();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"adoubleb"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"adoubleb"},"content":"     * Loads tasks from the file into an ArrayList.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"adoubleb"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"adoubleb"},"content":"     * @return The list of tasks loaded from the file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"adoubleb"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"adoubleb"},"content":"    public ArrayList\u003cTask\u003e loadTasksFromFile() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"adoubleb"},"content":"        ArrayList\u003cTask\u003e items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"adoubleb"},"content":"        File tasklistFile \u003d new File(TASKLIST_FILE_PATH);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"adoubleb"},"content":"        try (BufferedReader fileReader \u003d new BufferedReader(new FileReader(tasklistFile))) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"adoubleb"},"content":"            String line;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"adoubleb"},"content":"            while ((line \u003d fileReader.readLine()) !\u003d null) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"adoubleb"},"content":"                Task task \u003d Task.deserialize(line); // Deserialize each line back into a task object","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"adoubleb"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"adoubleb"},"content":"                    items.add(task);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"adoubleb"},"content":"                }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"adoubleb"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"adoubleb"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"adoubleb"},"content":"            writer.println(\"Error loading tasks from file: \" + e.getMessage());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"adoubleb"},"content":"            writer.flush();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"adoubleb"},"content":"        return items;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"adoubleb"},"content":"    /**","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"adoubleb"},"content":"     * Checks whether the TasklistManager has been correctly initialized.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"adoubleb"},"content":"     *","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"adoubleb"},"content":"     * @return true if the TasklistManager was properly initialized; false otherwise.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"adoubleb"},"content":"     */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"adoubleb"},"content":"    public boolean isInitializedCorrectly() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"adoubleb"},"content":"        return isInitializedCorrectly;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"adoubleb"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"adoubleb":170}},{"path":"src/main/java/launcher/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adoubleb"},"content":"package launcher;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adoubleb"},"content":"import gui.Main;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adoubleb"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adoubleb"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adoubleb"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adoubleb"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adoubleb"},"content":"public class Launcher {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adoubleb"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adoubleb"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adoubleb"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"adoubleb":13}},{"path":"src/main/java/parser/DateTimeExtractor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adoubleb"},"content":"package parser;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adoubleb"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adoubleb"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adoubleb"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adoubleb"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adoubleb"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adoubleb"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adoubleb"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adoubleb"},"content":" * Provides functionality to extract DateTime values representing events or deadlines from an input string.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adoubleb"},"content":" * The class is designed to parse specific patterns for start and end times for events, as well as","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adoubleb"},"content":" * a deadline DateTime for tasks. It uses predefined patterns to identify and return these DateTime values","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adoubleb"},"content":" * in a structured manner.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adoubleb"},"content":" *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adoubleb"},"content":" * The class expects input strings to conform to a specific format:","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adoubleb"},"content":" * 1. For events: \"start: dd-MM-yyyy HH:mm end: dd-MM-yyyy HH:mm\".","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adoubleb"},"content":" * 2. For deadlines: \"by: dd-MM-yyyy HH:mm\".","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adoubleb"},"content":" *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adoubleb"},"content":" * Features include:","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adoubleb"},"content":" * - Parsing event strings with start and end DateTime values.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adoubleb"},"content":" * - Parsing deadline strings and extracting the corresponding DateTime.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adoubleb"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adoubleb"},"content":"public class DateTimeExtractor {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adoubleb"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\u0027T\u0027HH:mm\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adoubleb"},"content":"    private String input;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adoubleb"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adoubleb"},"content":"     * Constructs a DateTimeExtractor instance with the provided input string.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adoubleb"},"content":"     * This input is expected to conform to specific date-time patterns that","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adoubleb"},"content":"     * the methods in this class will parse and extract.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adoubleb"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adoubleb"},"content":"     * @param input The string containing date-time information to be extracted and parsed.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adoubleb"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adoubleb"},"content":"    public DateTimeExtractor(String input) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adoubleb"},"content":"        this.input \u003d input;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adoubleb"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adoubleb"},"content":"     * Parses the input string provided to the instance of the class and extracts start and end","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adoubleb"},"content":"     * date-time values in the format \"dd-MM-yyyy HH:mm\". The input string should conform to the","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adoubleb"},"content":"     * pattern: \"start: dd-MM-yyyy HH:mm end: dd-MM-yyyy HH:mm\".","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adoubleb"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adoubleb"},"content":"     * If the input string matches the expected pattern, the extracted date-time values are","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adoubleb"},"content":"     * returned as a list of `LocalDateTime` objects. The first element in the list corresponds","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adoubleb"},"content":"     * to the start date-time, and the second element corresponds to the end date-time. If the","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adoubleb"},"content":"     * input string does not match the expected pattern, an empty list is returned.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adoubleb"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adoubleb"},"content":"     * @return a list containing two `LocalDateTime` objects (start and end date-time) if the input","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adoubleb"},"content":"     *         matches the expected pattern; otherwise, an empty list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adoubleb"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adoubleb"},"content":"    public ArrayList\u003cLocalDateTime\u003e eventDateTime() throws InvalidCommandException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adoubleb"},"content":"        String pattern \u003d \"start:\\\\s*(\\\\d{2}-\\\\d{2}-\\\\d{4})\\\\s+(\\\\d{2}:\\\\d{2})\\\\s*end:\\\\s*(\\\\d{2}-\\\\d{2}-\\\\d{4})\\\\s\"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adoubleb"},"content":"                + \"+(\\\\d{2}:\\\\d{2})\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adoubleb"},"content":"        Pattern regex \u003d Pattern.compile(pattern);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adoubleb"},"content":"        Matcher matcher \u003d regex.matcher(input);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adoubleb"},"content":"        ArrayList\u003cLocalDateTime\u003e toReturn \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adoubleb"},"content":"        if (matcher.find()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adoubleb"},"content":"            LocalDateTime start \u003d LocalDateTime.parse(matcher.group(1) + \"T\" + matcher.group(2), DATE_TIME_FORMATTER);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adoubleb"},"content":"            LocalDateTime end \u003d LocalDateTime.parse(matcher.group(3) + \"T\" + matcher.group(4), DATE_TIME_FORMATTER);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adoubleb"},"content":"            toReturn.add(start);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"adoubleb"},"content":"            toReturn.add(end);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"adoubleb"},"content":"        } else {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"adoubleb"},"content":"            throw new InvalidCommandException(\"Invalid Date/Time Format\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"adoubleb"},"content":"        return toReturn;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"adoubleb"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"adoubleb"},"content":"     * Extracts and parses the deadline date and time from the input string.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"adoubleb"},"content":"     * The input string must match a specific pattern, where the date is in the format \"dd-MM-yyyy\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"adoubleb"},"content":"     * and the time is in the format \"HH:mm\", prefixed by \"by:\". This method compiles and applies the regex","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"adoubleb"},"content":"     * pattern to extract the date and time information and converts it into a list of `LocalDateTime` objects.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"adoubleb"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"adoubleb"},"content":"     * If the input string does not conform to the required format, this method will throw an","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"adoubleb"},"content":"     * {@code InvalidCommandException}.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"adoubleb"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"adoubleb"},"content":"     * @return a list containing one `LocalDateTime` object representing the deadline date and time.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"adoubleb"},"content":"     * @throws InvalidCommandException if the input string does not match the expected date/time format.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"adoubleb"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"adoubleb"},"content":"    public ArrayList\u003cLocalDateTime\u003e deadlineDateTime() throws InvalidCommandException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"adoubleb"},"content":"        String pattern \u003d \"by:\\\\s*(\\\\d{2}-\\\\d{2}-\\\\d{4})\\\\s+(\\\\d{2}:\\\\d{2})\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"adoubleb"},"content":"        Pattern regex \u003d Pattern.compile(pattern);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"adoubleb"},"content":"        Matcher matcher \u003d regex.matcher(this.input);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"adoubleb"},"content":"        ArrayList\u003cLocalDateTime\u003e toReturn \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"adoubleb"},"content":"        if (matcher.find()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"adoubleb"},"content":"            toReturn.add(LocalDateTime.parse(matcher.group(1) + \"T\" + matcher.group(2), DATE_TIME_FORMATTER));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"adoubleb"},"content":"        } else {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"adoubleb"},"content":"            throw new InvalidCommandException(\"Invalid Date/Time Format\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"adoubleb"},"content":"        return toReturn;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"adoubleb"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"adoubleb":100}},{"path":"src/main/java/parser/UserInput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adoubleb"},"content":"package parser;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adoubleb"},"content":"import commands.AddCommand;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adoubleb"},"content":"import commands.Command;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adoubleb"},"content":"import commands.DeleteCommand;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adoubleb"},"content":"import commands.ExitCommand;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adoubleb"},"content":"import commands.FindCommand;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adoubleb"},"content":"import commands.ListCommand;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adoubleb"},"content":"import commands.MarkCommand;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adoubleb"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adoubleb"},"content":"import task.TaskType;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adoubleb"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adoubleb"},"content":" * The UserInput class processes and interprets user input strings into corresponding Command objects.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adoubleb"},"content":" * It is designed to parse and convert raw input from the user into actionable commands","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adoubleb"},"content":" * that can be executed within the task management application.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adoubleb"},"content":" *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adoubleb"},"content":" * It validates the input and ensures that the appropriate command is created or throws","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adoubleb"},"content":" * an exception when the input is invalid or unrecognized. The parse method follows","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adoubleb"},"content":" * specific command formats and rules for supported commands like `list`, `mark`, `unmark`,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adoubleb"},"content":" * `delete`, `todo`, `deadline`, and `event`.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adoubleb"},"content":" *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adoubleb"},"content":" * Responsibilities:","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adoubleb"},"content":" * - Validate the user input for non-null and non-empty conditions.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adoubleb"},"content":" * - Parse the input string to detect and instantiate the appropriate Command object.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adoubleb"},"content":" * - Throw an exception if the command is invalid or incorrectly formatted.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adoubleb"},"content":" *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adoubleb"},"content":" * Supported Commands:","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adoubleb"},"content":" * 1. list - Lists all tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adoubleb"},"content":" * 2. bye - Exits the application.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adoubleb"},"content":" * 3. mark [index] - Marks a task as completed (0-indexed).","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adoubleb"},"content":" * 4. unmark [index] - Marks a task as incomplete (0-indexed).","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adoubleb"},"content":" * 5. delete [index] - Deletes a task from the list (0-indexed).","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adoubleb"},"content":" * 6. todo [description] - Adds a ToDo task with the given description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adoubleb"},"content":" * 7. deadline [description] - Adds a Deadline task with the given description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adoubleb"},"content":" * 8. event [description] - Adds an Event task with the given description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adoubleb"},"content":" *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adoubleb"},"content":" * Exceptions:","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adoubleb"},"content":" * - Throws InvalidCommandException when the input is invalid, empty, or does not match","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adoubleb"},"content":" *   any expected command pattern.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adoubleb"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adoubleb"},"content":"public class UserInput {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adoubleb"},"content":"    private String input;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adoubleb"},"content":"    public UserInput(String input) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adoubleb"},"content":"        this.input \u003d input;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adoubleb"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adoubleb"},"content":"     * Parses the user input and returns the corresponding Command object based on the provided input string.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adoubleb"},"content":"     * This method uses the first word of the input to determine the type of command and any additional tokens","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adoubleb"},"content":"     * or substrings as parameters for the command\u0027s construction.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adoubleb"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adoubleb"},"content":"     * The method expects the input string to be valid and non-empty. If the command is unrecognized, incomplete,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adoubleb"},"content":"     * or if required parameters are missing, it throws an InvalidCommandException.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adoubleb"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adoubleb"},"content":"     * @return The Command object corresponding to the user input.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adoubleb"},"content":"     * @throws InvalidCommandException If the input command is invalid, undefined, or does not meet required formats.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adoubleb"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adoubleb"},"content":"    public Command parse() throws InvalidCommandException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adoubleb"},"content":"        if (input \u003d\u003d null || input.trim().isEmpty()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"adoubleb"},"content":"            throw new InvalidCommandException(\"Input Cannot Be Empty\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"adoubleb"},"content":"        String[] tokens \u003d input.split(\"\\\\s+\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"adoubleb"},"content":"        String commandWord \u003d tokens[0];","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"adoubleb"},"content":"        switch (commandWord) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"adoubleb"},"content":"        case \"list\":","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"adoubleb"},"content":"            return new ListCommand();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"adoubleb"},"content":"        case \"bye\":","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"adoubleb"},"content":"            return new ExitCommand();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"adoubleb"},"content":"        case \"mark\":","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"adoubleb"},"content":"            if (tokens.length !\u003d 2) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"adoubleb"},"content":"                throw new InvalidCommandException(\"Invalid Mark Command\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"adoubleb"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"adoubleb"},"content":"            return new MarkCommand(Integer.parseInt(tokens[1]) - 1, true);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"adoubleb"},"content":"        case \"unmark\":","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"adoubleb"},"content":"            if (tokens.length !\u003d 2) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"adoubleb"},"content":"                throw new InvalidCommandException(\"Invalid Unmark Command\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"adoubleb"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"adoubleb"},"content":"            return new MarkCommand(Integer.parseInt(tokens[1]) - 1, false);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"adoubleb"},"content":"        case \"delete\":","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"adoubleb"},"content":"            if (tokens.length !\u003d 2) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"adoubleb"},"content":"                throw new InvalidCommandException(\"Invalid Delete Command\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"adoubleb"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"adoubleb"},"content":"            return new DeleteCommand(Integer.parseInt(tokens[1]) - 1);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"adoubleb"},"content":"        case \"find\":","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"adoubleb"},"content":"            if (tokens.length !\u003d 2) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"adoubleb"},"content":"                throw new InvalidCommandException(\"Invalid Find Command\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"adoubleb"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"adoubleb"},"content":"            return new FindCommand(tokens[1]);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"adoubleb"},"content":"        case \"todo\":","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"adoubleb"},"content":"            String todoDescription \u003d input.substring(input.indexOf(\" \") + 1);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"adoubleb"},"content":"            return new AddCommand(TaskType.TODO, todoDescription);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"adoubleb"},"content":"        case \"deadline\":","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"adoubleb"},"content":"            String deadlineDescription \u003d input.substring(input.indexOf(\" \") + 1);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"adoubleb"},"content":"            return new AddCommand(TaskType.DEADLINE, deadlineDescription);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"adoubleb"},"content":"        case \"event\":","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"adoubleb"},"content":"            String eventDescription \u003d input.substring(input.indexOf(\" \") + 1);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"adoubleb"},"content":"            return new AddCommand(TaskType.EVENT, eventDescription);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"adoubleb"},"content":"        default:","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"adoubleb"},"content":"            throw new InvalidCommandException(\"Invalid/Undefined command: \" + commandWord);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"adoubleb"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"adoubleb":106}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adoubleb"},"content":"package task;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adoubleb"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adoubleb"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adoubleb"},"content":"import java.util.Objects;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adoubleb"},"content":"/**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adoubleb"},"content":" * The Deadline class represents a task with a specific deadline.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adoubleb"},"content":" * This class extends the abstract Task class and adds a deadline attribute","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adoubleb"},"content":" * to denote the date and time by which the task must be completed.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adoubleb"},"content":" */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adoubleb"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adoubleb"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adoubleb"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adoubleb"},"content":"     * Constructs a new Deadline with the specified description and deadline.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adoubleb"},"content":"     * The deadline represents the specific date and time by which the task must be completed.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adoubleb"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adoubleb"},"content":"     * @param description A brief description of the deadline task.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adoubleb"},"content":"     * @param deadline The date and time by which the task must be completed.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adoubleb"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adoubleb"},"content":"    public Deadline(String description, LocalDateTime deadline) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adoubleb"},"content":"        super(description);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adoubleb"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adoubleb"},"content":"    public String mySymbol() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adoubleb"},"content":"        return \"D\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adoubleb"},"content":"    public String getDeadline() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adoubleb"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy hh:mm a\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adoubleb"},"content":"        return deadline.format(formatter);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adoubleb"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adoubleb"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adoubleb"},"content":"        return super.toString() + \" (by: \" + this.getDeadline() + \")\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adoubleb"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adoubleb"},"content":"     * Serializes the Deadline object into a string representation for storage or transmission.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adoubleb"},"content":"     * The string representation includes the task type, completion status, description,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adoubleb"},"content":"     * and the deadline, separated by a delimiter.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adoubleb"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adoubleb"},"content":"     * @return A serialized string representation of the Deadline object.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adoubleb"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adoubleb"},"content":"    public String serialize() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adoubleb"},"content":"        return mySymbol() + \" | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + this.description","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adoubleb"},"content":"            + \" | \" + deadline;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adoubleb"},"content":"    @Override","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adoubleb"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adoubleb"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adoubleb"},"content":"            return true;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adoubleb"},"content":"        if (obj instanceof Deadline) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adoubleb"},"content":"            Deadline other \u003d (Deadline) obj;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adoubleb"},"content":"            boolean hasSameDescription \u003d Objects.equals(this.description, other.description);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adoubleb"},"content":"            boolean hasSameDeadline \u003d Objects.equals(this.deadline, other.deadline);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adoubleb"},"content":"            return hasSameDescription \u0026\u0026 hasSameDeadline;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adoubleb"},"content":"        return false;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"adoubleb"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"adoubleb":66}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adoubleb"},"content":"package task;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adoubleb"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adoubleb"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adoubleb"},"content":"import java.util.Objects;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adoubleb"},"content":"/**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adoubleb"},"content":" * The Event class represents a task that occurs within a specific time*/","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adoubleb"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adoubleb"},"content":"    private LocalDateTime start;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adoubleb"},"content":"    private LocalDateTime end;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adoubleb"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adoubleb"},"content":"     * Constructs a new Event with the specified description, start time, and end time.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adoubleb"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adoubleb"},"content":"     * @param description A brief description of the event.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adoubleb"},"content":"     * @param start The starting date and time of the event.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adoubleb"},"content":"     * @param end The ending date and time of the event.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adoubleb"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adoubleb"},"content":"    public Event(String description, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adoubleb"},"content":"        super(description);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adoubleb"},"content":"        this.start \u003d start;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adoubleb"},"content":"        this.end \u003d end;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adoubleb"},"content":"    public String mySymbol() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adoubleb"},"content":"        return \"E\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adoubleb"},"content":"    public String getStart() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adoubleb"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy hh:mm a\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adoubleb"},"content":"        String formattedDateTime \u003d start.format(formatter);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adoubleb"},"content":"        return formattedDateTime; // -\u003e Oct 15 2019","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adoubleb"},"content":"    public String getEnd() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adoubleb"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy hh:mm a\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adoubleb"},"content":"        String formattedDateTime \u003d end.format(formatter);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adoubleb"},"content":"        return formattedDateTime;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adoubleb"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adoubleb"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adoubleb"},"content":"        return super.toString() + \" (start: \" + this.getStart() + \")\" + \" (end: \" + this.getEnd() + \")\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adoubleb"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adoubleb"},"content":"     * Serializes the Event object into a string representation for storage or transmission.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adoubleb"},"content":"     * The string representation includes the task type (symbol), completion status,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adoubleb"},"content":"     * description, start time, and end time, separated by a delimiter.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adoubleb"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adoubleb"},"content":"     * @return A serialized string representation of the Event object.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adoubleb"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adoubleb"},"content":"    public String serialize() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adoubleb"},"content":"        return mySymbol() + \" | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + this.description + \" | \"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adoubleb"},"content":"            + this.start + \" | \" + this.end;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adoubleb"},"content":"    @Override","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adoubleb"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adoubleb"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adoubleb"},"content":"            return true;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"adoubleb"},"content":"        if (obj instanceof Event) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"adoubleb"},"content":"            Event other \u003d (Event) obj;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"adoubleb"},"content":"            boolean hasSameDescription \u003d Objects.equals(this.description, other.description);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"adoubleb"},"content":"            boolean hasSameStart \u003d Objects.equals(this.start, other.start);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"adoubleb"},"content":"            boolean hasSameEnd \u003d Objects.equals(this.end, other.end);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"adoubleb"},"content":"            return hasSameDescription \u0026\u0026 hasSameStart \u0026\u0026 hasSameEnd;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"adoubleb"},"content":"        return false;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"adoubleb"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"adoubleb":73}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adoubleb"},"content":"package task;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adoubleb"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adoubleb"},"content":"/**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adoubleb"},"content":" * The Task class is an abstract representation of a*/","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adoubleb"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adoubleb"},"content":"    protected String description;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adoubleb"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adoubleb"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adoubleb"},"content":"     * @param description","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adoubleb"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adoubleb"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adoubleb"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adoubleb"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adoubleb"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adoubleb"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adoubleb"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adoubleb"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adoubleb"},"content":"    public void markAsUndone() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adoubleb"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adoubleb"},"content":"    @Override","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adoubleb"},"content":"    public String toString() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adoubleb"},"content":"        return \"*\" + mySymbol() + \"*\" + \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adoubleb"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adoubleb"},"content":"     * Serializes the task into a String for saving in the file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adoubleb"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adoubleb"},"content":"    public abstract String serialize();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adoubleb"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adoubleb"},"content":"     * Deserializes a String back into a Task object.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adoubleb"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adoubleb"},"content":"     * @param data The serialized task string.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adoubleb"},"content":"     * @return The Task object parsed from the string.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adoubleb"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adoubleb"},"content":"    public static Task deserialize(String data) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adoubleb"},"content":"        String[] parts \u003d data.split(\" \\\\| \");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adoubleb"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adoubleb"},"content":"            return null;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adoubleb"},"content":"        String symbol \u003d parts[0];","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adoubleb"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adoubleb"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adoubleb"},"content":"        Task toReturn;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adoubleb"},"content":"        switch (symbol) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adoubleb"},"content":"        case \"T\":","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adoubleb"},"content":"            toReturn \u003d new Todo(description);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adoubleb"},"content":"            break;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adoubleb"},"content":"        case \"D\":","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"adoubleb"},"content":"            toReturn \u003d new Deadline(description, LocalDateTime.parse(parts[3]));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"adoubleb"},"content":"            break;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"adoubleb"},"content":"        case \"E\":","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"adoubleb"},"content":"            toReturn \u003d new Event(description, LocalDateTime.parse(parts[3]), LocalDateTime.parse(parts[4]));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"adoubleb"},"content":"            break;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"adoubleb"},"content":"        default:","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"adoubleb"},"content":"            return null;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"adoubleb"},"content":"        if (isDone) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"adoubleb"},"content":"            toReturn.markAsDone();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"adoubleb"},"content":"        return toReturn;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"adoubleb"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"adoubleb"},"content":"        return this.description;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"adoubleb"},"content":"    };","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"adoubleb"},"content":"    public abstract String mySymbol();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"adoubleb"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"adoubleb"},"content":"        return isDone;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"adoubleb"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"adoubleb":89}},{"path":"src/main/java/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adoubleb"},"content":"package task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adoubleb"},"content":"/**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adoubleb"},"content":" * Represents the various types of tasks that can be created within the task management application.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adoubleb"},"content":" * Each enum value corresponds to a specific type of task: TODO, EVENT, or DEADLINE.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adoubleb"},"content":" *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adoubleb"},"content":" * This enum is primarily used to categorize tasks and provide type-specific functionality","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adoubleb"},"content":" * such as serialization or handling within the application.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adoubleb"},"content":" */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adoubleb"},"content":"public enum TaskType {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adoubleb"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adoubleb"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adoubleb"},"content":"    DEADLINE(\"deadline\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adoubleb"},"content":"    private final String typeName;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adoubleb"},"content":"    // Constructor for the enum","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adoubleb"},"content":"    TaskType(String typeName) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adoubleb"},"content":"        this.typeName \u003d typeName;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adoubleb"},"content":"    // Getter to retrieve the custom name","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adoubleb"},"content":"    public String getTypeName() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adoubleb"},"content":"        return typeName;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adoubleb"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"adoubleb":28}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adoubleb"},"content":"package task;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adoubleb"},"content":"import java.util.Objects;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adoubleb"},"content":"/**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adoubleb"},"content":" * The Todo class represents a simple task that does not have a specific deadline","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adoubleb"},"content":" * or time frame associated with it. It extends the abstract Task class and","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adoubleb"},"content":" * implements its own serialization and task type symbol.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adoubleb"},"content":" */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adoubleb"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adoubleb"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adoubleb"},"content":"        super(description);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adoubleb"},"content":"    public String mySymbol() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adoubleb"},"content":"        return \"T\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adoubleb"},"content":"    public String serialize() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adoubleb"},"content":"        return mySymbol() + \" | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + this.description;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adoubleb"},"content":"    @Override","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adoubleb"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adoubleb"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adoubleb"},"content":"            return true;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adoubleb"},"content":"        if (obj instanceof Todo) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adoubleb"},"content":"            Todo other \u003d (Todo) obj;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adoubleb"},"content":"            return Objects.equals(this.description, other.description);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adoubleb"},"content":"        return false;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adoubleb"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"adoubleb":37}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adoubleb"},"content":"package ui;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adoubleb"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adoubleb"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adoubleb"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adoubleb"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adoubleb"},"content":"import task.Task;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adoubleb"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adoubleb"},"content":" * The Ui class is responsible for user interaction in a console-based application.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adoubleb"},"content":" * It provides methods to display messages, read user input, and format outputs for","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adoubleb"},"content":" * various operations.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adoubleb"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adoubleb"},"content":"public class Ui {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adoubleb"},"content":"    private BufferedReader reader;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adoubleb"},"content":"    public Ui() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adoubleb"},"content":"        this.reader \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adoubleb"},"content":"    public String showGoodbye() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adoubleb"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adoubleb"},"content":"    public String readCommand() throws IOException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adoubleb"},"content":"        return reader.readLine();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adoubleb"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adoubleb"},"content":"     * Generates a formatted string representing the list of tasks.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adoubleb"},"content":"     * Each task is prefixed with its position in the list, followed by the task description.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adoubleb"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adoubleb"},"content":"     * @param items The list of tasks to display.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adoubleb"},"content":"     * @return A string containing the formatted task list, with each task on a new line.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adoubleb"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adoubleb"},"content":"    public String showTasklist(ArrayList\u003cTask\u003e items) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adoubleb"},"content":"        if (items.size() \u003d\u003d 0) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adoubleb"},"content":"            return \"No tasks found.\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adoubleb"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adoubleb"},"content":"        for (int i \u003d 0; i \u003c items.size(); i++) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adoubleb"},"content":"            result.append((i + 1)).append(\". \").append(items.get(i)).append(\"\\n\");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adoubleb"},"content":"        return result.toString();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adoubleb"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adoubleb"},"content":"     * Constructs a success message indicating whether the specified task was marked as done or undone.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adoubleb"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adoubleb"},"content":"     * @param index The zero-based index of the task in the task list.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adoubleb"},"content":"     * @param description A string representing the description of the task.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adoubleb"},"content":"     * @param markAsDone A boolean flag indicating if the task is marked as done (true) or not done (false).","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adoubleb"},"content":"     * @return A formatted string message describing the success of the marking operation.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adoubleb"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adoubleb"},"content":"    public String markSuccessMessage(int index, String description, boolean markAsDone) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adoubleb"},"content":"        if (markAsDone) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adoubleb"},"content":"            return \"Successfully marked item at index \" + (index + 1) + \": \" + description + \" as done.\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adoubleb"},"content":"        } else {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adoubleb"},"content":"            return \"Successfully noted, item at index \" + (index + 1) + \": \" + description + \" is not done.\";","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"adoubleb"},"content":"    public String deleteSuccessMessage(int index, String description) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"adoubleb"},"content":"        return \"Successfully deleted item at index \" + (index + 1) + \": \" + description;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"adoubleb"},"content":"    public String addSuccessMessage(int index, String description) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"adoubleb"},"content":"        return \"Successfully added item at index \" + (index + 1) + \": \" + description;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"adoubleb"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"adoubleb":72}},{"path":"src/main/java/windows/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adoubleb"},"content":"package windows;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adoubleb"},"content":"import boxes.DialogBox;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adoubleb"},"content":"import brownie.Brownie;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adoubleb"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adoubleb"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adoubleb"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adoubleb"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adoubleb"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adoubleb"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adoubleb"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adoubleb"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adoubleb"},"content":"import javafx.util.Duration;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adoubleb"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adoubleb"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adoubleb"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adoubleb"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adoubleb"},"content":"    @FXML","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adoubleb"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adoubleb"},"content":"    @FXML","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adoubleb"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adoubleb"},"content":"    @FXML","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adoubleb"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adoubleb"},"content":"    @FXML","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adoubleb"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adoubleb"},"content":"    private Brownie brownie;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adoubleb"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Arnold.jpg\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adoubleb"},"content":"    private Image brownieImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Brownie.jpg\"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adoubleb"},"content":"    @FXML","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adoubleb"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adoubleb"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adoubleb"},"content":"    /** Injects the Brownie instance */","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adoubleb"},"content":"    public void setBrownie(Brownie b) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adoubleb"},"content":"        this.brownie \u003d b;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adoubleb"},"content":"        // Define a callback that updates the dialog container in the GUI","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adoubleb"},"content":"        this.brownie.setDialogUpdater((text, image) -\u003e {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adoubleb"},"content":"            // Update the UI with Brownie\u0027s response (on the JavaFX Application Thread)","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adoubleb"},"content":"            dialogContainer.getChildren().add(DialogBox.getBrownieDialog(text, image));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adoubleb"},"content":"        });","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adoubleb"},"content":"        dialogContainer.getChildren().add(DialogBox.getBrownieDialog(\"Hello, my name is Brownie.\", brownieImage));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adoubleb"},"content":"    @FXML","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adoubleb"},"content":"    private void handleUserInput() throws InterruptedException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adoubleb"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adoubleb"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adoubleb"},"content":"                DialogBox.getUserDialog(input, userImage)","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adoubleb"},"content":"        );","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adoubleb"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adoubleb"},"content":"        this.brownie.respondToUser(input);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"adoubleb"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"adoubleb":64}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"adoubleb"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adoubleb"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adoubleb"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adoubleb"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adoubleb"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adoubleb"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adoubleb"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adoubleb"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adoubleb"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adoubleb"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adoubleb"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adoubleb"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adoubleb"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adoubleb"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adoubleb"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adoubleb"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adoubleb"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adoubleb"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adoubleb"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adoubleb"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"adoubleb":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"adoubleb"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adoubleb"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adoubleb"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adoubleb"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adoubleb"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adoubleb"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adoubleb"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adoubleb"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adoubleb"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adoubleb"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adoubleb"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adoubleb"},"content":"            fx:controller\u003d\"windows.MainWindow\"\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adoubleb"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adoubleb"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adoubleb"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adoubleb"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adoubleb"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adoubleb"},"content":"                   prefWidth\u003d\"324.0\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adoubleb"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adoubleb"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adoubleb"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adoubleb"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adoubleb"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adoubleb"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adoubleb"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adoubleb"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adoubleb"},"content":"                text\u003d\"Send\" /\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adoubleb"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adoubleb"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adoubleb"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adoubleb"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adoubleb"},"content":"                    prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adoubleb"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adoubleb"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adoubleb"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adoubleb"},"content":"                      prefHeight\u003d\"552.0\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adoubleb"},"content":"                      prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adoubleb"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adoubleb"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adoubleb"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adoubleb"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"adoubleb":44}},{"path":"src/test/java/commands/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adoubleb"},"content":"package commands;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adoubleb"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adoubleb"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adoubleb"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adoubleb"},"content":"import iomanager.TasklistManager;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adoubleb"},"content":"import task.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adoubleb"},"content":"import task.Todo;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adoubleb"},"content":"import ui.Ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adoubleb"},"content":"//unitBeingTested_descriptionOfTestInputs_expectedOutcome","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adoubleb"},"content":"public class MarkCommandTest {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adoubleb"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adoubleb"},"content":"    public void execute_markAsDone_marksTaskAsDone() throws Exception {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adoubleb"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adoubleb"},"content":"        tasks.add(new Todo(\"Task 1\"));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adoubleb"},"content":"        tasks.add(new Todo(\"Task 2\"));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adoubleb"},"content":"        // Stub Ui to validate interactions","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adoubleb"},"content":"        Ui ui \u003d new Ui() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adoubleb"},"content":"            private boolean isMarkSuccessCalled \u003d false;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adoubleb"},"content":"            private boolean isShowTasklistCalled \u003d false;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adoubleb"},"content":"            @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adoubleb"},"content":"            public String markSuccessMessage(int index, String taskString, boolean markedAsDone) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adoubleb"},"content":"                isMarkSuccessCalled \u003d true;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adoubleb"},"content":"                Assertions.assertEquals(0, index);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adoubleb"},"content":"                Assertions.assertEquals(\"*T*[X] Task 1\", taskString);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adoubleb"},"content":"                Assertions.assertTrue(markedAsDone);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adoubleb"},"content":"                return \"Successfully marked item at index \" + (index + 1) + \": \" + taskString + \" as done.\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adoubleb"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adoubleb"},"content":"            @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adoubleb"},"content":"            public String showTasklist(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adoubleb"},"content":"                isShowTasklistCalled \u003d true;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adoubleb"},"content":"                Assertions.assertEquals(2, tasks.size());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adoubleb"},"content":"                return \"\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adoubleb"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adoubleb"},"content":"        };","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adoubleb"},"content":"        // Stub TasklistManager to validate saveInteractions","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adoubleb"},"content":"        TasklistManager tasklistManager \u003d new TasklistManager() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adoubleb"},"content":"            private boolean isSaveCalled \u003d false;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adoubleb"},"content":"            @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adoubleb"},"content":"            public void saveTasksToFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adoubleb"},"content":"                isSaveCalled \u003d true;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adoubleb"},"content":"                Assertions.assertEquals(2, tasks.size());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adoubleb"},"content":"                Assertions.assertTrue(tasks.get(0).isDone());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adoubleb"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adoubleb"},"content":"        };","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adoubleb"},"content":"        MarkCommand markCommand \u003d new MarkCommand(0, true);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adoubleb"},"content":"        markCommand.execute(tasks, ui, tasklistManager);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adoubleb"},"content":"        Assertions.assertTrue(tasks.get(0).isDone(), \"Task 1 should be marked as done.\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adoubleb"},"content":"        Assertions.assertFalse(tasks.get(1).isDone(), \"Task 2 should remain undone.\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"adoubleb"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"adoubleb"},"content":"    public void execute_markAsUndone_marksTaskAsUndone() throws Exception {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"adoubleb"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"adoubleb"},"content":"        Task task \u003d new Todo(\"Task 1\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"adoubleb"},"content":"        task.markAsDone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"adoubleb"},"content":"        tasks.add(task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"adoubleb"},"content":"        // Stub Ui to validate interactions","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"adoubleb"},"content":"        Ui ui \u003d new Ui() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"adoubleb"},"content":"            private boolean markSuccessCalled \u003d false;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"adoubleb"},"content":"            @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"adoubleb"},"content":"            public String markSuccessMessage(int index, String taskString, boolean markedAsDone) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"adoubleb"},"content":"                markSuccessCalled \u003d true;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"adoubleb"},"content":"                Assertions.assertEquals(0, index);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"adoubleb"},"content":"                Assertions.assertFalse(markedAsDone);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"adoubleb"},"content":"                return \"Successfully marked item at index \" + (index + 1) + \": \" + taskString + \" as undone.\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"adoubleb"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"adoubleb"},"content":"            @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"adoubleb"},"content":"            public String showTasklist(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"adoubleb"},"content":"                Assertions.assertTrue(markSuccessCalled, \"markSuccessMessage should be called first.\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"adoubleb"},"content":"                return \"\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"adoubleb"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"adoubleb"},"content":"        };","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"adoubleb"},"content":"        // Stub TasklistManager to validate saveInteractions","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"adoubleb"},"content":"        TasklistManager tasklistManager \u003d new TasklistManager() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"adoubleb"},"content":"            @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"adoubleb"},"content":"            public void saveTasksToFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"adoubleb"},"content":"                Assertions.assertFalse(tasks.get(0).isDone(), \"Task 1 should be marked as undone.\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"adoubleb"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"adoubleb"},"content":"        };","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"adoubleb"},"content":"        MarkCommand markCommand \u003d new MarkCommand(0, false);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"adoubleb"},"content":"        markCommand.execute(tasks, ui, tasklistManager);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"adoubleb"},"content":"        Assertions.assertFalse(tasks.get(0).isDone(), \"Task 1 should be marked undone.\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"adoubleb"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"adoubleb":105}},{"path":"src/test/java/parser/ExtractDateTimeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adoubleb"},"content":"package parser;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adoubleb"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adoubleb"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adoubleb"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adoubleb"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adoubleb"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adoubleb"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adoubleb"},"content":"//unitBeingTested_descriptionOfTestInputs_expectedOutcome","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adoubleb"},"content":"public class ExtractDateTimeTest {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adoubleb"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adoubleb"},"content":"    void eventDateTime_validInput_successfulExtraction() throws InvalidCommandException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adoubleb"},"content":"        String validInput \u003d \"start: 12-10-2023 14:30 end: 13-10-2023 16:30\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adoubleb"},"content":"        DateTimeExtractor extractDateTime \u003d new DateTimeExtractor(validInput);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adoubleb"},"content":"        ArrayList\u003cLocalDateTime\u003e result \u003d extractDateTime.eventDateTime();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adoubleb"},"content":"        assertEquals(2, result.size());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adoubleb"},"content":"        assertEquals(LocalDateTime.of(2023, 10, 12, 14, 30), result.get(0));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adoubleb"},"content":"        assertEquals(LocalDateTime.of(2023, 10, 13, 16, 30), result.get(1));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adoubleb"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adoubleb"},"content":"    void eventDateTime_invalidInput_exceptionThrown() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adoubleb"},"content":"        String invalidInput \u003d \"invalid date string\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adoubleb"},"content":"        DateTimeExtractor extractDateTime \u003d new DateTimeExtractor(invalidInput);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adoubleb"},"content":"        try {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adoubleb"},"content":"            extractDateTime.eventDateTime();","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adoubleb"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adoubleb"},"content":"            assertEquals(\"Invalid Date/Time Format\", e.getMessage());","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adoubleb"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adoubleb"},"content":"    void deadlineDateTime_validInput_successfulExtraction() throws InvalidCommandException {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adoubleb"},"content":"        String validInput \u003d \"by: 15-10-2023 09:00\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adoubleb"},"content":"        DateTimeExtractor extractDateTime \u003d new DateTimeExtractor(validInput);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adoubleb"},"content":"        ArrayList\u003cLocalDateTime\u003e result \u003d extractDateTime.deadlineDateTime();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adoubleb"},"content":"        assertEquals(1, result.size());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adoubleb"},"content":"        assertEquals(LocalDateTime.of(2023, 10, 15, 9, 0), result.get(0));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adoubleb"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adoubleb"},"content":"    void deadlineDateTime_validInput_exceptionThrown() {","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adoubleb"},"content":"        String invalidInput \u003d \"invalid deadline string\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adoubleb"},"content":"        DateTimeExtractor extractDateTime \u003d new DateTimeExtractor(invalidInput);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adoubleb"},"content":"        InvalidCommandException exception \u003d assertThrows(InvalidCommandException.class,","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adoubleb"},"content":"                extractDateTime::deadlineDateTime);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adoubleb"},"content":"        assertEquals(\"Invalid Date/Time Format\", exception.getMessage());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adoubleb"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"adoubleb":64}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"adoubleb"},"content":"todo foo","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adoubleb"},"content":"event bar","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adoubleb"},"content":"event bar by:8pm","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adoubleb"},"content":"event bar start:8pm end:10pm","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adoubleb"},"content":"deadline some by:11pm","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adoubleb"},"content":"random","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"adoubleb":6}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adoubleb"},"content":"java -classpath ../bin Brownie \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"adoubleb":1,"-":37}}]
