[{"path":"data/brownie/tasklist.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"adoubleb"},"content":"T | 0 | Event","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adoubleb"},"content":"D | 0 | papa | 9pm","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"adoubleb":2}},{"path":"src/main/java/Brownie.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adoubleb"},"content":"import task.Deadline;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adoubleb"},"content":"import task.Event;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adoubleb"},"content":"import task.Task;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adoubleb"},"content":"import task.Todo;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adoubleb"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adoubleb"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adoubleb"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adoubleb"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adoubleb"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adoubleb"},"content":"import iomanager.TasklistManager;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adoubleb"},"content":"public class Brownie {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adoubleb"},"content":"    private static final String COMMAND_BYE \u003d \"bye\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adoubleb"},"content":"    private static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adoubleb"},"content":"    private static final String INVALID_INDEX_MESSAGE \u003d \"Invalid index. Please try again.\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adoubleb"},"content":"    private static final String INPUT_CANNOT_BE_EMPTY \u003d \"Input cannot be empty. Please try again.\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adoubleb"},"content":"    private static final String GOODBYE_MESSAGE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adoubleb"},"content":"    private static final String ITEM_ADDED_MESSAGE \u003d \"Added \";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adoubleb"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adoubleb"},"content":"        System.out.println(\"Hello! I\u0027m Brownie \\nWhat can I do for you?\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adoubleb"},"content":"        BufferedReader reader \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adoubleb"},"content":"        PrintWriter writer \u003d new PrintWriter(System.out);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adoubleb"},"content":"        ArrayList\u003cTask\u003e items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adoubleb"},"content":"        TasklistManager tasklistManager \u003d new TasklistManager(writer, reader);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adoubleb"},"content":"        tasklistManager.initializeTasklist();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adoubleb"},"content":"        items \u003d tasklistManager.loadTasksFromFile();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adoubleb"},"content":"        while (true) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adoubleb"},"content":"            try {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adoubleb"},"content":"                String input \u003d reader.readLine();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adoubleb"},"content":"                if (input \u003d\u003d null || input.trim().isEmpty()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adoubleb"},"content":"                    throw new InvalidCommandException(INPUT_CANNOT_BE_EMPTY);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adoubleb"},"content":"                }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adoubleb"},"content":"                if (input.equals(COMMAND_BYE)) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adoubleb"},"content":"                    output(writer, GOODBYE_MESSAGE);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adoubleb"},"content":"                    break;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adoubleb"},"content":"                }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adoubleb"},"content":"                if (input.equals(COMMAND_LIST)) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adoubleb"},"content":"                    displayList(writer, items);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adoubleb"},"content":"                } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adoubleb"},"content":"                    handleMarkCommand(writer, input, items, true, tasklistManager);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adoubleb"},"content":"                } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adoubleb"},"content":"                    handleMarkCommand(writer, input, items, false, tasklistManager);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adoubleb"},"content":"                } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adoubleb"},"content":"                    handleDeleteCommand(writer, input, items, tasklistManager);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adoubleb"},"content":"                } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adoubleb"},"content":"                    processTaskInput(writer, input, items, tasklistManager);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adoubleb"},"content":"                }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adoubleb"},"content":"            } catch (InvalidCommandException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adoubleb"},"content":"                output(writer, e.getMessage());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adoubleb"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adoubleb"},"content":"                e.printStackTrace();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adoubleb"},"content":"            }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adoubleb"},"content":"        writer.close();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adoubleb"},"content":"    private static void displayList(PrintWriter writer, ArrayList\u003cTask\u003e items) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"adoubleb"},"content":"        writer.println(\"Items in the list:\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"adoubleb"},"content":"        for (int i \u003d 0; i \u003c items.size(); i++) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"adoubleb"},"content":"            writer.println((i + 1) + \". \" + items.get(i));","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"adoubleb"},"content":"        writer.flush();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"adoubleb"},"content":"    private static void handleMarkCommand(PrintWriter writer, String input, ArrayList\u003cTask\u003e items,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"adoubleb"},"content":"            boolean markAsDone, TasklistManager tasklistManager)  throws InvalidCommandException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"adoubleb"},"content":"        int index \u003d parseIndex(input.split(\" \"), items.size());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"adoubleb"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"adoubleb"},"content":"            output(writer, INVALID_INDEX_MESSAGE);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"adoubleb"},"content":"            return;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"adoubleb"},"content":"        Task task \u003d items.get(index);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"adoubleb"},"content":"        if (markAsDone) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"adoubleb"},"content":"            task.markAsDone();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"adoubleb"},"content":"            output(writer, \"Marked \" + task + \" as done.\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"adoubleb"},"content":"        } else {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"adoubleb"},"content":"            task.markAsUndone();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"adoubleb"},"content":"            output(writer, \"Noted, \" + task + \" is not done.\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"adoubleb"},"content":"        tasklistManager.saveTasksToFile(items);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"adoubleb"},"content":"    private static void handleDeleteCommand(PrintWriter writer, String input, ArrayList\u003cTask\u003e items,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"adoubleb"},"content":"            TasklistManager tasklistManager) throws InvalidCommandException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"adoubleb"},"content":"        int index \u003d parseIndex(input.split(\" \"), items.size());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"adoubleb"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"adoubleb"},"content":"            output(writer, INVALID_INDEX_MESSAGE);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"adoubleb"},"content":"            return;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"adoubleb"},"content":"        Task task \u003d items.get(index);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"adoubleb"},"content":"        items.remove(index);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"adoubleb"},"content":"        output(writer, \"Deleted \" + task);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"adoubleb"},"content":"        tasklistManager.saveTasksToFile(items);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"adoubleb"},"content":"    private static void processTaskInput(PrintWriter writer, String input, ArrayList\u003cTask\u003e items,","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"adoubleb"},"content":"            TasklistManager tasklistManager) throws InvalidCommandException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"adoubleb"},"content":"        String command \u003d input.split(\" \")[0];","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"adoubleb"},"content":"        String description;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"adoubleb"},"content":"        Task taskToAdd;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"adoubleb"},"content":"        switch (command) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"adoubleb"},"content":"        case \"todo\":","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"adoubleb"},"content":"            description \u003d input.substring(input.indexOf(\" \") + 1);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"adoubleb"},"content":"            taskToAdd \u003d new Todo(description);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"adoubleb"},"content":"            break;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"adoubleb"},"content":"        case \"deadline\":","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"adoubleb"},"content":"            final String BY_DELIMITER \u003d \"by:\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"adoubleb"},"content":"            int byIndex \u003d input.indexOf(BY_DELIMITER);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"adoubleb"},"content":"            if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"adoubleb"},"content":"                throw new InvalidCommandException(\"Invalid deadline. Please try again.\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"adoubleb"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"adoubleb"},"content":"            description \u003d input.substring(input.indexOf(\" \") + 1, byIndex).trim();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"adoubleb"},"content":"            String deadline \u003d input.substring(byIndex + BY_DELIMITER.length()).trim();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"adoubleb"},"content":"            taskToAdd \u003d new Deadline(description, deadline);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"adoubleb"},"content":"            break;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"adoubleb"},"content":"        case \"event\":","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"adoubleb"},"content":"            final String START_DELIMITER \u003d \"start:\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"adoubleb"},"content":"            final String END_DELIMITER \u003d \"end:\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"adoubleb"},"content":"            int startIndex \u003d input.indexOf(START_DELIMITER);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"adoubleb"},"content":"            int endIndex \u003d input.indexOf(END_DELIMITER);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"adoubleb"},"content":"            if (startIndex \u003d\u003d -1 || endIndex \u003d\u003d -1) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"adoubleb"},"content":"                throw new InvalidCommandException(\"Invalid event. Please try again.\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"adoubleb"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"adoubleb"},"content":"            description \u003d input.substring(input.indexOf(\" \") + 1, startIndex).trim();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"adoubleb"},"content":"            String start \u003d input.substring(startIndex + START_DELIMITER.length(), endIndex).trim();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"adoubleb"},"content":"            String end \u003d input.substring(endIndex + END_DELIMITER.length()).trim();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"adoubleb"},"content":"            taskToAdd \u003d new Event(description, start, end);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"adoubleb"},"content":"            break;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"adoubleb"},"content":"        default:","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"adoubleb"},"content":"            throw new InvalidCommandException(\"Invalid command: \" + command);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"adoubleb"},"content":"        items.add(taskToAdd);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"adoubleb"},"content":"        output(writer, ITEM_ADDED_MESSAGE + input);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"adoubleb"},"content":"        tasklistManager.saveTasksToFile(items);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"adoubleb"},"content":"    private static int parseIndex(String[] inputParts, int size) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"adoubleb"},"content":"        if (inputParts.length \u003c 2) return -1;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"adoubleb"},"content":"        try {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"adoubleb"},"content":"            int index \u003d Integer.parseInt(inputParts[1]) - 1;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"adoubleb"},"content":"            return (index \u003e\u003d 0 \u0026\u0026 index \u003c size) ? index : -1;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"adoubleb"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"adoubleb"},"content":"            return -1;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"adoubleb"},"content":"    private static void output(PrintWriter writer, String message) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"adoubleb"},"content":"        writer.println(message);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"adoubleb"},"content":"        writer.flush();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"adoubleb"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"adoubleb":160}},{"path":"src/main/java/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adoubleb"},"content":"package exceptions;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adoubleb"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adoubleb"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adoubleb"},"content":"        super(message);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adoubleb"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"adoubleb":7}},{"path":"src/main/java/iomanager/TasklistManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adoubleb"},"content":"package iomanager;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adoubleb"},"content":"import task.Task;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adoubleb"},"content":"import java.io.*;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adoubleb"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adoubleb"},"content":"public class TasklistManager {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adoubleb"},"content":"    private static final String DATA_FOLDER_PATH \u003d \"./data/brownie\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adoubleb"},"content":"    private static final String TASKLIST_FILE_PATH \u003d DATA_FOLDER_PATH + \"/tasklist.txt\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adoubleb"},"content":"    private final PrintWriter writer;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adoubleb"},"content":"    private final BufferedReader reader;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adoubleb"},"content":"    public TasklistManager(PrintWriter writer, BufferedReader reader) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adoubleb"},"content":"        this.writer \u003d writer;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adoubleb"},"content":"        this.reader \u003d reader;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adoubleb"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adoubleb"},"content":"     * Ensures that the tasklist file is available and valid.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adoubleb"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adoubleb"},"content":"    public void initializeTasklist() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adoubleb"},"content":"        File dataFolder \u003d new File(DATA_FOLDER_PATH);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adoubleb"},"content":"        File tasklistFile \u003d new File(TASKLIST_FILE_PATH);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adoubleb"},"content":"        ensureDataFolderExists(dataFolder);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adoubleb"},"content":"        if (!tasklistFile.exists()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adoubleb"},"content":"            createNewTasklistFile(tasklistFile);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adoubleb"},"content":"        } else {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adoubleb"},"content":"            if (isFileCorrupted(tasklistFile)) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adoubleb"},"content":"                handleCorruptedFile(tasklistFile);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adoubleb"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adoubleb"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adoubleb"},"content":"     * Ensures the data folder exists, and creates it if it doesn\u0027t.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adoubleb"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adoubleb"},"content":"    private void ensureDataFolderExists(File dataFolder) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adoubleb"},"content":"        if (!dataFolder.exists()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adoubleb"},"content":"            if (dataFolder.mkdirs()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adoubleb"},"content":"                writer.println(\"Data folder created at \" + DATA_FOLDER_PATH);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adoubleb"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adoubleb"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adoubleb"},"content":"     * Attempts to create a new tasklist.txt file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adoubleb"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adoubleb"},"content":"    private void createNewTasklistFile(File tasklistFile) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adoubleb"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adoubleb"},"content":"            if (tasklistFile.createNewFile()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adoubleb"},"content":"                writer.println(\"tasklist.txt created successfully at \" + TASKLIST_FILE_PATH);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adoubleb"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adoubleb"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adoubleb"},"content":"            writer.println(\"Error while creating tasklist.txt: \" + e.getMessage());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adoubleb"},"content":"            writer.flush();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adoubleb"},"content":"            System.exit(1);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adoubleb"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"adoubleb"},"content":"     * Checks if the file is corrupted.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"adoubleb"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"adoubleb"},"content":"    private boolean isFileCorrupted(File tasklistFile) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"adoubleb"},"content":"        try (BufferedReader fileReader \u003d new BufferedReader(new FileReader(tasklistFile))) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"adoubleb"},"content":"            String firstLine \u003d fileReader.readLine();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"adoubleb"},"content":"            // Example corruption check: file is empty","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"adoubleb"},"content":"            return firstLine \u003d\u003d null || firstLine.trim().isEmpty();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"adoubleb"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"adoubleb"},"content":"            return true; // File cannot be read","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"adoubleb"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"adoubleb"},"content":"     * Handles cases where the file is corrupted.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"adoubleb"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"adoubleb"},"content":"    private void handleCorruptedFile(File tasklistFile) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"adoubleb"},"content":"        writer.println(\"WARNING: tasklist.txt appears to be corrupted.\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"adoubleb"},"content":"        writer.flush();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"adoubleb"},"content":"        while (true) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"adoubleb"},"content":"            writer.println(\"Would you like to create a new tasklist.txt? (y/n):\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"adoubleb"},"content":"            writer.flush();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"adoubleb"},"content":"            try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"adoubleb"},"content":"                String userInput \u003d reader.readLine().trim().toLowerCase();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"adoubleb"},"content":"                if (userInput.equals(\"y\")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"adoubleb"},"content":"                    recreateTasklistFile(tasklistFile);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"adoubleb"},"content":"                    break;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"adoubleb"},"content":"                } else if (userInput.equals(\"n\")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"adoubleb"},"content":"                    writer.println(\"Program will terminate. Please fix or replace tasklist.txt.\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"adoubleb"},"content":"                    writer.flush();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"adoubleb"},"content":"                    System.exit(1);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"adoubleb"},"content":"                } else {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"adoubleb"},"content":"                    writer.println(\"Invalid input. Please enter \u0027y\u0027 or \u0027n\u0027.\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"adoubleb"},"content":"                    writer.flush();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"adoubleb"},"content":"                }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"adoubleb"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"adoubleb"},"content":"                writer.println(\"Error while reading input: \" + e.getMessage());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"adoubleb"},"content":"                writer.flush();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"adoubleb"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"adoubleb"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"adoubleb"},"content":"     * Deletes the existing corrupted file and creates a new one.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"adoubleb"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"adoubleb"},"content":"    private void recreateTasklistFile(File tasklistFile) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"adoubleb"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"adoubleb"},"content":"            if (tasklistFile.delete() \u0026\u0026 tasklistFile.createNewFile()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"adoubleb"},"content":"                writer.println(\"New tasklist.txt created successfully at \" + TASKLIST_FILE_PATH);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"adoubleb"},"content":"                writer.flush();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"adoubleb"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"adoubleb"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"adoubleb"},"content":"            writer.println(\"Error while recreating tasklist.txt: \" + e.getMessage());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"adoubleb"},"content":"            writer.flush();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"adoubleb"},"content":"            System.exit(1);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"adoubleb"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"adoubleb"},"content":"     * Saves the current list of tasks to the file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"adoubleb"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"adoubleb"},"content":"     * @param items The list of tasks to save.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"adoubleb"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"adoubleb"},"content":"    public void saveTasksToFile(ArrayList\u003cTask\u003e items) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"adoubleb"},"content":"        try (PrintWriter fileWriter \u003d new PrintWriter(new FileWriter(TASKLIST_FILE_PATH))) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"adoubleb"},"content":"            for (Task task : items) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"adoubleb"},"content":"                fileWriter.println(task.serialize()); // Serialize each task to a line in the file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"adoubleb"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"adoubleb"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"adoubleb"},"content":"            writer.println(\"Error saving tasks to file: \" + e.getMessage());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"adoubleb"},"content":"            writer.flush();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"adoubleb"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"adoubleb"},"content":"     * Loads tasks from the file into an ArrayList.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"adoubleb"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"adoubleb"},"content":"     * @return The list of tasks loaded from the file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"adoubleb"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"adoubleb"},"content":"    public ArrayList\u003cTask\u003e loadTasksFromFile() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"adoubleb"},"content":"        ArrayList\u003cTask\u003e items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"adoubleb"},"content":"        File tasklistFile \u003d new File(TASKLIST_FILE_PATH);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"adoubleb"},"content":"        try (BufferedReader fileReader \u003d new BufferedReader(new FileReader(tasklistFile))) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"adoubleb"},"content":"            String line;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"adoubleb"},"content":"            while ((line \u003d fileReader.readLine()) !\u003d null) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"adoubleb"},"content":"                Task task \u003d Task.deserialize(line); // Deserialize each line back into a task object","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"adoubleb"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"adoubleb"},"content":"                    items.add(task);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"adoubleb"},"content":"                }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"adoubleb"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"adoubleb"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"adoubleb"},"content":"            writer.println(\"Error loading tasks from file: \" + e.getMessage());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"adoubleb"},"content":"            writer.flush();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"adoubleb"},"content":"        return items;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"adoubleb"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"adoubleb":164}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adoubleb"},"content":"package task;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adoubleb"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adoubleb"},"content":"    String deadline;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adoubleb"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adoubleb"},"content":"        super(description);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adoubleb"},"content":"        this.deadline \u003d deadline.trim();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adoubleb"},"content":"    public String mySymbol() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adoubleb"},"content":"        return \"D\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adoubleb"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adoubleb"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adoubleb"},"content":"        return super.toString() + \" (\" + deadline + \")\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adoubleb"},"content":"    public String serialize() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adoubleb"},"content":"        return mySymbol() + \" | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + this.description +","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adoubleb"},"content":"                \" | \" + deadline;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adoubleb"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"adoubleb":22}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adoubleb"},"content":"package task;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adoubleb"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adoubleb"},"content":"    String start;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adoubleb"},"content":"    String end;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adoubleb"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adoubleb"},"content":"        super(description);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adoubleb"},"content":"        this.start \u003d start.trim();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adoubleb"},"content":"        this.end \u003d end.trim();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adoubleb"},"content":"    public String mySymbol() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adoubleb"},"content":"        return \"E\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adoubleb"},"content":"    @Override","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adoubleb"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adoubleb"},"content":"        return super.toString() + \" (start: \" + this.start + \")\" + \" (end: \" + this.end + \")\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adoubleb"},"content":"    public String serialize() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adoubleb"},"content":"        return mySymbol() + \" | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + this.description + \" | \" +","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adoubleb"},"content":"                this.start + \" | \" + this.end;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adoubleb"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"adoubleb":24}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adoubleb"},"content":"package task;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adoubleb"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adoubleb"},"content":"    protected String description;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adoubleb"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adoubleb"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adoubleb"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adoubleb"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adoubleb"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adoubleb"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adoubleb"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adoubleb"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adoubleb"},"content":"    public void markAsUndone() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adoubleb"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adoubleb"},"content":"    @Override","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adoubleb"},"content":"    public String toString() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adoubleb"},"content":"        return \"*\" + mySymbol() + \"*\" + \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adoubleb"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adoubleb"},"content":"     * Serializes the task into a String for saving in the file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adoubleb"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adoubleb"},"content":"    public abstract String serialize();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adoubleb"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adoubleb"},"content":"     * Deserializes a String back into a Task object.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adoubleb"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adoubleb"},"content":"     * @param data The serialized task string.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adoubleb"},"content":"     * @return The Task object parsed from the string.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adoubleb"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adoubleb"},"content":"    public static Task deserialize(String data) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adoubleb"},"content":"        String[] parts \u003d data.split(\" \\\\| \");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adoubleb"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adoubleb"},"content":"            return null;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adoubleb"},"content":"        String symbol \u003d parts[0];","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adoubleb"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adoubleb"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adoubleb"},"content":"        Task toReturn \u003d null;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adoubleb"},"content":"        switch (symbol) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adoubleb"},"content":"        case \"T\":","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adoubleb"},"content":"            toReturn \u003d new Todo(description);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adoubleb"},"content":"            break;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adoubleb"},"content":"        case \"D\":","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adoubleb"},"content":"            toReturn \u003d new Deadline(description, parts[3]);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adoubleb"},"content":"            break;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adoubleb"},"content":"        case \"E\":","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adoubleb"},"content":"            toReturn \u003d new Event(description, parts[3], parts[4]);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adoubleb"},"content":"            break;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adoubleb"},"content":"        default:","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adoubleb"},"content":"            return null;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"adoubleb"},"content":"        if (isDone) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"adoubleb"},"content":"            toReturn.markAsDone();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"adoubleb"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"adoubleb"},"content":"        return toReturn;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"adoubleb"},"content":"    abstract public String mySymbol();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"adoubleb"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"adoubleb":75}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adoubleb"},"content":"package task;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adoubleb"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adoubleb"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adoubleb"},"content":"        super(description);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adoubleb"},"content":"    public String mySymbol() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adoubleb"},"content":"        return \"T\";","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adoubleb"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adoubleb"},"content":"    public String serialize() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adoubleb"},"content":"        return mySymbol() + \" | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + this.description;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adoubleb"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adoubleb"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"adoubleb":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"adoubleb"},"content":"todo foo","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adoubleb"},"content":"event bar","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adoubleb"},"content":"event bar by:8pm","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adoubleb"},"content":"event bar start:8pm end:10pm","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adoubleb"},"content":"deadline some by:11pm","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adoubleb"},"content":"random","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"adoubleb":6}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adoubleb"},"content":"java -classpath ../bin Brownie \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"adoubleb":1,"-":37}}]
